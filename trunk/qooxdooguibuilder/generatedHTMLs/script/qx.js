if(!window.qx)qx={};
if(!qx.Settings)qx.Settings={};
if(!qx.Settings._customSettings)qx.Settings._customSettings={};
if(!qx.Settings._customSettings["qx.manager.object.AliasManager"])qx.Settings._customSettings["qx.manager.object.AliasManager"]={};
qx.Settings._customSettings["qx.manager.object.AliasManager"]["resourceUri"]="./resource/qx";
if(!qx.Settings._customSettings["custom.Application"])qx.Settings._customSettings["custom.Application"]={};
qx.Settings._customSettings["custom.Application"]["resourceUri"]="./resource/custom";

qx.IS_SOURCE=false;
qx.VERSION="0.6.6 (r6762) [release_0_6_6]";
$=["string","","number","boolean","object","auto","mousedown","mouseup","appearance","solid","right","left","top","keydown","keypress","=","bottom","completed","mousemove","pressed","vertical","px","timeout",",","selected","enableDebug","hidden","click","failed","horizontal","qx.io.remote.Exchange","function","change","none","middle","aborted","0","1*","execute","100%","mouseover","undefined","width","height"," ","Enter","dblclick","mouseout","default","threedshadow","div","abandoned","sending",".","interval","Left","Right","-","over","static/image/blank.gif","inset","receiving","mousewheel","frame","threedhighlight","outset","scroll",";","(\\d\\d?)","\n",'qx.ui.core.Widget',"Down","on","Up","center","PageUp","keyup","location","get",": ","appear","checked",")","set","load","Space","minWidth","input","PageDown","&","fontSize","absolute","groove","position","icon","_","Escape","name","translucent","ridge","minHeight","white","threedface","'","value","maximized","error","configured","maxWidth","label","hsbSpinner","body","scrollY","display","rgbSpinner","locationX","maxHeight","pixelPercent","button","qx.ui.popup.Popup","short","A","normal","g","threedlightshadow",'"Segoe UI", Corbel, Calibri, Tahoma, "Lucida Sans Unicode", sans-serif',"locationY","/","lineHeight","filter","Home","window","hexField","no","disabled","qx.manager.object.ToolTipManager","visibility","qx.renderer.color.Color","fontFamily","scrollX","yes","html","opaque","style","End","changeSelection","window-captionbar-button","whiteSpace","text-field","(","fontStyle","paddingLeft","list-view-content-cell-text","Control","paddingTop","NumLock","fontWeight","9","created","focused","paddingRight","textDecoration","paddingBottom","unselectable","Alt","0px","?","qx.ui.core.Widget","*","',sizingMethod='scale')","title","Shift","blur","</td>","progid:DXImageTransform.Microsoft.AlphaImageLoader(src='","gray","useTreeLines","dragover","visibilityChanged","widthChanged","wide","hueSaturationField","abbreviated","clip","0px none","param","mshtml","atom","fixed","overflow","]","qx.manager.object.MenuManager","tree-folder","layout","<td>","dragging","</tr>","nowrap","cursor","apply","ms","list","parent",'px',"qx.manager.object.PopupManager","%","wrap","className","dragstart","widthComputed","threeddarkshadow","heightComputed","changeLocale","textAlign","qx.manager.selection.RadioManager","<tr>","qx.renderer.font.Font","type","narrow","lazyopaque","menu-button","#91A5BD",'execute',"Tab","keyinput","active","disappear","focus","orderChanged","menu","icon/16/actions/dialog-ok.png","shorthand","iframe",'',"Delete","long","+","zIndex","queued","state","isChecked","MozOutline","a","reset","removeAll","Insert","Content-Type","1px dotted invert","dimension","text","highlight",")!","medium","galleryCell","F3","Unidentified","tabIndex","hour","changeValue",'icon',"outline","manager","left-reversed","line","S","wildcard","minimized","remove","id",'"',"tree-element-label","select","overflowY","middle-reversed","tree-folder-icon","HH:mm:ss","ThreeDLightShadow","#","image","  ","cross","}","pixelPercentAuto","bold","loadComplete","gecko","literal","top-reversed","textarea","Meta","font","M","{","center-reversed","useDoubleClick","password","Details: Width=","end","1","status","#FAFBFE","_value","iconSelected","overflowX","data",'idAndDescription',"imageUri","horizontalAlignment","qx.ui.menu.Menu","qx.event.handler.DragAndDropHandler","beforeToolTipAppear","PrintScreen",", Style=","full","resourceUri","Backspace","tree-folder-label","url","=''","qx.ui.popup.ToolTip","[","removeAt","qx.manager.object.AliasManager","verticalAlignment","brightnessField","datechooser-toolbar-button","tree-element","s","blank.gif","wordSpacing","Pause","treeClose","treeOpenWhileEmpty","only_plus","colorTheme","multiSelection","col-resize","modal","100px","F2","ellipsis","focusin","columnVisibilityMenuCreateEnd","complete","greenModifier","green",';width:',"borderBottomProperty","backgroundColor","icon/16/places/folder.png","minus","blueModifier","down","row-resize","6","only_minus","opener","dragenter","opacity","strikeout","qx.ui.embed.Flash","nextState","No valid responseType specified (","useBasicHttpAuth","hueModifier","7","Value","8","#D6D5D9","Scroll","clipHeight","italic","staticUri","')","4","brightnessModifier","px;","HHmmss","img","plus","Ready","Ignore Ready State Change","treeOpenWithContent","verticalChildrenAlign","restrictToPageLeft","borderLeftProperty","focusout","beforeDisappear","5","transparent","modelChanged","appearanceTheme","'/>","changeFocused","-moz-scrollbars-vertical","Transfer not complete, ignoring content!","lead",'100%',"autoActionsAfterOnexit","qx.ui.core.ClientDocument","icon/16/status/folder-open.png","saturationModifier","restrictToPageBottom","2","component","windowresize","textTransform","page","Apps","username","marginTop","(\\d\\d?\\d?)","-moz-scrollbars-horizontal","static/image/dotted_white.gif","windowblur","#FEC83C","qx.io.remote.ScriptTransport","#d6d2c2","wordWrap","dragdrop","3","toolbar","Win","letterSpacing","backgroundImage",'description',"marginRight","widthType","min","contextmenu","icon/16/actions/document-new.png","clipTop","useLongFormat","widgetTheme","resizeMethod","propagationStopped","liveResize","J","qx.io.remote.IframeTransport","iconTheme",'qxtype',"visibilityChangedPre","Preview (Old/New)","color","restrictToPageTop","qx.ui.form.Button","redModifier","underline","e","qx.core.Object","maxMessages","Z","qx.ui.core.Parent","ignore","gif",'delegate not found',"qx.io.remote.XmlHttpTransport","autoActionsBeforeOnexit","F","borderRightProperty","horizontalChildrenAlign","marginBottom","dragSelection","red","open","resizeable","buttonface","clipLeft",'auto',"heightType","autoActionsAfterOnentry","restrictToPageRight","otherMonth","borderTopProperty","sun","marginLeft","clipWidth","qx.manager.object.IframeManager","qx.client.NativeWindow","#FFF0C9","blue","widget/arrows/down.gif","layoutOrder","highlighttext","source","autoActionsBeforeOnentry","qx.ui.table.SelectionModel","enableDisposerDebug","Connection dropped","content","dragout","borderY","ul","_compute","F1","datechooser-weekday","resize","qx.lang.Prototypes","addAtEnd","Cancel","<table class='output'>","progress","beforeunload","slice","mode","cldr_day_","columnVisibilityMenuCreateStart","addAfter","childNodes","dotted","n","asynchronous","document","padding","scrollbars","openCloseClickSelectsRow","editable","qx.component.init.InterfaceInitComponent","T","tree-icon","qx.ui.basic.Inline","F12","dragleave","webkit",'</div>',"script","target","Type","showStatusbar","list-view-content-cell","OK","menubar","userSelect","nodeType","beforeAppear","marginX","focusCellOnMouseMove","force","#F9B119","up","nocache",';height:',"F11","ThreeDShadow","<img style=\"position:absolute;top:0px;left:","enabled","cldr_month_",'center',"KhtmlOpacity","verticalAlign","alwaysShowPlusMinusSymbol","enableFlexSupport","dialogcancel","combo-box-button","double","qx.ui.table.TableColumnModel","marginY","Windows","#E1EEFF","fri",'<iframe name="',"widget",'menu',"add","33%","HSB","iconPosition","MozUserSelect","F10","Presets","changeScrollY","reverseChildrenOrder","qx_ui_table_IconHeaderCellRenderer_icon","Pragma","isEnabled","iconHeight","mon","KhtmlUserSelect","true","F5","resizable","quotes","ol","firstInterval","qx.renderer.theme.AppearanceTheme","decorHeight","String",'changeSelection',"showall","tree-container",";font-weight:bold","widget/menu/checkbox.gif","removeChild",'" style="',"ThreeDHighlight","character","widthParsed","debugFlags","keyIdentifier","galleryFrame clearfix",'";',"justify","keyCode","bubbles","F4","F6",'<div class="',"Width","DOMMouseScroll","weekend","_computed",'icon/16/actions/edit-find.png',"addAt",'undefined',"end_minus","CapsLock","outerWidth","qx.renderer.theme.ColorTheme","drag","Array","onentry","May","sat","F7","icon/16/actions/dialog-cancel.png","O","enableApplicationLayout","autoActionsAfterOntransition","]\n","MozOpacity","rgb(","#b3d9ff","x</td>"," row","qx.ui.table.TablePaneModel","widget/menu/radiobutton.gif","pixelPercentAutoFlex","application/x-www-form-urlencoded","popup","Cache-Control","both","windowtext",'g',"margin","request","opera","dashed",' - Flash Player Installation',"F8","sec","Parsed","predicate","text/css","file:","day","qx.renderer.theme.IconTheme","F9","quoted_literal","tableWidthChanged",'Z',".gif","dialogok","autoActionsBeforeOntransition","verticalScrollBarChanged","dragexit","end_plus","unload","innerWidth","tree","khtml"," messages removed)","textOverflow","check-box-field-set-legend","qx.ui.table.DataRowRenderer","anchor","ontransition","</tbody></table>","verticalSpacing","addBefore",'.',"black","draggesture","qx.renderer.theme.WidgetTheme",";text-align:right","<tr><td>&#160;</td>","dependent",'a',"first","------------------------------------------------------------\n","Margin","wed","thumbMaxWidth","boxModelCorrection","<thead>","ThreeDDarkShadow","d","event","toolTip"," rows","Padding","<br>","addAtBegin","lastChild","orientation",'z',"Hex","qx.ui.table.TableModel","dragend","enableQueueDebug","cross_plus","qx.client.Command","\" />","heightParsed","innerHeight","responseType","w","method","concat","helperFile",">","enable","qx.theme.icon.Nuvola","selectionModel","wordBreak",'(',"RGB","no-cache","px\" src=\"","qx.ui.window.Window","-resize","cross_minus","editing","head","isEditable","firstChild",'" style="filter:',"ss","thu","qx.renderer.border.Border","high","indexOf","horizontalSpacing","tree-element-icon","thumbMaxHeight","qx.event.handler.FocusHandler","events","Details","datechooser-week","qx.io.remote.Request","implementation","dragmove","pagingInterval",'@import "',"outerHeight","<td>Method ","tree-folder-container","today",";font-style:italic",'qx.ui.form.ComboBoxEx',"onexit","qx.theme.appearance.Classic","#6285BA","submit","1px","external","tue","hideNode","parameters","nodeName","</thead><tbody>",'"></iframe>',"qx.io.Json","spacing","paddingY","tree-label","excludeSpecificTreeLines","crossDomain","qx.component.init.BasicInitComponent","beforeInitialOpen","horizontalAlign","qx.theme.color.WindowsRoyale","qx.ui.form.ListItem","[native code]","tagName","qx_log","htmlcontainer","borderX","#f0f0f0","userFocus","paddingX","disabledIcon","lastIndexOf"," (","iconWidth","HH:mm","qx.theme.widget.Windows"," [","\r\n",'<img src="$1" alt="$2">',"field-set-legend","arrowPosition","minLevel","qx.xml.Entity","clientX",";font-size:","field-set","preferredBoxHeight","Selected","Could not load from file: ","qx.ui.form.RadioButton","javascript:void(0)","labelHex","datechooser-monthyear","Linux","max","borderBottomStyle","June","Use proxy","qx.ui.menu.CheckBox","enableDetection","]: ","moveMethod","qx.ui.tree.TreeFolder","extendedmultiline","modifiers",'fadeInterval',"history","labelShortcutGap","GMT","showLocation","qx.component.AbstractApplication","showMinimize","nextSibling","August","west","hasPercentX","allowStretchY","Timeout: transport ","?instanceId=","galleryNumber","Not implemented","localeCompare","MSXML2.DOMDocument.3.0","attributes","</lio>",":","Not modified","selectionLength","postfix","qx.ui.embed.GalleryList","qx.manager.object.ColorManager.getInstance().setColorThemeById('","allowMinimize","100","Timeout: forcing state to timeout","', ((v==null)?0:v)+'px')",'<table cellspacing\="0" cellpadding\="0" style\="table-layout:fixed;font-family:',"frameElement","\\b_(.+?)_\\b","widget/colorselector/huesaturation-handle.gif","</td><td>","table-editor-textfield","enableExpressInstall","qx.html.Dimension","#87BCE5","Macintosh","tab-view-pane"," - ","labelHSB","pageY","iconContentGap","_eval","list-view-header","qx.lang.Core","colorselector","MSXML2.DOMDocument.4.0","pre","qx.renderer.layout.VerticalBoxLayoutImpl","matches","#BBB","qx.locale.String","bottomWidth","border","qx.ui.form.RepeatButton","contextMenu","isSelectable","redirectUrl","qx.ui.table.BooleanDataCellRenderer","this.removeStyleProperty('padding","Partial content","MacPPC","focusHandler","HTTP version not supported","directories","Print","pageYOffset",'px;width:'," &nbsp;","qx.ui.splitpane.SplitPane",']+)',"start_minus","ms > ","bar-view","qx.ui.listview.ContentCellLink","qx.event.handler.EventHandler",'allowSearch',"Win32","maxArrowWidth","edge","Wednesday","1.0","qx.ui.menu.Separator",'border',"\"/>","MSXML2.DOMDocument.6.0","disableUncheck","key_full_Meta","(measure start) ","</th>","M/d/yy","Height","fullScreen","key_short_Insert",'no setter defined on widget instance',"hand",'y',"qx.log.ForwardAppender","chooserTitle","textIndent","win","onpropertychange","(\\d\\d(\\d\\d)?)","qx.renderer.layout.HorizontalBoxLayoutImpl","step","galleryTitle","Oct","form","MM/yy","bar-view-button","Friday","</ul>\n","p","Jan","frames","toolbar=no,scrollbars=yes,resizable=yes,","Number","/history/historyHelper.html","cursor:","Ctrl","qx.ui.treevirtual.DefaultDataCellRenderer","_blank","Pixel","XPath","qx.locale.data.C","other","firefox","Windows Luna Silver",'align','icon/16/actions/dialog-ok.png',"unrecognised node","&#","north","  for (var i = 0; i < groupObjects.length; i++)","orange","spinner-button-down"," WARN:  ","In Safari/Webkit you can only remove rules that are created using qx.html.StyleSheet.addRule","<param name='flashvars' value='","qx.ui.form.TextField","transport"," DEBUG: ",'11px "Bitstream Vera Sans Mono", monospace',"onselect",';font-size:',"_unitDetection","qx.event.type.FocusEvent","li>","sessionStorage","filter:","e-resize","requestHeaders",'qx.ui.menu.RadioButton',"windowManager","plugins","qx.ui.table.SelectionManager","lime","key_short_NumLock","qx.locale.Manager",", ","</span>","list-view-content-cell-image","key_short_Left","tab-view-button",'k',"<embed type='application/x-shockwave-flash' width='100%' height='100%' src='","</table>","pageX","<virtual root>","qx.manager.selection.TreeFullControlSelectionManager","kk",'color',"key_short_Right","See other","qx.manager.object.WindowManager","&lt;","Missing dispose definition for '","qx.ui.embed.Gallery","..",'number',"innerHTML","labelPreview",'</tr>',"Packages","always","cldr_number_group_separator","U","log","ID","</blockquote>","borderBottomWidth",']._autoCloseWindow()}catch(e){}">',"C","Bad gateway","validator","accumulatedChildrenOuterHeight","relatedTarget","qx.ui.pageview.AbstractPane","qx.dom.Element","qx.ui.embed.IconHtmlEmbed","OFF","split","qx.util.format.Format","align","Log window message: Starting error recording, any errors below this line will prevent the log window from closing","qx.locale.Key","“","qx.util.format.NumberFormat","<object classid='clsid:D27CDB6E-AE6D-11cf-96B8-444553540000' width='100%' height='100%'>","cookie","maximumIntegerDigits","replace","1px solid black","Repeat Number: ","<tr><th>Round ","qx.ui.menubar.MenuBar","iconUrl","readOnly","qx_NativeWindow","Timeout...","Description","loaded","controllers","netscape","focusRoot","fireChange","showIcon","qx.ui.listview.ContentCellHtml","descending","only_plus.gif","qx.type.Range","Thu","qx.renderer.border.BorderCache","<th>Winner</th>",'">',"mac","timerDecrease","Operating System Default","maxTotalRequests","o","  fsm.debug(e);","qx.ui.layout.BoxLayout","Galeon","sortOrder","(.*)\n([^#\*\n].*)","qx.renderer.font.FontObject","line.gif","qx_ui_embed_GalleryList","widget/splitpane/knob-horizontal.png","widget/arrows/up.gif","cldr_quotationEnd","parentPaddingBottom","qx.lang.Generics",";background-color:","key_short_End",'D',"#EEE","widget/window/maximize.gif","push","qx.log.DefaultFilter","hh","qx.util.Normalization","key_full_Win","Log window message: Stopping error recording, discarding ","try",'"></div>',"cellPaddingRight","qx.manager.object.ColorManager","key_full_Up","treevirtual-focus-indicator","yy","key_full_PrintScreen","qx.ui.basic.Image","qx.type.Version","borderTopWidth","log-body","qx.Locale","Sep","key_short_Delete","Request-URL too large","objects",'M',"widths","Not acceptable",'qx.log.FireBugAppender',"toolbar-part-handle-line","clipboardData","$","qx.ui.table.TablePaneScroller",") ***\n","SSS","qx.html.Scroll","widget/colorselector/brightness-handle.gif","activecaption","Start 3x","qx.manager.object.ImageManager","widget/datechooser/lastYear.png","leadItem","scrollTop","qx.ui.pageview.AbstractBar"," !important","\\^","isAsynchronous","mousePointerOffsetX","key_full_Control","qx.dev.Pollution","Tabulator","@","menuButtonNeededWidth","qx.ui.treefullcontrol.AbstractTreeElement","galleryComment","links","qx.log.Filter",'<div style="position:absolute;',"qx.client.builder.Container","FFFFFF","key_full_Down","plus.gif","screen","Connection closed by server"," />","</liu>","shownMonth","key_full_Alt","qx.manager.selection.TreeSelectionManager","PgDn","</span>)","”","Disposing Application","fontVariant","Application error ",'<body onload="qx = opener.qx;" onunload="try{qx.log.WindowAppender._registeredAppenders[',"self","sort","qx.ui.pageview.tabview.TabView","Lead","safari","getDefault","Search items in list","fastReopen","qx.locale.Number","Icon Theme: ","~","cldr_quotationStart","outerHTML","Tue","qx.io.remote.Response","\\\"","qx.util.GuiBuilder","defaultPrevented","X-Qooxdoo-Response-Type","<ol>","Ins","menu-check-box","\t<blockquote>","tab-view-bar","relative","MMredirectURL","qx.xml.String","getFirstActiveChild","Null","selectBeforeFocus","#666",'TEXTAREA',"end_plus.gif","<th>Median Factor</th>","; } .output td{padding:4px}</style>","omniweb","file","borderLeftStyle","computeChildrenFlexHeight","<?xml version='1.0' encoding='UTF-8'?>\n<","Sun","qx.theme.color.WindowsLunaBlue","window-captionbar-restore-button","Method Loops: ",":00","qx.renderer.layout.MenuButtonLayoutImpl","canDeselect","tableColumnModel","alt","bottomColor","qx.ui.form.InputCheckSymbol","qx.ui.table.AbstractDataCellRenderer","currentToolTip","width:",'MMplayerType','left:',"progid:DXImageTransform.Microsoft.AlphaImageLoader("," errors have been recorded, keeping log window open.</b>","(passed time: ","MacIntel","last","_resetRuntime","qx.ui.treefullcontrol.TreeRowStructure","scrollWidth","qooxdoo","splitpane-knob","Moved temporarily","only_minus.gif","\n<br />","mnemonic","hoverItem",'<tr style\="height:','space',"key_full_Space","qx.component.init.AbstractInitComponent","qx.io.local.CookieApi","SelectionLanguage","Start 7x","match","qx.type.Selection","qx.ui.table.SimpleTableModel",'#',"UNEXPECTED origin ","datechooser-day","qx.util.fsm.State",'icon/16/actions/dialog-cancel.png',"qx.util.format.DateFormat","prefix","ValueExact","<span style=\"text-decoration:underline\">","qx.ui.groupbox.CheckGroupBox","  at ","qx.io.remote.Rpc","saturation","h3",'<col width="',"key_short_Backspace","textShadow","qx.ui.table.DataCellRenderer","soft","ownerDocument",'widths',"_invalidate","closeInterval","tableHasFocus","selectionMode","parentPaddingLeft",'h',"qx.util.fsm.Transition","allowClientContextMenu","autolow","qx.ui.toolbar.Part","qx.html.Offset","widget/window/restore.gif",",height=","qx.ui.pageview.buttonview.ButtonView","embeds","targetWidget","Alpha(Opacity=","screenTop","Moved permanently","cldr_alternateQuotationStart","MEDIAN",'Authorization',"accumulatedChildrenOuterWidth","bottomStyle","key_full_Apps","m","Alpha(Opacity=0)","XMLHttpRequest","qx.ui.pageview.buttonview.Button","MSXML2.DOMDocument","\\$1","parentPaddingRight","windowfocus","../../resource","responseHeaders",'edge',"autoCloseWithErrors","destinationWidget","warnClassName","qx.ui.component.DateChooserButton","showComment","showToolbar","<style type='text/css'>.output{border: 1px solid black; width:100%; margin-bottom: 20px } .output thead{ font-weight: bold; } .output td, .output th{ text-align:left; width: ",'dimension',"cross_minus.gif","maxShortcutWidth","start_plus"," Objects)\n\n"," error ","key_short_Scroll","parentMenu","qx.net.Http","personalbar","\" style=\"vertical-align:middle;","Windows Classic","widget/datechooser/nextYear.png","single","qx.locale.LocalizedString","combo-box-popup","/script/","fsm","qx.ui.menubar.Button","shownYear","mm:ss","Last month","window-resize-frame","#333","maximumFractionDigits","computeChildrenFlexWidth","splitpane-slider","00","borderTopStyle","stylesheet","strong","Wrong box sizing: Please modify the document's DOCTYPE!","sourceWidget","ital","screenLeft",'position:absolute;left:',"sourceNodeId","window-statusbar","parentElement","xmlns:ns='",'combo-box-ex-text-field',"key_full_Right","qx.ui.layout.HorizontalBoxLayout","clientWidth","client-document","borderRightStyle",'stretch',"labelRGB","qx.ui.listview.ContentCellImage","unshift","Want to render an invisible child: ","key_short_Space","showClose","qx.event.type.Event","Ranges:","frameWidth","October",'fadeSteps',"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=","mousePointerOffsetY","alwaysShowOpenCloseSymbol","EEEE, MMMM d, yyyy","/.qxrpc","Firefox","-moz-box-sizing","statusBarVisible","__firebug__","combo-box-ex","Gray() Alpha(Opacity=30)",'"/>',"south","openInterval","key_short_CapsLock","topColor"," (#","list-view-header-separator","offsetTop","radio",'"\\b(.+?)\\(\\b(.+?)\\b\\)":([^\\s]+)',"static","restrictToPageOnOpen","labelDetails","minimumFractionDigits","noborder","shortcutPosition","defaultView","<param name='movie' value='","qx.ui.component.DateChooser","stretchY","qx.manager.object.ObjectManager","off","qx.html.ElementFromPoint"," -> omitting!","key_full_Scroll","qx.manager.selection.SelectionManager","<p>","=((v==null)?0:v)+'px'","|","qx.io.remote.RequestQueue","direction","secondSize","behavior","qx.ui.embed.NodeEmbed","isIdColumnVisible","forEach","window-captionbar","qx.log.RingBufferAppender","tool-tip","[object ","propertychange","Server timeout","Mozilla","qx.renderer.font.FontCache","Log window message: <b>Note: ","errorClassName","/widget/windows","javascript:/","Server error","-moz-scrollbars-none","qx.ui.table.RemoteTableModel","qx.log.DivAppender",'w',"prohibitCaching","widget/table/selectColumnOrder.png","qx.io.local.CookieTransport","verticalScrollBarVisible","qooxdoo default appearance","cldr_number_percent_format","Del","selectable","clientHeight","<h3>Results Summary</h3>","_cached","qx.net.Protocol","qx.html.Textile","Windows Royale","qx.core.Version","Num","screenX","resizeableWest","toLocaleUpperCase","TypePixel","\\*","Ignoring invisible child: ","defaultCursorDeltaY","maxLength","qx.ui.listview.ContentCellText","widget/window/minimize.gif","log-debug","/static","qx.ui.embed.TextEmbed","qx.log.Logger","key_full_PageDown","qx.ui.table.TablePane","qx.ui.toolbar.CheckBox","wmode","<h3>Measured Values</h3>","aqua","  [not readable: ","key_full_Escape","frameHeight","ae","allowMaximize","tab-view","0x","qx.manager.object.ImagePreloaderManager","Anchor",'<img src="$1">'," ms) ","  {","lightblue","forms","Fri","amountGrowth","TypeAuto","Jun","bar-view-pane"," Job:",'qx.ui.menu.Button',"scrollLeft","clipDimension",'px;height:','X',"#999","qx.util.Debug","getLastActiveChild","tablePaneModel"," FATAL: ","scrollMaxY","Mon","statusCode",'clipDimension',"‘","MaxWidth","cldr_am","resizeableEast","*** EXCEPTION (","showInterval","February","galeon","widget/table/boolean-true.png","<em>$1</em>","join","InfoBackground",'d',"stretchX","borderWidthX","qx.html.StyleSheet","captiontext","AppleWebKit","currentStyle",'"><button>Clear</button></div>',"debugClassName","qx.ui.treevirtual.SimpleTreeDataRowRenderer","pageXOffset","k","mergeEvents","qx.io.image.Preloader","qx.ui.listview.HeaderCell","toggle","right-reversed","toolbar-part-handle","qx.OO","other gecko","qx.util.Compare","qx.ui.groupbox.GroupBox","qx.ui.basic.Atom","wheelIncrementAmount","autoHide","window-captionbar-icon",'function',"</object>","menu-radio-button","log-head","widget/arrows/next.gif","qx.theme.color.WindowsClassic","TypeNull","Thursday","h:mm a","key_full_Enter","qx.ui.listview.ContentCell","qx.core.Init","galleryText","qx.ui.treefullcontrol.TreeFolder","Ae","start_plus.gif","end_minus.gif","locale","Conflict","July","args","centered","map","spinner-field","GET","qx.renderer.layout.FlowLayoutImpl","bar-view-bar","\\+","placeBarOnTop","defaultCursorDeltaX","widget/window/close.gif","borderRightWidth"," Element:","key_short_Home","header","uri","qx.manager.object.ImageManager.getInstance().setIconThemeById('",'eventListener requires a string type attribute',"purple","MMMM d, yyyy","0 none","headerCellHeight","splice","clientInformation","quality","^","false","qx.event.type.KeyEvent",'clipLocation',"key_short_Up","qx.ui.treevirtual.TreeVirtual","qx.renderer.layout.CanvasLayoutImpl","Next year","M/d","MEAN","Aborting...","qx.ui.component.ColorSelector","  }","console","--- Object: ","enableInlineFind","qx.component.DummyApplication","Unknown status code"," selected","anchors","qx.ui.table.ResizeTableColumnModel","scrollMaxX","MM","create","Not available",")+;)|[^&","application","qx.lang.Object","#e2e2e2","’","key_short_PageDown","serviceName","qx.ui.toolbar.RadioButton","leftWidth","labelOK","key_full_Tab","qx.ui.table.TextFieldCellEditorFactory","11px","maximum","Flush: Widget:","'Segoe UI', Corbel, Calibri, Tahoma, 'Lucida Sans Unicode', sans-serif","MMM d, yyyy","leftColor","spinner-button-up","No content","borderWidthY",'"\\b(.+?)\\b":([^\\s]+)',"yyyy","qx.ui.tree.TreeFile","command","qx.ui.form.Spinner","_recompute","multiline","h","Status","cellPaddingLeft","qx.ui.toolbar.MenuButton","capture","maxContentWidth","labelPresets","currentTarget","!\\b(.+?)\\b!","h:mm:ss a z","Local error ","December",'<pre id="log" wrap="wrap" style="font-size:11"></pre></body></html>',"maxColumnCount","grayText","openMenu","result","qx.ui.listview.ContentCellIconHtml","qx","form_","qx.dom.String","ue","(<span style=\"text-decoration:underline\">","recent","hasAutoY","Server error ","rootOpenClose","maroon","unix","scale","barPosition",'- ','MMredirectURL',"f","autoDispose","borderLeftWidth","body {}","qx.ui.table.TablePaneHeader","qx.ui.form.PasswordField","search","key_short_Down"," of "," errors.","N","Done in: ","maxCachedBlockCount","Components",'H',"height:",'Basic ',"qx.ui.toolbar.ToolBar","highlightFocusRow",'array',"maxSavedStates",'icon/16/apps/accessories-date.png',"focusedChild","qx.log.AlertAppender","window-captionbar-maximize-button","September","key_short_Tab","z","qx.io.remote.AbstractRemoteTransport","MSIE","Forbidden","qx.html.Entity","splitterSize","Sunday","anonymous","substring","all","widthValue","toolbar-part",'Referer',"defaultStatus","widget/datechooser/nextMonth.png","Jul","qx.ui.basic.Label","statusbar","yellow","newTablePaneHeader","html,body{margin:0;border:0;padding:0;}",':',"keepFirstVisibleRowComplete","Proxy authentication required","domTarget","The use of keyCode in command is deprecated. Use keyIdentifier instead.","beforeInsertDom",';">',"qx.io.image.PreloaderSystem","resizeToInner","qx.locale.Date","qx.html.EventRegistration",".6","space","qx.html.Window",'Missing reference element',"visualizeFocusedState","icon/16/actions/view-refresh.png","alwaysUpdateCells",")+>)|(&([^;]|","caption","InfoText","hue","Case sensitive","Ue","=v","preloader","-1",'fadeTime',"Object is null","<html><head><title>","highlightText","some","cellPaddingBottom","=[not readable: ","previousSibling","i","qx.ui.basic.Terminator","activeWindow","qx.ui.pageview.AbstractPage","documentElement","qx.log.Appender","defaultTimeout","stretch","widget/splitpane/knob-vertical.png","Choose a date","shortcut","qx.client.builder.EventListener","key_full_Insert","  src='","qx.locale.translation.C","splitpane-splitter","version","showCloseButton","catch(e)","hasAutoX","qx.ui.core.ScrollBar","qx.ui.table.DefaultHeaderCellRenderer"," Layout:","qx.manager.selection.DomSelectionManager","March","qx.ui.tree.AbstractTreeElement","crypto","preferredBoxWidth","MSXML2.XMLHTTP.3.0","progid:DXImageTransform.Microsoft.Shadow(color='Gray', Direction=135, Strength=4)","activeChild","qx.ui.embed.HtmlEmbed","hasFlexY","SS","isLiveResize","bottom-reversed",":border-box;} img{","topStyle","toolbar-separator-line","qx.event.type.DomEvent","field-set-frame","<pre>Could not execute json: \n",'<div style\="position:absolute;left:0px;top:',"qx.theme.color.WindowsLunaSilver","offsetHeight","#c5c8ca","ascending","table-focus-statusbar","element","<th>Median</th>","qx.ui.embed.LinkEmbed","qx.core.Target",'K',"showKnob","Automatic","icon/16/actions/document-open.png","qx.ui.basic.VerticalSpacer","<del>$1</del>","beforeRemoveDom","widget/table/boolean-false.png","minTimer","clearCacheOnRemove","Windows Luna Green","frame_","boundedWidget","</td></tr>",";font-family:","inactivecaption","enableElementFocus","Gecko",'//ns:',"pointer","qx.log.LogEventProcessor",'margin',"play","boxWidth","key_full_Delete","qx.ui.treevirtual.SelectionManager","qx.renderer.border.BorderObject","lineBreak","spinner","\\?\\?","parent,element,visible",'E',"Image","qx.ui.pageview.AbstractButton","anchorItem","qx.ui.listview.HeaderSeparator","HHmmsszz","qx.renderer.color.ColorCache","key_short_Alt",".7","log-error","resizer-frame","Feb","designMode"," Display:","maxLabelWidth","metaColumnCounts","multiColumnSupport","qx.lang.Array","close","allowClose","widget/cursors/","hash","toLocaleLowerCase","teal","KDE",'px; height:','</tbody></table>',"v","showTitle","MSXML.DOMDocument","Esc","qx.ui.pageview.tabview.Pane","&amp;","parentNode","popUnder","_modify","qx.ui.pageview.tabview.Page","h:mm:ss a v","</title></head>","every","horizontalScrollBarVisible","\\\\","addChild",'(-)?([0-9',"qx.event.type.MouseEvent","</p>",'s',"qx.util.Mime","text/xml","constructor not found","qx.event.type.DataEvent","  var groupObjects = ","offscreenBuffering","_change","box-sizing","log-warn","Request-Queue Progress: ",":content-box;}","onblur","\\b(.+?)\\b","galleryImageContainer","hasFlexX","qx.renderer.color.ColorObject","move","qx.client.builder.Script","scopeName","Caps","showMenubar","qx.ui.layout.CanvasLayout","maxIconWidth","dropDataTypes","allowClientSelectAll","menu-layout","shift",'qx.ui.form.RadioButton','resizer',"unkown","firstColumnX","org.w3c.dom.svg","blocker","qx.ui.pageview.buttonview.Pane","qx.renderer.border.BorderPresets","HH:mm:ss zz","cellPaddingTop","ordered",'<a href="$3" title="$2">$1</a>',"qx.util.StringBuilder","toolbar-separator","qx.event.handler.KeyEventHandler","newTablePaneScroller","key_full_Shift","Wed","qx.client.History","Request time-out","qx.ui.layout.GridLayout","key_full_NumLock","Search next occurrence","A shortcut containing Alt and a letter or number will not work under OS X!",')',"menu-separator","key_full_End","link","mm","closed",';'," &#160;","Aug","_data_","excactfit","qx.html.Location","list-view-content-cell-html","allowStretchX","widget/colorselector/huesaturation-field.jpg","<img src=\"","MMplayerType","newTableColumnModel","serverData","preferredInnerHeight","flashvars","qx.renderer.layout.MenuLayoutImpl","qx.ui.table.DefaultDataCellRenderer","parseerror","K","qx.ui.table.DefaultResizeBehavior","window-statusbar-text","width=","tableModel","toLowerCase","clipLocation","list-view-header-cell","qx.ui.table.CheckBoxCellEditorFactory","EndToStart",'backgroundColor',"widget/colorselector/brightness-field.jpg","Multiple choices","domConfig","Win64","screenY","[object Error]","qx.util.fsm.FiniteStateMachine","menu-separator-line","qx.xml.Document",'fadeMax',"globalStorage","qx.ui.menu.Button","qx.html.Iframe","java","PgUp","code","isAnonymous","resizeableNorth","qx.ui.form.ComboBox","moveable",",top=","MSXML2.XMLHTTP.6.0","loop"," xmlns='","groups","qx.ui.splitpane.HorizontalSplitPane","resizeableSouth","');","cross.gif","datechooser-datepane","qx.dev.TimeTracker","rightWidth","' value='","charAt","innerText","setDefault","$1<br />$2","sub",",left=","Dec","qx.ui.table.AbstractTableModel","Omni",'px"><colgroup>',"utf-8",'combo-box-ex-list',"MozUserFocus","cldr_alternateQuotationEnd","h([1-6])\.(.+)","MSHTML-specific HTTP status code","qx.xml.Namespace","idDescriptionSeparator","qx.ui.treevirtual.SimpleTreeDataCellRenderer",'fadeUnit',"Flex","removeDom","key_full_Pause","textContent","cldr_date_format_","newResizeBehaviorColumnData","onfocus","bodyClassName","key_full_PageUp","Microsoft.XMLHTTP","window-captionbar-close-button","/icon/Nuvola","sup","previousState",'padding',"qx.ui.listview.Header","inactivecaptiontext","Payment required","olive",'\u00A0',"pos","qx.ui.table.ResizeBehaviorColumnData","this.setStyleProperty('padding","<param name='","TypeFlex","doctype","BSD","contentNonIconPadding","reverse","locationbar","_applyRuntime","qx.ui.pageview.tabview.Bar","Windows Luna Blue","bar-view-page","January","#ebeadb","showCaption","wheelDelta"," html{border:0 none;} *{","</ol>\n","ins",'text/javascript',"alignTabsToLeft","leftStyle","compatMode","dataRowRenderer","H","heights","qx.util.Validation","qx.util.ColorUtil","nodrop","qx.xml.Element","autohigh","qx.ui.table.HeaderCellRenderer","<tr style='vertical-align:top'><td>","preferredInnerWidth","contentNonArrowPadding","widget/table/ascending.png","Bad request","qx.component.AbstractComponent","qx.ui.listview.ListViewPane"," INFO:  ","hideInterval","labelPosition","qx.theme.color.WindowsLunaGreen","isMultiLine",'event',"HHmm","key_short_PrintScreen","images","firstVisibleRow","Summary: (","widget/datechooser/lastMonth.png","rowHeight","offsetLeft","toUpperCase","qx.ui.treefullcontrol.TreeFile","Timeout: implementation ","Local time-out expired","    var objName = groupObjects[i];","rightColor","qx.ui.menu.Layout","globalCursor","qx.log.WindowAppender","newSelectionModel","cldr_date_time_format_",'boolean',"newSelectionManager","size","X-Requested-With",'combo-box-ex-popup',"showMaximize","insertDom","captureWidget","Received id (","oe","combo-box","key_short_Enter","stretchChildrenOrthogonalAxis","b","\t<liu>","_ScriptTransport_","quote","window-captionbar-minimize-button","qx.ui.table.DefaultDataRowRenderer","scrollHeight","combo-box-text-field","Error: Could not get a reference to the sheet object",'group',"qx.ui.listview.ListView",'px;top:0px;width:',"Not found",'clip',"select-multiple","qx.ui.embed.Iframe","qx.ui.treefullcontrol.Tree","qx.ui.pageview.AbstractPageView","qx.ui.table.AbstractResizeBehavior","qx.ui.groupbox.RadioGroupBox","Gone","list-view","#FFEEEE","qx_ui_embed_Gallery","\t<lio>","\n</pre>","Unauthorized","qx.ui.pageview.buttonview.Page","table-header-cell",".apply(this._remappingChildTarget, arguments)","You can only specify one non modifier key!","closetab","show","action","end.gif","qx.ui.toolbar.PartHandle","applets","key_short_Escape","contentEditable","(\\d\\d)","key_short_Meta","qx.core.Client","MSXML2.XMLHTTP","refreshSession","key_short_Apps","key_short_Win","excludeFirstLevelTreeLines","MaxHeight","Xx","QQQQ yy","qx.dom.Node","minus.gif","cldr_pm","icon/16/actions/format-color.png","other webkit","extended",'date',"prefferedCellHeight","qx.ui.table.IconHeaderCellRenderer","November","splitpane","navBar","    fsm.getGroupObjects('",'MMdoctitle',"list-item","groupClassName","qx.manager.selection.VirtualSelectionManager","Color Theme: ","_cachedBorder"," ---\n","Apr","qx.html.String",'PlugIn',"qx.renderer.layout.LayoutImpl","key_full_Home","Monday","cldr_number_decimal_separator","qx.theme.color.System","camino",'maxVisibleRows',"SelectionNamespaces","Color","list-view-pane","qx.ui.core.ClientDocumentBlocker"," ERROR: ","April","currentAction","widget/arrows/down_small.gif","onscroll","u","qx.client.Timer",'string',"substr","graytext","[object Object]","maxConcurrentRequests","qx.lang.Function","infoClassName","Out of resources","hideOnHover","h:mm:ss a","MMMM d","qx.ui.menu.RadioButton","windowText","log-group","subMenuVerticalOffset","encodeUndefined","headClassName","widget/table/descending.png",'fadeCounter',"Color Selector","fuchsia","qx.ui.tree.Tree","Oe","incrementAmount","margin-right:","Method not allowed","firstSize","Ok","' in ","qx.ui.layout.FlowLayout","c","Unsupported media type","key_full_Left","qx.ui.form.List","Precondition failed",'heights',"Debug","combo-box-list","fieldset","filters","<","toolbar-button","Reset column widths","Aborted","PROPERTY_","allowScrollbars","MinWidth","Transport error ","this._style.","Sat","MSXML2.XMLHTTP.4.0","Tuesday",'qx.ui.toolbar.MenuButton','<a href="$2">$1</a>',"contentArrowGap","selectionStart","originalTarget","getFirstChild",'location',"window-captionbar-title"," (r","Gateway time-out","pkcs11","dd","X-Qooxdoo-Version","visibleRowCount","visibleChildren","Saturday","qx.ui.pageview.buttonview.Bar","Bottom","qx.manager.selection.SelectionManager.handleKeyDown is deprecated! ","initial","$version","Safari","hideFocus","custom.translation.C","#f2f2f2",'A',"columnVisibilityButtonVisible","indentShortcuts","KK","Percent","Next month","key_","qx.ui.table.IconDataCellRenderer","en",'S',"fileUpload","Object","qx.renderer.layout.DockLayoutImpl","Length required","<th>Mean</th>","CSS1Compat","--- End of object ---","alias","textUnderlinePosition","D","low","useAutoAlign",")(fsm)","TypePercent","qx.ui.table.Table","<ul>",'top:0',"return this._remappingChildTarget.","qx.manager.object.AppearanceManager","Error while disposing: ","start_minus.gif","cite","$1","showOnTextField",'ensureSomethingSelected',"ActiveX","selectionText","frameName","qx.ui.popup.PopupAtom","inlineNodeId","parentPaddingTop","Start 25x",") does not match requested id ",'m',"pageIncrementAmount","bgcolor","groupingUsed","widget/arrows/up_small.gif","StringExact","Failed...","_check","Last year","qx.ui.toolbar.Button","Not a valid key name for a command: ","markLeadingItem","qx.ui.treevirtual.SimpleTreeDataModel","boxHeight","qx.ui.splitpane.VerticalSplitPane","charCodeAt","clientY","radio-button-field-set-legend","qx.net.HttpRequest","])*)(","Request finished for an unknown instance (probably aborted or timed out before)","MMM yyyy","Request entity too large","?c=","qx.html.Form","qx.lang.Number","noscale","qx.ui.layout.DockLayout","closeButtonImage","newTablePane","bSelected","infotext","qx.lang.String","Mar","fontPropertiesProfile","BOTH","!\\b(.+?)\\(\\b(.+?)\\b\\)!","charCode","Nuvola",'</colgroup><tbody>',"getLastChild","qx.html.ScrollIntoView","qx.ui.table.CellEditorFactory","*** TOO MUCH RECURSION: not displaying ***\n","outerText","hasPercentY"," fsm.getObject('","key_short_PageUp","sortBy","key_short_Pause","idColumnVisible","heightValue","key_full_CapsLock","log-info","rect(","</","subMenuHorizontalOffset","Start 15x","qx.ui.toolbar.Separator","length","Style","labelCancel","MMdoctitle","list-view-content-cell-icon-html","<th>Mean Factor</th>","qx.ui.layout.VerticalBoxLayout","<h$1>$2</h$1>","navigator",'\\d+)?',"Auto","Nov","pop","    fsm.getObject(objName).","qx.ui.form.CheckBox","<table>","X11","autocomplete","boundToWidget","HH",'manager',"qx.ui.form.TextArea","^(((<([^>]|",",selectionStart,selectionLength,selectionText","cross_plus.gif","tab-view-page",'on',"url(","').","maxLabelWidthIncShortcut","localName","qx.ui.component.ColorPopup","key_full_Backspace","east","text-area",';color:',"navy","minimumIntegerDigits","html,body{width:100%;height:100%;overflow:hidden;}","best","qx.html.Style","topWidth","list-view-content-cell-link","date","Open ColorSelector","openItem","></embed>","Use keypress insted and bind it to the onkeypress event."," error: ","checkbox","qx.event.type.DragEvent","W",'object',"blockSize","useAdvancedFlexAllocation","konqueror","brightness","domEvent","styleSheets","key_short_Shift",'qx.ui.resizer.Resizer',"qx.ui.pageview.tabview.Button","key_short_Control","qx.ui.basic.HorizontalSpacer","rightStyle","MinHeight","copy","qx.renderer.layout.GridLayoutImpl","Top","Camino","table-focus-indicator","icon/16/apps/preferences-desktop-theme.png","Option","newTablePaneModel","[function]","[\s\n]-(.+?)-[\s\n]","Microsoft.XMLDOM"," State:","offsetWidth"];


/* ID: qx.Settings */
if(!window.qx){qx={};
}
if(!qx.Settings){qx.Settings={};
}
if(!qx.Settings._customSettings){qx.Settings._customSettings={};
}qx.Settings._defaultSettings={};
qx._LOADSTART=(new Date).valueOf();
qx.Settings.substitute=function(vTemplate){if(typeof vTemplate!==$[0]){return vTemplate;
}return vTemplate.replace(/\%\{(.+)\}/g,function(vMatch,vKey){return eval(vKey);
});
};
qx.Settings.getValue=function(vKey){return qx.Settings.getValueOfClass(qx.Clazz.classname,vKey);
};
qx.Settings.getValueOfClass=function(vClassName,vKey){var vCustomObject=qx.Settings._customSettings[vClassName];
if(vCustomObject&&vCustomObject[vKey]!=null){return vCustomObject[vKey];
}var vDefaultObject=qx.Settings._defaultSettings[vClassName];
if(vDefaultObject&&vDefaultObject[vKey]!=null){return vDefaultObject[vKey];
}return null;
};
qx.Settings.setDefault=function(vKey,vValue){return qx.Settings.setDefaultOfClass(qx.Clazz.classname,vKey,vValue);
};
qx.Settings.setDefaultOfClass=function(vClassName,vKey,vValue){var vDefaultObject=qx.Settings._defaultSettings[vClassName];
if(!vDefaultObject){vDefaultObject=qx.Settings._defaultSettings[vClassName]={};
}vDefaultObject[vKey]=vValue;
};
qx.Settings.setCustom=function(vKey,vValue){return qx.Settings.setCustomOfClass(qx.Clazz.classname,vKey,vValue);
};
qx.Settings.setCustomOfClass=function(vClassName,vKey,vValue){var vCustomObject=qx.Settings._customSettings[vClassName];
if(!vCustomObject){vCustomObject=qx.Settings._customSettings[vClassName]={};
}vCustomObject[vKey]=qx.Settings.substitute(vValue);
};
qx.Settings.init=function(){for(var vClass in qx.Settings._customSettings){var vSettings=qx.Settings._customSettings[vClass];
for(var vKey in vSettings){qx.Settings.setCustomOfClass(vClass,vKey,vSettings[vKey]);
}}};
qx.Settings.init();




/* ID: qx.OO */
qx.OO={};
qx.OO.defineClass=function(){};
qx.Clazz=qx.OO;
qx.OO.defineClass($[1527]);
qx.Clazz.classes={};
qx.Clazz.setter={};
qx.Clazz.getter={};
qx.Clazz.resetter={};
qx.Clazz.values={};
qx.Clazz.propertyNumber=0;
qx.Clazz.defineClass=function(vClassName,vSuper,vConstructor){var vSplitName=vClassName.split($[53]);
var vNameLength=vSplitName.length-1;
var vTempObject=window;
for(var i=0;i<vNameLength;i++){if(typeof vTempObject[vSplitName[i]]===$[41]){vTempObject[vSplitName[i]]={};
}vTempObject=vTempObject[vSplitName[i]];
}if(typeof vSuper===$[41]){if(typeof vConstructor!==$[41]){throw new Error("SuperClass is undefined, but constructor was given for class: "+vClassName);
}qx.Clazz=vTempObject[vSplitName[i]]={};
qx.Proto=null;
qx.Super=null;
}else if(typeof vConstructor===$[41]){qx.Clazz=vTempObject[vSplitName[i]]=vSuper;
qx.Proto=null;
qx.Super=vSuper;
}else{qx.Clazz=vTempObject[vSplitName[i]]=vConstructor;
var vHelperConstructor=function(){};
vHelperConstructor.prototype=vSuper.prototype;
qx.Proto=vConstructor.prototype=new vHelperConstructor;
qx.Super=vConstructor.superclass=vSuper;
qx.Proto.classname=vConstructor.classname=vClassName;
qx.Proto.constructor=vConstructor;
}qx.OO.classes[vClassName]=qx.Clazz;
};
qx.Clazz.addFastProperty=function(vConfig){var vName=vConfig.name;
var vUpName=qx.lang.String.toFirstUp(vName);
var vStorageField=$[301]+vUpName;
var vGetterName=$[78]+vUpName;
var vSetterName=$[83]+vUpName;
var vComputerName=$[493]+vUpName;
qx.Proto[vStorageField]=typeof vConfig.defaultValue!==$[41]?vConfig.defaultValue:null;
if(vConfig.noCompute){qx.Proto[vGetterName]=function(){return this[vStorageField];
};
}else{qx.Proto[vGetterName]=function(){return this[vStorageField]==null?this[vStorageField]=this[vComputerName]():this[vStorageField];
};
}
if(vConfig.setOnlyOnce){qx.Proto[vSetterName]=function(vValue){this[vStorageField]=vValue;
this[vSetterName]=null;
return vValue;
};
}else{qx.Proto[vSetterName]=function(vValue){return this[vStorageField]=vValue;
};
}
if(!vConfig.noCompute){qx.Proto[vComputerName]=function(){return null;
};
}};
qx.OO.addCachedProperty=function(p){var vName=p.name;
var vUpName=qx.lang.String.toFirstUp(vName);
var vStorageField=$[1437]+vUpName;
var vComputerName=$[493]+vUpName;
var vChangeName=$[1885]+vUpName;
if(typeof p.defaultValue!==$[41]){qx.Proto[vStorageField]=p.defaultValue;
}qx.Proto[$[78]+vUpName]=function(){if(this[vStorageField]==null){this[vStorageField]=this[vComputerName]();
}return this[vStorageField];
};
qx.Proto[$[1262]+vUpName]=function(){if(this[vStorageField]!=null){this[vStorageField]=null;
if(p.addToQueueRuntime){this.addToQueueRuntime(p.name);
}}};
qx.Proto[$[1631]+vUpName]=function(){var vOld=this[vStorageField];
var vNew=this[vComputerName]();
if(vNew!=vOld){this[vStorageField]=vNew;
this[vChangeName](vNew,vOld);
return true;
}return false;
};
qx.Proto[vChangeName]=function(vNew,vOld){};
qx.Proto[vComputerName]=function(){return null;
};
};
qx.Clazz.addPropertyGroup=function(p){if(typeof p!==$[4]){throw new Error("Param should be an object!");
}
if(typeof p.name!=$[0]){throw new Error("Malformed input parameters: name needed!");
}
if(typeof p.members!=$[4]){throw new Error("Malformed input parameters: members needed!");
}p.method=qx.lang.String.toFirstUp(p.name);
p.getter=[];
p.setter=[];
for(var i=0,l=p.members.length;i<l;i++){p.setter.push($[83]+qx.lang.String.toFirstUp(p.members[i]));
}
for(var i=0,l=p.members.length;i<l;i++){p.getter.push($[78]+qx.lang.String.toFirstUp(p.members[i]));
}qx.Proto[$[78]+p.method]=function(){var a=[];
var g=p.getter;
for(var i=0,l=g.length;i<l;i++){a.push(this[g[i]]());
}return a;
};
switch(p.mode){case $[231]:qx.Proto[$[83]+p.method]=function(){if(arguments.length>4||arguments.length==0){throw new Error("Invalid number of arguments for property "+p.name+": "+arguments);
}
try{var ret=qx.lang.Array.fromShortHand(qx.lang.Array.fromArguments(arguments));
}catch(ex){throw new Error("Invalid shorthand values for property "+p.name+": "+arguments+": "+ex);
}var s=p.setter;
var l=s.length;
for(var i=0;i<l;i++){this[s[i]](ret[i]);
}};
break;
default:qx.Proto[$[83]+p.method]=function(){var s=p.setter;
var l=s.length;
if(arguments.length!=l){throw new Error("Invalid number of arguments (needs: "+l+", is: "+arguments.length+") for property "+p.name+": "+qx.lang.Array.fromArguments(arguments).toString());
}
for(var i=0;i<l;i++){this[s[i]](arguments[i]);
}};
}};
qx.Clazz.removeProperty=function(p){if(typeof qx.Proto._properties!==$[0]){throw new Error("Has no properties!");
}
if(typeof p!==$[4]){throw new Error("Param should be an object!");
}
if(typeof p.name!==$[0]){throw new Error("Malformed input parameters: name needed!");
}var pp=qx.Proto;
p.method=qx.lang.String.toFirstUp(p.name);
p.implMethod=p.impl?qx.lang.String.toFirstUp(p.impl):p.method;
var valueKey=$[301]+p.method;
pp._properties=qx.lang.String.removeListItem(pp._properties,p.name);
pp[valueKey]=null;
pp[$[78]+p.method]=null;
pp[$[83]+p.method]=null;
pp[$[243]+p.method]=null;
pp[$[199]+p.method]=null;
pp[$[537]+p.method]=null;
pp[$[1165]+p.method]=null;
pp[$[2000]+p.method]=null;
};
qx.Clazz._createProperty=function(p){if(typeof p!==$[4]){throw new Error("AddProperty: Param should be an object!");
}
if(typeof p.name!==$[0]){throw new Error("AddProperty: Malformed input parameters: name needed!");
}var pp=qx.Proto;
p.method=qx.lang.String.toFirstUp(p.name);
p.implMethod=p.impl?qx.lang.String.toFirstUp(p.impl):p.method;
if(p.defaultValue==undefined){p.defaultValue=null;
}p.allowNull=p.allowNull!==false;
p.allowMultipleArguments=p.allowMultipleArguments===true;
if(typeof p.type===$[0]){p.hasType=true;
}else if(typeof p.type!==$[41]){throw new Error("AddProperty: Invalid type definition for property "+p.name+": "+p.type);
}else{p.hasType=false;
}
if(typeof p.instance===$[0]){p.hasInstance=true;
}else if(typeof p.instance!==$[41]){throw new Error("AddProperty: Invalid instance definition for property "+p.name+": "+p.instance);
}else{p.hasInstance=false;
}
if(typeof p.classname===$[0]){p.hasClassName=true;
}else if(typeof p.classname!==$[41]){throw new Error("AddProperty: Invalid classname definition for property "+p.name+": "+p.classname);
}else{p.hasClassName=false;
}p.hasConvert=p.convert!=null;
p.hasPossibleValues=p.possibleValues!=null;
p.hasUnitDetection=p.unitDetection!=null;
p.addToQueue=p.addToQueue||false;
p.addToQueueRuntime=p.addToQueueRuntime||false;
p.up=p.name.toUpperCase();
qx.OO[$[2252]+p.up]=p.name;
var valueKey=$[301]+p.method;
var evalKey=$[870]+p.method;
var changeKey=$[32]+p.method;
var modifyKey=$[1867]+p.implMethod;
var checkKey=$[2335]+p.implMethod;
if(!qx.OO.setter[p.name]){qx.OO.setter[p.name]=$[83]+p.method;
qx.OO.getter[p.name]=$[78]+p.method;
qx.OO.resetter[p.name]=$[243]+p.method;
qx.OO.values[p.name]=valueKey;
}if(p.hasUnitDetection){var cu=$[610]+p.method;
pp[cu+$[366]]=null;
pp[cu+$[650]]=null;
pp[cu+$[527]]=null;
pp[cu+$[1541]]=true;
pp[cu+$[1446]]=false;
pp[cu+$[2308]]=false;
pp[cu+$[1479]]=false;
pp[cu+$[2042]]=false;
var unitDetectionKey=$[973]+qx.lang.String.toFirstUp(p.unitDetection);
}pp[valueKey]=p.defaultValue;
pp[$[78]+p.method]=function(){return this[valueKey];
};
pp[$[537]+p.method]=function(newValue){return this[valueKey]=newValue;
};
pp[$[243]+p.method]=function(){return this[$[83]+p.method](p.defaultValue);
};
if(p.type===$[3]){pp[$[1524]+p.method]=function(newValue){return this[$[83]+p.method](!this[valueKey]);
};
}
if(p.allowMultipleArguments||p.hasConvert||p.hasInstance||p.hasClassName||p.hasPossibleValues||p.hasUnitDetection||p.addToQueue||p.addToQueueRuntime||p.addToStateQueue){pp[$[83]+p.method]=function(newValue){if(p.allowMultipleArguments&&arguments.length>1){newValue=qx.lang.Array.fromArguments(arguments);
}if(p.hasConvert){try{newValue=p.convert.call(this,newValue,p);
}catch(ex){throw new Error("Attention! Could not convert new value for "+p.name+": "+newValue+": "+ex);
}}var oldValue=this[valueKey];
if(newValue===oldValue){return newValue;
}
if(!(p.allowNull&&newValue==null)){if(p.hasType&&typeof newValue!==p.type){return this.error("Attention! The value \""+newValue+"\" is an invalid value for the property \""+p.name+"\" which must be typeof \""+p.type+"\" but is typeof \""+typeof newValue+"\"!",new Error());
}
if(p.hasInstance&&!(newValue instanceof qx.OO.classes[p.instance])){return this.error("Attention! The value \""+newValue+"\" is an invalid value for the property \""+p.name+"\" which must be an instance of \""+p.instance+"\"!",new Error());
}
if(p.hasClassName&&newValue.classname!=p.classname){return this.error("Attention! The value \""+newValue+"\" is an invalid value for the property \""+p.name+"\" which must be an object with the classname \""+p.classname+"\"!",new Error());
}
if(p.hasPossibleValues&&newValue!=null&&!qx.lang.Array.contains(p.possibleValues,newValue)){return this.error("Failed to save value for "+p.name+". '"+newValue+"' is not a possible value!",new Error());
}}if(this[checkKey]){try{newValue=this[checkKey](newValue,p);
if(newValue===oldValue){return newValue;
}}catch(ex){return this.error("Failed to check property "+p.name,ex);
}}this[valueKey]=newValue;
if(this[modifyKey]){try{var r=this[modifyKey](newValue,oldValue,p);
if(!r){return this.error("Modification of property \""+p.name+"\" failed without exception ("+r+")",new Error());
}}catch(ex){return this.error("Modification of property \""+p.name+"\" failed with exception",ex);
}}if(p.hasUnitDetection){this[unitDetectionKey](p,newValue);
}if(p.addToQueue){this.addToQueue(p.name);
}else if(p.addToQueueRuntime){this.addToQueueRuntime(p.name);
}if(p.addToStateQueue){this.addToStateQueue();
}if(this.hasEventListeners&&this.hasEventListeners(changeKey)){try{this.createDispatchDataEvent(changeKey,newValue);
}catch(ex){throw new Error("Property "+p.name+" modified: Failed to dispatch change event: "+ex);
}}return newValue;
};
}else{pp[$[83]+p.method]=function(newValue){var oldValue=this[valueKey];
if(newValue===oldValue){return newValue;
}
if(!(p.allowNull&&newValue==null)){if(p.hasType&&typeof newValue!==p.type){return this.error("Attention! The value \""+newValue+"\" is an invalid value for the property \""+p.name+"\" which must be typeof \""+p.type+"\" but is typeof \""+typeof newValue+"\"!",new Error());
}}if(this[checkKey]){try{newValue=this[checkKey](newValue,p);
if(newValue===oldValue){return newValue;
}}catch(ex){return this.error("Failed to check property "+p.name,ex);
}}this[valueKey]=newValue;
if(this[modifyKey]){try{var r=this[modifyKey](newValue,oldValue,p);
if(!r){var valueStr=new String(newValue).substring(0,50);
return this.error("Setting property \""+p.name+"\" to \""+valueStr+"\" failed without exception ("+r+")",new Error());
}}catch(ex){var valueStr=new String(newValue).substring(0,50);
return this.error("Setting property \""+p.name+"\" to \""+valueStr+"\" failed with exception",ex);
}}if(this.hasEventListeners&&this.hasEventListeners(changeKey)){var vEvent=new qx.event.type.DataEvent(changeKey,newValue,oldValue,false);
vEvent.setTarget(this);
try{this.dispatchEvent(vEvent,true);
}catch(ex){throw new Error("Property "+p.name+" modified: Failed to dispatch change event: "+ex);
}}return newValue;
};
}if(typeof p.getAlias===$[0]){pp[p.getAlias]=pp[$[78]+p.method];
}if(typeof p.setAlias===$[0]){pp[p.setAlias]=pp[$[83]+p.method];
}};
qx.Clazz.changeProperty=qx.OO._createProperty;
qx.Clazz.addProperty=function(p){qx.OO.propertyNumber++;
qx.OO._createProperty(p);
if(typeof qx.Proto._properties!==$[0]){qx.Proto._properties=p.name;
}else{qx.Proto._properties+=$[23]+p.name;
}switch(p.type){case undefined:case $[4]:case $[31]:if(typeof qx.Proto._objectproperties!==$[0]){qx.Proto._objectproperties=p.name;
}else{qx.Proto._objectproperties+=$[23]+p.name;
}}};
qx.Clazz.inheritField=function(vField,vData){qx.lang.Object.carefullyMergeWith(vData,qx.Super.prototype[vField]);
qx.Proto[vField]=vData;
};
qx.Clazz.isAvailable=function(vClassName){return qx.OO.classes[vClassName]!=null;
};




/* ID: qx.lang.String */
qx.OO.defineClass($[2360]);
qx.Clazz.toCamelCase=function(str){var vArr=str.split($[57]),vLength=vArr.length;
if(vLength==1){return vArr[0];
}var vNew=str.indexOf($[57])==0?vArr[0].charAt(0).toUpperCase()+vArr[0].substring(1):vArr[0];
for(var vPart,i=1;i<vLength;i++){vPart=vArr[i];
vNew+=vPart.charAt(0).toUpperCase()+vPart.substring(1);
}return vNew;
};
qx.Clazz.trimLeft=function(str){return str.replace(/^\s+/,$[1]);
};
qx.Clazz.trimRight=function(str){return str.replace(/\s+$/,$[1]);
};
qx.Clazz.trim=function(str){return str.replace(/^\s+|\s+$/g,$[1]);
};
qx.Clazz.startsWith=function(fullstr,substr){return !fullstr.indexOf(substr);
};
qx.Clazz.endsWith=function(fullstr,substr){return fullstr.lastIndexOf(substr)===fullstr.length-substr.length;
};
qx.Clazz.pad=function(str,length,ch){if(typeof ch===$[41]){ch=$[36];
}var temp=$[1];
for(var i=str.length;i<length;i++){temp+=ch;
}return temp+str;
};
qx.Clazz.toFirstUp=function(str){return str.charAt(0).toUpperCase()+str.substr(1);
};
qx.Clazz.addListItem=function(str,item,sep){if(str==item||str==$[1]){return item;
}
if(sep==null){sep=$[23];
}var a=str.split(sep);
if(a.indexOf(item)==-1){a.push(item);
return a.join(sep);
}else{return str;
}};
qx.Clazz.removeListItem=function(str,item,sep){if(str==item||str==$[1]){return $[1];
}else{if(sep==null){sep=$[23];
}var a=str.split(sep);
var p=a.indexOf(item);
if(p===-1){return str;
}
do{a.splice(p,1);
}while((p=a.indexOf(item))!=-1);
return a.join(sep);
}};
qx.Clazz.contains=function(str,substring){return str.indexOf(substring)!=-1;
};
qx.Clazz.format=function(pattern,args){var str=pattern;
for(var i=0;i<args.length;i++){str=str.replace(new RegExp($[205]+(i+1),$[123]),args[i]);
}return str;
};
qx.Clazz.escapeRegexpChars=function(str){return str.replace(/([\\\.\(\)\[\]\{\}\^\$\?\+\*])/g,$[1292]);
};




/* ID: qx.lang.Array */
qx.OO.defineClass($[1849]);
qx.lang.Array.fromArguments=function(args){return Array.prototype.slice.call(args,0);
};
qx.lang.Array.fromShortHand=function(input){var len=input.length;
if(len>4||len==0){this.error("Invalid number of arguments!");
}var result=qx.lang.Array.copy(input);
switch(len){case 1:result[1]=result[2]=result[3]=result[0];
break;
case 2:result[2]=result[0];
case 3:result[3]=result[1];
}return result;
};
qx.lang.Array.copy=function(arr){return arr.concat();
};
qx.lang.Array.clone=function(arr){return arr.concat();
};
qx.lang.Array.getLast=function(arr){return arr[arr.length-1];
};
qx.lang.Array.getFirst=function(arr){return arr[0];
};
qx.lang.Array.insertAt=function(arr,obj,i){arr.splice(i,0,obj);
return arr;
};
qx.lang.Array.insertBefore=function(arr,obj,obj2){var i=arr.indexOf(obj2);
if(i==-1){arr.push(obj);
}else{arr.splice(i,0,obj);
}return arr;
};
qx.lang.Array.insertAfter=function(arr,obj,obj2){var i=arr.indexOf(obj2);
if(i==-1||i==(arr.length-1)){arr.push(obj);
}else{arr.splice(i+1,0,obj);
}return arr;
};
qx.lang.Array.removeAt=function(arr,i){return arr.splice(i,1);
};
qx.lang.Array.removeAll=function(arr){return arr.splice(0,arr.length);
};
qx.lang.Array.append=function(arr,a){Array.prototype.push.apply(arr,a);
};
qx.lang.Array.remove=function(arr,obj){var i=arr.indexOf(obj);
if(i!=-1){return arr.splice(i,1);
}};
qx.lang.Array.contains=function(arr,obj){return arr.indexOf(obj)!=-1;
};




/* ID: qx.lang.Object */
qx.OO.defineClass($[1607]);
qx.Clazz.isEmpty=function(map){for(var s in map){return false;
}return true;
};
qx.Clazz.hasMinLength=function(map,length){var i=0;
for(var s in map){if((++i)>=length){return true;
}}return false;
};
qx.Clazz.getLength=function(map){var i=0;
for(var s in map){i++;
}return i;
};
qx.Clazz.getKeys=function(map){var r=[];
for(var s in map){r.push(s);
}return r;
};
qx.Clazz.getKeysAsString=function(map){return qx.lang.Object.getKeys(map).join($[987]);
};
qx.Clazz.getValues=function(map){var r=[];
for(var s in map){r.push(map[s]);
}return r;
};
qx.Clazz.mergeWith=function(vObjectA,vObjectB){for(var vKey in vObjectB){vObjectA[vKey]=vObjectB[vKey];
}return vObjectA;
};
qx.Clazz.carefullyMergeWith=function(vObjectA,vObjectB){for(var vKey in vObjectB){if(typeof vObjectA[vKey]===$[41]){vObjectA[vKey]=vObjectB[vKey];
}}return vObjectA;
};
qx.Clazz.merge=function(vObjectA,varargs){var vLength=arguments.length;
for(var i=1;i<vLength;i++){qx.lang.Object.mergeWith(vObjectA,arguments[i]);
}return vObjectA;
};
qx.Clazz.copy=function(vObject){return qx.lang.Object.mergeWith({},vObject);
};
qx.Clazz.invert=function(vObject){var result={};
for(var key in vObject){var value=vObject[key].toString();
result[value]=key;
}return result;
};




/* ID: qx.lang.Core */
qx.OO.defineClass($[872]);
if(!Error.prototype.toString||Error.prototype.toString()==$[1970]){Error.prototype.toString=function(){return this.message;
};
}if(!Array.prototype.indexOf){Array.prototype.indexOf=function(searchElement,fromIndex){if(fromIndex==null){fromIndex=0;
}else if(fromIndex<0){fromIndex=Math.max(0,this.length+fromIndex);
}
for(var i=fromIndex;i<this.length;i++){if(this[i]===searchElement){return i;
}}return -1;
};
}
if(!Array.prototype.lastIndexOf){Array.prototype.lastIndexOf=function(searchElement,fromIndex){if(fromIndex==null){fromIndex=this.length-1;
}else if(fromIndex<0){fromIndex=Math.max(0,this.length+fromIndex);
}
for(var i=fromIndex;i>=0;i--){if(this[i]===searchElement){return i;
}}return -1;
};
}
if(!Array.prototype.forEach){Array.prototype.forEach=function(callback,obj){var l=this.length;
for(var i=0;i<l;i++){callback.call(obj,this[i],i,this);
}};
}
if(!Array.prototype.filter){Array.prototype.filter=function(callback,obj){var l=this.length;
var res=[];
for(var i=0;i<l;i++){if(callback.call(obj,this[i],i,this)){res.push(this[i]);
}}return res;
};
}
if(!Array.prototype.map){Array.prototype.map=function(callback,obj){var l=this.length;
var res=[];
for(var i=0;i<l;i++){res.push(callback.call(obj,this[i],i,this));
}return res;
};
}
if(!Array.prototype.some){Array.prototype.some=function(callback,obj){var l=this.length;
for(var i=0;i<l;i++){if(callback.call(obj,this[i],i,this)){return true;
}}return false;
};
}
if(!Array.prototype.every){Array.prototype.every=function(callback,obj){var l=this.length;
for(var i=0;i<l;i++){if(!callback.call(obj,this[i],i,this)){return false;
}}return true;
};
}if(!String.prototype.quote){String.prototype.quote=function(){return $[269]+this.replace(/\\/g,$[1873]).replace(/\"/g,$[1175])+$[269];
};
}



/* ID: qx.lang.Function */
qx.OO.defineClass($[2213]);
qx.lang.Function.returnTrue=function(){return true;
};
qx.lang.Function.returnFalse=function(){return false;
};
qx.lang.Function.returnNull=function(){return null;
};
qx.lang.Function.returnThis=function(){return this;
};
qx.lang.Function.returnInstance=function(){if(!this._instance){this._instance=new this;
}return this._instance;
};
qx.lang.Function.returnZero=function(){return 0;
};
qx.lang.Function.returnNegativeIndex=function(){return -1;
};




/* ID: qx.core.Object */
qx.OO.defineClass($[449],Object,function(vAutoDispose){this._hashCode=qx.core.Object._availableHashCode++;
if(vAutoDispose!==false){this._dbKey=qx.core.Object._db.length;
qx.core.Object._db.push(this);
}});
qx.Settings.setDefault($[487],false);
qx.Clazz._availableHashCode=0;
qx.Clazz._db=[];
qx.Clazz._disposeAll=false;
qx.Clazz.toHashCode=function(o){if(o._hashCode!=null){return o._hashCode;
}return o._hashCode=qx.core.Object._availableHashCode++;
};
qx.Clazz.dispose=function(){var debug=qx.Settings.getValueOfClass($[449],$[487])&&window.console;
if(debug){console.log($[1156]);
var vStart=(new Date).valueOf();
}qx.core.Object._disposeAll=true;
var vObject;
for(var i=qx.core.Object._db.length-1;i>=0;i--){vObject=qx.core.Object._db[i];
if(vObject&&vObject._disposed===false){try{vObject.dispose();
}catch(ex){if(debug){console.warn($[2314]+vObject.classname+$[320]+vObject.toHashCode()+$[820]+ex.message);
}}}}
if(debug){console.log($[1677]+((new Date).valueOf()-vStart)+$[200]);
}};
qx.Clazz.summary=function(){var vData={};
var vCounter=0;
var vObject;
for(var i=qx.core.Object._db.length-1;i>=0;i--){vObject=qx.core.Object._db[i];
if(vObject&&vObject._disposed===false){if(vData[vObject.classname]==null){vData[vObject.classname]=1;
}else{vData[vObject.classname]++;
}vCounter++;
}}var vArrData=[];
for(var vClassName in vData){vArrData.push({classname:vClassName,number:vData[vClassName]});
}vArrData.sort(function(a,b){return b.number-a.number;
});
var vMsg=$[2089]+vCounter+$[1309];
for(var i=0;i<vArrData.length;i++){vMsg+=vArrData[i].number+$[79]+vArrData[i].classname+$[69];
}alert(vMsg);
};
qx.Clazz.inGlobalDispose=function(){return qx.core.Object._disposeAll;
};
qx.OO.addProperty({name:$[545],type:$[3],defaultValue:true,getAlias:$[574]});
qx.Proto.toString=function(){if(this.classname){return $[1413]+this.classname+$[190];
}return $[2211];
};
qx.Proto.toHashCode=function(){return this._hashCode;
};
qx.Proto.getDisposed=function(){return this._disposed;
};
qx.Proto.isDisposed=function(){return this._disposed;
};
qx.Proto.getSetting=function(vKey){return qx.Settings.getValueOfClass(this.classname,vKey);
};
qx.Proto.tr=function(messageId,varargs){var nlsManager=qx.locale.Manager;
return nlsManager.tr.apply(nlsManager,arguments);
};
qx.Proto.trn=function(singularMessageId,pluralMessageId,count,varargs){var nlsManager=qx.locale.Manager;
return nlsManager.trn.apply(nlsManager,arguments);
};
qx.Proto.marktr=function(messageId){var nlsManager=qx.locale.Manager;
return nlsManager.marktr.apply(nlsManager,arguments);
};
qx.Proto.getLogger=function(){return qx.log.Logger.getClassLogger(this.constructor);
};
qx.Proto.debug=function(msg,exc){this.getLogger().debug(msg,this._hashCode,exc);
};
qx.Proto.info=function(msg,exc){this.getLogger().info(msg,this._hashCode,exc);
};
qx.Proto.warn=function(msg,exc){this.getLogger().warn(msg,this._hashCode,exc);
};
qx.Proto.error=function(msg,exc){this.getLogger().error(msg,this._hashCode,exc);
};
qx.Proto.set=function(propertyValues){if(typeof propertyValues!==$[4]){throw new Error("Please use a valid hash of property key-values pairs.");
}
for(var prop in propertyValues){try{this[qx.OO.setter[prop]](propertyValues[prop]);
}catch(ex){this.error("Setter of property '"+prop+"' returned with an error",ex);
}}return this;
};
qx.Proto.get=function(propertyNames,outputHint){switch(typeof propertyNames){case $[0]:return this[$[78]+qx.lang.String.toFirstUp(propertyNames)]();
case $[4]:if(typeof propertyNames.length===$[2]){if(outputHint==$[1853]){var h={};
propertyLength=propertyNames.length;
for(var i=0;i<propertyLength;i++){try{h[propertyNames[i]]=this[$[78]+qx.lang.String.toFirstUp(propertyNames[i])]();
}catch(ex){throw new Error("Could not get a valid value from property: "+propertyNames[i]+"! Is the property existing? ("+ex+")");
}}return h;
}else{propertyLength=propertyNames.length;
for(var i=0;i<propertyLength;i++){try{propertyNames[i]=this[$[78]+qx.lang.String.toFirstUp(propertyNames[i])]();
}catch(ex){throw new Error("Could not get a valid value from property: "+propertyNames[i]+"! Is the property existing? ("+ex+")");
}}return propertyNames;
}}else{for(var i in propertyNames){propertyNames[i]=this[$[78]+qx.lang.String.toFirstUp(i)]();
}return propertyNames;
}default:throw new Error("Please use a valid array, hash or string as parameter!");
}};
qx.Proto.setUserData=function(vKey,vValue){if(!this._userData){this._userData={};
}this._userData[vKey]=vValue;
};
qx.Proto.getUserData=function(vKey){if(!this._userData){return null;
}return this._userData[vKey];
};
qx.Proto._disposed=false;
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._disposed=true;
var debug=qx.Settings.getValueOfClass($[449],$[487])&&window.console;
if(this._userData){for(var vKey in this._userData){this._userData[vKey]=null;
}this._userData=null;
}if(this._objectproperties){var a=this._objectproperties.split($[23]);
var d=qx.OO.values;
for(var i=0,l=a.length;i<l;i++){this[d[a[i]]]=null;
}this._objectproperties=null;
}
if(debug){for(var vKey in this){if(this[vKey]!==null&&typeof this[vKey]===$[4]&&this.constructor.prototype[vKey]===undefined){var detail=$[1];
if(this.getAppearance){detail=$[792]+this.getAppearance()+$[82];
}console.warn($[1004]+vKey+$[2236]+this.classname+$[320]+this.toHashCode()+$[190]+detail);
delete this[vKey];
}}}if(this._dbKey!=null){if(qx.core.Object._disposeAll){qx.core.Object._db[this._dbKey]=null;
}else{delete qx.core.Object._db[this._dbKey];
}this._hashCode=null;
this._dbKey=null;
}};




/* ID: qx.core.Target */
qx.OO.defineClass($[1800],qx.core.Object,function(vAutoDispose){qx.core.Object.call(this,vAutoDispose);
});
qx.Clazz.EVENTPREFIX="evt";
qx.Proto.addEventListener=function(vType,vFunction,vObject){if(this.getDisposed()){return;
}
if(typeof vFunction!==$[31]){throw new Error("qx.core.Target: addEventListener("+vType+"): '"+vFunction+"' is not a function!");
}if(this._listeners===undefined){this._listeners={};
}
if(this._listeners[vType]===undefined){this._listeners[vType]={};
}var vKey=qx.core.Target.EVENTPREFIX+qx.core.Object.toHashCode(vFunction)+(vObject?$[95]+qx.core.Object.toHashCode(vObject):$[1]);
this._listeners[vType][vKey]={handler:vFunction,object:vObject};
};
qx.Proto.removeEventListener=function(vType,vFunction,vObject){if(this.getDisposed()){return;
}var vListeners=this._listeners;
if(!vListeners||vListeners[vType]===undefined){return;
}
if(typeof vFunction!==$[31]){throw new Error("qx.core.Target: removeEventListener("+vType+"): '"+vFunction+"' is not a function!");
}var vKey=qx.core.Target.EVENTPREFIX+qx.core.Object.toHashCode(vFunction)+(vObject?$[95]+qx.core.Object.toHashCode(vObject):$[1]);
delete this._listeners[vType][vKey];
};
qx.Proto.hasEventListeners=function(vType){return this._listeners&&typeof this._listeners[vType]!==$[41]&&!qx.lang.Object.isEmpty(this._listeners[vType]);
};
qx.Proto.createDispatchEvent=function(vType){if(this.hasEventListeners(vType)){this.dispatchEvent(new qx.event.type.Event(vType),true);
}};
qx.Proto.createDispatchDataEvent=function(vType,vData){if(this.hasEventListeners(vType)){this.dispatchEvent(new qx.event.type.DataEvent(vType,vData),true);
}};
qx.Proto.dispatchEvent=function(vEvent,vEnableDispose){if(this.getDisposed()&&this.getEnabled()){return;
}
if(vEvent.getTarget()==null){vEvent.setTarget(this);
}
if(vEvent.getCurrentTarget()==null){vEvent.setCurrentTarget(this);
}this._dispatchEvent(vEvent,vEnableDispose);
var defaultPrevented=vEvent._defaultPrevented;
vEnableDispose&&vEvent.dispose();
return !defaultPrevented;
};
qx.Proto._dispatchEvent=function(vEvent){var vListeners=this._listeners;
if(vListeners){vEvent.setCurrentTarget(this);
var vTypeListeners=vListeners[vEvent.getType()];
if(vTypeListeners){var vFunction,vObject;
for(var vHashCode in vTypeListeners){vFunction=vTypeListeners[vHashCode].handler;
vObject=vTypeListeners[vHashCode].object||this;
try{vFunction.call(vObject,vEvent);
}catch(ex){this.error("Could not dispatch event of type \""+vEvent.getType()+"\"",ex);
}}}}if(vEvent.getBubbles()&&!vEvent.getPropagationStopped()&&this.getParent){var vParent=this.getParent();
if(vParent&&!vParent.getDisposed()&&vParent.getEnabled()){vParent._dispatchEvent(vEvent);
}}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(typeof this._listeners===$[4]){for(var vType in this._listeners){var listener=this._listeners[vType];
for(var vKey in listener){listener[vKey]=null;
}this._listeners[vType]=null;
}}this._listeners=null;
return qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.event.type.Event */
qx.OO.defineClass($[1358],qx.core.Object,function(vType){qx.core.Object.call(this,false);
this.setType(vType);
});
qx.OO.addFastProperty({name:$[217],setOnlyOnce:true});
qx.OO.addFastProperty({name:$[2264],setOnlyOnce:true});
qx.OO.addFastProperty({name:$[526],setOnlyOnce:true});
qx.OO.addFastProperty({name:$[1024],setOnlyOnce:true});
qx.OO.addFastProperty({name:$[1640]});
qx.OO.addFastProperty({name:$[603],defaultValue:false,noCompute:true});
qx.OO.addFastProperty({name:$[435],defaultValue:true,noCompute:true});
qx.OO.addFastProperty({name:$[1177],defaultValue:false,noCompute:true});
qx.OO.addFastProperty({name:$[1667],defaultValue:false});
qx.Proto.preventDefault=function(){this.setDefaultPrevented(true);
};
qx.Proto.stopPropagation=function(){this.setPropagationStopped(true);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._valueOriginalTarget=null;
this._valueTarget=null;
this._valueRelatedTarget=null;
this._valueCurrentTarget=null;
return qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.event.type.DataEvent */
qx.OO.defineClass($[1882],qx.event.type.Event,function(vType,vData){qx.event.type.Event.call(this,vType);
this.setData(vData);
});
qx.OO.addFastProperty({name:$[435],defaultValue:false});
qx.OO.addFastProperty({name:$[304]});
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._valueData=null;
return qx.event.type.Event.prototype.dispose.call(this);
};




/* ID: qx.locale.Manager */
qx.OO.defineClass($[986],qx.core.Target,function(){qx.core.Target.call(this);
this._translationCatalog={};
this.setLocale(qx.core.Client.getInstance().getLocale()||this._defaultLocale);
});
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._translationCatalog=null;
qx.core.Target.prototype.dispose.call(this);
};
qx.OO.addProperty({name:$[1552]});
qx.Proto._defaultLocale=$[1020];
qx.Proto.getLanguage=function(){return this._language;
};
qx.Proto.getTerritory=function(){return this.getLocale().split($[95])[1]||$[1];
};
qx.Proto.getAvailableLocales=function(){var locales=[];
for(var locale in this._translationCatalog){if(locale!=this._defaultLocale){locales.push(locale);
}}return locales;
};
qx.Proto._extractLanguage=function(locale){var language;
var pos=locale.indexOf($[95]);
if(pos==-1){language=locale;
}else{language=locale.substring(0,pos);
}return language;
};
qx.Proto._modifyLocale=function(propValue,propOldValue,propData){this._locale=propValue;
var pos=propValue.indexOf($[95]);
this._language=this._extractLanguage(propValue);
return true;
};
qx.Proto.addTranslation=function(languageCode,translationMap){if(this._translationCatalog[languageCode]){for(var key in translationMap){this._translationCatalog[languageCode][key]=translationMap[key];
}}else{this._translationCatalog[languageCode]=translationMap;
}};
qx.Clazz.tr=function(messageId,varargs){var args=qx.lang.Array.fromArguments(arguments);
args.splice(0,1);
return new qx.locale.LocalizedString(messageId,args);
};
qx.Clazz.trn=function(singularMessageId,pluralMessageId,count,varargs){var args=qx.lang.Array.fromArguments(arguments);
args.splice(0,3);
if(count>1){return new qx.locale.LocalizedString(pluralMessageId,args);
}else{return new qx.locale.LocalizedString(singularMessageId,args);
}};
qx.Clazz.trc=function(hint,messageId,varargs){var args=qx.lang.Array.fromArguments(arguments);
args.splice(0,2);
return new qx.locale.LocalizedString(messageId,args);
};
qx.Clazz.marktr=function(messageId){return messageId;
};
qx.Proto.translate=function(messageId,args,locale){var txt;
if(locale){var language=this._extractLanguage(locale);
}else{locale=this._locale;
language=this._language;
}
if(!txt&&this._translationCatalog[locale]){txt=this._translationCatalog[locale][messageId];
}
if(!txt&&this._translationCatalog[language]){txt=this._translationCatalog[language][messageId];
}
if(!txt&&this._translationCatalog[this._defaultLocale]){txt=this._translationCatalog[this._defaultLocale][messageId];
}
if(!txt){txt=messageId;
}
if(args.length>0){txt=qx.lang.String.format(txt,args);
}return txt;
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.core.Client */
qx.OO.defineClass($[2158],Object,function(){var vRunsLocally=window.location.protocol===$[653];
var vBrowserUserAgent=navigator.userAgent;
var vBrowserVendor=navigator.vendor;
var vBrowserProduct=navigator.product;
var vBrowserPlatform=navigator.platform;
var vBrowserModeHta=false;
var vBrowser;
var vEngine=null;
var vEngineVersion=null;
var vEngineVersionMajor=0;
var vEngineVersionMinor=0;
var vEngineVersionRevision=0;
var vEngineVersionBuild=0;
var vEngineEmulation=null;
var vVersionHelper;
if(window.opera&&/Opera[\s\/]([0-9\.]*)/.test(vBrowserUserAgent)){vEngine=$[645];
vEngineVersion=RegExp.$1;
vEngineVersion=vEngineVersion.substring(0,3)+$[53]+vEngineVersion.substring(3);
vEngineEmulation=vBrowserUserAgent.indexOf($[1695])!==-1?$[186]:vBrowserUserAgent.indexOf($[1416])!==-1?$[285]:null;
}else if(typeof vBrowserVendor===$[0]&&vBrowserVendor===$[1856]&&/KHTML\/([0-9-\.]*)/.test(vBrowserUserAgent)){vEngine=$[669];
vBrowser=$[2442];
vEngineVersion=RegExp.$1;
}else if(vBrowserUserAgent.indexOf($[1514])!=-1&&/AppleWebKit\/([0-9-\.]*)/.test(vBrowserUserAgent)){vEngine=$[523];
vEngineVersion=RegExp.$1;
if(vBrowserUserAgent.indexOf($[2281])!=-1){vBrowser=$[1164];
}else if(vBrowserUserAgent.indexOf($[2006])!=-1){vBrowser=$[1195];
}else{vBrowser=$[2171];
}}else if(window.controllers&&typeof vBrowserProduct===$[0]&&vBrowserProduct===$[1818]&&/rv\:([^\);]+)(\)|;)/.test(vBrowserUserAgent)){vEngine=$[285];
vEngineVersion=RegExp.$1;
if(vBrowserUserAgent.indexOf($[1368])!=-1){vBrowser=$[954];
}else if(vBrowserUserAgent.indexOf($[2456])!=-1){vBrowser=$[2195];
}else if(vBrowserUserAgent.indexOf($[1070])!=-1){vBrowser=$[1504];
}else{vBrowser=$[1528];
}}else if(/MSIE\s+([^\);]+)(\)|;)/.test(vBrowserUserAgent)){vEngine=$[186];
vEngineVersion=RegExp.$1;
vBrowserModeHta=!window.external;
}
if(vEngineVersion){vVersionHelper=vEngineVersion.split($[53]);
vEngineVersionMajor=vVersionHelper[0]||0;
vEngineVersionMinor=vVersionHelper[1]||0;
vEngineVersionRevision=vVersionHelper[2]||0;
vEngineVersionBuild=vVersionHelper[3]||0;
}var vEngineBoxSizingAttr=vEngine==$[285]?$[1369]:vEngine==$[186]?null:$[1886];
var vEngineQuirksMode=document.compatMode!==$[2300];
var vDefaultLocale=$[2293];
var vBrowserLocale=(vEngine==$[186]?navigator.userLanguage:navigator.language).toLowerCase();
var vBrowserLocaleVariant=null;
var vBrowserLocaleVariantIndex=vBrowserLocale.indexOf($[57]);
if(vBrowserLocaleVariantIndex!=-1){vBrowserLocaleVariant=vBrowserLocale.substr(vBrowserLocaleVariantIndex+1);
vBrowserLocale=vBrowserLocale.substr(0,vBrowserLocaleVariantIndex);
}var vPlatform=$[33];
var vPlatformWindows=false;
var vPlatformMacintosh=false;
var vPlatformUnix=false;
var vPlatformOther=false;
if(vBrowserPlatform.indexOf($[557])!=-1||vBrowserPlatform.indexOf($[905])!=-1||vBrowserPlatform.indexOf($[1968])!=-1){vPlatformWindows=true;
vPlatform=$[928];
}else if(vBrowserPlatform.indexOf($[864])!=-1||vBrowserPlatform.indexOf($[889])!=-1||vBrowserPlatform.indexOf($[1219])!=-1){vPlatformMacintosh=true;
vPlatform=$[1063];
}else if(vBrowserPlatform.indexOf($[2403])!=-1||vBrowserPlatform.indexOf($[813])!=-1||vBrowserPlatform.indexOf($[2044])!=-1){vPlatformUnix=true;
vPlatform=$[1661];
}else{vPlatformOther=true;
vPlatform=$[953];
}var vGfxVml=false;
var vGfxSvg=false;
var vGfxSvgBuiltin=false;
var vGfxSvgPlugin=false;
if(vEngine==$[186]){vGfxVml=true;
}if(document.implementation&&document.implementation.hasFeature){if(document.implementation.hasFeature($[1910],$[909])){vGfxSvg=vGfxSvgBuiltin=true;
}}this._runsLocally=vRunsLocally;
this._engineName=vEngine;
this._engineNameMshtml=vEngine===$[186];
this._engineNameGecko=vEngine===$[285];
this._engineNameOpera=vEngine===$[645];
this._engineNameKhtml=vEngine===$[669];
this._engineNameWebkit=vEngine===$[523];
this._engineVersion=parseFloat(vEngineVersion);
this._engineVersionMajor=parseInt(vEngineVersionMajor);
this._engineVersionMinor=parseInt(vEngineVersionMinor);
this._engineVersionRevision=parseInt(vEngineVersionRevision);
this._engineVersionBuild=parseInt(vEngineVersionBuild);
this._engineQuirksMode=vEngineQuirksMode;
this._engineBoxSizingAttribute=vEngineBoxSizingAttr;
this._engineEmulation=vEngineEmulation;
this._defaultLocale=vDefaultLocale;
this._browserPlatform=vPlatform;
this._browserPlatformWindows=vPlatformWindows;
this._browserPlatformMacintosh=vPlatformMacintosh;
this._browserPlatformUnix=vPlatformUnix;
this._browserPlatformOther=vPlatformOther;
this._browserModeHta=vBrowserModeHta;
this._browserLocale=vBrowserLocale;
this._browserLocaleVariant=vBrowserLocaleVariant;
this._gfxVml=vGfxVml;
this._gfxSvg=vGfxSvg;
this._gfxSvgBuiltin=vGfxSvgBuiltin;
this._gfxSvgPlugin=vGfxSvgPlugin;
this._fireBugActive=(window.console&&console.log&&console.debug&&console.assert);
this._supportsTextContent=(document.documentElement.textContent!==undefined);
this._supportsInnerText=(document.documentElement.innerText!==undefined);
});
qx.Proto.getRunsLocally=function(){return this._runsLocally;
};
qx.Proto.getEngine=function(){return this._engineName;
};
qx.Proto.getVersion=function(){return this._engineVersion;
};
qx.Proto.getMajor=function(){return this._engineVersionMajor;
};
qx.Proto.getMinor=function(){return this._engineVersionMinor;
};
qx.Proto.getRevision=function(){return this._engineVersionRevision;
};
qx.Proto.getBuild=function(){return this._engineVersionBuild;
};
qx.Proto.getEmulation=function(){return this._engineEmulation;
};
qx.Proto.isMshtml=function(){return this._engineNameMshtml;
};
qx.Proto.isGecko=function(){return this._engineNameGecko;
};
qx.Proto.isOpera=function(){return this._engineNameOpera;
};
qx.Proto.isKhtml=function(){return this._engineNameKhtml;
};
qx.Proto.isWebkit=function(){return this._engineNameWebkit;
};
qx.Proto.isSafari2=function(){return this._engineNameWebkit&&(this._engineVersion<420);
};
qx.Proto.isInQuirksMode=function(){return this._engineQuirksMode;
};
qx.Proto.getLocale=function(){return this._browserLocale;
};
qx.Proto.getLocaleVariant=function(){return this._browserLocaleVariant;
};
qx.Proto.getDefaultLocale=function(){return this._defaultLocale;
};
qx.Proto.usesDefaultLocale=function(){return this._browserLocale===this._defaultLocale;
};
qx.Proto.getEngineBoxSizingAttribute=function(){return this._engineBoxSizingAttribute;
};
qx.Proto.getPlatform=function(){return this._browserPlatform;
};
qx.Proto.runsOnWindows=function(){return this._browserPlatformWindows;
};
qx.Proto.runsOnMacintosh=function(){return this._browserPlatformMacintosh;
};
qx.Proto.runsOnUnix=function(){return this._browserPlatformUnix;
};
qx.Proto.supportsVml=function(){return this._gfxVml;
};
qx.Proto.supportsSvg=function(){return this._gfxSvg;
};
qx.Proto.usesSvgBuiltin=function(){return this._gfxSvgBuiltin;
};
qx.Proto.usesSvgPlugin=function(){return this._gfxSvgPlugin;
};
qx.Proto.isFireBugActive=function(){return this._fireBugActive;
};
qx.Proto.supportsTextContent=function(){return this._supportsTextContent;
};
qx.Proto.supportsInnerText=function(){return this._supportsInnerText;
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.locale.LocalizedString */
qx.OO.defineClass($[1319],qx.core.Object,function(messageId,args,locale){qx.core.Object.call(this);
this.setId(messageId);
this._locale=locale;
var storedArguments=[];
for(var i=0;i<args.length;i++){var arg=args[i];
if(arg instanceof qx.locale.LocalizedString){storedArguments.push(arg);
}else{storedArguments.push(arg+$[1]);
}}this.setArgs(storedArguments);
});
qx.OO.addProperty({name:$[268]});
qx.OO.addProperty({name:$[1555]});
qx.Proto.toString=function(){return qx.locale.Manager.getInstance().translate(this.getId(),this.getArgs(),this._locale);
};




/* ID: qx.log.LogEventProcessor */
qx.OO.defineClass($[1821],qx.core.Object,function(){qx.core.Object.call(this);
});
qx.Proto.addFilter=function(filter){if(this._filterArr==null){this._filterArr=[];
}this._filterArr.push(filter);
};
qx.Proto.clearFilters=function(){this._filterArr=null;
};
qx.Proto.getHeadFilter=function(){return (this._filterArr==null||this._filterArr.length==0)?null:this._filterArr[0];
};
qx.Proto._getDefaultFilter=function(){var headFilter=this.getHeadFilter();
if(!(headFilter instanceof qx.log.DefaultFilter)){this.clearFilters();
headFilter=new qx.log.DefaultFilter();
this.addFilter(headFilter);
}return headFilter;
};
qx.Proto.setEnabled=function(enabled){this._getDefaultFilter().setEnabled(enabled);
};
qx.Proto.setMinLevel=function(minLevel){this._getDefaultFilter().setMinLevel(minLevel);
};
qx.Proto.decideLogEvent=function(evt){var NEUTRAL=qx.log.Filter.NEUTRAL;
if(this._filterArr!=null){for(var i=0;i<this._filterArr.length;i++){var decision=this._filterArr[i].decide(evt);
if(decision!=NEUTRAL){return decision;
}}}return NEUTRAL;
};
qx.Proto.handleLogEvent=function(evt){throw new Error("handleLogEvent is abstract");
};




/* ID: qx.log.Filter */
qx.OO.defineClass($[1140],qx.core.Object,function(){qx.core.Object.call(this);
});
qx.Proto.decide=function(evt){throw new Error("decide is abstract");
};
qx.Clazz.ACCEPT=1;
qx.Clazz.DENY=2;
qx.Clazz.NEUTRAL=3;




/* ID: qx.log.DefaultFilter */
qx.OO.defineClass($[1087],qx.log.Filter,function(){qx.log.Filter.call(this);
});
qx.OO.addProperty({name:$[545],type:$[3],defaultValue:true,allowNull:false,getAlias:$[574]});
qx.OO.addProperty({name:$[801],type:$[2],defaultValue:null});
qx.Proto.decide=function(evt){var Filter=qx.log.Filter;
if(!this.isEnabled()){return Filter.DENY;
}else if(this.getMinLevel()==null){return Filter.NEUTRAL;
}else{return (evt.level>=this.getMinLevel())?Filter.ACCEPT:Filter.DENY;
}};




/* ID: qx.log.Appender */
qx.OO.defineClass($[1754],qx.log.LogEventProcessor,function(){qx.log.LogEventProcessor.call(this);
});
qx.OO.addProperty({name:$[432],type:$[3],defaultValue:true,allowNull:false});
qx.Proto.handleLogEvent=function(evt){if(this.decideLogEvent(evt)!=qx.log.Filter.DENY){this.appendLogEvent(evt);
}};
qx.Proto.appendLogEvent=function(evt){throw new Error("appendLogEvent is abstract");
};
qx.Proto.formatLogEvent=function(evt){var Logger=qx.log.Logger;
var text=$[1];
var time=new String(new Date().getTime()-qx._LOADSTART);
while(time.length<6){time=$[36]+time;
}text+=time;
if(this.getUseLongFormat()){switch(evt.level){case Logger.LEVEL_DEBUG:text+=$[969];
break;
case Logger.LEVEL_INFO:text+=$[2079];
break;
case Logger.LEVEL_WARN:text+=$[964];
break;
case Logger.LEVEL_ERROR:text+=$[2201];
break;
case Logger.LEVEL_FATAL:text+=$[1492];
break;
}}else{text+=$[79];
}var indent=$[1];
for(var i=0;i<evt.indent;i++){indent+=$[279];
}text+=indent;
if(this.getUseLongFormat()){text+=evt.logger.getName();
if(evt.instanceId!=null){text+=$[320]+evt.instanceId+$[190];
}text+=$[79];
}if(typeof evt.message==$[0]){text+=evt.message;
}else{var obj=evt.message;
if(obj==null){text+=$[1742];
}else{text+=$[1594]+obj+$[2186];
var attrArr=new Array();
try{for(var attr in obj){attrArr.push(attr);
}}catch(exc){text+=indent+$[1463]+exc+$[628];
}attrArr.sort();
for(var i=0;i<attrArr.length;i++){try{text+=indent+$[279]+attrArr[i]+$[15]+obj[attrArr[i]]+$[69];
}catch(exc){text+=indent+$[279]+attrArr[i]+$[1747]+exc+$[628];
}}text+=indent+$[2301];
}}if(evt.throwable!=null){var thr=evt.throwable;
if(thr.name==null){text+=$[79]+thr;
}else{text+=$[79]+thr.name;
}
if(thr.message!=null){text+=$[866]+thr.message;
}
if(thr.number!=null){text+=$[1379]+thr.number+$[82];
}
if(thr.stack!=null){text+=$[69]+this._beautyStackTrace(thr.stack);
}}return text;
};
qx.Proto._beautyStackTrace=function(stack){var lineRe=/@(.+):(\d+)$/gm;
var hit;
var out=$[1];
var scriptDir=$[1321];
while((hit=lineRe.exec(stack))!=null){var url=hit[1];
var jsPos=url.indexOf(scriptDir);
var className=(jsPos==-1)?url:url.substring(jsPos+scriptDir.length).replace(/\//g,$[53]);
var lineNumber=hit[2];
out+=$[1251]+className+$[845]+lineNumber+$[69];
}return out;
};




/* ID: qx.log.WindowAppender */
qx.OO.defineClass($[2101],qx.log.Appender,function(name){qx.log.Appender.call(this);
this._id=qx.log.WindowAppender.register(this);
this._name=(name==null)?$[784]:name;
this._errorsPreventingAutoCloseCount=0;
this._logWindowOpened=false;
});
qx.OO.addProperty({name:$[450],type:$[2],defaultValue:500});
qx.OO.addProperty({name:$[1866],type:$[3],defaultValue:false,allowNull:false});
qx.OO.addProperty({name:$[1298],type:$[3],defaultValue:true,allowNull:false});
qx.Proto.openWindow=function(){if(this._logWindowOpened){return ;
}var winWidth=600;
var winHeight=350;
var winLeft=window.screen.width-winWidth;
var winTop=window.screen.height-winHeight;
var params=$[943]+$[1957]+winWidth+$[1274]+winHeight+$[2003]+winLeft+$[1985]+winTop;
this._logWindow=window.open($[1],this._name,params);
if(!this._logWindow||this._logWindow.closed){if(!this._popupBlockerWarning){alert("Couldn't open debug window. Please disable your popup blocker!");
}this._popupBlockerWarning=true;
return;
}this._popupBlockerWarning=false;
this._logWindowOpened=true;
if(this.getPopUnder()){this._logWindow.blur();
window.focus();
}var logDocument=this._logWindow.document;
logDocument.open();
logDocument.write($[1743]+this._name+$[1870]+$[1159]+this._id+$[1019]+$[1645]);
logDocument.close();
this._logElem=logDocument.getElementById($[1015]);
if(this._logEventQueue!=null){for(var i=0;i<this._logEventQueue.length;i++){this.appendLogEvent(this._logEventQueue[i]);
}this._logEventQueue=null;
}};
qx.Proto.closeWindow=function(){if(this._logWindow!=null){this._logWindow.close();
this._logWindow=null;
this._logElem=null;
this._logWindowOpened=false;
}};
qx.Proto._autoCloseWindow=function(){if(this.getAutoCloseWithErrors()||this._errorsPreventingAutoCloseCount==0){this.closeWindow();
}else{this._showMessageInLog($[1418]+this._errorsPreventingAutoCloseCount+$[1217]);
}};
qx.Proto._showMessageInLog=function(msg){var dummyEvent={message:msg,isDummyEventForMessage:true};
this.appendLogEvent(dummyEvent);
};
qx.Proto.appendLogEvent=function(evt){if(!this._logWindowOpened){this._logEventQueue=[];
this._logEventQueue.push(evt);
this.openWindow();
if(!this._logWindowOpened){return;
}}else if(this._logElem==null){this._logEventQueue.push(evt);
}else{var divElem=this._logWindow.document.createElement($[50]);
if(evt.level>=qx.log.Logger.LEVEL_ERROR){divElem.style.backgroundColor=$[2139];
if(!this.getAutoCloseWithErrors()){this._errorsPreventingAutoCloseCount+=1;
}}else if(evt.level==qx.log.Logger.LEVEL_DEBUG){divElem.style.color=$[175];
}
if(evt.isDummyEventForMessage){divElem.innerHTML=evt.message;
}else{divElem.innerHTML=qx.html.String.fromText(this.formatLogEvent(evt));
}this._logElem.appendChild(divElem);
while(this._logElem.childNodes.length>this.getMaxMessages()){this._logElem.removeChild(this._logElem.firstChild);
if(this._removedMessageCount==null){this._removedMessageCount=1;
}else{this._removedMessageCount++;
}}
if(this._removedMessageCount!=null){this._logElem.firstChild.innerHTML=$[149]+this._removedMessageCount+$[670];
}this._logWindow.scrollTo(0,this._logElem.offsetHeight);
}};
qx.Proto._modifyAutoCloseWithErrors=function(propValue,propOldValue,propData){if(!propValue&&propOldValue){this._errorsPreventingAutoCloseCount=0;
this._showMessageInLog($[1032]);
}else if(propValue&&!propOldValue){this._showMessageInLog($[1091]+this._errorsPreventingAutoCloseCount+$[1675]);
}return true;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}this._autoCloseWindow();
return qx.log.Appender.prototype.dispose.call(this);
};
qx.Clazz._nextId=1;
qx.Clazz._registeredAppenders={};
qx.Clazz.register=function(appender){var WindowAppender=qx.log.WindowAppender;
var id=WindowAppender._nextId++;
WindowAppender._registeredAppenders[id]=appender;
return id;
};
qx.Clazz.getAppender=function(id){return qx.log.WindowAppender._registeredAppenders[id];
};




/* ID: qx.log.FireBugAppender */
qx.OO.defineClass($[1112],qx.log.Appender,function(){qx.log.Appender.call(this);
});
qx.Proto.appendLogEvent=function(evt){if(typeof console!=$[613]){var log=qx.log.Logger;
var msg=this.formatLogEvent(evt);
switch(evt.level){case log.LEVEL_DEBUG:if(console.debug){console.debug(msg);
}break;
case log.LEVEL_INFO:if(console.info){console.info(msg);
}break;
case log.LEVEL_WARN:if(console.warn){console.warn(msg);
}break;
default:if(console.error){console.error(msg);
}break;
}if(evt.level>log.LEVEL_WARN&&(!evt.throwable||!evt.throwable.stack)&&console.trace){console.trace();
}}};




/* ID: qx.log.Logger */
qx.OO.defineClass($[1456],qx.log.LogEventProcessor,function(name,parentLogger){qx.log.LogEventProcessor.call(this);
this._name=name;
this._parentLogger=parentLogger;
});
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._filterArr=null;
this._appenderArr=null;
this._parentLogger=null;
return qx.log.LogEventProcessor.prototype.dispose.call(this);
};
qx.Proto.getName=function(){return this._name;
};
qx.Proto.getParentLogger=function(){return this._parentLogger;
};
qx.Proto.indent=function(){qx.log.Logger._indent++;
};
qx.Proto.unindent=function(){qx.log.Logger._indent--;
};
qx.Proto.addAppender=function(appender){if(this._appenderArr==null){this._appenderArr=[];
}this._appenderArr.push(appender);
};
qx.Proto.removeAppender=function(appender){if(this._appenderArr!=null){this._appenderArr.remove(appender);
}};
qx.Proto.removeAllAppenders=function(){this._appenderArr=null;
};
qx.Proto.handleLogEvent=function(evt){var Filter=qx.log.Filter;
var decision=Filter.NEUTRAL;
var logger=this;
while(decision==Filter.NEUTRAL&&logger!=null){decision=logger.decideLogEvent(evt);
logger=logger.getParentLogger();
}
if(decision!=Filter.DENY){this.appendLogEvent(evt);
}};
qx.Proto.appendLogEvent=function(evt){if(this._appenderArr!=null&&this._appenderArr.length!=0){for(var i=0;i<this._appenderArr.length;i++){this._appenderArr[i].handleLogEvent(evt);
}}else if(this._parentLogger!=null){this._parentLogger.appendLogEvent(evt);
}};
qx.Proto.log=function(level,msg,instanceId,exc){var evt={logger:this,level:level,message:msg,throwable:exc,indent:qx.log.Logger._indent,instanceId:instanceId};
this.handleLogEvent(evt);
};
qx.Proto.debug=function(msg,instanceId,exc){this.log(qx.log.Logger.LEVEL_DEBUG,msg,instanceId,exc);
};
qx.Proto.info=function(msg,instanceId,exc){this.log(qx.log.Logger.LEVEL_INFO,msg,instanceId,exc);
};
qx.Proto.warn=function(msg,instanceId,exc){this.log(qx.log.Logger.LEVEL_WARN,msg,instanceId,exc);
};
qx.Proto.error=function(msg,instanceId,exc){this.log(qx.log.Logger.LEVEL_ERROR,msg,instanceId,exc);
};
qx.Proto.fatal=function(msg,instanceId,exc){this.log(qx.log.Logger.LEVEL_FATAL,msg,instanceId,exc);
};
qx.Proto.measureReset=function(){if(this._totalMeasureTime!=null){this.debug("Measure reset. Total measure time: "+this._totalMeasureTime+" ms");
}this._lastMeasureTime=null;
this._totalMeasureTime=null;
};
qx.Proto.measure=function(msg,instanceId,exc){if(this._lastMeasureTime==null){msg=$[916]+msg;
}else{var delta=new Date().getTime()-this._lastMeasureTime;
if(this._totalMeasureTime==null){this._totalMeasureTime=0;
}this._totalMeasureTime+=delta;
msg=$[1218]+delta+$[1473]+msg;
}this.debug(msg,instanceId,exc);
this._lastMeasureTime=new Date().getTime();
};
qx.Proto.printStackTrace=function(){try{forced_exception.go;
}catch(exc){this.debug("Current stack trace","",exc);
}};
qx.Clazz.getClassLogger=function(clazz){var logger=clazz._logger;
if(logger==null){var classname=clazz.classname;
var splits=classname.split($[53]);
var currPackage=window;
var currPackageName=$[1];
var parentLogger=qx.log.Logger.ROOT_LOGGER;
for(var i=0;i<splits.length-1;i++){currPackage=currPackage[splits[i]];
currPackageName+=((i!=0)?$[53]:$[1])+splits[i];
if(currPackage._logger==null){currPackage._logger=new qx.log.Logger(currPackageName,parentLogger);
}parentLogger=currPackage._logger;
}logger=new qx.log.Logger(classname,parentLogger);
clazz._logger=logger;
}return logger;
};
qx.Clazz._indent=0;
qx.Clazz.LEVEL_ALL=0;
qx.Clazz.LEVEL_DEBUG=200;
qx.Clazz.LEVEL_INFO=500;
qx.Clazz.LEVEL_WARN=600;
qx.Clazz.LEVEL_ERROR=700;
qx.Clazz.LEVEL_FATAL=800;
qx.Clazz.LEVEL_OFF=1000;
qx.Clazz.ROOT_LOGGER=new qx.log.Logger("root",null);
qx.Clazz.ROOT_LOGGER.setMinLevel(qx.log.Logger.LEVEL_DEBUG);
if(typeof console!=$[613]&&console.debug){qx.Clazz.ROOT_LOGGER.addAppender(new qx.log.FireBugAppender());
}else{qx.Clazz.ROOT_LOGGER.addAppender(new qx.log.WindowAppender());
}



/* ID: qx.html.String */
qx.OO.defineClass($[2188]);
qx.Clazz.escape=function(str){return qx.dom.String.escapeEntities(str,qx.html.Entity.FROM_CHARCODE);
};
qx.Clazz.unescape=function(str){return qx.dom.String.unescapeEntities(str,qx.html.Entity.TO_CHARCODE);
};
qx.Clazz.fromText=function(str){return qx.html.String.escape(str).replace(/(  |\n)/g,function(chr){var map={"  ":$[896],"\n":$[700]};
return map[chr]||chr;
});
};
qx.Clazz.toText=function(str){return qx.html.String.unescape(str.replace(/\s+|<([^>])+>/gi,function(chr){if(/\s+/.test(chr)){return $[44];
}else if(/^<BR|^<br/gi.test(chr)){return $[69];
}else{return $[1];
}}));
};




/* ID: qx.dom.String */
qx.OO.defineClass($[1653]);
qx.Clazz.escapeEntities=function(str,charcodeToEntities){var result=[];
for(var i=0;i<str.length;i++){var chr=str.charAt(i);
var code=chr.charCodeAt(0);
if(charcodeToEntities[code]){var entity=$[89]+charcodeToEntities[code]+$[67];
}else{if(code>0x7F){entity=$[959]+code+$[67];
}else{entity=chr;
}}result.push(entity);
}return result.join($[1]);
};
qx.Clazz.unescapeEntities=function(str,entitiesToCharCode){return str.replace(/&[#\w]+;/gi,function(entity){var chr=entity;
var entity=entity.substring(1,entity.length-1);
var code=entitiesToCharCode[entity];
if(code){chr=String.fromCharCode(code);
}else{if(entity.charAt(0)==$[1241]){if(entity.charAt(1).toUpperCase()==$[1487]){var code=entity.substring(2);
if(code.match(/^[0-9A-Fa-f]+$/gi)){chr=String.fromCharCode(parseInt($[1469]+code));
}}else{var code=entity.substring(1);
if(code.match(/^\d+$/gi)){chr=String.fromCharCode(parseInt(code));
}}}}return chr;
});
};
qx.Clazz.stripTags=function(str){return str.replace(/<\/?[^>]+>/gi,$[1]);
};




/* ID: qx.html.Entity */
qx.OO.defineClass($[1697]);
qx.Clazz.TO_CHARCODE={"quot":34,"amp":38,"lt":60,"gt":62,"nbsp":160,"iexcl":161,"cent":162,"pound":163,"curren":164,"yen":165,"brvbar":166,"sect":167,"uml":168,"copy":169,"ordf":170,"laquo":171,"not":172,"shy":173,"reg":174,"macr":175,"deg":176,"plusmn":177,"sup2":178,"sup3":179,"acute":180,"micro":181,"para":182,"middot":183,"cedil":184,"sup1":185,"ordm":186,"raquo":187,"frac14":188,"frac12":189,"frac34":190,"iquest":191,"Agrave":192,"Aacute":193,"Acirc":194,"Atilde":195,"Auml":196,"Aring":197,"AElig":198,"Ccedil":199,"Egrave":200,"Eacute":201,"Ecirc":202,"Euml":203,"Igrave":204,"Iacute":205,"Icirc":206,"Iuml":207,"ETH":208,"Ntilde":209,"Ograve":210,"Oacute":211,"Ocirc":212,"Otilde":213,"Ouml":214,"times":215,"Oslash":216,"Ugrave":217,"Uacute":218,"Ucirc":219,"Uuml":220,"Yacute":221,"THORN":222,"szlig":223,"agrave":224,"aacute":225,"acirc":226,"atilde":227,"auml":228,"aring":229,"aelig":230,"ccedil":231,"egrave":232,"eacute":233,"ecirc":234,"euml":235,"igrave":236,"iacute":237,"icirc":238,"iuml":239,"eth":240,"ntilde":241,"ograve":242,"oacute":243,"ocirc":244,"otilde":245,"ouml":246,"divide":247,"oslash":248,"ugrave":249,"uacute":250,"ucirc":251,"uuml":252,"yacute":253,"thorn":254,"yuml":255,"fnof":402,"Alpha":913,"Beta":914,"Gamma":915,"Delta":916,"Epsilon":917,"Zeta":918,"Eta":919,"Theta":920,"Iota":921,"Kappa":922,"Lambda":923,"Mu":924,"Nu":925,"Xi":926,"Omicron":927,"Pi":928,"Rho":929,"Sigma":931,"Tau":932,"Upsilon":933,"Phi":934,"Chi":935,"Psi":936,"Omega":937,"alpha":945,"beta":946,"gamma":947,"delta":948,"epsilon":949,"zeta":950,"eta":951,"theta":952,"iota":953,"kappa":954,"lambda":955,"mu":956,"nu":957,"xi":958,"omicron":959,"pi":960,"rho":961,"sigmaf":962,"sigma":963,"tau":964,"upsilon":965,"phi":966,"chi":967,"psi":968,"omega":969,"thetasym":977,"upsih":978,"piv":982,"bull":8226,"hellip":8230,"prime":8242,"Prime":8243,"oline":8254,"frasl":8260,"weierp":8472,"image":8465,"real":8476,"trade":8482,"alefsym":8501,"larr":8592,"uarr":8593,"rarr":8594,"darr":8595,"harr":8596,"crarr":8629,"lArr":8656,"uArr":8657,"rArr":8658,"dArr":8659,"hArr":8660,"forall":8704,"part":8706,"exist":8707,"empty":8709,"nabla":8711,"isin":8712,"notin":8713,"ni":8715,"prod":8719,"sum":8721,"minus":8722,"lowast":8727,"radic":8730,"prop":8733,"infin":8734,"ang":8736,"and":8743,"or":8744,"cap":8745,"cup":8746,"int":8747,"there4":8756,"sim":8764,"cong":8773,"asymp":8776,"ne":8800,"equiv":8801,"le":8804,"ge":8805,"sub":8834,"sup":8835,"sube":8838,"supe":8839,"oplus":8853,"otimes":8855,"perp":8869,"sdot":8901,"lceil":8968,"rceil":8969,"lfloor":8970,"rfloor":8971,"lang":9001,"rang":9002,"loz":9674,"spades":9824,"clubs":9827,"hearts":9829,"diams":9830,"OElig":338,"oelig":339,"Scaron":352,"scaron":353,"Yuml":376,"circ":710,"tilde":732,"ensp":8194,"emsp":8195,"thinsp":8201,"zwnj":8204,"zwj":8205,"lrm":8206,"rlm":8207,"ndash":8211,"mdash":8212,"lsquo":8216,"rsquo":8217,"sbquo":8218,"ldquo":8220,"rdquo":8221,"bdquo":8222,"dagger":8224,"Dagger":8225,"permil":8240,"lsaquo":8249,"rsaquo":8250,"euro":8364};
qx.Clazz.FROM_CHARCODE=qx.lang.Object.invert(qx.Clazz.TO_CHARCODE);




/* ID: qx.html.EventRegistration */
qx.OO.defineClass($[1724]);
qx.html.EventRegistration.addEventListener=function(vElement,vType,vFunction){};
qx.html.EventRegistration.removeEventListener=function(vElement,vType,vFunction){};
if(qx.core.Client.getInstance().isMshtml()){qx.html.EventRegistration.addEventListener=function(vElement,vType,vFunction){vElement.attachEvent($[72]+vType,vFunction);
};
qx.html.EventRegistration.removeEventListener=function(vElement,vType,vFunction){vElement.detachEvent($[72]+vType,vFunction);
};
}else{qx.html.EventRegistration.addEventListener=function(vElement,vType,vFunction){vElement.addEventListener(vType,vFunction,false);
};
qx.html.EventRegistration.removeEventListener=function(vElement,vType,vFunction){vElement.removeEventListener(vType,vFunction,false);
};
}



/* ID: qx.core.Init */
qx.OO.defineClass($[1546],qx.core.Target,function(){qx.core.Target.call(this,false);
var o=this;
this.__onload=function(e){return o._onload(e);
};
this.__onbeforeunload=function(e){return o._onbeforeunload(e);
};
this.__onunload=function(e){return o._onunload(e);
};
qx.html.EventRegistration.addEventListener(window,$[84],this.__onload);
qx.html.EventRegistration.addEventListener(window,$[502],this.__onbeforeunload);
qx.html.EventRegistration.addEventListener(window,$[666],this.__onunload);
});
qx.Settings.setDefault($[404],$[517]);
qx.OO.addProperty({name:$[404],type:$[4],instance:$[777]});
qx.OO.addProperty({name:$[1606],type:$[31]});
qx.Proto._modifyApplication=function(propValue,propOldValue,propData){if(propValue){this._applicationInstance=new propValue;
}return true;
};
qx.Proto.getApplicationInstance=function(){if(!this.getApplication()){this.setApplication(qx.component.DummyApplication);
}return this._applicationInstance;
};
qx.Proto.defineInitialize=function(vFunc){this.getApplicationInstance().initialize=vFunc;
};
qx.Proto.defineMain=function(vFunc){this.getApplicationInstance().main=vFunc;
};
qx.Proto.defineFinalize=function(vFunc){this.getApplicationInstance().finalize=vFunc;
};
qx.Proto.defineClose=function(vFunc){this.getApplicationInstance().close=vFunc;
};
qx.Proto.defineTerminate=function(vFunc){this.getApplicationInstance().terminate=vFunc;
};
qx.Proto._onload=function(e){this.debug("qooxdoo "+qx.core.Version.toString());
this.debug("loaded "+qx.lang.Object.getLength(qx.OO.classes)+" classes");
var cl=qx.core.Client.getInstance();
this.debug("client: "+cl.getEngine()+"-"+cl.getMajor()+"."+cl.getMinor()+"/"+cl.getPlatform()+"/"+cl.getLocale());
if(cl.isMshtml()&&!cl.isInQuirksMode()){this.warn($[1336]);
}this.setComponent(new qx.OO.classes[this.getSetting($[404])](this));
return this.getComponent()._onload(e);
};
qx.Proto._onbeforeunload=function(e){return this.getComponent()._onbeforeunload(e);
};
qx.Proto._onunload=function(e){this.getComponent()._onunload(e);
qx.core.Object.dispose();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}qx.html.EventRegistration.removeEventListener(window,$[84],this.__onload);
qx.html.EventRegistration.removeEventListener(window,$[502],this.__onbeforeunload);
qx.html.EventRegistration.removeEventListener(window,$[666],this.__onunload);
this.__onload=this.__onbeforeunload=this.__onunload=null;
if(this._applicationInstance){this._applicationInstance.dispose();
this._applicationInstance=null;
}qx.core.Target.prototype.dispose.call(this);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;
qx.Clazz.getInstance();




/* ID: qx.component.AbstractComponent */
qx.OO.defineClass($[2077],qx.core.Target,function(){qx.core.Target.call(this);
});
qx.Proto.initialize=function(){};
qx.Proto.main=function(){};
qx.Proto.finalize=function(){};
qx.Proto.close=function(){};
qx.Proto.terminate=function(){};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.component.init.AbstractInitComponent */
qx.OO.defineClass($[1234],qx.component.AbstractComponent,function(){qx.component.AbstractComponent.call(this);
});
qx.Proto.initialize=function(e){return qx.core.Init.getInstance().getApplicationInstance().initialize(e);
};
qx.Proto.main=function(e){return qx.core.Init.getInstance().getApplicationInstance().main(e);
};
qx.Proto.finalize=function(e){return qx.core.Init.getInstance().getApplicationInstance().finalize(e);
};
qx.Proto.close=function(e){return qx.core.Init.getInstance().getApplicationInstance().close(e);
};
qx.Proto.terminate=function(e){return qx.core.Init.getInstance().getApplicationInstance().terminate(e);
};




/* ID: qx.component.init.BasicInitComponent */
qx.OO.defineClass($[777],qx.component.init.AbstractInitComponent,function(){qx.component.init.AbstractInitComponent.call(this);
});
qx.Proto._onload=function(e){this.initialize(e);
this.main(e);
this.finalize(e);
};
qx.Proto._onbeforeunload=function(e){this.close(e);
};
qx.Proto._onunload=function(e){this.terminate(e);
};




/* ID: qx.component.AbstractApplication */
qx.OO.defineClass($[830],qx.component.AbstractComponent,function(){qx.component.AbstractComponent.call(this);
});




/* ID: qx.component.DummyApplication */
qx.OO.defineClass($[1596],qx.component.AbstractApplication,function(){qx.component.AbstractApplication.call(this);
});
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.core.Version */
qx.OO.defineClass($[1441]);
qx.Clazz.major=0;
qx.Clazz.minor=0;
qx.Clazz.revision=0;
qx.Clazz.state=$[1];
qx.Clazz.svn=0;
qx.Clazz.folder=$[1];
qx.Clazz.toString=function(){var vClass=qx.core.Version;
return vClass.major+$[53]+vClass.minor+(vClass.revision==0?$[1]:$[53]+vClass.revision)+(vClass.state==$[1]?$[1]:$[57]+vClass.state)+(vClass.svn==0?$[1]:$[2268]+vClass.svn+$[82])+(vClass.folder==$[1]?$[1]:$[796]+vClass.folder+$[190]);
};
qx.Clazz._init=function(){var vClass=qx.core.Version;
var vSplit=qx.VERSION.split($[44]);
var vVersion=vSplit.shift();
var vInfos=vSplit.join($[44]);
if(/([0-9]+)\.([0-9]+)(\.([0-9]))?(-([a-z0-9]+))?/.test(vVersion)){vClass.major=(RegExp.$1!=$[1]?parseInt(RegExp.$1):0);
vClass.minor=(RegExp.$2!=$[1]?parseInt(RegExp.$2):0);
vClass.revision=(RegExp.$4!=$[1]?parseInt(RegExp.$4):0);
vClass.state=typeof RegExp.$6==$[0]?RegExp.$6:$[1];
}
if(/(\(r([0-9]+)\))?(\s\[(\w+)\])?/.test(vInfos)){vClass.svn=(RegExp.$2!=$[1]?parseInt(RegExp.$2):0);
vClass.folder=typeof RegExp.$4==$[0]?RegExp.$4:$[1];
}};
qx.Clazz._init();




/* ID: qx.renderer.color.ColorCache */
qx.OO.defineClass($[1838]);
qx.renderer.color.ColorCache=function(propValue){var propKey;
var propKeyAsStyle=false;
switch(typeof propValue){case $[0]:if(propValue!=$[1]){propValue=propKey=propValue.toLowerCase();
break;
}return propValue;
case $[2]:if(propValue>=0&&propValue<=255){propKey=propValue.toString();
break;
}return propValue;
case $[4]:if(propValue==null||propValue instanceof qx.renderer.color.Color){return propValue;
}if(typeof propValue.join===$[31]&&propValue.length==3){propKey=$[630]+propValue.join($[23])+$[82];
propKeyAsStyle=true;
break;
}default:return propValue;
}
if(qx.renderer.color.ColorCache._data[propKey]){return qx.renderer.color.ColorCache._data[propKey];
}var vColorObject=qx.renderer.color.ColorCache._data[propKey]=qx.renderer.color.Color.themedNames[propValue]?new qx.renderer.color.ColorObject(propValue):new qx.renderer.color.Color(propValue);
if(propKeyAsStyle){vColorObject._style=propKey;
}return vColorObject;
};
qx.renderer.color.ColorCache._data={};




/* ID: qx.renderer.color.Color */
qx.OO.defineClass($[137],qx.core.Object,function(vValue){if(vValue!=null){this.setValue(vValue);
}qx.core.Object.call(this);
});
qx.Clazz.rgb2style=function(r,g,b){return $[630]+r+$[23]+g+$[23]+b+$[82];
};
qx.renderer.color.Color.m_hex=[$[36],$[298],$[403],$[420],$[374],$[388],$[354],$[365],$[367],$[157],$[242],$[2117],$[2238],$[695],$[448],$[1666]];
qx.renderer.color.Color.m_rgb={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,a:10,b:11,c:12,d:13,e:14,f:15};
qx.renderer.color.Color.r_hex3=/^#([0-9a-f]{1})([0-9a-f]{1})([0-9a-f]{1})$/;
qx.renderer.color.Color.r_hex6=/^#([0-9a-f]{1})([0-9a-f]{1})([0-9a-f]{1})([0-9a-f]{1})([0-9a-f]{1})([0-9a-f]{1})$/;
qx.renderer.color.Color.r_cssrgb=/^rgb\(\s*([0-9]{1,3}\.{0,1}[0-9]*)\s*,\s*([0-9]{1,3}\.{0,1}[0-9]*)\s*,\s*([0-9]{1,3}\.{0,1}[0-9]*)\s*\)$/;
qx.renderer.color.Color.r_rgb=/^[0-9]{1,3},[0-9]{1,3},[0-9]{1,3}$/;
qx.renderer.color.Color.r_number=/^[0-9]{1,3}\.{0,1}[0-9]*$/;
qx.renderer.color.Color.r_percent=/^[0-9]{1,3}\.{0,1}[0-9]*%$/;
qx.Clazz.htmlNames={transparent:[-1,-1,-1],aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]};
qx.Clazz.themedNames={activeborder:1,activecaption:1,appworkspace:1,background:1,buttonface:1,buttonhighlight:1,buttonshadow:1,buttontext:1,captiontext:1,graytext:1,highlight:1,highlighttext:1,inactiveborder:1,inactivecaption:1,inactivecaptiontext:1,infobackground:1,infotext:1,menu:1,menutext:1,scrollbar:1,threeddarkshadow:1,threedface:1,threedhighlight:1,threedlightshadow:1,threedshadow:1,window:1,windowframe:1,windowtext:1};
qx.Clazz.fromString=function(vDefString){return new qx.renderer.color.Color(vDefString);
};
qx.Clazz.fromRandom=function(){return new qx.renderer.color.Color([Math.round(255*Math.random()),Math.round(255*Math.random()),Math.round(255*Math.random())]);
};
qx.Proto._value=null;
qx.Proto._style=null;
qx.Proto._isRgbColor=false;
qx.Proto._isHtmlColor=false;
qx.Proto._isThemedColor=false;
qx.Proto._red=null;
qx.Proto._green=null;
qx.Proto._blue=null;
qx.Proto._hex=null;
qx.Proto.add=qx.lang.Function.returnTrue;
qx.Proto.remove=qx.lang.Function.returnTrue;
qx.Proto.isRgbColor=function(){return this._isRgbColor;
};
qx.Proto.isHtmlColor=function(){return this._isHtmlColor;
};
qx.Proto.isThemedColor=function(){return this._isThemedColor;
};
qx.Proto.setValue=function(vValue){this._normalize(vValue);
if(this._isThemedColor){throw new Error("Please use qx.renderer.color.ColorObject for themed colors!");
}};
qx.Proto.getValue=function(){return this._value||$[1];
};
qx.Proto.getStyle=function(){if(this._style==null){this._evalStyle();
}return this._style;
};
qx.Proto._evalStyle=function(){if(this._isRgbColor){this._style=qx.renderer.color.Color.rgb2style(this._red,this._green,this._blue);
}else if(this._isThemedColor){this._applyThemedValue();
}else if(this._isHtmlColor){this._style=this._value;
}else if(this._value!=null){this.error("Could not handle non-rgb colors :"+this.getValue()+"!");
}};
qx.Proto.getHex=function(){if(this._hex==null){this._evalHex();
}return this._hex;
};
qx.Proto._evalHex=function(){var a=[$[277]];
var r=this.getRed();
a.push(qx.renderer.color.Color.m_hex[Math.floor(r/16)]);
a.push(qx.renderer.color.Color.m_hex[Math.floor(r%16)]);
var g=this.getGreen();
a.push(qx.renderer.color.Color.m_hex[Math.floor(g/16)]);
a.push(qx.renderer.color.Color.m_hex[Math.floor(g%16)]);
var b=this.getBlue();
a.push(qx.renderer.color.Color.m_hex[Math.floor(b/16)]);
a.push(qx.renderer.color.Color.m_hex[Math.floor(b%16)]);
this._hex=a.join($[1]);
};
qx.Proto.getRed=function(){if(this._red==null){this._evalRgb();
}return this._red;
};
qx.Proto.getGreen=function(){if(this._green==null){this._evalRgb();
}return this._green;
};
qx.Proto.getBlue=function(){if(this._blue==null){this._evalRgb();
}return this._blue;
};
qx.Proto._evalRgb=function(){if(this._isThemedColor){this._applyThemedValue();
}else if(this._isHtmlColor){var a=qx.renderer.color.Color.htmlNames[this._value];
this._red=a[0];
this._green=a[1];
this._blue=a[2];
}else{throw new Error("_evalRgb needs implementation!");
}};
qx.Proto._normalize=function(vInValue){this._isThemedColor=this._isRgbColor=this._isHtmlColor=false;
this._hex=null;
var invalid=new Error("Invalid color: "+vInValue);
switch(typeof vInValue){case $[0]:vInValue=vInValue.toLowerCase();
if(qx.renderer.color.Color.htmlNames[vInValue]){this._isHtmlColor=true;
}else if(qx.renderer.color.Color.themedNames[vInValue]){this._isThemedColor=true;
}else if(qx.renderer.color.Color.r_cssrgb.test(vInValue)){this._red=parseInt(RegExp.$1);
this._green=parseInt(RegExp.$2);
this._blue=parseInt(RegExp.$3);
this._isRgbColor=true;
}else if(qx.renderer.color.Color.r_hex3.test(vInValue)){this._hex=vInValue;
this._red=(qx.renderer.color.Color.m_rgb[RegExp.$1]*16)+qx.renderer.color.Color.m_rgb[RegExp.$1];
this._green=(qx.renderer.color.Color.m_rgb[RegExp.$2]*16)+qx.renderer.color.Color.m_rgb[RegExp.$2];
this._blue=(qx.renderer.color.Color.m_rgb[RegExp.$3]*16)+qx.renderer.color.Color.m_rgb[RegExp.$3];
this._isRgbColor=true;
}else if(qx.renderer.color.Color.r_hex6.test(vInValue)){this._hex=vInValue;
this._red=(qx.renderer.color.Color.m_rgb[RegExp.$1]*16)+qx.renderer.color.Color.m_rgb[RegExp.$2];
this._green=(qx.renderer.color.Color.m_rgb[RegExp.$3]*16)+qx.renderer.color.Color.m_rgb[RegExp.$4];
this._blue=(qx.renderer.color.Color.m_rgb[RegExp.$5]*16)+qx.renderer.color.Color.m_rgb[RegExp.$6];
this._isRgbColor=true;
}else{throw invalid;
}break;
case $[2]:if(vInValue>=0&&vInValue<=255){this._red=this._green=this._blue=vInValue;
this._isRgbColor=true;
}else{throw invalid;
}break;
case $[4]:if(qx.util.Validation.isValidArray(vInValue)&&vInValue.length==3){this._red=vInValue[0];
this._green=vInValue[1];
this._blue=vInValue[2];
this._isRgbColor=true;
break;
}default:throw invalid;
}
if(!this._isRgbColor){this._red=this._green=this._blue=null;
this._style=this._isHtmlColor?vInValue:null;
}else{this._style=null;
if(!(this._red>=0&&this._red<=255&&this._green>=0&&this._green<=255&&this._blue>=0&&this._blue<=255)){throw invalid;
}}return this._value=vInValue;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}delete this._value;
delete this._style;
delete this._red;
delete this._green;
delete this._blue;
delete this._isRgbColor;
delete this._isHtmlColor;
delete this._isThemedColor;
return qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.util.Validation */
qx.OO.defineClass($[2066]);
qx.util.Validation.isValid=function(v){switch(typeof v){case $[41]:return false;
case $[4]:return v!==null;
case $[0]:return v!==$[1];
case $[2]:return !isNaN(v);
case $[31]:case $[3]:return true;
}return false;
};
qx.util.Validation.isInvalid=function(v){switch(typeof v){case $[41]:return true;
case $[4]:return v===null;
case $[0]:return v===$[1];
case $[2]:return isNaN(v);
case $[31]:case $[3]:return false;
}return true;
};
qx.util.Validation.isValidNumber=function(v){return typeof v===$[2]&&!isNaN(v);
};
qx.util.Validation.isInvalidNumber=function(v){return typeof v!==$[2]||isNaN(v);
};
qx.util.Validation.isValidString=function(v){return typeof v===$[0]&&v!==$[1];
};
qx.util.Validation.isInvalidString=function(v){return typeof v!==$[0]||v===$[1];
};
qx.util.Validation.isValidArray=function(v){return typeof v===$[4]&&v!==null&&v instanceof Array;
};
qx.util.Validation.isInvalidArray=function(v){return typeof v!==$[4]||v===null||!(v instanceof Array);
};
qx.util.Validation.isValidObject=function(v){return typeof v===$[4]&&v!==null&&!(v instanceof Array);
};
qx.util.Validation.isInvalidObject=function(v){return typeof v!==$[4]||v===null||v instanceof Array;
};
qx.util.Validation.isValidNode=function(v){return typeof v===$[4]&&v!==null;
};
qx.util.Validation.isInvalidNode=function(v){return typeof v!==$[4]||v===null;
};
qx.util.Validation.isValidElement=function(v){return typeof v===$[4]&&v!==null||v.nodeType!==1;
};
qx.util.Validation.isInvalidElement=function(v){return typeof v!==$[4]||v===null||v.nodeType!==1;
};
qx.util.Validation.isValidFunction=function(v){return typeof v===$[31];
};
qx.util.Validation.isInvalidFunction=function(v){return typeof v!==$[31];
};
qx.util.Validation.isValidBoolean=function(v){return typeof v===$[3];
};
qx.util.Validation.isInvalidBoolean=function(v){return typeof v!==$[3];
};
qx.util.Validation.isValidStringOrNumber=function(v){switch(typeof v){case $[0]:return v!==$[1];
case $[2]:return !isNaN(v);
}return false;
};
qx.util.Validation.isInvalidStringOrNumber=function(v){switch(typeof v){case $[0]:return v===$[1];
case $[2]:return isNaN(v);
}return false;
};




/* ID: qx.renderer.color.ColorObject */
qx.OO.defineClass($[1894],qx.renderer.color.Color,function(vValue){this.setValue(vValue);
if(qx.manager.object.ColorManager.getInstance().has(this.getValue())){return qx.manager.object.ColorManager.getInstance().get(this.getValue());
}qx.core.Object.call(this);
qx.manager.object.ColorManager.getInstance().add(this);
this._dependentObjects={};
});
qx.renderer.color.ColorObject.fromString=function(vDefString){return new qx.renderer.color.ColorObject(vDefString);
};
qx.Proto._updateTheme=function(vTheme){if(!this._isThemedColor){throw new Error("Could not redefine themed value of non os colors!");
}this._applyThemedValue();
this._syncObjects();
};
qx.Proto._applyThemedValue=function(){var vTheme=qx.manager.object.ColorManager.getInstance().getColorTheme();
var vRgb=vTheme.getValueByName(this._value);
if(vRgb){this._red=vRgb[0];
this._green=vRgb[1];
this._blue=vRgb[2];
}this._style=vTheme.getStyleByName(this._value);
this._hex=null;
};
qx.Proto._syncObjects=function(){for(var i in this._dependentObjects){this._dependentObjects[i]._updateColors(this,this._style);
}};
qx.Proto.setValue=function(vValue){this._normalize(vValue);
this._syncObjects();
};
qx.Proto.add=function(vObject){this._dependentObjects[vObject.toHashCode()]=vObject;
};
qx.Proto.remove=function(vObject){delete this._dependentObjects[vObject.toHashCode()];
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._dependentObjects){for(var i in this._dependentObjects){delete this._dependentObjects[i];
}delete this._dependentObjects;
}return qx.renderer.color.Color.prototype.dispose.call(this);
};




/* ID: qx.manager.object.ObjectManager */
qx.OO.defineClass($[1394],qx.core.Target,function(){qx.core.Target.call(this);
this._objects={};
});
qx.Proto.add=function(vObject){if(this.getDisposed()){return;
}this._objects[vObject.toHashCode()]=vObject;
return true;
};
qx.Proto.remove=function(vObject){if(this.getDisposed()){return;
}delete this._objects[vObject.toHashCode()];
return true;
};
qx.Proto.has=function(vObject){return this._objects[vObject.toHashCode()]!=null;
};
qx.Proto.get=function(vObject){return this._objects[vObject.toHashCode()];
};
qx.Proto.getAll=function(){return this._objects;
};
qx.Proto.enableAll=function(){for(var vHashCode in this._objects){this._objects[vHashCode].setEnabled(true);
}};
qx.Proto.disableAll=function(){for(var vHashCode in this._objects){this._objects[vHashCode].setEnabled(false);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this._objects){for(var i in this._objects){delete this._objects[i];
}delete this._objects;
}return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.manager.object.ColorManager */
qx.OO.defineClass($[1095],qx.manager.object.ObjectManager,function(){qx.manager.object.ObjectManager.call(this);
this._colorThemes={};
this._dependentObjects={};
});
qx.Settings.setDefault($[334],$[780]);
qx.OO.addProperty({name:$[334],type:$[4],allowNull:false,instance:$[617]});
qx.Proto.registerColorTheme=function(vThemeClass){this._colorThemes[vThemeClass.classname]=vThemeClass;
if(vThemeClass.classname==this.getSetting($[334])){this.setColorTheme(vThemeClass.getInstance());
}};
qx.Proto.setColorThemeById=function(vId){this.setColorTheme(this._colorThemes[vId].getInstance());
};
qx.Proto.add=function(oObject){var vValue=oObject.getValue();
this._objects[vValue]=oObject;
if(oObject.isThemedColor()){this._dependentObjects[vValue]=oObject;
}};
qx.Proto.remove=function(oObject){var vValue=oObject.getValue();
delete this._objects[vValue];
delete this._dependentObjects[vValue];
};
qx.Proto.has=function(vValue){return this._objects[vValue]!=null;
};
qx.Proto.get=function(vValue){return this._objects[vValue];
};
qx.Proto._modifyColorTheme=function(propValue,propOldValue,propData){propValue.compile();
for(var i in this._dependentObjects){this._dependentObjects[i]._updateTheme(propValue);
}return true;
};
qx.Proto.createThemeList=function(vParent,xCor,yCor){var vButton;
var vThemes=this._colorThemes;
var vIcon=$[2170];
var vPrefix=$[2184];
var vEvent=$[38];
for(var vId in vThemes){var vObj=vThemes[vId].getInstance();
var vButton=new qx.ui.form.Button(vPrefix+vObj.getTitle(),vIcon);
vButton.setLocation(xCor,yCor);
vButton.addEventListener(vEvent,new Function($[850]+vId+$[373]));
vParent.add(vButton);
yCor+=30;
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._colorThemes=null;
for(var i in this._dependentObjects){delete this._dependentObjects[i];
}delete this._dependentObjects;
return qx.manager.object.ObjectManager.prototype.dispose.call(this);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.renderer.theme.ColorTheme */
qx.OO.defineClass($[617],qx.core.Object,function(vTitle){qx.core.Object.call(this);
this._compiledColors={};
this.setTitle(vTitle);
});
qx.OO.addProperty({name:$[170],type:$[0],allowNull:false,defaultValue:$[1]});
qx.Proto._needsCompilation=true;
qx.Proto._colors={};
qx.Proto.getValueByName=function(vName){return this._colors[vName]||$[1];
};
qx.Proto.getStyleByName=function(vName){return this._compiledColors[vName]||$[1];
};
qx.Proto.compile=function(){if(!this._needsCompilation){return;
}
for(var vName in qx.renderer.color.Color.themedNames){this._compileValue(vName);
}this._needsCompilation=false;
};
qx.Proto._compileValue=function(vName){var v=this._colors[vName];
this._compiledColors[vName]=v?qx.renderer.color.Color.rgb2style.apply(this,this._colors[vName]):vName;
};
qx.Proto._register=function(){return qx.manager.object.ColorManager.getInstance().registerTheme(this);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}delete this._colors;
delete this._compiledColors;
qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.theme.color.WindowsRoyale */
qx.OO.defineClass($[780],qx.renderer.theme.ColorTheme,function(){qx.renderer.theme.ColorTheme.call(this,$[1440]);
});
qx.Proto._colors=qx.lang.Object.carefullyMergeWith({activeborder:[212,208,200],activecaption:[51,94,168],appworkspace:[128,128,128],background:[0,0,64],buttonface:[235,233,237],buttonhighlight:[255,255,255],buttonshadow:[167,166,170],buttontext:[0,0,0],captiontext:[255,255,255],graytext:[167,166,170],highlight:[51,94,168],highlighttext:[255,255,255],inactiveborder:[212,208,200],inactivecaption:[111,161,217],inactivecaptiontext:[255,255,255],infobackground:[255,255,225],infotext:[0,0,0],menu:[255,255,255],menutext:[0,0,0],scrollbar:[212,208,200],threeddarkshadow:[133,135,140],threedface:[235,233,237],threedhighlight:[255,255,255],threedlightshadow:[220,223,228],threedshadow:[167,166,170],window:[255,255,255],windowframe:[0,0,0],windowtext:[0,0,0]},qx.Super.prototype._colors);
qx.Clazz.getInstance=qx.lang.Function.returnInstance;
qx.manager.object.ColorManager.getInstance().registerColorTheme(qx.Clazz);




/* ID: qx.renderer.border.BorderCache */
qx.OO.defineClass($[1060]);
qx.renderer.border.BorderCache=function(propValue,propData){if(qx.util.Validation.isValidArray(propValue)&&propValue.length>1){propString=$[1];
for(var i=0,l=propValue.length,p;i<l;i++){p=propValue[i];
propString+=p;
if(typeof p===$[2]){propString+=$[21];
}
if(i<(l-1)){propString+=$[44];
}}propValue=propString;
}else if(qx.util.Validation.isInvalidString(propValue)){return propValue;
}
if(qx.renderer.border.BorderCache._data[propValue]){return qx.renderer.border.BorderCache._data[propValue];
}return qx.renderer.border.BorderCache._data[propValue]=qx.renderer.border.BorderObject.fromString(propValue);
};
qx.renderer.border.BorderCache._data={};




/* ID: qx.renderer.border.Border */
qx.OO.defineClass($[738],qx.core.Object,function(vWidth,vStyle,vColor){qx.core.Object.call(this);
this._themedEdges={};
this._initCache();
if(vWidth!=null){this.setWidth(vWidth);
if(vStyle!=null){this.setStyle(vStyle);
}
if(vColor!=null){this.setColor(vColor);
}}});
qx.Clazz.enhancedCrossBrowserMode=true;
qx.Proto._needsCompilationTop=true;
qx.Proto._needsCompilationRight=true;
qx.Proto._needsCompilationBottom=true;
qx.Proto._needsCompilationLeft=true;
qx.OO.addProperty({name:$[2428],type:$[2],defaultValue:0,impl:$[473]});
qx.OO.addProperty({name:$[1996],type:$[2],defaultValue:0,impl:$[459]});
qx.OO.addProperty({name:$[880],type:$[2],defaultValue:0,impl:$[347]});
qx.OO.addProperty({name:$[1613],type:$[2],defaultValue:0,impl:$[385]});
qx.OO.addProperty({name:$[1786],type:$[0],defaultValue:$[33],impl:$[473]});
qx.OO.addProperty({name:$[2451],type:$[0],defaultValue:$[33],impl:$[459]});
qx.OO.addProperty({name:$[1285],type:$[0],defaultValue:$[33],impl:$[347]});
qx.OO.addProperty({name:$[2061],type:$[0],defaultValue:$[33],impl:$[385]});
qx.OO.addProperty({name:$[1378],impl:$[473],type:$[4],instance:$[137],convert:qx.renderer.color.ColorCache});
qx.OO.addProperty({name:$[2098],impl:$[459],type:$[4],instance:$[137],convert:qx.renderer.color.ColorCache});
qx.OO.addProperty({name:$[1209],impl:$[347],type:$[4],instance:$[137],convert:qx.renderer.color.ColorCache});
qx.OO.addProperty({name:$[1622],impl:$[385],type:$[4],instance:$[137],convert:qx.renderer.color.ColorCache});
qx.renderer.border.Border.fromString=function(vDefString){var vBorder=new qx.renderer.border.Border;
var vAllParts=vDefString.split(/\s+/);
var vPart,vTemp;
for(var i=0;i<vAllParts.length;i++){switch(vPart=vAllParts[i]){case $[92]:case $[99]:case $[60]:case $[65]:case $[9]:case $[509]:case $[646]:case $[554]:case $[33]:vBorder.setStyle(vPart);
break;
default:vTemp=parseFloat(vPart);
if(vTemp==vPart||qx.lang.String.contains(vPart,$[21])){vBorder.setWidth(vTemp);
}else{vPart=vPart.toLowerCase();
vBorder.setColor(new qx.renderer.color.Color(vPart));
}break;
}}return vBorder;
};
qx.Proto.addListenerWidget=qx.lang.Function.returnTrue;
qx.Proto.removeListenerWidget=qx.lang.Function.returnTrue;
qx.Proto._sync=qx.lang.Function.returnTrue;
qx.Proto.setWidth=function(vWidth){this.setTopWidth(vWidth);
this.setRightWidth(vWidth);
this.setBottomWidth(vWidth);
this.setLeftWidth(vWidth);
return true;
};
qx.Proto.setStyle=function(vStyle){this.setTopStyle(vStyle);
this.setRightStyle(vStyle);
this.setBottomStyle(vStyle);
this.setLeftStyle(vStyle);
return true;
};
qx.Proto.setColor=function(vColor){this.setTopColor(vColor);
this.setRightColor(vColor);
this.setBottomColor(vColor);
this.setLeftColor(vColor);
return true;
};
qx.Proto.setTop=function(vWidth,vStyle,vColor){this.setTopWidth(vWidth);
this.setTopStyle(vStyle);
this.setTopColor(vColor);
return true;
};
qx.Proto.setRight=function(vWidth,vStyle,vColor){this.setRightWidth(vWidth);
this.setRightStyle(vStyle);
this.setRightColor(vColor);
return true;
};
qx.Proto.setBottom=function(vWidth,vStyle,vColor){this.setBottomWidth(vWidth);
this.setBottomStyle(vStyle);
this.setBottomColor(vColor);
return true;
};
qx.Proto.setLeft=function(vWidth,vStyle,vColor){this.setLeftWidth(vWidth);
this.setLeftStyle(vStyle);
this.setLeftColor(vColor);
return true;
};
if(qx.core.Client.getInstance().isGecko()){qx.Proto._initCache=function(){this._defsX={borderLeft:$[1],borderRight:$[1],MozBorderLeftColors:$[1],MozBorderRightColors:$[1]};
this._defsY={borderTop:$[1],borderBottom:$[1],MozBorderTopColors:$[1],MozBorderBottomColors:$[1]};
};
}else{qx.Proto._initCache=function(){this._defsX={borderLeft:$[1],borderRight:$[1]};
this._defsY={borderTop:$[1],borderBottom:$[1]};
if(qx.renderer.border.Border.enhancedCrossBrowserMode){this._enhancedDefsX={borderLeft:$[1],borderRight:$[1]};
this._enhancedDefsY={borderTop:$[1],borderBottom:$[1]};
}};
}if(qx.core.Client.getInstance().isGecko()||qx.renderer.border.Border.enhancedCrossBrowserMode){qx.Proto._addToThemed3DColors=function(vProp){var needRegistering=qx.lang.Object.isEmpty(this._themedEdges);
this._themedEdges[vProp]=true;
if(needRegistering){(new qx.renderer.color.ColorObject($[694])).add(this);
(new qx.renderer.color.ColorObject($[543])).add(this);
(new qx.renderer.color.ColorObject($[276])).add(this);
(new qx.renderer.color.ColorObject($[594])).add(this);
}};
qx.Proto._removeFromThemed3DColors=function(vProp){delete this._themedEdges[vProp];
if(qx.lang.Object.isEmpty(this._themedEdges)){(new qx.renderer.color.ColorObject($[694])).remove(this);
(new qx.renderer.color.ColorObject($[543])).remove(this);
(new qx.renderer.color.ColorObject($[276])).remove(this);
(new qx.renderer.color.ColorObject($[594])).remove(this);
}};
}else{qx.Proto._addToThemed3DColors=function(vProp){var needRegistering=qx.lang.Object.isEmpty(this._themedEdges);
this._themedEdges[vProp]=true;
if(needRegistering){(new qx.renderer.color.ColorObject($[276])).add(this);
}};
qx.Proto._removeFromThemed3DColors=function(vProp){delete this._themedEdges[vProp];
if(qx.lang.Object.isEmpty(this._themedEdges)){(new qx.renderer.color.ColorObject($[276])).remove(this);
}};
}qx.renderer.border.Border.data={1:{outset:{top:[$[64]],right:[$[49]],bottom:[$[49]],left:[$[64]]},inset:{top:[$[49]],right:[$[64]],bottom:[$[64]],left:[$[49]]}},2:{outset:{top:[$[124],$[64]],right:[$[210],$[49]],bottom:[$[210],$[49]],left:[$[124],$[64]]},inset:{top:[$[49],$[210]],right:[$[64],$[124]],bottom:[$[64],$[124]],left:[$[49],$[210]]},ridge:{top:[$[64],$[49]],right:[$[49],$[64]],bottom:[$[49],$[64]],left:[$[64],$[49]]},groove:{top:[$[49],$[64]],right:[$[64],$[49]],bottom:[$[64],$[49]],left:[$[49],$[64]]}}};
qx.Proto._generateDefString=function(vWidth,vStyle,vColor){if(typeof vWidth!==$[2]||vWidth<0){return $[1];
}var vArr=[vWidth+$[21]];
if(vStyle!=null){vArr.push(vStyle);
}
if(vColor instanceof qx.renderer.color.Color){vColor=vColor.getStyle();
}
if(vColor!=null){vArr.push(vColor);
}return vArr.join($[44]);
};
qx.Proto._updateColors=function(vColorObject,vNewValue){this._needsCompilationTop=true;
this._needsCompilationRight=true;
this._needsCompilationBottom=true;
this._needsCompilationLeft=true;
this._sync($[12]);
this._sync($[10]);
this._sync($[16]);
this._sync($[11]);
};
qx.Proto._handleColorRegistration=function(propValue,propOldValue,propData){if(qx.lang.String.contains(propData.name,$[2388])){switch(propValue){case $[65]:case $[60]:case $[92]:case $[99]:this._addToThemed3DColors(propData.name);
break;
default:this._removeFromThemed3DColors(propData.name);
}}
if(qx.lang.String.contains(propData.name,$[2198])){if(propOldValue instanceof qx.renderer.color.ColorObject){switch(propOldValue){case this.getTopColor():case this.getRightColor():case this.getBottomColor():case this.getLeftColor():break;
default:propOldValue.remove(this);
}}
if(propValue instanceof qx.renderer.color.ColorObject){propValue.add(this);
}}};
qx.Proto._modifyBorderTopProperty=function(propValue,propOldValue,propData){this._handleColorRegistration(propValue,propOldValue,propData);
this._needsCompilationTop=true;
this._useEnhancedCrossBrowserMode=null;
this._sync($[12]);
return true;
};
qx.Proto._modifyBorderRightProperty=function(propValue,propOldValue,propData){this._handleColorRegistration(propValue,propOldValue,propData);
this._needsCompilationRight=true;
this._useEnhancedCrossBrowserMode=null;
this._sync($[10]);
return true;
};
qx.Proto._modifyBorderBottomProperty=function(propValue,propOldValue,propData){this._handleColorRegistration(propValue,propOldValue,propData);
this._needsCompilationBottom=true;
this._useEnhancedCrossBrowserMode=null;
this._sync($[16]);
return true;
};
qx.Proto._modifyBorderLeftProperty=function(propValue,propOldValue,propData){this._handleColorRegistration(propValue,propOldValue,propData);
this._needsCompilationLeft=true;
this._useEnhancedCrossBrowserMode=null;
this._sync($[11]);
return true;
};
qx.Proto.getUseEnhancedCrossBrowserMode=function(){if(this._useEnhancedCrossBrowserMode==null){this._useEnhancedCrossBrowserMode=this._evalUseEnhancedCrossBrowserMode();
}return this._useEnhancedCrossBrowserMode;
};
qx.Proto._evalUseEnhancedCrossBrowserMode=function(){if(this.getTopWidth()==2){switch(this.getTopStyle()){case $[65]:case $[60]:case $[92]:case $[99]:return true;
}}
if(this.getRightWidth()==2){switch(this.getRightStyle()){case $[65]:case $[60]:case $[92]:case $[99]:return true;
}}
if(this.getBottomWidth()==2){switch(this.getBottomStyle()){case $[65]:case $[60]:case $[92]:case $[99]:return true;
}}
if(this.getLeftWidth()==2){switch(this.getLeftStyle()){case $[65]:case $[60]:case $[92]:case $[99]:return true;
}}return false;
};
qx.Proto._applyWidget=function(o){this._applyWidgetX(o);
this._applyWidgetY(o);
};
qx.Proto._resetWidget=function(o){this._resetWidgetX(o);
this._resetWidgetY(o);
};
qx.Proto._resetWidgetX=function(o){return qx.renderer.border.Border._resetBorderX(o);
};
qx.Proto._resetWidgetY=function(o){return qx.renderer.border.Border._resetBorderY(o);
};
qx.Proto._applyWidgetXCommon=function(vObject){if(this._needsCompilationLeft){this._compileLeft();
}
if(this._needsCompilationRight){this._compileRight();
}
for(var i in this._defsX){vObject._style[i]=this._defsX[i];
}
if(!qx.core.Client.getInstance().isGecko()&&qx.renderer.border.Border.enhancedCrossBrowserMode){if(this.getUseEnhancedCrossBrowserMode()){vObject._createElementForEnhancedBorder();
}
if(vObject._borderStyle){for(var i in this._enhancedDefsX){vObject._borderStyle[i]=this._enhancedDefsX[i];
}}}};
qx.Proto._applyWidgetYCommon=function(vObject){if(this._needsCompilationTop){this._compileTop();
}
if(this._needsCompilationBottom){this._compileBottom();
}
for(var i in this._defsY){vObject._style[i]=this._defsY[i];
}
if(!qx.core.Client.getInstance().isGecko()&&qx.renderer.border.Border.enhancedCrossBrowserMode){if(this.getUseEnhancedCrossBrowserMode()){vObject._createElementForEnhancedBorder();
}
if(vObject._borderStyle){for(var i in this._enhancedDefsY){vObject._borderStyle[i]=this._enhancedDefsY[i];
}}}};
if(qx.core.Client.getInstance().isGecko()){qx.Proto._applyWidgetX=qx.Proto._applyWidgetXCommon;
qx.Proto._applyWidgetY=qx.Proto._applyWidgetYCommon;
qx.Proto._generateMozColorDefString=function(vWidth,vStyle,vEdge){try{try{var a=qx.renderer.border.Border.data[vWidth][vStyle][vEdge];
}catch(ex){}
if(typeof a===$[4]){for(var i=0,s=[],l=a.length;i<l;i++){s.push((new qx.renderer.color.ColorObject(a[i]).getStyle()));
}return s.join($[44]);
}}catch(ex){this.error("Failed to generate Mozilla Color Definition Strings",ex);
}return $[1];
};
qx.Proto._compileTop=function(){var w=this.getTopWidth(),s=this.getTopStyle(),d=this._defsY;
d.borderTop=this._generateDefString(w,s,this.getTopColor());
d.MozBorderTopColors=this._generateMozColorDefString(w,s,$[12]);
this._needsCompilationTop=false;
};
qx.Proto._compileRight=function(){var w=this.getRightWidth(),s=this.getRightStyle(),d=this._defsX;
d.borderRight=this._generateDefString(w,s,this.getRightColor());
d.MozBorderRightColors=this._generateMozColorDefString(w,s,$[10]);
this._needsCompilationRight=false;
};
qx.Proto._compileBottom=function(){var w=this.getBottomWidth(),s=this.getBottomStyle(),d=this._defsY;
d.borderBottom=this._generateDefString(w,s,this.getBottomColor());
d.MozBorderBottomColors=this._generateMozColorDefString(w,s,$[16]);
this._needsCompilationBottom=false;
};
qx.Proto._compileLeft=function(){var w=this.getLeftWidth(),s=this.getLeftStyle(),d=this._defsX;
d.borderLeft=this._generateDefString(w,s,this.getLeftColor());
d.MozBorderLeftColors=this._generateMozColorDefString(w,s,$[11]);
this._needsCompilationLeft=false;
};
qx.renderer.border.Border._resetBorderX=function(o){var s=o._style;
s.borderLeft=s.borderRight=s.MozBorderLeftColors=s.MozBorderRightColors=$[1];
};
qx.renderer.border.Border._resetBorderY=function(o){var s=o._style;
s.borderTop=s.borderBottom=s.MozBorderTopColors=s.MozBorderBottomColors=$[1];
};
}else{qx.Proto._applyWidgetX=function(vObject){this._applyWidgetXCommon(vObject);
if(qx.renderer.border.Border.enhancedCrossBrowserMode){if(this.getUseEnhancedCrossBrowserMode()){vObject._createElementForEnhancedBorder();
}
if(vObject._borderStyle){for(var i in this._enhancedDefsX){vObject._borderStyle[i]=this._enhancedDefsX[i];
}}}};
qx.Proto._applyWidgetY=function(vObject){this._applyWidgetYCommon(vObject);
if(qx.renderer.border.Border.enhancedCrossBrowserMode){if(this.getUseEnhancedCrossBrowserMode()){vObject._createElementForEnhancedBorder();
}
if(vObject._borderStyle){for(var i in this._enhancedDefsY){vObject._borderStyle[i]=this._enhancedDefsY[i];
}}}};
qx.Proto._compileTop=function(){var vTopWidth=this.getTopWidth();
var vTopStyle=this.getTopStyle();
var vTopColor=this.getTopColor();
switch(vTopWidth){case 1:switch(vTopStyle){case $[65]:case $[60]:vTopColor=(new qx.renderer.color.ColorObject(qx.renderer.border.Border.data[vTopWidth][vTopStyle][$[12]][0]));
vTopStyle=$[9];
}break;
case 2:switch(vTopStyle){case $[65]:case $[60]:case $[92]:case $[99]:if(qx.renderer.border.Border.enhancedCrossBrowserMode){try{var c=qx.renderer.border.Border.data[vTopWidth][vTopStyle][$[12]];
if(typeof c===$[4]){vTopStyle=$[9];
vTopWidth=1;
vTopColor=(new qx.renderer.color.ColorObject(c[1]));
this._enhancedDefsY.borderTop=this._generateDefString(vTopWidth,vTopStyle,vTopColor);
vTopColor=(new qx.renderer.color.ColorObject(c[0]));
}}catch(ex){this.error("Failed to compile top border",ex);
this.warn($[296]+vTopWidth+$[312]+vTopStyle);
}}else{vTopColor=(new qx.renderer.color.ColorObject($[124]));
}}break;
}this._defsY.borderTop=this._generateDefString(vTopWidth,vTopStyle,vTopColor);
this._needsCompilationTop=false;
};
qx.Proto._compileRight=function(){var vRightWidth=this.getRightWidth();
var vRightStyle=this.getRightStyle();
var vRightColor=this.getRightColor();
switch(vRightWidth){case 1:switch(vRightStyle){case $[65]:case $[60]:vRightColor=(new qx.renderer.color.ColorObject(qx.renderer.border.Border.data[vRightWidth][vRightStyle][$[10]][0]));
vRightStyle=$[9];
}break;
case 2:switch(vRightStyle){case $[65]:case $[60]:case $[92]:case $[99]:if(qx.renderer.border.Border.enhancedCrossBrowserMode){try{var c=qx.renderer.border.Border.data[vRightWidth][vRightStyle][$[10]];
if(typeof c===$[4]){vRightStyle=$[9];
vRightWidth=1;
vRightColor=(new qx.renderer.color.ColorObject(c[1]));
this._enhancedDefsX.borderRight=this._generateDefString(vRightWidth,vRightStyle,vRightColor);
vRightColor=(new qx.renderer.color.ColorObject(c[0]));
}}catch(ex){this.error("Failed to compile right border",ex);
this.warn($[296]+vRightWidth+$[312]+vRightStyle);
}}else{vRightColor=(new qx.renderer.color.ColorObject($[124]));
}}break;
}this._defsX.borderRight=this._generateDefString(vRightWidth,vRightStyle,vRightColor);
this._needsCompilationRight=false;
};
qx.Proto._compileBottom=function(){var vBottomWidth=this.getBottomWidth();
var vBottomStyle=this.getBottomStyle();
var vBottomColor=this.getBottomColor();
switch(vBottomWidth){case 1:switch(vBottomStyle){case $[65]:case $[60]:vBottomColor=(new qx.renderer.color.ColorObject(qx.renderer.border.Border.data[vBottomWidth][vBottomStyle][$[16]][0]));
vBottomStyle=$[9];
}break;
case 2:switch(vBottomStyle){case $[65]:case $[60]:case $[92]:case $[99]:if(qx.renderer.border.Border.enhancedCrossBrowserMode){try{var c=qx.renderer.border.Border.data[vBottomWidth][vBottomStyle][$[16]];
if(typeof c===$[4]){vBottomStyle=$[9];
vBottomWidth=1;
vBottomColor=(new qx.renderer.color.ColorObject(c[1]));
this._enhancedDefsY.borderBottom=this._generateDefString(vBottomWidth,vBottomStyle,vBottomColor);
vBottomColor=(new qx.renderer.color.ColorObject(c[0]));
}}catch(ex){this.error("Failed to compile bottom border",ex);
this.warn($[296]+vBottomWidth+$[312]+vBottomStyle);
}}else{vBottomColor=(new qx.renderer.color.ColorObject($[124]));
}}break;
}this._defsY.borderBottom=this._generateDefString(vBottomWidth,vBottomStyle,vBottomColor);
this._needsCompilationBottom=false;
};
qx.Proto._compileLeft=function(){var vLeftWidth=this.getLeftWidth();
var vLeftStyle=this.getLeftStyle();
var vLeftColor=this.getLeftColor();
switch(vLeftWidth){case 1:switch(vLeftStyle){case $[65]:case $[60]:vLeftColor=(new qx.renderer.color.ColorObject(qx.renderer.border.Border.data[vLeftWidth][vLeftStyle][$[11]][0]));
vLeftStyle=$[9];
}break;
case 2:switch(vLeftStyle){case $[65]:case $[60]:case $[92]:case $[99]:if(qx.renderer.border.Border.enhancedCrossBrowserMode){try{var c=qx.renderer.border.Border.data[vLeftWidth][vLeftStyle][$[11]];
if(typeof c===$[4]){vLeftStyle=$[9];
vLeftWidth=1;
vLeftColor=(new qx.renderer.color.ColorObject(c[1]));
this._enhancedDefsX.borderLeft=this._generateDefString(vLeftWidth,vLeftStyle,vLeftColor);
vLeftColor=(new qx.renderer.color.ColorObject(c[0]));
}}catch(ex){this.error("Failed to compile left border",ex);
this.warn($[296]+vLeftWidth+$[312]+vLeftStyle);
}}else{vLeftColor=(new qx.renderer.color.ColorObject($[124]));
}}break;
}this._defsX.borderLeft=this._generateDefString(vLeftWidth,vLeftStyle,vLeftColor);
this._needsCompilationLeft=false;
};
qx.renderer.border.Border._resetBorderX=function(o){var s=o._style;
s.borderLeft=s.borderRight=$[184];
if(qx.renderer.border.Border.enhancedCrossBrowserMode){s=o._borderStyle;
if(s){s.borderLeft=s.borderRight=$[184];
}}};
qx.renderer.border.Border._resetBorderY=function(o){var s=o._style;
s.borderTop=s.borderBottom=$[184];
if(qx.renderer.border.Border.enhancedCrossBrowserMode){s=o._borderStyle;
if(s){s.borderTop=s.borderBottom=$[184];
}}};
}qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(typeof this._defsX===$[4]){for(var i in this._defsX){delete this._defsX[i];
}}delete this._defsX;
if(typeof this._defsY===$[4]){for(var i in this._defsY){delete this._defsY[i];
}}delete this._defsY;
if(qx.renderer.border.Border.enhancedCrossBrowserMode){if(typeof this._enhancedDefsX===$[4]){for(var i in this._enhancedDefsX){delete this._enhancedDefsX[i];
}}delete this._enhancedDefsX;
if(typeof this._enhancedDefsY===$[4]){for(var i in this._enhancedDefsY){delete this._enhancedDefsY[i];
}}delete this._enhancedDefsY;
}delete this._themedEdges;
return qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.renderer.border.BorderObject */
qx.OO.defineClass($[1827],qx.renderer.border.Border,function(vWidth,vStyle,vColor){this._dependentObjects={};
qx.renderer.border.Border.call(this,vWidth,vStyle,vColor);
});
qx.renderer.border.BorderObject.fromString=function(vDefString){var vBorder=new qx.renderer.border.BorderObject;
var vAllParts=vDefString.split(/\s+/);
var vPart,vTemp;
for(var i=0;i<vAllParts.length;i++){vPart=vAllParts[i];
switch(vPart){case $[92]:case $[99]:case $[60]:case $[65]:case $[9]:case $[509]:case $[646]:case $[554]:case $[33]:vBorder.setStyle(vPart);
break;
default:vTemp=parseFloat(vPart);
if(vTemp==vPart||qx.lang.String.contains(vPart,$[21])){vBorder.setWidth(vTemp);
}else{vPart=vPart.toLowerCase();
vBorder.setColor(qx.renderer.color.Color.themedNames[vPart]?new qx.renderer.color.ColorObject(vPart):new qx.renderer.color.Color(vPart));
}break;
}}return vBorder;
};
qx.Proto.addListenerWidget=function(o){this._dependentObjects[o.toHashCode()]=o;
};
qx.Proto.removeListenerWidget=function(o){delete this._dependentObjects[o.toHashCode()];
};
qx.Proto._sync=function(vEdge){var vAll=this._dependentObjects;
var vCurrent;
for(vKey in vAll){vCurrent=vAll[vKey];
if(vCurrent.isCreated()){vCurrent._updateBorder(vEdge);
}}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(typeof this._dependentObjects===$[4]){var vAll=this._dependentObjects;
for(vKey in vAll){delete vAll[vKey];
}vAll=null;
delete this._dependentObjects;
}return qx.renderer.border.Border.prototype.dispose.call(this);
};




/* ID: qx.manager.object.AppearanceManager */
qx.OO.defineClass($[2313],qx.manager.object.ObjectManager,function(){qx.manager.object.ObjectManager.call(this);
this._appearanceThemes={};
});
qx.Settings.setDefault($[391],$[760]);
qx.OO.addProperty({name:$[391],type:$[4],allowNull:false,instance:$[584]});
qx.Proto.registerAppearanceTheme=function(vThemeClass){this._appearanceThemes[vThemeClass.classname]=vThemeClass;
if(vThemeClass.classname==this.getSetting($[391])){this.setAppearanceTheme(vThemeClass.getInstance());
}};
qx.Proto._modifyAppearanceTheme=function(propValue,propOldValue,propData){var vComp=qx.core.Init.getInstance().getComponent();
if(vComp&&vComp.isUiReady()){qx.ui.core.ClientDocument.getInstance()._recursiveAppearanceThemeUpdate(propValue,propOldValue);
}return true;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._appearanceThemes=null;
return qx.manager.object.ObjectManager.prototype.dispose.call(this);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.renderer.theme.AppearanceTheme */
qx.OO.defineClass($[584],qx.core.Object,function(vTitle){qx.core.Object.call(this);
this.setTitle(vTitle);
});
qx.OO.addProperty({name:$[170],type:$[0],allowNull:false,defaultValue:$[1]});
qx.Proto._appearances={};
qx.Proto.registerAppearance=function(vId,vData){this._appearances[vId]=vData;
};
qx.Proto.getAppearance=function(vId){return this._appearances[vId];
};
qx.Proto.setupAppearance=function(vAppearance){if(!vAppearance._setupDone){if(vAppearance.setup){vAppearance.setup(this);
}vAppearance._setupDone=true;
}};
qx.Proto.initialFrom=function(vId){var vAppearance=this.getAppearance(vId);
if(vAppearance){this.setupAppearance(vAppearance);
try{return vAppearance.initial?vAppearance.initial(this):{};
}catch(ex){this.error("Couldn't apply initial appearance",ex);
}}else{return this.error("Missing appearance: "+vId);
}};
qx.Proto.stateFrom=function(vId,vStates){var vAppearance=this.getAppearance(vId);
if(vAppearance){this.setupAppearance(vAppearance);
try{return vAppearance.state?vAppearance.state(this,vStates):{};
}catch(ex){this.error("Couldn't apply state appearance",ex);
}}else{return this.error("Missing appearance: "+vId);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._appearances=null;
return qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.theme.appearance.Classic */
qx.OO.defineClass($[760],qx.renderer.theme.AppearanceTheme,function(vTitle){qx.renderer.theme.AppearanceTheme.call(this,vTitle||$[1431]);
});
qx.Proto._appearances=qx.lang.Object.carefullyMergeWith({"image":{initial:function(vTheme){return {allowStretchX:false,allowStretchY:false};
}},"client-document":{setup:function(){this.bgcolor=new qx.renderer.color.ColorObject($[102]);
this.color=new qx.renderer.color.ColorObject($[641]);
},initial:function(vTheme){return {backgroundColor:this.bgcolor,color:this.color,hideFocus:true,enableElementFocus:false};
}},"blocker":{initial:function(vTheme){return {cursor:$[48],backgroundImage:$[59]};
}},"atom":{initial:function(vTheme){return {cursor:$[48],spacing:4,width:$[5],height:$[5],horizontalChildrenAlign:$[74],verticalChildrenAlign:$[34],stretchChildrenOrthogonalAxis:false,allowStretchY:false,allowStretchX:false};
}},"label":{setup:function(){this.color_disabled=new qx.renderer.color.ColorObject($[2210]);
this.font=new qx.renderer.font.Font(11,$[125]);
},initial:function(vTheme){return {font:this.font,wrap:false};
},state:function(vTheme,vStates){return {color:vStates.disabled?this.color_disabled:null};
}},"htmlcontainer":{initial:function(vTheme){return vTheme.initialFrom($[109]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[109],vStates);
}},"popup":{initial:function(vTheme){return {width:$[5],height:$[5]};
}},"tool-tip":{setup:function(){this.bgcolor=new qx.renderer.color.ColorObject($[1508]);
this.color=new qx.renderer.color.ColorObject($[1734]);
},initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[638]),{backgroundColor:this.bgcolor,color:this.color,border:qx.renderer.border.BorderPresets.getInstance().info,paddingTop:1,paddingRight:3,paddingBottom:2,paddingLeft:3});
}},"iframe":{initial:function(vTheme){return {border:qx.renderer.border.BorderPresets.getInstance().inset};
}},"button":{setup:function(){this.bgcolor_default=new qx.renderer.color.ColorObject($[466]);
this.bgcolor_over=new qx.renderer.color.Color($[863]);
this.bgcolor_left=new qx.renderer.color.Color($[479]);
this.border_pressed=qx.renderer.border.BorderPresets.getInstance().inset;
this.border_default=qx.renderer.border.BorderPresets.getInstance().outset;
},initial:function(vTheme){return vTheme.initialFrom($[187]);
},state:function(vTheme,vStates){var vReturn={backgroundColor:vStates.abandoned?this.bgcolor_left:vStates.over?this.bgcolor_over:this.bgcolor_default,border:vStates.pressed||vStates.checked||vStates.abandoned?this.border_pressed:this.border_default};
if(vStates.pressed||vStates.abandoned){vReturn.paddingTop=4;
vReturn.paddingRight=3;
vReturn.paddingBottom=2;
vReturn.paddingLeft=5;
}else{vReturn.paddingTop=vReturn.paddingBottom=3;
vReturn.paddingRight=vReturn.paddingLeft=4;
}return vReturn;
}},"toolbar":{setup:function(){this.bgcolor=new qx.renderer.color.ColorObject($[102]);
},initial:function(vTheme){return {border:qx.renderer.border.BorderPresets.getInstance().thinOutset,backgroundColor:this.bgcolor,height:$[5]};
}},"toolbar-part":{initial:function(vTheme){return {width:$[5]};
}},"toolbar-part-handle":{initial:function(vTheme){return {width:10};
}},"toolbar-part-handle-line":{initial:function(vTheme){return {top:2,left:3,bottom:2,width:4,border:qx.renderer.border.BorderPresets.getInstance().thinOutset};
}},"toolbar-separator":{initial:function(vTheme){return {width:8};
}},"toolbar-separator-line":{setup:function(){var b=this.border=new qx.renderer.border.BorderObject;
b.setLeftColor($[49]);
b.setRightColor($[64]);
b.setLeftStyle($[9]);
b.setRightStyle($[9]);
b.setLeftWidth(1);
b.setRightWidth(1);
b.setTopWidth(0);
b.setBottomWidth(0);
},initial:function(vTheme){return {top:2,left:3,width:2,bottom:2,border:this.border};
}},"toolbar-button":{setup:function(){this.bgcolor_default=new qx.renderer.color.ColorObject($[466]);
this.bgcolor_left=new qx.renderer.color.Color($[479]);
this.border_pressed=qx.renderer.border.BorderPresets.getInstance().thinInset;
this.border_over=qx.renderer.border.BorderPresets.getInstance().thinOutset;
this.border_default=qx.renderer.border.BorderPresets.getInstance().none;
this.checked_background=$[413];
},initial:function(vTheme){return {cursor:$[48],spacing:4,width:$[5],verticalChildrenAlign:$[34]};
},state:function(vTheme,vStates){var vReturn={backgroundColor:vStates.abandoned?this.bgcolor_left:this.bgcolor_default,backgroundImage:vStates.checked&&!vStates.over?this.checked_background:null};
if(vStates.pressed||vStates.checked||vStates.abandoned){vReturn.border=this.border_pressed;
vReturn.paddingTop=3;
vReturn.paddingRight=2;
vReturn.paddingBottom=1;
vReturn.paddingLeft=4;
}else if(vStates.over){vReturn.border=this.border_over;
vReturn.paddingTop=vReturn.paddingBottom=2;
vReturn.paddingLeft=vReturn.paddingRight=3;
}else{vReturn.border=this.border_default;
vReturn.paddingTop=vReturn.paddingBottom=3;
vReturn.paddingLeft=vReturn.paddingRight=4;
}return vReturn;
}},"bar-view":{setup:function(){this.background=new qx.renderer.color.ColorObject($[300]);
},initial:function(vTheme){return {backgroundColor:this.background,border:qx.renderer.border.BorderPresets.getInstance().shadow};
}},"bar-view-pane":{state:function(vTheme,vStates){if(vStates.barHorizontal){return {width:null,height:$[37]};
}else{return {width:$[37],height:null};
}}},"bar-view-page":{initial:function(vTheme){return {left:10,right:10,top:10,bottom:10};
}},"bar-view-bar":{setup:function(){this.background_color=new qx.renderer.color.ColorObject($[558]);
this.border_color=new qx.renderer.color.ColorObject($[49]);
this.border_top=new qx.renderer.border.BorderObject;
this.border_top.setBottom(1,$[9],this.border_color);
this.border_bottom=new qx.renderer.border.BorderObject;
this.border_bottom.setTop(1,$[9],this.border_color);
this.border_left=new qx.renderer.border.BorderObject;
this.border_left.setRight(1,$[9],this.border_color);
this.border_right=new qx.renderer.border.BorderObject;
this.border_right.setLeft(1,$[9],this.border_color);
},initial:function(vTheme){return {backgroundColor:this.background_color};
},state:function(vTheme,vStates){if(vStates.barTop){return {paddingTop:1,paddingRight:0,paddingBottom:1,paddingLeft:0,border:this.border_top,height:$[5],width:null,orientation:$[29]};
}else if(vStates.barBottom){return {paddingTop:1,paddingRight:0,paddingBottom:1,paddingLeft:0,border:this.border_bottom,height:$[5],width:null,orientation:$[29]};
}else if(vStates.barLeft){return {paddingTop:0,paddingRight:1,paddingBottom:0,paddingLeft:1,border:this.border_left,height:null,width:$[5],orientation:$[20]};
}else if(vStates.barRight){return {paddingTop:0,paddingRight:1,paddingBottom:0,paddingLeft:1,border:this.border_right,height:null,width:$[5],orientation:$[20]};
}}},"bar-view-button":{setup:function(){this.background_color_normal=null;
this.background_color_checked=new qx.renderer.color.ColorObject($[300]);
this.border_color=new qx.renderer.color.ColorObject($[49]);
this.border_color_checked=new qx.renderer.color.ColorObject($[415]);
this.border_top_checked=new qx.renderer.border.Border(1,$[9],this.border_color);
this.border_top_checked.setBottom(3,$[9],this.border_color_checked);
this.border_bottom_checked=new qx.renderer.border.Border(1,$[9],this.border_color);
this.border_bottom_checked.setTop(3,$[9],this.border_color_checked);
this.border_left_checked=new qx.renderer.border.Border(1,$[9],this.border_color);
this.border_left_checked.setRight(3,$[9],this.border_color_checked);
this.border_right_checked=new qx.renderer.border.Border(1,$[9],this.border_color);
this.border_right_checked.setLeft(3,$[9],this.border_color_checked);
},initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[187]),{iconPosition:$[12]});
},state:function(vTheme,vStates){var vReturn={backgroundColor:vStates.checked?this.background_color_checked:this.background_color_normal,allowStretchX:true,allowStretchY:true};
if(vStates.checked||vStates.over){if(vStates.barTop){vReturn.border=this.border_top_checked;
vReturn.paddingTop=3;
vReturn.paddingRight=6;
vReturn.paddingBottom=1;
vReturn.paddingLeft=6;
}else if(vStates.barBottom){vReturn.border=this.border_bottom_checked;
vReturn.paddingTop=1;
vReturn.paddingRight=6;
vReturn.paddingBottom=3;
vReturn.paddingLeft=6;
}else if(vStates.barLeft){vReturn.border=this.border_left_checked;
vReturn.paddingTop=3;
vReturn.paddingRight=4;
vReturn.paddingBottom=3;
vReturn.paddingLeft=6;
}else if(vStates.barRight){vReturn.border=this.border_right_checked;
vReturn.paddingTop=3;
vReturn.paddingRight=6;
vReturn.paddingBottom=3;
vReturn.paddingLeft=4;
}}else{vReturn.border=qx.renderer.border.BorderPresets.getInstance().none;
vReturn.paddingTop=vReturn.paddingBottom=4;
vReturn.paddingRight=vReturn.paddingLeft=7;
}
if(vStates.barTop||vStates.barBottom){vReturn.marginTop=vReturn.marginBottom=0;
vReturn.marginRight=vReturn.marginLeft=1;
vReturn.width=$[5];
vReturn.height=null;
}else if(vStates.barLeft||vStates.barRight){vReturn.marginTop=vReturn.marginBottom=1;
vReturn.marginRight=vReturn.marginLeft=0;
vReturn.height=$[5];
vReturn.width=null;
}return vReturn;
}},"window":{setup:function(){this.bgcolor=new qx.renderer.color.ColorObject($[102]);
this.color=new qx.renderer.color.ColorObject($[641]);
},initial:function(vTheme){return {backgroundColor:this.bgcolor,color:this.color,paddingTop:1,paddingRight:1,paddingBottom:1,paddingLeft:1};
},state:function(vTheme,vStates){return {border:vStates.maximized?qx.renderer.border.BorderPresets.getInstance().none:qx.renderer.border.BorderPresets.getInstance().outset};
}},"window-captionbar":{setup:function(){this.bgcolor_active=new qx.renderer.color.ColorObject($[1121]);
this.color_active=new qx.renderer.color.ColorObject($[1513]);
this.bgcolor_inactive=new qx.renderer.color.ColorObject($[1816]);
this.color_inactive=new qx.renderer.color.ColorObject($[2034]);
},initial:function(vTheme){return {paddingTop:1,paddingRight:2,paddingBottom:2,paddingLeft:2,verticalChildrenAlign:$[34],height:$[5],overflow:$[26]};
},state:function(vTheme,vStates){return {backgroundColor:vStates.active?this.bgcolor_active:this.bgcolor_inactive,color:vStates.active?this.color_active:this.color_inactive};
}},"window-resize-frame":{initial:function(vTheme){return {border:qx.renderer.border.BorderPresets.getInstance().shadow};
}},"window-captionbar-icon":{initial:function(vTheme){return {marginRight:2};
}},"window-captionbar-title":{setup:function(){this.font=new qx.renderer.font.Font(11,$[125]);
this.font.setBold(true);
},initial:function(vTheme){return {cursor:$[48],font:this.font,marginRight:2,wrap:false};
}},"window-captionbar-button":{initial:function(vTheme){return vTheme.initialFrom($[118]);
},state:function(vTheme,vStates){var vReturn=vTheme.stateFrom($[118],vStates);
if(vStates.pressed||vStates.abandoned){vReturn.paddingTop=2;
vReturn.paddingRight=1;
vReturn.paddingBottom=0;
vReturn.paddingLeft=3;
}else{vReturn.paddingTop=vReturn.paddingBottom=1;
vReturn.paddingRight=vReturn.paddingLeft=2;
}return vReturn;
}},"window-captionbar-minimize-button":{initial:function(vTheme){return vTheme.initialFrom($[146]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[146],vStates);
}},"window-captionbar-restore-button":{initial:function(vTheme){return vTheme.initialFrom($[146]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[146],vStates);
}},"window-captionbar-maximize-button":{initial:function(vTheme){return vTheme.initialFrom($[146]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[146],vStates);
}},"window-captionbar-close-button":{initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[146]),{marginLeft:2});
},state:function(vTheme,vStates){return vTheme.stateFrom($[146],vStates);
}},"window-statusbar":{initial:function(vTheme){return {border:qx.renderer.border.BorderPresets.getInstance().thinInset,height:$[5]};
}},"window-statusbar-text":{initial:function(vTheme){return {paddingTop:1,paddingRight:4,paddingBottom:1,paddingLeft:4,cursor:$[48]};
}},"resizer":{initial:function(vTheme){return {border:qx.renderer.border.BorderPresets.getInstance().outset};
}},"resizer-frame":{initial:function(vTheme){return {border:qx.renderer.border.BorderPresets.getInstance().shadow};
}},"menu":{setup:function(){this.bgcolor=new qx.renderer.color.ColorObject($[229]);
},initial:function(vTheme){return {width:$[5],height:$[5],backgroundColor:this.bgcolor,border:qx.renderer.border.BorderPresets.getInstance().outset,paddingTop:1,paddingRight:1,paddingBottom:1,paddingLeft:1};
}},"menu-layout":{initial:function(vTheme){return {top:0,right:0,bottom:0,left:0};
}},"menu-button":{setup:function(){this.BGCOLOR_OVER=new qx.renderer.color.ColorObject("highlight");
this.BGCOLOR_OUT=null;
this.COLOR_OVER=new qx.renderer.color.ColorObject("highlighttext");
this.COLOR_OUT=null;
},initial:function(vTheme){return {minWidth:$[5],height:$[5],spacing:2,paddingTop:2,paddingRight:4,paddingBottom:2,paddingLeft:4,cursor:$[48],verticalChildrenAlign:$[34],allowStretchX:true};
},state:function(vTheme,vStates){return {backgroundColor:vStates.over?this.BGCOLOR_OVER:this.BGCOLOR_OUT,color:vStates.over?this.COLOR_OVER:this.COLOR_OUT};
}},"menu-check-box":{initial:function(vTheme){return vTheme.initialFrom($[220]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[220],vStates);
}},"menu-radio-button":{initial:function(vTheme){return vTheme.initialFrom($[220]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[220],vStates);
}},"menu-separator":{initial:function(vTheme){return {height:$[5],marginTop:3,marginBottom:2,paddingLeft:3,paddingRight:3};
}},"menu-separator-line":{initial:function(vTheme){return {right:0,left:0,height:$[5],border:qx.renderer.border.BorderPresets.getInstance().verticalDivider};
}},"list":{setup:function(){this.bgcolor=new qx.renderer.color.Color($[101]);
},initial:function(vTheme){return {overflow:$[26],border:qx.renderer.border.BorderPresets.getInstance().thinInset,backgroundColor:this.bgcolor};
}},"list-item":{setup:function(){this.bgcolor_selected=new qx.renderer.color.ColorObject($[250]);
this.color_selected=new qx.renderer.color.ColorObject($[483]);
},initial:function(vTheme){return {cursor:$[48],height:$[5],horizontalChildrenAlign:$[11],verticalChildrenAlign:$[34],spacing:4,paddingTop:3,paddingRight:5,paddingBottom:3,paddingLeft:5,minWidth:$[5]};
},state:function(vTheme,vStates){return {backgroundColor:vStates.selected?this.bgcolor_selected:null,color:vStates.selected?this.color_selected:null};
}},"text-field":{setup:function(){this.font=new qx.renderer.font.Font(11,$[125]);
},initial:function(vTheme){return {hideFocus:true,border:qx.renderer.border.BorderPresets.getInstance().inset,paddingTop:1,paddingRight:3,paddingBottom:1,paddingLeft:3,allowStretchY:false,allowStretchX:true,font:this.font,width:$[5],height:$[5]};
},state:function(vTheme,vStates){return vTheme.stateFrom($[109],vStates);
}},"text-area":{initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[148]),{overflow:$[5],marginTop:0,marginBottom:0});
},state:function(vTheme,vStates){return vTheme.stateFrom($[148],vStates);
}},"combo-box":{setup:function(){this.bgcolor=new qx.renderer.color.Color($[101]);
},initial:function(vTheme){return {minWidth:40,width:120,height:$[5],border:qx.renderer.border.BorderPresets.getInstance().inset,backgroundColor:this.bgcolor,allowStretchY:false};
}},"combo-box-ex":{setup:function(){this.bgcolor=new qx.renderer.color.Color($[101]);
},initial:function(vTheme){return {width:$[5],height:$[5],border:qx.renderer.border.BorderPresets.getInstance().inset,backgroundColor:this.bgcolor,allowStretchY:false};
}},"combo-box-list":{initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[201]),{top:0,right:0,bottom:0,left:0,border:null,overflow:$[112]});
}},"combo-box-ex-list":{initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[201]),{statusBarVisible:false,columnVisibilityButtonVisible:false,height:$[468],maxHeight:150,top:0,left:0,border:null});
}},"combo-box-popup":{initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[201]),{height:$[5],maxHeight:150,border:qx.renderer.border.BorderPresets.getInstance().shadow});
}},"combo-box-ex-popup":{initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[201]),{width:$[5],height:$[5],border:qx.renderer.border.BorderPresets.getInstance().shadow});
}},"combo-box-text-field":{setup:function(){this.bgcolor=new qx.renderer.color.Color($[389]);
},initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[148]),{border:qx.renderer.border.BorderPresets.getInstance().none,width:$[37],backgroundColor:this.bgcolor});
}},"combo-box-ex-text-field":{setup:function(){this.bgcolor=new qx.renderer.color.Color($[389]);
},initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[148]),{border:qx.renderer.border.BorderPresets.getInstance().none,minWidth:30,width:100,backgroundColor:this.bgcolor});
}},"combo-box-button":{initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[118]),{height:null,allowStretchY:true});
},state:function(vTheme,vStates){return qx.lang.Object.mergeWith(vTheme.stateFrom($[118],vStates),{paddingTop:0,paddingRight:3,paddingBottom:0,paddingLeft:2});
}},"treevirtual-focus-indicator":{},"tree-element":{initial:function(vTheme){return {height:16,verticalChildrenAlign:$[34]};
}},"tree-element-icon":{initial:function(vTheme){return {width:16,height:16};
}},"tree-element-label":{setup:function(){this.bgcolor_selected=new qx.renderer.color.ColorObject($[250]);
this.color_selected=new qx.renderer.color.ColorObject($[483]);
},initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[109]),{cursor:$[48],marginLeft:3,height:15,paddingTop:2,paddingRight:2,paddingBottom:2,paddingLeft:2,allowStretchY:false});
},state:function(vTheme,vStates){return qx.lang.Object.mergeWith(vTheme.stateFrom($[109],vStates),{backgroundColor:vStates.selected?this.bgcolor_selected:null,color:vStates.selected?this.color_selected:null});
}},"tree-folder":{initial:function(vTheme){return vTheme.initialFrom($[326]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[326],vStates);
}},"tree-folder-icon":{initial:function(vTheme){return {width:16,height:16};
}},"tree-folder-label":{initial:function(vTheme){return vTheme.initialFrom($[270]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[270],vStates);
}},"tree":{initial:function(vTheme){return vTheme.initialFrom($[192]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[192],vStates);
}},"tree-icon":{initial:function(vTheme){return vTheme.initialFrom($[274]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[274],vStates);
}},"tree-label":{initial:function(vTheme){return vTheme.initialFrom($[316]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[316],vStates);
}},"tree-container":{initial:function(vTheme){return {verticalChildrenAlign:$[12]};
}},"tree-folder-container":{initial:function(vTheme){return {height:$[5],verticalChildrenAlign:$[12]};
}},"list-view":{initial:function(vTheme){return {cursor:$[48],overflow:$[26]};
}},"list-view-pane":{initial:function(vTheme){return {width:$[37],horizontalSpacing:1,overflow:$[26]};
}},"list-view-header":{setup:function(){this.border=new qx.renderer.border.Border;
this.border.setBottom(1,$[9],$[1608]);
this.bgcolor=new qx.renderer.color.Color($[2284]);
},initial:function(vTheme){return {height:$[5],overflow:$[26],border:this.border,backgroundColor:this.bgcolor};
}},"list-view-header-cell":{setup:function(){this.border_hover=new qx.renderer.border.Border;
this.border_hover.setBottom(2,$[9],$[538]);
this.bgcolor_hover=new qx.renderer.color.Color($[101]);
},initial:function(vTheme){return {overflow:$[26],paddingTop:2,paddingRight:6,paddingBottom:2,paddingLeft:6,spacing:4};
},state:function(vTheme,vStates){if(vStates.over){return {backgroundColor:this.bgcolor_hover,paddingBottom:0,border:this.border_hover};
}else{return {backgroundColor:null,paddingBottom:2,border:null};
}}},"list-view-header-separator":{setup:function(){this.bgcolor=new qx.renderer.color.Color($[368]);
},initial:function(vTheme){return {backgroundColor:this.bgcolor,width:1,marginTop:1,marginBottom:1};
}},"list-view-content-cell":{setup:function(){this.bgcolor_selected=new qx.renderer.color.ColorObject($[250]);
this.color_selected=new qx.renderer.color.ColorObject($[483]);
},state:function(vTheme,vStates){return {backgroundColor:vStates.selected?this.bgcolor_selected:null,color:vStates.selected?this.color_selected:null};
}},"list-view-content-cell-image":{initial:function(vTheme){return {paddingLeft:6,paddingRight:6};
},state:function(vTheme,vStates){return vTheme.stateFrom($[529],vStates);
}},"list-view-content-cell-text":{initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[785]),{overflow:$[26],paddingLeft:6,paddingRight:6});
},state:function(vTheme,vStates){return qx.lang.Object.mergeWith(vTheme.stateFrom($[785],vStates),vTheme.stateFrom($[529],vStates));
}},"list-view-content-cell-html":{initial:function(vTheme){return vTheme.initialFrom($[152]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[152],vStates);
}},"list-view-content-cell-icon-html":{initial:function(vTheme){return vTheme.initialFrom($[152]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[152],vStates);
}},"list-view-content-cell-link":{initial:function(vTheme){return vTheme.initialFrom($[152]);
},state:function(vTheme,vStates){return vTheme.stateFrom($[152],vStates);
}},"tab-view":{initial:function(vTheme){return {spacing:-1};
}},"tab-view-bar":{initial:function(vTheme){return {height:$[5]};
}},"tab-view-pane":{setup:function(){this.border=new qx.renderer.border.Border(1,$[9],$[221]);
this.bgcolor=new qx.renderer.color.ColorObject($[300]);
},initial:function(vTheme){return {height:$[37],backgroundColor:this.bgcolor,border:this.border,paddingTop:10,paddingRight:10,paddingBottom:10,paddingLeft:10};
}},"tab-view-page":{initial:function(vTheme){return {top:0,right:0,bottom:0,left:0};
}},"tab-view-button":{setup:function(){this.bgcolor_normal=new qx.renderer.color.ColorObject($[558]);
this.bgcolor_checked=new qx.renderer.color.ColorObject($[300]);
this.border_top_normal=new qx.renderer.border.Border(1,$[9],$[221]);
this.border_top_normal.setBottomWidth(0);
this.border_top_checked=new qx.renderer.border.Border(1,$[9],$[221]);
this.border_top_checked.setBottomWidth(0);
this.border_top_checked.setTop(3,$[9],$[415]);
this.border_bottom_normal=new qx.renderer.border.Border(1,$[9],$[221]);
this.border_bottom_normal.setTopWidth(0);
this.border_bottom_checked=new qx.renderer.border.Border(1,$[9],$[221]);
this.border_bottom_checked.setTopWidth(0);
this.border_bottom_checked.setBottom(3,$[9],$[415]);
},initial:function(vTheme){return vTheme.initialFrom($[187]);
},state:function(vTheme,vStates){var vReturn;
if(vStates.checked){vReturn={backgroundColor:this.bgcolor_checked,zIndex:1,paddingTop:2,paddingBottom:4,paddingLeft:7,paddingRight:8,border:vStates.barTop?this.border_top_checked:this.border_bottom_checked,marginTop:0,marginBottom:0,marginRight:-1,marginLeft:-2};
if(vStates.alignLeft){if(vStates.firstChild){vReturn.paddingLeft=6;
vReturn.paddingRight=7;
vReturn.marginLeft=0;
}}else{if(vStates.lastChild){vReturn.paddingLeft=8;
vReturn.paddingRight=5;
vReturn.marginRight=0;
}}}else{vReturn={backgroundColor:vStates.over?this.bgcolor_checked:this.bgcolor_normal,zIndex:0,paddingTop:2,paddingBottom:2,paddingLeft:5,paddingRight:6,marginRight:1,marginLeft:0};
if(vStates.alignLeft){if(vStates.firstChild){vReturn.paddingLeft=6;
vReturn.paddingRight=5;
}}else{if(vStates.lastChild){vReturn.paddingLeft=6;
vReturn.paddingRight=5;
vReturn.marginRight=0;
}}
if(vStates.barTop){vReturn.border=this.border_top_normal;
vReturn.marginTop=3;
vReturn.marginBottom=1;
}else{vReturn.border=this.border_bottom_normal;
vReturn.marginTop=1;
vReturn.marginBottom=3;
}}return vReturn;
}},"field-set":{setup:function(){this.bgcolor=new qx.renderer.color.ColorObject($[102]);
},initial:function(vTheme){return {backgroundColor:this.bgcolor};
}},"field-set-legend":{setup:function(){this.bgcolor=new qx.renderer.color.ColorObject($[102]);
},initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[187]),{top:1,left:10,backgroundColor:this.bgcolor,paddingRight:3,paddingLeft:4,marginRight:10});
}},"field-set-frame":{initial:function(vTheme){return {top:8,left:2,right:2,bottom:2,paddingTop:12,paddingRight:9,paddingBottom:12,paddingLeft:9,border:qx.renderer.border.BorderPresets.getInstance().groove};
}},"check-box-field-set-legend":{setup:function(){this.bgcolor=new qx.renderer.color.ColorObject($[102]);
},initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[187]),{top:1,left:10,backgroundColor:this.bgcolor,paddingRight:3});
}},"radio-button-field-set-legend":{initial:function(vTheme){return vTheme.initialFrom($[672]);
}},"spinner":{setup:function(){this.bgcolor=new qx.renderer.color.Color($[101]);
},initial:function(vTheme){return {width:60,height:22,border:qx.renderer.border.BorderPresets.getInstance().inset,backgroundColor:this.bgcolor};
}},"spinner-field":{initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[148]),{width:$[37],border:qx.renderer.border.BorderPresets.getInstance().none});
},state:function(vTheme,vStates){return vTheme.stateFrom($[148],vStates);
}},"spinner-button-up":{initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[278]),{height:$[37],width:16,backgroundColor:new qx.renderer.color.ColorObject($[102])});
},state:function(vTheme,vStates){return qx.lang.Object.mergeWith(vTheme.stateFrom($[118],vStates),{paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:3});
}},"spinner-button-down":{initial:function(vTheme){return qx.lang.Object.mergeWith(vTheme.initialFrom($[278]),{height:$[37],width:16,backgroundColor:new qx.renderer.color.ColorObject($[102])});
},state:function(vTheme,vStates){return qx.lang.Object.mergeWith(vTheme.stateFrom($[118],vStates),{paddingTop:1,paddingRight:0,paddingBottom:0,paddingLeft:3});
}},"colorselector":{setup:function(){this.border=qx.renderer.border.BorderPresets.getInstance().outset;
},initial:function(vTheme){return {border:this.border,width:$[5],height:$[5]};
},state:function(vTheme,vStates){}},"datechooser-toolbar-button":{setup:function(){this.bgcolor_default=new qx.renderer.color.ColorObject($[466]);
this.bgcolor_left=new qx.renderer.color.Color($[479]);
this.border_pressed=qx.renderer.border.BorderPresets.getInstance().thinInset;
this.border_over=qx.renderer.border.BorderPresets.getInstance().thinOutset;
this.border_default=null;
this.checked_background=$[413];
},initial:function(vTheme){return {cursor:$[48],spacing:4,width:$[5],verticalChildrenAlign:$[34]};
},state:function(vTheme,vStates){var vReturn={backgroundColor:vStates.abandoned?this.bgcolor_left:this.bgcolor_default,backgroundImage:(vStates.checked&&!vStates.over)?this.checked_background:null};
if(vStates.pressed||vStates.checked||vStates.abandoned){vReturn.border=this.border_pressed;
}else if(vStates.over){vReturn.border=this.border_over;
}else{vReturn.border=this.border_default;
}
if(vStates.pressed||vStates.checked||vStates.abandoned){vReturn.paddingTop=2;
vReturn.paddingRight=0;
vReturn.paddingBottom=0;
vReturn.paddingLeft=2;
}else if(vStates.over){vReturn.paddingTop=vReturn.paddingBottom=1;
vReturn.paddingLeft=vReturn.paddingRight=1;
}else{vReturn.paddingTop=vReturn.paddingBottom=2;
vReturn.paddingLeft=vReturn.paddingRight=2;
}return vReturn;
}},"datechooser-monthyear":{setup:function(){this.font=new qx.renderer.font.Font(13,$[125]);
},initial:function(vTheme){return {font:this.font,textAlign:$[74],verticalAlign:$[34]};
}},"datechooser-datepane":{setup:function(){this.border=new qx.renderer.border.Border(1,$[9],$[175]);
this.bgcolor=new qx.renderer.color.ColorObject($[131]);
},initial:function(vTheme){return {border:this.border,backgroundColor:this.bgcolor};
}},"datechooser-weekday":{setup:function(){this.border=new qx.renderer.border.Border;
this.border.set({bottomColor:$[175],bottomStyle:$[9],bottomWidth:1});
this.color=new qx.renderer.color.ColorObject($[131]);
this.bgcolor=new qx.renderer.color.ColorObject($[761]);
this.font=new qx.renderer.font.Font(11,$[125]);
this.font.setBold(true);
},initial:function(vTheme){return {border:this.border,font:this.font,textAlign:$[74]};
},state:function(vTheme,vStates){return {color:vStates.weekend?this.bgcolor:this.color,backgroundColor:vStates.weekend?this.color:this.bgcolor};
}},"datechooser-day":{setup:function(){this.font=new qx.renderer.font.Font(11,$[125]);
this.selectedColor=new qx.renderer.color.ColorObject($[1744]);
this.selectedBgColor=new qx.renderer.color.ColorObject($[250]);
this.color=new qx.renderer.color.ColorObject($[2220]);
this.otherMonthColor=new qx.renderer.color.ColorObject($[1647]);
this.transparentBorder=new qx.renderer.border.Border(1,$[33]);
},initial:function(vTheme){return {cursor:$[48],border:this.border,color:this.color,font:this.font,textAlign:$[74],verticalAlign:$[34],selectable:false};
},state:function(vTheme,vStates){return {border:vStates.today?qx.renderer.border.BorderPresets.getInstance().black:this.transparentBorder,color:vStates.selected?this.selectedColor:(vStates.otherMonth?this.otherMonthColor:this.color),backgroundColor:vStates.selected?this.selectedBgColor:null};
}},"datechooser-week":{setup:function(){this.border=new qx.renderer.border.Border;
this.border.set({rightColor:$[175],rightStyle:$[9],rightWidth:1});
this.headerBorder=new qx.renderer.border.Border;
this.headerBorder.set({rightColor:$[175],rightStyle:$[9],rightWidth:1,bottomColor:$[175],bottomStyle:$[9],bottomWidth:1});
this.color=new qx.renderer.color.ColorObject($[761]);
this.font=new qx.renderer.font.Font(11,$[125]);
},initial:function(vTheme){return {border:this.border,font:this.font,color:this.color,paddingLeft:2};
},state:function(vTheme,vStates){return {border:vStates.header?this.headerBorder:this.border};
}},"table-focus-statusbar":{setup:function(){this.font=new qx.renderer.font.Font(11,$[125]);
this.border=new qx.renderer.border.Border;
this.border.set({topColor:$[49],topStyle:$[9],topWidth:1});
},initial:function(vTheme){return {font:this.font,border:this.border,paddingLeft:2,paddingRight:2};
}},"table-focus-indicator":{setup:function(){this.border=new qx.renderer.border.Border(3,$[9],$[631]);
this.blurBorder=new qx.renderer.border.Border(3,$[9],$[1794]);
this.editingBorder=new qx.renderer.border.Border(2,$[9],$[631]);
},state:function(vTheme,vStates){return {border:vStates.editing?this.editingBorder:(vStates.tableHasFocus?this.border:this.blurBorder)};
}},"table-editor-textfield":{setup:function(){this.font=new qx.renderer.font.Font(11,$[125]);
},initial:function(vTheme){return {font:this.font,border:qx.renderer.border.BorderPresets.getInstance().none,paddingLeft:2,paddingRight:2,paddingTop:0,paddingBottom:0};
}},"table-header-cell":{setup:function(){this.border=new qx.renderer.border.Border;
this.border.set({rightColor:$[417],rightStyle:$[9],rightWidth:1,bottomColor:$[417],bottomStyle:$[9],bottomWidth:2});
this.mouseOverBorder=new qx.renderer.border.Border;
this.mouseOverBorder.set({rightColor:$[417],rightStyle:$[9],rightWidth:1,bottomColor:$[538],bottomStyle:$[9],bottomWidth:2});
this.mouseOverBackground=new qx.renderer.color.ColorObject($[101]);
this.background=new qx.renderer.color.ColorObject($[2053]);
},initial:function(vTheme){return {cursor:$[48],border:this.border,paddingLeft:2,paddingRight:2,spacing:2,overflow:$[26],selectable:false,backgroundColor:this.background,iconPosition:$[10],verticalChildrenAlign:$[34]};
},state:function(vTheme,vStates){return {backgroundColor:vStates.mouseover?this.mouseOverBackground:this.background,border:vStates.mouseover?this.mouseOverBorder:this.border};
}},"splitpane":{initial:function(vTheme){return {overflow:$[26]};
}},"splitpane-glasspane":{setup:function(){this.background=new qx.renderer.color.ColorObject($[49]);
},initial:function(vTheme){return {zIndex:1e7,backgroundColor:this.background};
},state:function(vTheme,vStates){return {opacity:vStates.visible?0.2:0};
}},"splitpane-splitter":{initial:function(vTheme){return {backgroundColor:$[102]};
},state:function(vTheme,vStates){return {cursor:vStates.horizontal?$[336]:$[353]};
}},"splitpane-slider":{initial:function(vTheme){return {opacity:0.5,zIndex:1e8};
},state:function(vTheme,vStates){return {backgroundColor:vStates.dragging?$[210]:$[102]};
}},"splitpane-knob":{state:function(vTheme,vStates){var vReturn={opacity:vStates.dragging?0.5:1.0};
if(vStates.horizontal){vReturn.top=$[564];
vReturn.left=null;
vReturn.marginLeft=-6;
vReturn.marginTop=0;
vReturn.cursor=$[336];
}else if(vStates.vertical){vReturn.top=null;
vReturn.left=$[564];
vReturn.marginTop=-6;
vReturn.marginLeft=0;
vReturn.cursor=$[353];
}return vReturn;
}}},qx.Super.prototype._appearances);
qx.Clazz.getInstance=qx.lang.Function.returnInstance;
qx.manager.object.AppearanceManager.getInstance().registerAppearanceTheme(qx.Clazz);




/* ID: qx.renderer.font.Font */
qx.OO.defineClass($[216],qx.core.Object,function(vSize,vName){qx.core.Object.call(this);
this._defs={};
if(vSize!=null){this.setSize(vSize);
}
if(vName!=null){this.setName(vName);
}});
qx.OO.addProperty({name:$[2106],type:$[2],impl:$[143]});
qx.OO.addProperty({name:$[97],type:$[0],impl:$[143]});
qx.OO.addProperty({name:$[283],type:$[3],defaultValue:false,impl:$[143]});
qx.OO.addProperty({name:$[371],type:$[3],defaultValue:false,impl:$[143]});
qx.OO.addProperty({name:$[447],type:$[3],defaultValue:false,impl:$[143]});
qx.OO.addProperty({name:$[359],type:$[3],defaultValue:false,impl:$[143]});
qx.Proto._modifyStyle=function(propValue,propOldValue,propData){this._needsCompilation=true;
return true;
};
qx.renderer.font.Font.fromString=function(s){var vFont=new qx.renderer.font.Font;
var vAllParts=s.split(/\s+/);
var vName=[];
var vPart;
for(var i=0;i<vAllParts.length;i++){switch(vPart=vAllParts[i]){case $[283]:vFont.setBold(true);
break;
case $[371]:vFont.setItalic(true);
break;
case $[447]:vFont.setUnderline(true);
break;
case $[359]:vFont.setStrikeout(true);
break;
default:var vTemp=parseFloat(vPart);
if(vTemp==vPart||qx.lang.String.contains(vPart,$[21])){vFont.setSize(vTemp);
}else{vName.push(vPart);
}break;
}}
if(vName.length>0){vFont.setName(vName.join($[44]));
}return vFont;
};
qx.Proto._needsCompilation=true;
qx.Proto._compile=function(){var vName=this.getName();
var vSize=this.getSize();
var vBold=this.getBold();
var vItalic=this.getItalic();
var vUnderline=this.getUnderline();
var vStrikeout=this.getStrikeout();
var vDecoration=$[1];
if(this.getUnderline()){vDecoration=$[447];
}
if(this.getStrikeout()){vDecoration+=$[44]+$[359];
}this._defs.fontFamily=vName||$[1];
this._defs.fontSize=typeof vSize==$[2]?vSize+$[21]:$[1];
this._defs.fontWeight=this.getBold()?$[283]:$[122];
this._defs.fontStyle=this.getItalic()?$[371]:$[122];
this._defs.textDecoration=vDecoration||$[1];
this._needsCompilation=false;
};
qx.Proto._applyWidget=function(vWidget){if(this._needsCompilation){this._compile();
}vWidget.setStyleProperty($[138],this._defs.fontFamily);
vWidget.setStyleProperty($[90],this._defs.fontSize);
vWidget.setStyleProperty($[156],this._defs.fontWeight);
vWidget.setStyleProperty($[150],this._defs.fontStyle);
vWidget.setStyleProperty($[161],this._defs.textDecoration);
};
qx.Proto._resetWidget=function(vWidget){vWidget.removeStyleProperty($[138]);
vWidget.removeStyleProperty($[90]);
vWidget.removeStyleProperty($[156]);
vWidget.removeStyleProperty($[150]);
vWidget.removeStyleProperty($[161]);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}delete this._defs;
return qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.renderer.font.FontObject */
qx.OO.defineClass($[1073],qx.renderer.font.Font,function(vSize,vName){this._dependentObjects={};
qx.renderer.font.Font.call(this,vSize,vName);
});
qx.Proto.addListenerWidget=function(o){this._dependentObjects[o.toHashCode()]=o;
};
qx.Proto.removeListenerWidget=function(o){delete this._dependentObjects[o.toHashCode()];
};
qx.Proto._sync=function(vEdge){var vAll=this._dependentObjects;
var vCurrent;
for(vKey in vAll){vCurrent=vAll[vKey];
if(vCurrent.isCreated()){vCurrent._updateFont(vEdge);
}}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(typeof this._dependentObjects===$[4]){for(vKey in this._dependentObjects){delete this._dependentObjects[vKey];
}delete this._dependentObjects;
}return qx.renderer.font.Font.prototype.dispose.call(this);
};




/* ID: qx.renderer.border.BorderPresets */
qx.OO.defineClass($[1913],qx.core.Object,function(){qx.core.Object.call(this);
this.black=new qx.renderer.border.Border(1,$[9],$[680]);
this.white=new qx.renderer.border.Border(1,$[9],$[101]);
this.none=new qx.renderer.border.Border(0,$[33]);
this.inset=new qx.renderer.border.BorderObject(2,$[60]);
this.outset=new qx.renderer.border.BorderObject(2,$[65]);
this.groove=new qx.renderer.border.BorderObject(2,$[92]);
this.ridge=new qx.renderer.border.BorderObject(2,$[99]);
this.thinInset=new qx.renderer.border.BorderObject(1,$[60]);
this.thinOutset=new qx.renderer.border.BorderObject(1,$[65]);
this.verticalDivider=new qx.renderer.border.BorderObject(1,$[60]);
this.verticalDivider.setLeftWidth(0);
this.verticalDivider.setRightWidth(0);
this.horizontalDivider=new qx.renderer.border.BorderObject(1,$[60]);
this.horizontalDivider.setTopWidth(0);
this.horizontalDivider.setBottomWidth(0);
this.shadow=new qx.renderer.border.BorderObject(1,$[9],$[49]);
this.lightShadow=new qx.renderer.border.BorderObject(1,$[9],$[124]);
this.info=new qx.renderer.border.BorderObject(1,$[9],$[2359]);
});
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.black=this.white=this.none=this.inset=this.outset=this.groove=this.ridge=this.thinInset=this.thinOutset=this.verticalDivider=this.horizontalDivider=this.shadow=this.lightShadow=this.info=null;
return qx.core.Object.prototype.dispose.call(this);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.component.init.InterfaceInitComponent */
qx.OO.defineClass($[517],qx.component.init.BasicInitComponent,function(){qx.component.init.BasicInitComponent.call(this);
});
qx.Proto._uiReady=false;
qx.Proto.isUiReady=function(){return this._uiReady;
};
qx.Proto.initialize=function(){qx.event.handler.EventHandler.getInstance();
qx.ui.core.ClientDocument.getInstance();
var start=(new Date).valueOf();
qx.component.init.BasicInitComponent.prototype.initialize.call(this);
this.info("initialize runtime: "+((new Date).valueOf()-start)+"ms");
};
qx.Proto.main=function(){var start=(new Date).valueOf();
qx.component.init.BasicInitComponent.prototype.main.call(this);
this.info("main runtime: "+((new Date).valueOf()-start)+"ms");
this.debug("preloading visible images...");
new qx.io.image.PreloaderSystem(qx.manager.object.ImageManager.getInstance().getPreloadImageList(),this.finalize,this);
};
qx.Proto.finalize=function(){var start=(new Date).valueOf();
this._printPreloadComplete();
this._uiReady=true;
qx.ui.core.Widget.flushGlobalQueues();
qx.event.handler.EventHandler.getInstance().attachEvents();
qx.component.init.BasicInitComponent.prototype.finalize.call(this);
this.info("finalize runtime: "+((new Date).valueOf()-start)+"ms");
};
qx.Proto.close=function(){var start=(new Date).valueOf();
qx.component.init.BasicInitComponent.prototype.close.call(this);
this.info("close runtime: "+((new Date).valueOf()-start)+"ms");
};
qx.Proto.terminate=function(){var start=(new Date).valueOf();
qx.component.init.BasicInitComponent.prototype.terminate.call(this);
this.info("terminate runtime: "+((new Date).valueOf()-start)+"ms");
};
qx.Proto.preload=function(){if(!this._preloadDone){this.debug("preloading hidden images...");
new qx.io.image.PreloaderSystem(qx.manager.object.ImageManager.getInstance().getPostPreloadImageList(),this._printPreloadComplete,this);
this._preloadDone=true;
}};
qx.Proto._printPreloadComplete=function(){this.debug("preloading complete");
};
qx.Proto._onload=function(e){this.initialize();
this.main();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._preloadDone=null;
this._uiReady=null;
return qx.component.init.BasicInitComponent.prototype.dispose.call(this);
};




/* ID: qx.event.type.DomEvent */
qx.OO.defineClass($[1788],qx.event.type.Event,function(vType,vDomEvent,vDomTarget,vTarget,vOriginalTarget){qx.event.type.Event.call(this,vType);
this.setDomEvent(vDomEvent);
this.setDomTarget(vDomTarget);
this.setTarget(vTarget);
this.setOriginalTarget(vOriginalTarget);
});
qx.OO.addFastProperty({name:$[603],defaultValue:true,noCompute:true});
qx.OO.addFastProperty({name:$[435],defaultValue:false,noCompute:true});
qx.OO.addFastProperty({name:$[2444],setOnlyOnce:true,noCompute:true});
qx.OO.addFastProperty({name:$[1717],setOnlyOnce:true,noCompute:true});
qx.OO.addCachedProperty({name:$[824],defaultValue:null});
qx.Proto._computeModifiers=function(){var mask=0;
var evt=this.getDomEvent();
if(evt.shiftKey)mask|=qx.event.type.DomEvent.SHIFT_MASK;
if(evt.ctrlKey)mask|=qx.event.type.DomEvent.CTRL_MASK;
if(evt.altKey)mask|=qx.event.type.DomEvent.ALT_MASK;
if(evt.metaKey)mask|=qx.event.type.DomEvent.META_MASK;
return mask;
};
qx.Proto.isCtrlPressed=function(){return this.getDomEvent().ctrlKey;
};
qx.Proto.getCtrlKey=qx.Proto.isCtrlPressed;
qx.Proto.isShiftPressed=function(){return this.getDomEvent().shiftKey;
};
qx.Proto.getShiftKey=qx.Proto.isShiftPressed;
qx.Proto.isAltPressed=function(){return this.getDomEvent().altKey;
};
qx.Proto.getAltKey=qx.Proto.isAltPressed;
qx.Proto.isMetaPressed=function(){return this.getDomEvent().metaKey;
};
qx.Proto.isCtrlOrCommandPressed=function(){if(qx.core.Client.getInstance().runsOnMacintosh()){return this.getDomEvent().metaKey;
}else{return this.getDomEvent().ctrlKey;
}};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto.setDefaultPrevented=function(vValue){if(!vValue){return this.error("It is not possible to set preventDefault to false if it was true before!","setDefaultPrevented");
}this.getDomEvent().returnValue=false;
qx.event.type.Event.prototype.setDefaultPrevented.call(this,vValue);
};
}else{qx.Proto.setDefaultPrevented=function(vValue){if(!vValue){return this.error("It is not possible to set preventDefault to false if it was true before!","setDefaultPrevented");
}this.getDomEvent().preventDefault();
this.getDomEvent().returnValue=false;
qx.event.type.Event.prototype.setDefaultPrevented.call(this,vValue);
};
}qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._valueDomEvent=null;
this._valueDomTarget=null;
return qx.event.type.Event.prototype.dispose.call(this);
};
qx.Clazz.SHIFT_MASK=1;
qx.Clazz.CTRL_MASK=2;
qx.Clazz.ALT_MASK=4;
qx.Clazz.META_MASK=8;




/* ID: qx.event.type.KeyEvent */
qx.OO.defineClass($[1582],qx.event.type.DomEvent,function(vType,vDomEvent,vDomTarget,vTarget,vOriginalTarget,vKeyCode,vCharCode,vKeyIdentifier){qx.event.type.DomEvent.call(this,vType,vDomEvent,vDomTarget,vTarget,vOriginalTarget);
this.setKeyCode(vKeyCode);
this.setCharCode(vCharCode);
this.setKeyIdentifier(vKeyIdentifier);
});
qx.OO.addFastProperty({name:$[602],setOnlyOnce:true,noCompute:true});
qx.OO.addFastProperty({name:$[2365],setOnlyOnce:true,noCompute:true});
qx.OO.addFastProperty({name:$[598],setOnlyOnce:true,noCompute:true});
qx.event.type.KeyEvent.keys={esc:27,enter:13,tab:9,space:32,up:38,down:40,left:37,right:39,shift:16,ctrl:17,alt:18,f1:112,f2:113,f3:114,f4:115,f5:116,f6:117,f7:118,f8:119,f9:120,f10:121,f11:122,f12:123,print:124,del:46,backspace:8,insert:45,home:36,end:35,pageup:33,pagedown:34,numlock:144,numpad_0:96,numpad_1:97,numpad_2:98,numpad_3:99,numpad_4:100,numpad_5:101,numpad_6:102,numpad_7:103,numpad_8:104,numpad_9:105,numpad_divide:111,numpad_multiply:106,numpad_minus:109,numpad_plus:107};
(function(){qx.event.type.KeyEvent.codes={};
for(var i in qx.event.type.KeyEvent.keys){qx.event.type.KeyEvent.codes[qx.event.type.KeyEvent.keys[i]]=i;
}})();




/* ID: qx.event.handler.KeyEventHandler */
qx.OO.defineClass($[1920],qx.core.Target,function(){qx.core.Target.call(this);
var o=this;
this.__onkeypress=function(e){o._onkeypress(e);
};
this.__onkeyupdown=function(e){o._onkeyupdown(e);
};
});
qx.Proto._attachEvents=function(){var el=qx.core.Client.getInstance().isGecko()?window:document.body;
qx.html.EventRegistration.addEventListener(el,$[14],this.__onkeypress);
qx.html.EventRegistration.addEventListener(el,$[76],this.__onkeyupdown);
qx.html.EventRegistration.addEventListener(el,$[13],this.__onkeyupdown);
};
qx.Proto._detachEvents=function(){var el=qx.core.Client.getInstance().isGecko()?window:document.body;
qx.html.EventRegistration.removeEventListener(el,$[14],this.__onkeypress);
qx.html.EventRegistration.removeEventListener(el,$[76],this.__onkeyupdown);
qx.html.EventRegistration.removeEventListener(el,$[13],this.__onkeyupdown);
};
qx.Proto._specialCharCodeMap={8:$[315],9:$[223],32:$[85]};
qx.Proto._keyCodeToIdentifierMap={13:$[45],16:$[171],17:$[153],18:$[164],20:$[615],224:$[289],27:$[96],37:$[55],38:$[73],39:$[56],40:$[71],33:$[75],34:$[88],35:$[144],36:$[130],45:$[245],46:$[234],112:$[494],113:$[339],114:$[254],115:$[604],116:$[579],117:$[605],118:$[623],119:$[648],120:$[656],121:$[568],122:$[542],123:$[521],144:$[155],44:$[311],145:$[369],19:$[330],91:$[422],93:$[408]};
qx.Proto._numpadToCharCode={96:$[36].charCodeAt(0),97:$[298].charCodeAt(0),98:$[403].charCodeAt(0),99:$[420].charCodeAt(0),100:$[374].charCodeAt(0),101:$[388].charCodeAt(0),102:$[354].charCodeAt(0),103:$[365].charCodeAt(0),104:$[367].charCodeAt(0),105:$[157].charCodeAt(0),106:$[168].charCodeAt(0),107:$[236].charCodeAt(0),109:$[57].charCodeAt(0),110:$[23].charCodeAt(0),111:$[127].charCodeAt(0)};
(function(){if(!qx.Proto._identifierToKeyCodeMap){qx.Proto._identifierToKeyCodeMap={};
for(var key in qx.Proto._keyCodeToIdentifierMap){qx.Proto._identifierToKeyCodeMap[qx.Proto._keyCodeToIdentifierMap[key]]=parseInt(key);
}
for(var key in qx.Proto._specialCharCodeMap){qx.Proto._identifierToKeyCodeMap[qx.Proto._specialCharCodeMap[key]]=parseInt(key);
}}})();
qx.Proto._charCodeA=$[121].charCodeAt(0);
qx.Proto._charCodeZ=$[451].charCodeAt(0);
qx.Proto._charCode0=$[36].charCodeAt(0);
qx.Proto._charCode9=$[157].charCodeAt(0);
qx.Proto._isNonPrintableKeyCode=function(keyCode){return this._keyCodeToIdentifierMap[keyCode]?true:false;
};
qx.Proto._isIdentifiableKeyCode=function(keyCode){if(keyCode>=this._charCodeA&&keyCode<=this._charCodeZ){return true;
}if(keyCode>=this._charCode0&&keyCode<=this._charCode9){return true;
}if(this._specialCharCodeMap[keyCode]){return true;
}if(this._numpadToCharCode[keyCode]){return true;
}if(this._isNonPrintableKeyCode(keyCode)){return true;
}return false;
};
qx.Proto.isValidKeyIdentifier=function(keyIdentifier){if(this._identifierToKeyCodeMap[keyIdentifier]){return true;
}
if(keyIdentifier.length!=1){return false;
}
if(keyIdentifier>=$[36]&&keyIdentifier<=$[157]){return true;
}
if(keyIdentifier>=$[121]&&keyIdentifier<=$[451]){return true;
}
switch(keyIdentifier){case $[236]:case $[57]:case $[168]:case $[127]:return true;
default:return false;
}};
qx.Proto._keyCodeToIdentifier=function(keyCode){if(this._isIdentifiableKeyCode(keyCode)){var numPadKeyCode=this._numpadToCharCode[keyCode];
if(numPadKeyCode){return String.fromCharCode(numPadKeyCode);
}return (this._keyCodeToIdentifierMap[keyCode]||this._specialCharCodeMap[keyCode]||String.fromCharCode(keyCode));
}else{return $[255];
}};
qx.Proto._charCodeToIdentifier=function(charCode){return this._specialCharCodeMap[charCode]||String.fromCharCode(charCode).toUpperCase();
};
qx.Proto._identifierToKeyCode=function(keyIdentifier){return this._identifierToKeyCodeMap[keyIdentifier]||keyIdentifier.charCodeAt(0);
};
qx.Proto._idealKeyHandler=function(keyCode,charCode,eventType,domEvent){if(!keyCode&&!charCode){return;
}var keyIdentifier;
if(keyCode){keyIdentifier=this._keyCodeToIdentifier(keyCode);
qx.event.handler.EventHandler.getInstance()._onkeyevent_post(domEvent,eventType,keyCode,charCode,keyIdentifier);
}else{keyIdentifier=this._charCodeToIdentifier(charCode);
qx.event.handler.EventHandler.getInstance()._onkeyevent_post(domEvent,$[14],keyCode,charCode,keyIdentifier);
qx.event.handler.EventHandler.getInstance()._onkeyevent_post(domEvent,$[224],keyCode,charCode,keyIdentifier);
}};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._lastUpDownType={};
qx.Proto._charCode2KeyCode={13:13,27:27};
qx.Proto._onkeyupdown=function(domEvent){domEvent=window.event||domEvent;
var keyCode=domEvent.keyCode;
var charcode=0;
var type=domEvent.type;
if(!(this._lastUpDownType[keyCode]==$[13]&&type==$[13])){this._idealKeyHandler(keyCode,charcode,type,domEvent);
}if(this._isNonPrintableKeyCode(keyCode)&&type==$[13]){this._idealKeyHandler(keyCode,charcode,$[14],domEvent);
}this._lastUpDownType[keyCode]=type;
};
qx.Proto._onkeypress=function(domEvent){domEvent=window.event||domEvent;
if(this._charCode2KeyCode[domEvent.keyCode]){this._idealKeyHandler(this._charCode2KeyCode[domEvent.keyCode],0,domEvent.type,domEvent);
}else{this._idealKeyHandler(0,domEvent.keyCode,domEvent.type,domEvent);
}};
}else if(qx.core.Client.getInstance().isGecko()){qx.Proto._lastUpDownType={};
qx.Proto._keyCodeFix={12:qx.Proto._identifierToKeyCode($[155])};
qx.Proto._onkeyupdown=qx.Proto._onkeypress=function(domEvent){var keyCode=this._keyCodeFix[domEvent.keyCode]||domEvent.keyCode;
var charCode=domEvent.charCode;
var type=domEvent.type;
if(qx.core.Client.getInstance().runsOnWindows()){var keyIdentifier=keyCode?this._keyCodeToIdentifier(keyCode):this._charCodeToIdentifier(charCode);
if(!(this._lastUpDownType[keyIdentifier]==$[14]&&type==$[13])){this._idealKeyHandler(keyCode,charCode,type,domEvent);
}this._lastUpDownType[keyIdentifier]=type;
}else{this._idealKeyHandler(keyCode,charCode,type,domEvent);
}};
}else if(qx.core.Client.getInstance().isWebkit()){qx.Proto._charCode2KeyCode={63289:qx.Proto._identifierToKeyCode($[155]),63276:qx.Proto._identifierToKeyCode($[75]),63277:qx.Proto._identifierToKeyCode($[88]),63275:qx.Proto._identifierToKeyCode($[144]),63273:qx.Proto._identifierToKeyCode($[130]),63234:qx.Proto._identifierToKeyCode($[55]),63232:qx.Proto._identifierToKeyCode($[73]),63235:qx.Proto._identifierToKeyCode($[56]),63233:qx.Proto._identifierToKeyCode($[71]),63272:qx.Proto._identifierToKeyCode($[234]),63302:qx.Proto._identifierToKeyCode($[245]),63236:qx.Proto._identifierToKeyCode($[494]),63237:qx.Proto._identifierToKeyCode($[339]),63238:qx.Proto._identifierToKeyCode($[254]),63239:qx.Proto._identifierToKeyCode($[604]),63240:qx.Proto._identifierToKeyCode($[579]),63241:qx.Proto._identifierToKeyCode($[605]),63242:qx.Proto._identifierToKeyCode($[623]),63243:qx.Proto._identifierToKeyCode($[648]),63244:qx.Proto._identifierToKeyCode($[656]),63245:qx.Proto._identifierToKeyCode($[568]),63246:qx.Proto._identifierToKeyCode($[542]),63247:qx.Proto._identifierToKeyCode($[521]),63248:qx.Proto._identifierToKeyCode($[311]),3:qx.Proto._identifierToKeyCode($[45]),12:qx.Proto._identifierToKeyCode($[155]),13:qx.Proto._identifierToKeyCode($[45])};
qx.Proto._onkeyupdown=qx.Proto._onkeypress=function(domEvent){var keyCode=0;
var charCode=0;
var type=domEvent.type;
if(qx.core.Client.getInstance().getVersion()<420){if(!this._lastCharCodeForType){this._lastCharCodeForType={};
}var isSafariSpecialKey=this._lastCharCodeForType[type]>63000;
if(isSafariSpecialKey){this._lastCharCodeForType[type]=null;
return;
}this._lastCharCodeForType[type]=domEvent.charCode;
}
if(type==$[76]||type==$[13]){keyCode=this._charCode2KeyCode[domEvent.charCode]||domEvent.keyCode;
}else{if(this._charCode2KeyCode[domEvent.charCode]){keyCode=this._charCode2KeyCode[domEvent.charCode];
}else{charCode=domEvent.charCode;
}}this._idealKeyHandler(keyCode,charCode,type,domEvent);
};
}else if(qx.core.Client.getInstance().isOpera()){qx.Proto._onkeyupdown=function(domEvent){this._idealKeyHandler(domEvent.keyCode,0,domEvent.type,domEvent);
};
qx.Proto._onkeypress=function(domEvent){if(this._keyCodeToIdentifierMap[domEvent.keyCode]){this._idealKeyHandler(domEvent.keyCode,0,domEvent.type,domEvent);
}else{this._idealKeyHandler(0,domEvent.keyCode,domEvent.type,domEvent);
}};
}qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._detachEvents();
this._specialCharCodeMap=this._keyCodeToIdentifierMap=this._numpadToCharCode=null;
this._identifierToKeyCodeMap=this._lastUpDownType=this._keyCodeFix=null;
return qx.core.Target.prototype.dispose.call(this);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.event.handler.EventHandler */
qx.OO.defineClass($[903],qx.core.Target,function(){qx.core.Target.call(this);
var o=this;
this.__onmouseevent=function(e){return o._onmouseevent(e);
};
this.__ondragevent=function(e){return o._ondragevent(e);
};
this.__onselectevent=function(e){return o._onselectevent(e);
};
this.__onwindowblur=function(e){return o._onwindowblur(e);
};
this.__onwindowfocus=function(e){return o._onwindowfocus(e);
};
this.__onwindowresize=function(e){return o._onwindowresize(e);
};
this._commands={};
});
qx.OO.addProperty({name:$[1269],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1903],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[2111],type:$[4],instance:$[167],allowNull:true});
qx.OO.addProperty({name:$[1052],type:$[4],instance:$[452],allowNull:true});
qx.Clazz.mouseEventTypes=[$[40],$[18],$[47],$[6],$[7],$[27],$[46],$[429],qx.core.Client.getInstance().isMshtml()?$[62]:$[608]];
qx.Clazz.keyEventTypes=[$[13],$[14],$[76]];
if(qx.core.Client.getInstance().isGecko()){qx.Clazz.dragEventTypes=[$[419],$[177],$[357],$[664],$[681]];
}else if(qx.core.Client.getInstance().isMshtml()){qx.Clazz.dragEventTypes=[$[707],$[177],$[208],$[618],$[357],$[522]];
}else{qx.Clazz.dragEventTypes=[$[208],$[419],$[177],$[618],$[522],$[357],$[664],$[681]];
}qx.Proto._lastMouseEventType=null;
qx.Proto._lastMouseDown=false;
qx.Proto._lastMouseEventDate=0;
qx.Proto._modifyCaptureWidget=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.setCapture(false);
}
if(propValue){propValue.setCapture(true);
}return true;
};
qx.Proto._modifyFocusRoot=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.setFocusedChild(null);
}
if(propValue){if(propValue.getFocusedChild()==null){propValue.setFocusedChild(propValue);
}}return true;
};
qx.Proto.addCommand=function(vCommand){this._commands[vCommand.toHashCode()]=vCommand;
};
qx.Proto.removeCommand=function(vCommand){delete this._commands[vCommand.toHashCode()];
};
qx.Proto._checkKeyEventMatch=function(e){var vCommand;
for(var vHash in this._commands){vCommand=this._commands[vHash];
if(vCommand.getEnabled()&&vCommand._matchesKeyEvent(e)){if(!vCommand.execute(e.getTarget())){e.preventDefault();
}break;
}}};
qx.Proto.attachEvents=function(){this.attachEventTypes(qx.event.handler.EventHandler.mouseEventTypes,this.__onmouseevent);
this.attachEventTypes(qx.event.handler.EventHandler.dragEventTypes,this.__ondragevent);
qx.event.handler.KeyEventHandler.getInstance()._attachEvents();
qx.html.EventRegistration.addEventListener(window,$[172],this.__onwindowblur);
qx.html.EventRegistration.addEventListener(window,$[227],this.__onwindowfocus);
qx.html.EventRegistration.addEventListener(window,$[496],this.__onwindowresize);
document.body.onselect=document.onselectstart=document.onselectionchange=this.__onselectevent;
};
qx.Proto.detachEvents=function(){this.detachEventTypes(qx.event.handler.EventHandler.mouseEventTypes,this.__onmouseevent);
this.detachEventTypes(qx.event.handler.EventHandler.dragEventTypes,this.__ondragevent);
qx.event.handler.KeyEventHandler.getInstance()._detachEvents();
qx.html.EventRegistration.removeEventListener(window,$[172],this.__onwindowblur);
qx.html.EventRegistration.removeEventListener(window,$[227],this.__onwindowfocus);
qx.html.EventRegistration.removeEventListener(window,$[496],this.__onwindowresize);
document.body.onselect=document.onselectstart=document.onselectionchange=null;
};
qx.Proto.attachEventTypes=function(vEventTypes,vFunctionPointer){try{var el=qx.core.Client.getInstance().isGecko()?window:document.body;
for(var i=0,l=vEventTypes.length;i<l;i++){qx.html.EventRegistration.addEventListener(el,vEventTypes[i],vFunctionPointer);
}}catch(ex){throw new Error("qx.event.handler.EventHandler: Failed to attach window event types: "+vEventTypes+": "+ex);
}};
qx.Proto.detachEventTypes=function(vEventTypes,vFunctionPointer){try{var el=qx.core.Client.getInstance().isGecko()?window:document.body;
for(var i=0,l=vEventTypes.length;i<l;i++){qx.html.EventRegistration.removeEventListener(el,vEventTypes[i],vFunctionPointer);
}}catch(ex){throw new Error("qx.event.handler.EventHandler: Failed to detach window event types: "+vEventTypes+": "+ex);
}};
qx.Clazz.getOriginalTargetObject=function(vNode){if(vNode==document.documentElement){vNode=document.body;
}while(vNode!=null&&vNode.qx_Widget==null){try{vNode=vNode.parentNode;
}catch(vDomEvent){vNode=null;
}}return vNode?vNode.qx_Widget:null;
};
if(qx.core.Client.getInstance().isWebkit()){qx.Clazz.getDomTarget=function(vDomEvent){var vNode=vDomEvent.target||vDomEvent.srcElement;
if(vNode&&(vNode.nodeType==qx.dom.Node.TEXT)){vNode=vNode.parentNode;
}return vNode;
};
}else if(qx.core.Client.getInstance().isMshtml()){qx.Clazz.getDomTarget=function(vDomEvent){return vDomEvent.target||vDomEvent.srcElement;
};
}else{qx.Clazz.getDomTarget=function(vDomEvent){return vDomEvent.target;
};
}qx.Clazz.getOriginalTargetObjectFromEvent=function(vDomEvent,vWindow){var vNode=qx.event.handler.EventHandler.getDomTarget(vDomEvent);
if(vWindow){var vDocument=vWindow.document;
if(vNode==vWindow||vNode==vDocument||vNode==vDocument.documentElement||vNode==vDocument.body){return vDocument.body.qx_Widget;
}}return qx.event.handler.EventHandler.getOriginalTargetObject(vNode);
};
qx.Clazz.getRelatedOriginalTargetObjectFromEvent=function(vDomEvent){return qx.event.handler.EventHandler.getOriginalTargetObject(vDomEvent.relatedTarget||(vDomEvent.type==$[40]?vDomEvent.fromElement:vDomEvent.toElement));
};
qx.Clazz.getTargetObject=function(vNode,vObject,allowDisabled){if(!vObject){var vObject=qx.event.handler.EventHandler.getOriginalTargetObject(vNode);
if(!vObject){return null;
}}while(vObject){if(!allowDisabled&&!vObject.getEnabled()){return null;
}if(!vObject.getAnonymous()){break;
}vObject=vObject.getParent();
}return vObject;
};
qx.Clazz.getTargetObjectFromEvent=function(vDomEvent){return qx.event.handler.EventHandler.getTargetObject(qx.event.handler.EventHandler.getDomTarget(vDomEvent));
};
qx.Clazz.getRelatedTargetObjectFromEvent=function(vDomEvent){var target=vDomEvent.relatedTarget;
if(!target){if(vDomEvent.type==$[40]){target=vDomEvent.fromElement;
}else{target=vDomEvent.toElement;
}}return qx.event.handler.EventHandler.getTargetObject(target);
};
qx.Clazz.stopDomEvent=function(vDomEvent){};
if(qx.core.Client.getInstance().isMshtml()){qx.Clazz.stopDomEvent=function(vDomEvent){vDomEvent.returnValue=false;
};
}else{qx.Clazz.stopDomEvent=function(vDomEvent){vDomEvent.preventDefault();
vDomEvent.returnValue=false;
};
}qx.Proto._onkeyevent_post=function(vDomEvent,vType,vKeyCode,vCharCode,vKeyIdentifier){var vDomTarget=qx.event.handler.EventHandler.getDomTarget(vDomEvent);
var vFocusRoot=this.getFocusRoot();
var vTarget=this.getCaptureWidget()||(vFocusRoot==null?null:vFocusRoot.getActiveChild());
if(vTarget==null||!vTarget.getEnabled()){return false;
}var vDomEventTarget=vTarget.getElement();
switch(vKeyIdentifier){case $[96]:case $[223]:if(qx.OO.isAvailable($[191])){qx.manager.object.MenuManager.getInstance().update(vTarget,vType);
}break;
}if(!this.getAllowClientSelectAll()){if(vDomEvent.ctrlKey&&vKeyIdentifier==$[121]){switch(vDomTarget.tagName.toLowerCase()){case $[87]:case $[288]:case $[232]:break;
default:qx.event.handler.EventHandler.stopDomEvent(vDomEvent);
}}}var vKeyEventObject=new qx.event.type.KeyEvent(vType,vDomEvent,vDomTarget,vTarget,null,vKeyCode,vCharCode,vKeyIdentifier);
if(vType==$[13]){this._checkKeyEventMatch(vKeyEventObject);
}
try{vTarget.dispatchEvent(vKeyEventObject);
if(qx.OO.isAvailable($[309])){qx.event.handler.DragAndDropHandler.getInstance().handleKeyEvent(vKeyEventObject);
}}catch(ex){this.error("Failed to dispatch key event",ex);
this.createDispatchDataEvent($[106],ex);
}vKeyEventObject.dispose();
qx.ui.core.Widget.flushGlobalQueues();
};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._onmouseevent=function(vDomEvent){qx.core.Init.getInstance().getComponent().preload();
if(!vDomEvent){vDomEvent=window.event;
}var vDomTarget=qx.event.handler.EventHandler.getDomTarget(vDomEvent);
var vType=vDomEvent.type;
if(vType==$[18]){if(this._mouseIsDown&&vDomEvent.button==0){this._onmouseevent_post(vDomEvent,$[7]);
this._mouseIsDown=false;
}}else{if(vType==$[6]){this._mouseIsDown=true;
}else if(vType==$[7]){this._mouseIsDown=false;
}if(vType==$[7]&&!this._lastMouseDown&&((new Date).valueOf()-this._lastMouseEventDate)<250){this._onmouseevent_post(vDomEvent,$[6]);
}else if(vType==$[46]&&this._lastMouseEventType==$[7]&&((new Date).valueOf()-this._lastMouseEventDate)<250){this._onmouseevent_post(vDomEvent,$[27]);
}
switch(vType){case $[6]:case $[7]:case $[27]:case $[46]:case $[429]:this._lastMouseEventType=vType;
this._lastMouseEventDate=(new Date).valueOf();
this._lastMouseDown=vType==$[6];
}}this._onmouseevent_post(vDomEvent,vType,vDomTarget);
};
}else{qx.Proto._onmouseevent=function(vDomEvent){qx.core.Init.getInstance().getComponent().preload();
var vDomTarget=qx.event.handler.EventHandler.getDomTarget(vDomEvent);
var vType=vDomEvent.type;
switch(vType){case $[608]:vType=$[62];
break;
case $[27]:case $[46]:if(vDomEvent.which!==1){return;
}}this._onmouseevent_post(vDomEvent,vType,vDomTarget);
};
}if(qx.core.Client.getInstance().isGecko()){qx.Proto._onmouseevent_click_fix=function(vDomTarget,vType,vDispatchTarget){var vReturn=false;
switch(vType){case $[6]:this._lastMouseDownDomTarget=vDomTarget;
this._lastMouseDownDispatchTarget=vDispatchTarget;
break;
case $[7]:if(this._lastMouseDownDispatchTarget===vDispatchTarget&&vDomTarget!==this._lastMouseDownDomTarget){vReturn=true;
}else{this._lastMouseDownDomTarget=null;
this._lastMouseDownDispatchTarget=null;
}}return vReturn;
};
}else{qx.Proto._onmouseevent_click_fix=function(vDomTarget,vDispatchTarget){return false;
};
}qx.Proto._onmouseevent_post=function(vDomEvent,vType,vDomTarget){try{var vEventObject,vCaptureTarget,vDispatchTarget,vTarget,vOriginalTarget,vRelatedTarget,vFixClick,vTargetIsEnabled;
vCaptureTarget=this.getCaptureWidget();
vOriginalTarget=qx.event.handler.EventHandler.getOriginalTargetObject(vDomTarget);
if(!vCaptureTarget){vDispatchTarget=vTarget=qx.event.handler.EventHandler.getTargetObject(null,vOriginalTarget,true);
}else{vDispatchTarget=vCaptureTarget;
vTarget=qx.event.handler.EventHandler.getTargetObject(null,vOriginalTarget,true);
}if(!vTarget){return;
}vTargetIsEnabled=vTarget.getEnabled();
vFixClick=this._onmouseevent_click_fix(vDomTarget,vType,vDispatchTarget);
if(vType==$[429]&&!this.getAllowClientContextMenu()){qx.event.handler.EventHandler.stopDomEvent(vDomEvent);
}if(vTargetIsEnabled&&vType==$[6]){qx.event.handler.FocusHandler.mouseFocus=true;
var vRoot=vTarget.getFocusRoot();
if(vRoot){this.setFocusRoot(vRoot);
vRoot.setActiveChild(vTarget);
var vFocusTarget=vTarget;
while(!vFocusTarget.isFocusable()&&vFocusTarget!=vRoot){vFocusTarget=vFocusTarget.getParent();
}vRoot.setFocusedChild(vFocusTarget);
}}var vDomEventTarget=vTarget.getElement();
switch(vType){case $[40]:case $[47]:vRelatedTarget=qx.event.handler.EventHandler.getRelatedTargetObjectFromEvent(vDomEvent);
if(vRelatedTarget==vTarget){return;
}}
try{vEventObject=new qx.event.type.MouseEvent(vType,vDomEvent,vDomTarget,vTarget,vOriginalTarget,vRelatedTarget);
}catch(ex){return this.error("Failed to create mouse event",ex);
}qx.event.type.MouseEvent._storeEventState(vEventObject);
if(vTargetIsEnabled){var vEventWasProcessed=false;
try{vEventWasProcessed=vDispatchTarget?vDispatchTarget.dispatchEvent(vEventObject):true;
this._onmouseevent_special_post(vType,vTarget,vOriginalTarget,vDispatchTarget,vEventWasProcessed,vEventObject,vDomEvent);
}catch(ex){this.error("Failed to dispatch mouse event",ex);
this.createDispatchDataEvent($[106],ex);
}}else{if(vType==$[40]){if(qx.OO.isAvailable($[135])){qx.manager.object.ToolTipManager.getInstance().handleMouseOver(vEventObject);
}}}vEventObject.dispose();
vEventObject=null;
qx.ui.core.Widget.flushGlobalQueues();
if(vFixClick){this._onmouseevent_post(vDomEvent,$[27],this._lastMouseDownDomTarget);
this._lastMouseDownDomTarget=null;
this._lastMouseDownDispatchTarget=null;
}}catch(ex){return this.error("Failed to handle mouse event",ex);
}};
qx.Proto._onmouseevent_special_post=function(vType,vTarget,vOriginalTarget,vDispatchTarget,vEventWasProcessed,vEventObject,vDomEvent){switch(vType){case $[6]:if(qx.OO.isAvailable($[204])){qx.manager.object.PopupManager.getInstance().update(vTarget);
}
if(qx.OO.isAvailable($[191])){qx.manager.object.MenuManager.getInstance().update(vTarget,vType);
}
if(qx.OO.isAvailable($[477])){qx.manager.object.IframeManager.getInstance().handleMouseDown(vEventObject);
}break;
case $[7]:if(qx.OO.isAvailable($[191])){qx.manager.object.MenuManager.getInstance().update(vTarget,vType);
}
if(qx.OO.isAvailable($[477])){qx.manager.object.IframeManager.getInstance().handleMouseUp(vEventObject);
}break;
case $[40]:if(qx.OO.isAvailable($[135])){qx.manager.object.ToolTipManager.getInstance().handleMouseOver(vEventObject);
}break;
case $[47]:if(qx.OO.isAvailable($[135])){qx.manager.object.ToolTipManager.getInstance().handleMouseOut(vEventObject);
}break;
case $[62]:vEventWasProcessed?this._onmousewheel(vOriginalTarget||vDispatchTarget,vEventObject):qx.event.handler.EventHandler.stopDomEvent(vDomEvent);
break;
}this._ignoreWindowBlur=vType===$[6];
if(qx.OO.isAvailable($[309])&&vTarget){qx.event.handler.DragAndDropHandler.getInstance().handleMouseEvent(vEventObject);
}};
if(qx.core.Client.getInstance().isGecko()){qx.Proto._onmousewheel=function(vTarget,vEvent){if(vTarget==null){return;
}if(vTarget.getOverflowY()==$[26]){return this._onmousewheel(vTarget.getParent(),vEvent);
}var vScrollTop=vTarget.getScrollTop();
var vDelta=20*vEvent.getWheelDelta();
if(vScrollTop==0&&vDelta>0){return this._onmousewheel(vTarget.getParent(),vEvent);
}var vScrollHeight=vTarget.getScrollHeight();
var vClientHeight=vTarget.getClientHeight();
if(vScrollTop+vClientHeight>=vScrollHeight&&vDelta<0){return this._onmousewheel(vTarget.getParent(),vEvent);
}vTarget.setScrollTop(vScrollTop-vDelta);
vEvent.preventDefault();
};
}else{qx.Proto._onmousewheel=function(){};
}qx.Proto._ondragevent=function(vEvent){if(!vEvent){vEvent=window.event;
}qx.event.handler.EventHandler.stopDomEvent(vEvent);
};
qx.Proto._onselectevent=function(e){if(!e){e=window.event;
}var vTarget=qx.event.handler.EventHandler.getOriginalTargetObjectFromEvent(e);
if(vTarget&&!vTarget.getSelectable()){qx.event.handler.EventHandler.stopDomEvent(e);
}};
qx.Proto._focused=false;
qx.Proto._onwindowblur=function(e){if(!this._focused||this._ignoreWindowBlur){return;
}this._focused=false;
this.setCaptureWidget(null);
if(qx.OO.isAvailable($[204])){qx.manager.object.PopupManager.getInstance().update();
}if(qx.OO.isAvailable($[191])){qx.manager.object.MenuManager.getInstance().update();
}if(qx.OO.isAvailable($[309])){qx.event.handler.DragAndDropHandler.getInstance().globalCancelDrag();
}qx.ui.core.ClientDocument.getInstance().createDispatchEvent($[414]);
};
qx.Proto._onwindowfocus=function(e){if(this._focused){return;
}this._focused=true;
qx.ui.core.ClientDocument.getInstance().createDispatchEvent($[1294]);
};
qx.Proto._onwindowresize=function(e){qx.ui.core.ClientDocument.getInstance().createDispatchEvent($[405]);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.detachEvents();
this.__onmouseevent=this.__ondragevent=this.__onselectevent=null;
this.__onwindowblur=this.__onwindowfocus=this.__onwindowresize=null;
this._lastMouseEventType=null;
this._lastMouseDown=null;
this._lastMouseEventDate=null;
this._lastMouseDownDomTarget=null;
this._lastMouseDownDispatchTarget=null;
if(this._commands){for(var vHash in this._commands){this._commands[vHash].dispose();
delete this._commands[vHash];
}this._commands=null;
}qx.core.Target.prototype.dispose.call(this);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.ui.core.Widget */
qx.OO.defineClass($[167],qx.core.Target,function(){if(this.classname==qx.ui.core.Widget.ABSTRACT_CLASS){throw new Error("Please omit the usage of qx.ui.core.Widget directly. Choose between qx.ui.core.Parent and qx.ui.basic.Terminator instead!");
}qx.core.Target.call(this,true);
this._styleProperties={position:$[91]};
this._layoutChanges={};
this._states={};
this._applyInitialAppearance();
});
qx.Clazz.ABSTRACT_CLASS="qx.ui.core.Widget";
qx.Clazz.SCROLLBAR_SIZE=16;
qx.Settings.setDefault($[708],false);
qx.OO.addProperty({name:$[202],type:$[4],instance:$[452],defaultValue:null});
qx.OO.addProperty({name:$[1797],dispose:true});
qx.OO.addProperty({name:$[136],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[113],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1700],type:$[3],defaultValue:false,getAlias:$[1981]});
qx.OO.addProperty({name:$[783],type:$[0],defaultValue:$[50]});
qx.OO.addProperty({name:$[779],type:$[0]});
qx.OO.addProperty({name:$[549],type:$[0]});
qx.OO.addProperty({name:$[1943],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[836],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[237],type:$[2]});
qx.OO.addProperty({name:$[348],type:$[4],instance:$[137],convert:qx.renderer.color.ColorCache,allowMultipleArguments:true});
qx.OO.addProperty({name:$[443],type:$[4],instance:$[137],convert:qx.renderer.color.ColorCache,allowMultipleArguments:true});
qx.OO.addProperty({name:$[881],type:$[4],instance:$[738],convert:qx.renderer.border.BorderCache,allowMultipleArguments:true});
qx.OO.addProperty({name:$[358],type:$[2]});
qx.OO.addProperty({name:$[198],type:$[0]});
qx.OO.addProperty({name:$[424],type:$[0]});
qx.OO.addProperty({name:$[189],type:$[0],addToQueue:true});
qx.OO.addProperty({name:$[467],type:$[2],impl:$[183]});
qx.OO.addProperty({name:$[431],type:$[2],impl:$[183]});
qx.OO.addProperty({name:$[476],type:$[2],impl:$[183]});
qx.OO.addProperty({name:$[370],type:$[2],impl:$[183]});
qx.OO.addProperty({name:$[256],type:$[2],defaultValue:-1});
qx.OO.addProperty({name:$[2282],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1817],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[159],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1434],type:$[3],defaultValue:true,getAlias:$[884]});
qx.OO.addProperty({name:$[697],type:$[4],instance:$[319]});
qx.OO.addProperty({name:$[883],type:$[4],instance:$[308]});
qx.OO.addProperty({name:$[1637],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1902]});
qx.OO.addProperty({name:$[1629],type:$[4],instance:$[710]});
qx.OO.addProperty({name:$[8],type:$[0]});
qx.OO.addProperty({name:$[410],type:$[2],addToQueue:true,impl:$[556]});
qx.OO.addProperty({name:$[426],type:$[2],addToQueue:true,impl:$[535]});
qx.OO.addProperty({name:$[461],type:$[2],addToQueue:true,impl:$[556]});
qx.OO.addProperty({name:$[475],type:$[2],addToQueue:true,impl:$[535]});
qx.OO.addProperty({name:$[154],type:$[2],addToQueue:true,impl:$[773]});
qx.OO.addProperty({name:$[160],type:$[2],addToQueue:true,impl:$[789]});
qx.OO.addProperty({name:$[162],type:$[2],addToQueue:true,impl:$[773]});
qx.OO.addProperty({name:$[151],type:$[2],addToQueue:true,impl:$[789]});
qx.OO.addProperty({name:$[11],addToQueue:true,unitDetection:$[117]});
qx.OO.addProperty({name:$[10],addToQueue:true,unitDetection:$[117]});
qx.OO.addProperty({name:$[42],addToQueue:true,unitDetection:$[636]});
qx.OO.addProperty({name:$[86],addToQueue:true,unitDetection:$[282]});
qx.OO.addProperty({name:$[108],addToQueue:true,unitDetection:$[282]});
qx.OO.addProperty({name:$[12],addToQueue:true,unitDetection:$[117]});
qx.OO.addProperty({name:$[16],addToQueue:true,unitDetection:$[117]});
qx.OO.addProperty({name:$[43],addToQueue:true,unitDetection:$[636]});
qx.OO.addProperty({name:$[100],addToQueue:true,unitDetection:$[282]});
qx.OO.addProperty({name:$[116],addToQueue:true,unitDetection:$[282]});
qx.OO.addPropertyGroup({name:$[77],members:[$[11],$[12]]});
qx.OO.addPropertyGroup({name:$[248],members:[$[42],$[43]]});
qx.OO.addPropertyGroup({name:$[1726],members:[$[11],$[42],$[12],$[43]]});
qx.OO.addPropertyGroup({name:$[907],members:[$[12],$[10],$[16],$[11]],mode:$[231]});
qx.OO.addPropertyGroup({name:$[513],members:[$[154],$[160],$[162],$[151]],mode:$[231]});
qx.OO.addPropertyGroup({name:$[643],members:[$[410],$[426],$[461],$[475]],mode:$[231]});
qx.OO.addPropertyGroup({name:$[2065],members:[$[100],$[43],$[116]]});
qx.OO.addPropertyGroup({name:$[1110],members:[$[86],$[42],$[108]]});
qx.OO.addPropertyGroup({name:$[1031],members:[$[779],$[549]]});
qx.OO.addPropertyGroup({name:$[1756],members:[$[1510],$[1393]]});
qx.OO.addPropertyGroup({name:$[1960],members:[$[467],$[431]]});
qx.OO.addPropertyGroup({name:$[1485],members:[$[476],$[370]]});
qx.OO.addPropertyGroup({name:$[183],members:[$[467],$[431],$[476],$[370]]});
qx.ui.core.Widget._autoFlushTimeout=null;
qx.ui.core.Widget._initAutoFlush=function(){if(qx.ui.core.Widget._autoFlushTimeout==null){qx.ui.core.Widget._autoFlushTimeout=window.setTimeout(qx.ui.core.Widget._autoFlushHelper,0);
}};
qx.ui.core.Widget._removeAutoFlush=function(){if(qx.ui.core.Widget._autoFlushTimeout!=null){window.clearTimeout(qx.ui.core.Widget._autoFlushTimeout);
qx.ui.core.Widget._autoFlushTimeout=null;
}};
qx.ui.core.Widget._autoFlushHelper=function(){qx.ui.core.Widget._autoFlushTimeout=null;
if(!qx.core.Object.inGlobalDispose()){qx.ui.core.Widget.flushGlobalQueues();
}};
qx.ui.core.Widget.flushGlobalQueues=function(){};
if(qx.Settings.getValueOfClass($[167],$[708])){qx.ui.core.Widget.flushGlobalQueues=function(){if(qx.ui.core.Widget._autoFlushTimeout!=null){qx.ui.core.Widget._removeAutoFlush();
}
if(qx.ui.core.Widget._inFlushGlobalQueues||!qx.core.Init.getInstance().getComponent().isUiReady()){return;
}
if(!(qx.ui.core.Widget._globalWidgetQueue.length>0||qx.ui.core.Widget._globalElementQueue.length>0||qx.ui.core.Widget._globalStateQueue.length>0||qx.ui.core.Widget._globalJobQueue.length>0||qx.ui.core.Widget._globalLayoutQueue.length>0||qx.ui.core.Widget._fastGlobalDisplayQueue.length>0||!qx.lang.Object.isEmpty(qx.ui.core.Widget._lazyGlobalDisplayQueue))){return;
}var globalWidgetQueueLength=qx.ui.core.Widget._globalWidgetQueue.length;
var globalElementQueueLength=qx.ui.core.Widget._globalElementQueue.length;
var globalStateQueueLength=qx.ui.core.Widget._globalStateQueue.length;
var globalJobQueueLength=qx.ui.core.Widget._globalJobQueue.length;
var globalLayoutQueueLength=qx.ui.core.Widget._globalLayoutQueue.length;
var fastGlobalDisplayQueueLength=qx.ui.core.Widget._fastGlobalDisplayQueue.length;
var lazyGlobalDisplayQueueLength=qx.ui.core.Widget._lazyGlobalDisplayQueue?qx.ui.core.Widget._lazyGlobalDisplayQueue.length:0;
qx.ui.core.Widget._inFlushGlobalQueues=true;
var vStart;
vStart=(new Date).valueOf();
qx.ui.core.Widget.flushGlobalWidgetQueue();
var vWidgetDuration=(new Date).valueOf()-vStart;
vStart=(new Date).valueOf();
qx.ui.core.Widget.flushGlobalStateQueue();
var vStateDuration=(new Date).valueOf()-vStart;
vStart=(new Date).valueOf();
qx.ui.core.Widget.flushGlobalElementQueue();
var vElementDuration=(new Date).valueOf()-vStart;
vStart=(new Date).valueOf();
qx.ui.core.Widget.flushGlobalJobQueue();
var vJobDuration=(new Date).valueOf()-vStart;
vStart=(new Date).valueOf();
qx.ui.core.Widget.flushGlobalLayoutQueue();
var vLayoutDuration=(new Date).valueOf()-vStart;
vStart=(new Date).valueOf();
qx.ui.core.Widget.flushGlobalDisplayQueue();
var vDisplayDuration=(new Date).valueOf()-vStart;
var vSum=vWidgetDuration+vStateDuration+vElementDuration+vJobDuration+vLayoutDuration+vDisplayDuration;
if(vSum>0){var logger=qx.log.Logger.getClassLogger(qx.ui.core.Widget);
logger.debug("Flush Global Queues");
logger.debug("Widgets: "+vWidgetDuration+"ms ("+globalWidgetQueueLength+")");
logger.debug("State: "+vStateDuration+"ms ("+globalStateQueueLength+")");
logger.debug("Element: "+vElementDuration+"ms ("+globalElementQueueLength+")");
logger.debug("Job: "+vJobDuration+"ms ("+globalJobQueueLength+")");
logger.debug("Layout: "+vLayoutDuration+"ms ("+globalLayoutQueueLength+")");
logger.debug("Display: "+vDisplayDuration+"ms (fast:"+fastGlobalDisplayQueueLength+",lazy:"+lazyGlobalDisplayQueueLength+")");
window.status=$[1619]+vWidgetDuration+$[2464]+vStateDuration+$[1567]+vElementDuration+$[1482]+vJobDuration+$[1771]+vLayoutDuration+$[1845]+vDisplayDuration;
}delete qx.ui.core.Widget._inFlushGlobalQueues;
};
}else{qx.ui.core.Widget.flushGlobalQueues=function(){if(qx.ui.core.Widget._autoFlushTimeout!=null){qx.ui.core.Widget._removeAutoFlush();
}
if(qx.ui.core.Widget._inFlushGlobalQueues||!qx.core.Init.getInstance().getComponent().isUiReady()){return;
}qx.ui.core.Widget._inFlushGlobalQueues=true;
qx.ui.core.Widget.flushGlobalWidgetQueue();
qx.ui.core.Widget.flushGlobalStateQueue();
qx.ui.core.Widget.flushGlobalElementQueue();
qx.ui.core.Widget.flushGlobalJobQueue();
qx.ui.core.Widget.flushGlobalLayoutQueue();
qx.ui.core.Widget.flushGlobalDisplayQueue();
delete qx.ui.core.Widget._inFlushGlobalQueues;
};
}qx.ui.core.Widget._globalWidgetQueue=[];
qx.ui.core.Widget.addToGlobalWidgetQueue=function(vWidget){if(!vWidget._isInGlobalWidgetQueue&&vWidget._isDisplayable){if(qx.ui.core.Widget._autoFlushTimeout==null){qx.ui.core.Widget._initAutoFlush();
}qx.ui.core.Widget._globalWidgetQueue.push(vWidget);
vWidget._isInGlobalWidgetQueue=true;
}};
qx.ui.core.Widget.removeFromGlobalWidgetQueue=function(vWidget){if(vWidget._isInGlobalWidgetQueue){qx.lang.Array.remove(qx.ui.core.Widget._globalWidgetQueue,vWidget);
delete vWidget._isInGlobalWidgetQueue;
}};
qx.ui.core.Widget.flushGlobalWidgetQueue=function(){var vQueue=qx.ui.core.Widget._globalWidgetQueue,vLength,vWidget;
while((vLength=vQueue.length)>0){for(var i=0;i<vLength;i++){vWidget=vQueue[i];
vWidget.flushWidgetQueue();
delete vWidget._isInGlobalWidgetQueue;
}vQueue.splice(0,vLength);
}};
qx.ui.core.Widget._globalElementQueue=[];
qx.ui.core.Widget.addToGlobalElementQueue=function(vWidget){if(!vWidget._isInGlobalElementQueue&&vWidget._isDisplayable){if(qx.ui.core.Widget._autoFlushTimeout==null){qx.ui.core.Widget._initAutoFlush();
}qx.ui.core.Widget._globalElementQueue.push(vWidget);
vWidget._isInGlobalElementQueue=true;
}};
qx.ui.core.Widget.removeFromGlobalElementQueue=function(vWidget){if(vWidget._isInGlobalElementQueue){qx.lang.Array.remove(qx.ui.core.Widget._globalElementQueue,vWidget);
delete vWidget._isInGlobalElementQueue;
}};
qx.ui.core.Widget.flushGlobalElementQueue=function(){var vQueue=qx.ui.core.Widget._globalElementQueue,vLength,vWidget;
while((vLength=vQueue.length)>0){for(var i=0;i<vLength;i++){vWidget=vQueue[i];
vWidget._createElementImpl();
delete vWidget._isInGlobalElementQueue;
}vQueue.splice(0,vLength);
}};
qx.ui.core.Widget._globalStateQueue=[];
qx.ui.core.Widget.addToGlobalStateQueue=function(vWidget){if(!vWidget._isInGlobalStateQueue&&vWidget._isDisplayable){if(qx.ui.core.Widget._autoFlushTimeout==null){qx.ui.core.Widget._initAutoFlush();
}qx.ui.core.Widget._globalStateQueue.push(vWidget);
vWidget._isInGlobalStateQueue=true;
}};
qx.ui.core.Widget.removeFromGlobalStateQueue=function(vWidget){if(vWidget._isInGlobalStateQueue){qx.lang.Array.remove(qx.ui.core.Widget._globalStateQueue,vWidget);
delete vWidget._isInGlobalStateQueue;
}};
qx.ui.core.Widget.flushGlobalStateQueue=function(){var vQueue=qx.ui.core.Widget._globalStateQueue,vLength,vWidget;
while((vLength=vQueue.length)>0){for(var i=0;i<vLength;i++){vWidget=vQueue[i];
vWidget._applyStateAppearance();
delete vWidget._isInGlobalStateQueue;
}vQueue.splice(0,vLength);
}};
qx.ui.core.Widget._globalJobQueue=[];
qx.ui.core.Widget.addToGlobalJobQueue=function(vWidget){if(!vWidget._isInGlobalJobQueue&&vWidget._isDisplayable){if(qx.ui.core.Widget._autoFlushTimeout==null){qx.ui.core.Widget._initAutoFlush();
}qx.ui.core.Widget._globalJobQueue.push(vWidget);
vWidget._isInGlobalJobQueue=true;
}};
qx.ui.core.Widget.removeFromGlobalJobQueue=function(vWidget){if(vWidget._isInGlobalJobQueue){qx.lang.Array.remove(qx.ui.core.Widget._globalJobQueue,vWidget);
delete vWidget._isInGlobalJobQueue;
}};
qx.ui.core.Widget.flushGlobalJobQueue=function(){var vQueue=qx.ui.core.Widget._globalJobQueue,vLength,vWidget;
while((vLength=vQueue.length)>0){for(var i=0;i<vLength;i++){vWidget=vQueue[i];
vWidget._flushJobQueue(vWidget._jobQueue);
delete vWidget._isInGlobalJobQueue;
}vQueue.splice(0,vLength);
}};
qx.ui.core.Widget._globalLayoutQueue=[];
qx.ui.core.Widget.addToGlobalLayoutQueue=function(vParent){if(!vParent._isInGlobalLayoutQueue&&vParent._isDisplayable){if(qx.ui.core.Widget._autoFlushTimeout==null){qx.ui.core.Widget._initAutoFlush();
}qx.ui.core.Widget._globalLayoutQueue.push(vParent);
vParent._isInGlobalLayoutQueue=true;
}};
qx.ui.core.Widget.removeFromGlobalLayoutQueue=function(vParent){if(vParent._isInGlobalLayoutQueue){qx.lang.Array.remove(qx.ui.core.Widget._globalLayoutQueue,vParent);
delete vParent._isInGlobalLayoutQueue;
}};
qx.ui.core.Widget.flushGlobalLayoutQueue=function(){var vQueue=qx.ui.core.Widget._globalLayoutQueue,vLength,vParent;
while((vLength=vQueue.length)>0){for(var i=0;i<vLength;i++){vParent=vQueue[i];
vParent._flushChildrenQueue();
delete vParent._isInGlobalLayoutQueue;
}vQueue.splice(0,vLength);
}};
qx.ui.core.Widget._fastGlobalDisplayQueue=[];
qx.ui.core.Widget._lazyGlobalDisplayQueues={};
qx.ui.core.Widget.addToGlobalDisplayQueue=function(vWidget){if(!vWidget._isInGlobalDisplayQueue&&vWidget._isDisplayable){if(qx.ui.core.Widget._autoFlushTimeout==null){qx.ui.core.Widget._initAutoFlush();
}var vParent=vWidget.getParent();
if(vParent.isSeeable()){var vKey=vParent.toHashCode();
if(qx.ui.core.Widget._lazyGlobalDisplayQueues[vKey]){qx.ui.core.Widget._lazyGlobalDisplayQueues[vKey].push(vWidget);
}else{qx.ui.core.Widget._lazyGlobalDisplayQueues[vKey]=[vWidget];
}}else{qx.ui.core.Widget._fastGlobalDisplayQueue.push(vWidget);
}vWidget._isInGlobalDisplayQueue=true;
}};
qx.ui.core.Widget.removeFromGlobalDisplayQueue=function(vWidget){};
qx.ui.core.Widget.flushGlobalDisplayQueue=function(){var vKey,vLazyQueue,vWidget,vFragment;
var vFastQueue=qx.ui.core.Widget._fastGlobalDisplayQueue;
var vLazyQueues=qx.ui.core.Widget._lazyGlobalDisplayQueues;
for(var i=0,l=vFastQueue.length;i<l;i++){vWidget=vFastQueue[i];
vWidget.getParent()._getTargetNode().appendChild(vWidget.getElement());
}if(qx.OO.isAvailable($[520])){for(vKey in vLazyQueues){vLazyQueue=vLazyQueues[vKey];
for(var i=0;i<vLazyQueue.length;i++){vWidget=vLazyQueue[i];
if(vWidget instanceof qx.ui.basic.Inline){vWidget._beforeInsertDom();
try{document.getElementById(vWidget.getInlineNodeId()).appendChild(vWidget.getElement());
}catch(ex){vWidget.debug("Could not append to inline id: "+vWidget.getInlineNodeId(),ex);
}vWidget._afterInsertDom();
vWidget._afterAppear();
qx.lang.Array.remove(vLazyQueue,vWidget);
i--;
delete vWidget._isInGlobalDisplayQueue;
}}}}for(vKey in vLazyQueues){vLazyQueue=vLazyQueues[vKey];
if(document.createDocumentFragment&&vLazyQueue.length>=3){vFragment=document.createDocumentFragment();
for(var i=0,l=vLazyQueue.length;i<l;i++){vWidget=vLazyQueue[i];
vWidget._beforeInsertDom();
vFragment.appendChild(vWidget.getElement());
}vLazyQueue[0].getParent()._getTargetNode().appendChild(vFragment);
for(var i=0,l=vLazyQueue.length;i<l;i++){vWidget=vLazyQueue[i];
vWidget._afterInsertDom();
}}else{for(var i=0,l=vLazyQueue.length;i<l;i++){vWidget=vLazyQueue[i];
vWidget._beforeInsertDom();
vWidget.getParent()._getTargetNode().appendChild(vWidget.getElement());
vWidget._afterInsertDom();
}}}for(vKey in vLazyQueues){vLazyQueue=vLazyQueues[vKey];
for(var i=0,l=vLazyQueue.length;i<l;i++){vWidget=vLazyQueue[i];
if(vWidget.getVisibility()){vWidget._afterAppear();
}delete vWidget._isInGlobalDisplayQueue;
}delete vLazyQueues[vKey];
}for(var i=0,l=vFastQueue.length;i<l;i++){delete vFastQueue[i]._isInGlobalDisplayQueue;
}qx.lang.Array.removeAll(vFastQueue);
};
qx.ui.core.Widget.getActiveSiblingHelperIgnore=function(vIgnoreClasses,vInstance){for(var j=0;j<vIgnoreClasses.length;j++){if(vInstance instanceof vIgnoreClasses[j]){return true;
}}return false;
};
qx.ui.core.Widget.getActiveSiblingHelper=function(vObject,vParent,vCalc,vIgnoreClasses,vMode){if(!vIgnoreClasses){vIgnoreClasses=[];
}var vChilds=vParent.getChildren();
var vPosition=vMode==null?vChilds.indexOf(vObject)+vCalc:vMode===$[687]?0:vChilds.length-1;
var vInstance=vChilds[vPosition];
while(vInstance&&(!vInstance.isEnabled()||qx.ui.core.Widget.getActiveSiblingHelperIgnore(vIgnoreClasses,vInstance))){vPosition+=vCalc;
vInstance=vChilds[vPosition];
if(!vInstance){return null;
}}return vInstance;
};
qx.Proto.isMaterialized=function(){var el=this._element;
return (this._initialLayoutDone&&this._isDisplayable&&qx.html.Style.getStyleProperty(el,$[113])!=$[33]&&qx.html.Style.getStyleProperty(el,$[136])!=$[26]&&el.offsetWidth>0&&el.offsetHeight>0);
};
qx.Proto.pack=function(){this.setWidth(this.getPreferredBoxWidth());
this.setHeight(this.getPreferredBoxHeight());
};
qx.Proto.auto=function(){this.setWidth($[5]);
this.setHeight($[5]);
};
qx.Proto.getChildren=qx.lang.Function.returnNull;
qx.Proto.getChildrenLength=qx.lang.Function.returnZero;
qx.Proto.hasChildren=qx.lang.Function.returnFalse;
qx.Proto.isEmpty=qx.lang.Function.returnTrue;
qx.Proto.indexOf=qx.lang.Function.returnNegativeIndex;
qx.Proto.contains=qx.lang.Function.returnFalse;
qx.Proto.getVisibleChildren=qx.lang.Function.returnNull;
qx.Proto.getVisibleChildrenLength=qx.lang.Function.returnZero;
qx.Proto.hasVisibleChildren=qx.lang.Function.returnFalse;
qx.Proto.isVisibleEmpty=qx.lang.Function.returnTrue;
qx.Proto._hasParent=false;
qx.Proto._isDisplayable=false;
qx.Proto.isDisplayable=function(){return this._isDisplayable;
};
qx.Proto._checkParent=function(propValue,propOldValue,propData){if(this.contains(propValue)){throw new Error("Could not insert myself into a child "+propValue+"!");
}return propValue;
};
qx.Proto._modifyParent=function(propValue,propOldValue,propData){if(propOldValue){var vOldIndex=propOldValue.getChildren().indexOf(this);
this._computedWidthValue=this._computedMinWidthValue=this._computedMaxWidthValue=this._computedLeftValue=this._computedRightValue=null;
this._computedHeightValue=this._computedMinHeightValue=this._computedMaxHeightValue=this._computedTopValue=this._computedBottomValue=null;
this._cachedBoxWidth=this._cachedInnerWidth=this._cachedOuterWidth=null;
this._cachedBoxHeight=this._cachedInnerHeight=this._cachedOuterHeight=null;
qx.lang.Array.removeAt(propOldValue.getChildren(),vOldIndex);
propOldValue._invalidateVisibleChildren();
propOldValue._removeChildFromChildrenQueue(this);
propOldValue.getLayoutImpl().updateChildrenOnRemoveChild(this,vOldIndex);
propOldValue.addToJobQueue($[592]);
propOldValue._invalidatePreferredInnerDimensions();
this._oldParent=propOldValue;
}
if(propValue){this._hasParent=true;
if(typeof this._insertIndex==$[2]){qx.lang.Array.insertAt(propValue.getChildren(),this,this._insertIndex);
delete this._insertIndex;
}else{propValue.getChildren().push(this);
}}else{this._hasParent=false;
}return this._handleDisplayable($[202]);
};
qx.Proto._modifyDisplay=function(propValue,propOldValue,propData){return this._handleDisplayable($[113]);
};
qx.Proto._handleDisplayable=function(vHint){var vDisplayable=this._computeDisplayable();
if(this._isDisplayable==vDisplayable&&!(vDisplayable&&vHint==$[202])){return true;
}this._isDisplayable=vDisplayable;
var vParent=this.getParent();
if(vParent){vParent._invalidateVisibleChildren();
vParent._invalidatePreferredInnerDimensions();
}if(vHint&&this._oldParent&&this._oldParent._initialLayoutDone){var vElement=this.getElement();
if(vElement){if(this.getVisibility()){this._beforeDisappear();
}this._beforeRemoveDom();
this._oldParent._getTargetNode().removeChild(vElement);
this._afterRemoveDom();
if(this.getVisibility()){this._afterDisappear();
}}delete this._oldParent;
}if(vDisplayable){if(vParent._initialLayoutDone){vParent.getLayoutImpl().updateChildrenOnAddChild(this,vParent.getChildren().indexOf(this));
vParent.addToJobQueue($[1874]);
}this.addToLayoutChanges($[2279]);
this.addToCustomQueues(vHint);
if(this.getVisibility()){this._beforeAppear();
}if(!this._isCreated){qx.ui.core.Widget.addToGlobalElementQueue(this);
}qx.ui.core.Widget.addToGlobalStateQueue(this);
if(!qx.lang.Object.isEmpty(this._jobQueue)){qx.ui.core.Widget.addToGlobalJobQueue(this);
}
if(!qx.lang.Object.isEmpty(this._childrenQueue)){qx.ui.core.Widget.addToGlobalLayoutQueue(this);
}}else{qx.ui.core.Widget.removeFromGlobalElementQueue(this);
qx.ui.core.Widget.removeFromGlobalStateQueue(this);
qx.ui.core.Widget.removeFromGlobalJobQueue(this);
qx.ui.core.Widget.removeFromGlobalLayoutQueue(this);
this.removeFromCustomQueues(vHint);
if(vParent&&vHint){if(this.getVisibility()){this._beforeDisappear();
}if(vParent._initialLayoutDone&&this._initialLayoutDone){vParent.getLayoutImpl().updateChildrenOnRemoveChild(this,vParent.getChildren().indexOf(this));
vParent.addToJobQueue($[592]);
this._beforeRemoveDom();
vParent._getTargetNode().removeChild(this.getElement());
this._afterRemoveDom();
}vParent._removeChildFromChildrenQueue(this);
if(this.getVisibility()){this._afterDisappear();
}}}this._handleDisplayableCustom(vDisplayable,vParent,vHint);
return true;
};
qx.Proto.addToCustomQueues=qx.lang.Function.returnTrue;
qx.Proto.removeFromCustomQueues=qx.lang.Function.returnTrue;
qx.Proto._handleDisplayableCustom=qx.lang.Function.returnTrue;
qx.Proto._computeDisplayable=function(){return this.getDisplay()&&this._hasParent&&this.getParent()._isDisplayable?true:false;
};
qx.Proto._beforeAppear=function(){this.createDispatchEvent($[534]);
};
qx.Proto._afterAppear=function(){this._isSeeable=true;
this.createDispatchEvent($[80]);
};
qx.Proto._beforeDisappear=function(){this.removeState($[58]);
if(qx.OO.isAvailable($[445])){this.removeState($[19]);
this.removeState($[51]);
}this.createDispatchEvent($[387]);
};
qx.Proto._afterDisappear=function(){this._isSeeable=false;
this.createDispatchEvent($[226]);
};
qx.Proto._isSeeable=false;
qx.Proto.isSeeable=function(){return this._isSeeable;
};
qx.Proto.isAppearRelevant=function(){return this.getVisibility()&&this._isDisplayable;
};
qx.Proto._beforeInsertDom=function(){this.createDispatchEvent($[1719]);
};
qx.Proto._afterInsertDom=function(){this.createDispatchEvent($[2110]);
};
qx.Proto._beforeRemoveDom=function(){this.createDispatchEvent($[1807]);
};
qx.Proto._afterRemoveDom=function(){this.createDispatchEvent($[2019]);
};
qx.Proto._modifyVisibility=function(propValue,propOldValue,propData){if(propValue){if(this._isDisplayable){this._beforeAppear();
}this.removeStyleProperty($[113]);
if(this._isDisplayable){this._afterAppear();
}}else{if(this._isDisplayable){this._beforeDisappear();
}this.setStyleProperty($[113],$[33]);
if(this._isDisplayable){this._afterDisappear();
}}return true;
};
qx.Proto.show=function(){this.setVisibility(true);
this.setDisplay(true);
};
qx.Proto.hide=function(){this.setVisibility(false);
};
qx.Proto.connect=function(){this.setDisplay(true);
};
qx.Proto.disconnect=function(){this.setDisplay(false);
};
if(qx.core.Client.getInstance().isGecko()){qx.Proto._createElementForEnhancedBorder=qx.lang.Function.returnTrue;
}else{qx.Proto._createElementForEnhancedBorder=function(){if(qx.renderer.border.Border.enhancedCrossBrowserMode&&this.getTagName()==$[50]&&!this._borderElement){var el=this.getElement();
var cl=this._borderElement=document.createElement($[50]);
var es=el.style;
var cs=this._borderStyle=cl.style;
cs.width=cs.height=$[39];
cs.position=$[91];
for(var i in this._styleProperties){switch(i){case $[93]:case $[237]:case $[129]:case $[113]:break;
default:cs[i]=this._styleProperties[i];
es[i]=$[1];
}}
for(var i in this._htmlProperties){switch(i){case $[163]:cl.unselectable=this._htmlProperties[i];
}}while(el.firstChild){cl.appendChild(el.firstChild);
}el.appendChild(cl);
}};
}qx.Proto._isCreated=false;
if(qx.core.Client.getInstance().isGecko()){qx.Proto._getTargetNode=function(){return this._element;
};
}else{qx.Proto._getTargetNode=function(){return this._borderElement||this._element;
};
}qx.Proto.addToDocument=function(){qx.ui.core.ClientDocument.getInstance().add(this);
};
qx.Proto.isCreated=function(){return this._isCreated;
};
qx.Proto._createElementImpl=function(){this.setElement(this.getTopLevelWidget().getDocumentElement().createElement(this.getTagName()));
};
qx.Proto._modifyElement=function(propValue,propOldValue,propData){this._isCreated=propValue!=null;
if(propOldValue){propOldValue.qx_Widget=null;
this._removeInlineEvents(propOldValue);
}
if(propValue){propValue.qx_Widget=this;
this._element=propValue;
this._style=propValue.style;
this._applyStyleProperties(propValue);
this._applyHtmlProperties(propValue);
this._applyHtmlAttributes(propValue);
this._applyElementData(propValue);
this._addInlineEvents(propValue);
this.createDispatchEvent($[1603]);
}else{this._element=this._style=null;
}return true;
};
qx.Proto.addToJobQueue=function(p){if(this._hasParent){qx.ui.core.Widget.addToGlobalJobQueue(this);
}
if(!this._jobQueue){this._jobQueue={};
}this._jobQueue[p]=true;
return true;
};
qx.Proto._flushJobQueue=function(q){try{var vQueue=this._jobQueue;
var vParent=this.getParent();
if(!vParent||qx.lang.Object.isEmpty(vQueue)){return;
}var vLayoutImpl=this instanceof qx.ui.core.Parent?this.getLayoutImpl():null;
if(vLayoutImpl){vLayoutImpl.updateSelfOnJobQueueFlush(vQueue);
}}catch(ex){this.error("Flushing job queue (prechecks#1) failed",ex);
}try{var vFlushParentJobQueue=false;
var vRecomputeOuterWidth=vQueue.marginLeft||vQueue.marginRight;
var vRecomputeOuterHeight=vQueue.marginTop||vQueue.marginBottom;
var vRecomputeInnerWidth=vQueue.frameWidth;
var vRecomputeInnerHeight=vQueue.frameHeight;
var vRecomputeParentPreferredInnerWidth=(vQueue.frameWidth||vQueue.preferredInnerWidth)&&this._recomputePreferredBoxWidth();
var vRecomputeParentPreferredInnerHeight=(vQueue.frameHeight||vQueue.preferredInnerHeight)&&this._recomputePreferredBoxHeight();
if(vRecomputeParentPreferredInnerWidth){var vPref=this.getPreferredBoxWidth();
if(this._computedWidthTypeAuto){this._computedWidthValue=vPref;
vQueue.width=true;
}
if(this._computedMinWidthTypeAuto){this._computedMinWidthValue=vPref;
vQueue.minWidth=true;
}
if(this._computedMaxWidthTypeAuto){this._computedMaxWidthValue=vPref;
vQueue.maxWidth=true;
}}
if(vRecomputeParentPreferredInnerHeight){var vPref=this.getPreferredBoxHeight();
if(this._computedHeightTypeAuto){this._computedHeightValue=vPref;
vQueue.height=true;
}
if(this._computedMinHeightTypeAuto){this._computedMinHeightValue=vPref;
vQueue.minHeight=true;
}
if(this._computedMaxHeightTypeAuto){this._computedMaxHeightValue=vPref;
vQueue.maxHeight=true;
}}
if((vQueue.width||vQueue.minWidth||vQueue.maxWidth||vQueue.left||vQueue.right)&&this._recomputeBoxWidth()){vRecomputeOuterWidth=vRecomputeInnerWidth=true;
}
if((vQueue.height||vQueue.minHeight||vQueue.maxHeight||vQueue.top||vQueue.bottom)&&this._recomputeBoxHeight()){vRecomputeOuterHeight=vRecomputeInnerHeight=true;
}}catch(ex){this.error("Flushing job queue (recompute#2) failed",ex);
}try{if((vRecomputeOuterWidth&&this._recomputeOuterWidth())||vRecomputeParentPreferredInnerWidth){vParent._invalidatePreferredInnerWidth();
vParent.getLayoutImpl().updateSelfOnChildOuterWidthChange(this);
vFlushParentJobQueue=true;
}
if((vRecomputeOuterHeight&&this._recomputeOuterHeight())||vRecomputeParentPreferredInnerHeight){vParent._invalidatePreferredInnerHeight();
vParent.getLayoutImpl().updateSelfOnChildOuterHeightChange(this);
vFlushParentJobQueue=true;
}
if(vFlushParentJobQueue){vParent._flushJobQueue();
}}catch(ex){this.error("Flushing job queue (parentsignals#3) failed",ex);
}try{vParent._addChildToChildrenQueue(this);
for(var i in vQueue){this._layoutChanges[i]=true;
}}catch(ex){this.error("Flushing job queue (addjobs#4) failed",ex);
}try{if(this instanceof qx.ui.core.Parent&&(vQueue.paddingLeft||vQueue.paddingRight||vQueue.paddingTop||vQueue.paddingBottom)){var ch=this.getChildren(),chl=ch.length;
if(vQueue.paddingLeft){for(var i=0;i<chl;i++){ch[i].addToLayoutChanges($[1266]);
}}
if(vQueue.paddingRight){for(var i=0;i<chl;i++){ch[i].addToLayoutChanges($[1293]);
}}
if(vQueue.paddingTop){for(var i=0;i<chl;i++){ch[i].addToLayoutChanges($[2325]);
}}
if(vQueue.paddingBottom){for(var i=0;i<chl;i++){ch[i].addToLayoutChanges($[1079]);
}}}
if(vRecomputeInnerWidth){this._recomputeInnerWidth();
}
if(vRecomputeInnerHeight){this._recomputeInnerHeight();
}
if(this._initialLayoutDone){if(vLayoutImpl){vLayoutImpl.updateChildrenOnJobQueueFlush(vQueue);
}}}catch(ex){this.error("Flushing job queue (childrensignals#5) failed",ex);
}delete this._jobQueue;
};
qx.Proto._isWidthEssential=qx.lang.Function.returnTrue;
qx.Proto._isHeightEssential=qx.lang.Function.returnTrue;
qx.ui.core.Widget.initApplyMethods=function(proto){var applyRuntime=$[2048];
var resetRuntime=$[1221];
var style=$[2256];
var cssValue=$[1401];
var parameter=$[1859];
var properties=[$[11],$[10],$[12],$[16],$[42],$[43],$[86],$[108],$[100],$[116]];
var propertiesUpper=[$[55],$[56],$[2455],$[2277],$[607],$[919],$[2254],$[1498],$[2452],$[2164]];
var applyMargin=applyRuntime+$[689];
var resetMargin=resetRuntime+$[689];
var styleMargin=style+$[643];
for(var i=0;i<4;i++){proto[applyMargin+propertiesUpper[i]]=new Function(parameter,styleMargin+propertiesUpper[i]+cssValue);
proto[resetMargin+propertiesUpper[i]]=new Function(styleMargin+propertiesUpper[i]+$[318]);
}var applyPadding=applyRuntime+$[699];
var resetPadding=resetRuntime+$[699];
var stylePadding=style+$[513];
if(qx.core.Client.getInstance().isGecko()){for(var i=0;i<4;i++){proto[applyPadding+propertiesUpper[i]]=new Function(parameter,stylePadding+propertiesUpper[i]+cssValue);
proto[resetPadding+propertiesUpper[i]]=new Function(stylePadding+propertiesUpper[i]+$[318]);
}}else{for(var i=0;i<4;i++){proto[applyPadding+propertiesUpper[i]]=new Function(parameter,$[2040]+propertiesUpper[i]+$[854]);
proto[resetPadding+propertiesUpper[i]]=new Function($[887]+propertiesUpper[i]+$[373]);
}}if(qx.core.Client.getInstance().isMshtml()){for(var i=0;i<6;i++){proto[applyRuntime+propertiesUpper[i]]=new Function(parameter,style+$[2038]+propertiesUpper[i]+$[1738]);
proto[resetRuntime+propertiesUpper[i]]=new Function(style+properties[i]+$[318]);
}}else{for(var i=0;i<10;i++){proto[applyRuntime+propertiesUpper[i]]=new Function(parameter,style+properties[i]+cssValue);
proto[resetRuntime+propertiesUpper[i]]=new Function(style+properties[i]+$[318]);
}}};
qx.ui.core.Widget.initApplyMethods(qx.Proto);
qx.OO.addCachedProperty({name:$[667],defaultValue:null});
qx.OO.addCachedProperty({name:$[713],defaultValue:null});
qx.OO.addCachedProperty({name:$[1824],defaultValue:null});
qx.OO.addCachedProperty({name:$[2341],defaultValue:null});
qx.OO.addCachedProperty({name:$[616],defaultValue:null});
qx.OO.addCachedProperty({name:$[753],defaultValue:null});
qx.Proto._computeBoxWidthFallback=function(){return 0;
};
qx.Proto._computeBoxHeightFallback=function(){return 0;
};
qx.Proto._computeBoxWidth=function(){var vLayoutImpl=this.getParent().getLayoutImpl();
return Math.max(0,qx.lang.Number.limit(vLayoutImpl.computeChildBoxWidth(this),this.getMinWidthValue(),this.getMaxWidthValue()));
};
qx.Proto._computeBoxHeight=function(){var vLayoutImpl=this.getParent().getLayoutImpl();
return Math.max(0,qx.lang.Number.limit(vLayoutImpl.computeChildBoxHeight(this),this.getMinHeightValue(),this.getMaxHeightValue()));
};
qx.Proto._computeOuterWidth=function(){return Math.max(0,(this.getMarginLeft()+this.getBoxWidth()+this.getMarginRight()));
};
qx.Proto._computeOuterHeight=function(){return Math.max(0,(this.getMarginTop()+this.getBoxHeight()+this.getMarginBottom()));
};
qx.Proto._computeInnerWidth=function(){return Math.max(0,this.getBoxWidth()-this.getFrameWidth());
};
qx.Proto._computeInnerHeight=function(){return Math.max(0,this.getBoxHeight()-this.getFrameHeight());
};
qx.Proto.getNeededWidth=function(){var vLayoutImpl=this.getParent().getLayoutImpl();
return Math.max(0,vLayoutImpl.computeChildNeededWidth(this));
};
qx.Proto.getNeededHeight=function(){var vLayoutImpl=this.getParent().getLayoutImpl();
return Math.max(0,vLayoutImpl.computeChildNeededHeight(this));
};
qx.Proto._recomputeFlexX=function(){if(!this.getHasFlexX()){return false;
}
if(this._computedWidthTypeFlex){this._computedWidthValue=null;
this.addToLayoutChanges($[42]);
}return true;
};
qx.Proto._recomputeFlexY=function(){if(!this.getHasFlexY()){return false;
}
if(this._computedHeightTypeFlex){this._computedHeightValue=null;
this.addToLayoutChanges($[43]);
}return true;
};
qx.Proto._recomputePercentX=function(){if(!this.getHasPercentX()){return false;
}
if(this._computedWidthTypePercent){this._computedWidthValue=null;
this.addToLayoutChanges($[42]);
}
if(this._computedMinWidthTypePercent){this._computedMinWidthValue=null;
this.addToLayoutChanges($[86]);
}
if(this._computedMaxWidthTypePercent){this._computedMaxWidthValue=null;
this.addToLayoutChanges($[108]);
}
if(this._computedLeftTypePercent){this._computedLeftValue=null;
this.addToLayoutChanges($[11]);
}
if(this._computedRightTypePercent){this._computedRightValue=null;
this.addToLayoutChanges($[10]);
}return true;
};
qx.Proto._recomputePercentY=function(){if(!this.getHasPercentY()){return false;
}
if(this._computedHeightTypePercent){this._computedHeightValue=null;
this.addToLayoutChanges($[43]);
}
if(this._computedMinHeightTypePercent){this._computedMinHeightValue=null;
this.addToLayoutChanges($[100]);
}
if(this._computedMaxHeightTypePercent){this._computedMaxHeightValue=null;
this.addToLayoutChanges($[116]);
}
if(this._computedTopTypePercent){this._computedTopValue=null;
this.addToLayoutChanges($[12]);
}
if(this._computedBottomTypePercent){this._computedBottomValue=null;
this.addToLayoutChanges($[16]);
}return true;
};
if(qx.core.Client.getInstance().isMshtml()||qx.core.Client.getInstance().isOpera()){qx.Proto._recomputeRangeX=function(){if(this._computedLeftTypeNull||this._computedRightTypeNull){return false;
}this.addToLayoutChanges($[42]);
return true;
};
qx.Proto._recomputeRangeY=function(){if(this._computedTopTypeNull||this._computedBottomTypeNull){return false;
}this.addToLayoutChanges($[43]);
return true;
};
}else{qx.Proto._recomputeRangeX=function(){return !(this._computedLeftTypeNull||this._computedRightTypeNull);
};
qx.Proto._recomputeRangeY=function(){return !(this._computedTopTypeNull||this._computedBottomTypeNull);
};
}if(qx.core.Client.getInstance().isMshtml()||qx.core.Client.getInstance().isOpera()){qx.Proto._recomputeStretchingX=function(){if(this.getAllowStretchX()&&this._computedWidthTypeNull){this._computedWidthValue=null;
this.addToLayoutChanges($[42]);
return true;
}return false;
};
qx.Proto._recomputeStretchingY=function(){if(this.getAllowStretchY()&&this._computedHeightTypeNull){this._computedHeightValue=null;
this.addToLayoutChanges($[43]);
return true;
}return false;
};
}else{qx.Proto._recomputeStretchingX=function(){if(this.getAllowStretchX()&&this._computedWidthTypeNull){return true;
}return false;
};
qx.Proto._recomputeStretchingY=function(){if(this.getAllowStretchY()&&this._computedHeightTypeNull){return true;
}return false;
};
}qx.Proto._computeValuePixel=function(v){return Math.round(v);
};
qx.Proto._computeValuePixelLimit=function(v){return Math.max(0,this._computeValuePixel(v));
};
qx.Proto._computeValuePercentX=function(v){return Math.round(this.getParent().getInnerWidthForChild(this)*v*0.01);
};
qx.Proto._computeValuePercentXLimit=function(v){return Math.max(0,this._computeValuePercentX(v));
};
qx.Proto._computeValuePercentY=function(v){return Math.round(this.getParent().getInnerHeightForChild(this)*v*0.01);
};
qx.Proto._computeValuePercentYLimit=function(v){return Math.max(0,this._computeValuePercentY(v));
};
qx.Proto.getWidthValue=function(){if(this._computedWidthValue!=null){return this._computedWidthValue;
}
switch(this._computedWidthType){case qx.ui.core.Widget.TYPE_PIXEL:return this._computedWidthValue=this._computeValuePixelLimit(this._computedWidthParsed);
case qx.ui.core.Widget.TYPE_PERCENT:return this._computedWidthValue=this._computeValuePercentXLimit(this._computedWidthParsed);
case qx.ui.core.Widget.TYPE_AUTO:return this._computedWidthValue=this.getPreferredBoxWidth();
case qx.ui.core.Widget.TYPE_FLEX:try{this.getParent().getLayoutImpl().computeChildrenFlexWidth();
}catch(e){if(this.getParent().getLayoutImpl()[$[1330]]==null){throw new Error("Widget "+this+": having flex size but parent layout does not support it");
}else{throw e;
}}return this._computedWidthValue=this._computedWidthFlexValue;
}return null;
};
qx.Proto.getMinWidthValue=function(){if(this._computedMinWidthValue!=null){return this._computedMinWidthValue;
}
switch(this._computedMinWidthType){case qx.ui.core.Widget.TYPE_PIXEL:return this._computedWidthValue=this._computeValuePixelLimit(this._computedMinWidthParsed);
case qx.ui.core.Widget.TYPE_PERCENT:return this._computedWidthValue=this._computeValuePercentXLimit(this._computedMinWidthParsed);
case qx.ui.core.Widget.TYPE_AUTO:return this._computedMinWidthValue=this.getPreferredBoxWidth();
}return null;
};
qx.Proto.getMaxWidthValue=function(){if(this._computedMaxWidthValue!=null){return this._computedMaxWidthValue;
}
switch(this._computedMaxWidthType){case qx.ui.core.Widget.TYPE_PIXEL:return this._computedWidthValue=this._computeValuePixelLimit(this._computedMaxWidthParsed);
case qx.ui.core.Widget.TYPE_PERCENT:return this._computedWidthValue=this._computeValuePercentXLimit(this._computedMaxWidthParsed);
case qx.ui.core.Widget.TYPE_AUTO:return this._computedMaxWidthValue=this.getPreferredBoxWidth();
}return null;
};
qx.Proto.getLeftValue=function(){if(this._computedLeftValue!=null){return this._computedLeftValue;
}
switch(this._computedLeftType){case qx.ui.core.Widget.TYPE_PIXEL:return this._computedLeftValue=this._computeValuePixel(this._computedLeftParsed);
case qx.ui.core.Widget.TYPE_PERCENT:return this._computedLeftValue=this._computeValuePercentX(this._computedLeftParsed);
}return null;
};
qx.Proto.getRightValue=function(){if(this._computedRightValue!=null){return this._computedRightValue;
}
switch(this._computedRightType){case qx.ui.core.Widget.TYPE_PIXEL:return this._computedRightValue=this._computeValuePixel(this._computedRightParsed);
case qx.ui.core.Widget.TYPE_PERCENT:return this._computedRightValue=this._computeValuePercentX(this._computedRightParsed);
}return null;
};
qx.Proto.getHeightValue=function(){if(this._computedHeightValue!=null){return this._computedHeightValue;
}
switch(this._computedHeightType){case qx.ui.core.Widget.TYPE_PIXEL:return this._computedHeightValue=this._computeValuePixelLimit(this._computedHeightParsed);
case qx.ui.core.Widget.TYPE_PERCENT:return this._computedHeightValue=this._computeValuePercentYLimit(this._computedHeightParsed);
case qx.ui.core.Widget.TYPE_AUTO:return this._computedHeightValue=this.getPreferredBoxHeight();
case qx.ui.core.Widget.TYPE_FLEX:try{this.getParent().getLayoutImpl().computeChildrenFlexHeight();
}catch(e){if(this.getParent().getLayoutImpl()[$[1198]]==null){throw new Error("Widget "+this+": having flex size but parent layout does not support it");
}else{throw e;
}}return this._computedHeightValue=this._computedHeightFlexValue;
}return null;
};
qx.Proto.getMinHeightValue=function(){if(this._computedMinHeightValue!=null){return this._computedMinHeightValue;
}
switch(this._computedMinHeightType){case qx.ui.core.Widget.TYPE_PIXEL:return this._computedMinHeightValue=this._computeValuePixelLimit(this._computedMinHeightParsed);
case qx.ui.core.Widget.TYPE_PERCENT:return this._computedMinHeightValue=this._computeValuePercentYLimit(this._computedMinHeightParsed);
case qx.ui.core.Widget.TYPE_AUTO:return this._computedMinHeightValue=this.getPreferredBoxHeight();
}return null;
};
qx.Proto.getMaxHeightValue=function(){if(this._computedMaxHeightValue!=null){return this._computedMaxHeightValue;
}
switch(this._computedMaxHeightType){case qx.ui.core.Widget.TYPE_PIXEL:return this._computedMaxHeightValue=this._computeValuePixelLimit(this._computedMaxHeightParsed);
case qx.ui.core.Widget.TYPE_PERCENT:return this._computedMaxHeightValue=this._computeValuePercentYLimit(this._computedMaxHeightParsed);
case qx.ui.core.Widget.TYPE_AUTO:return this._computedMaxHeightValue=this.getPreferredBoxHeight();
}return null;
};
qx.Proto.getTopValue=function(){if(this._computedTopValue!=null){return this._computedTopValue;
}
switch(this._computedTopType){case qx.ui.core.Widget.TYPE_PIXEL:return this._computedTopValue=this._computeValuePixel(this._computedTopParsed);
case qx.ui.core.Widget.TYPE_PERCENT:return this._computedTopValue=this._computeValuePercentY(this._computedTopParsed);
}return null;
};
qx.Proto.getBottomValue=function(){if(this._computedBottomValue!=null){return this._computedBottomValue;
}
switch(this._computedBottomType){case qx.ui.core.Widget.TYPE_PIXEL:return this._computedBottomValue=this._computeValuePixel(this._computedBottomParsed);
case qx.ui.core.Widget.TYPE_PERCENT:return this._computedBottomValue=this._computeValuePercentY(this._computedBottomParsed);
}return null;
};
qx.OO.addCachedProperty({name:$[1360],defaultValue:null,addToQueueRuntime:true});
qx.OO.addCachedProperty({name:$[1465],defaultValue:null,addToQueueRuntime:true});
qx.Proto._computeFrameWidth=function(){var fw=this._cachedBorderLeft+this.getPaddingLeft()+this.getPaddingRight()+this._cachedBorderRight;
switch(this.getOverflow()){case $[66]:case $[112]:qx.ui.core.Widget.initOverflow();
fw+=qx.ui.core.Widget.SCROLLBAR_SIZE;
break;
case $[5]:break;
}return fw;
};
qx.Proto._computeFrameHeight=function(){var fh=this._cachedBorderTop+this.getPaddingTop()+this.getPaddingBottom()+this._cachedBorderBottom;
switch(this.getOverflow()){case $[66]:case $[139]:qx.ui.core.Widget.initOverflow();
fh+=qx.ui.core.Widget.SCROLLBAR_SIZE;
break;
case $[5]:break;
}return fh;
};
qx.Proto._invalidateFrameDimensions=function(){this._invalidateFrameWidth();
this._invalidateFrameHeight();
};
qx.OO.addCachedProperty({name:$[2073],defaultValue:null,addToQueueRuntime:true});
qx.OO.addCachedProperty({name:$[1949],defaultValue:null,addToQueueRuntime:true});
qx.Proto._invalidatePreferredInnerDimensions=function(){this._invalidatePreferredInnerWidth();
this._invalidatePreferredInnerHeight();
};
qx.OO.addCachedProperty({name:$[1776],defaultValue:null});
qx.OO.addCachedProperty({name:$[806],defaultValue:null});
qx.Proto._computePreferredBoxWidth=function(){try{return Math.max(0,this.getPreferredInnerWidth()+this.getFrameWidth());
}catch(ex){this.error("_computePreferredBoxWidth failed",ex);
}};
qx.Proto._computePreferredBoxHeight=function(){try{return Math.max(0,this.getPreferredInnerHeight()+this.getFrameHeight());
}catch(ex){this.error("_computePreferredBoxHeight failed",ex);
}};
qx.Proto._initialLayoutDone=false;
qx.Proto.addToLayoutChanges=function(p){if(this._isDisplayable){this.getParent()._addChildToChildrenQueue(this);
}return this._layoutChanges[p]=true;
};
qx.Proto.addToQueue=function(p){this._initialLayoutDone?this.addToJobQueue(p):this.addToLayoutChanges(p);
};
qx.Proto.addToQueueRuntime=function(p){return !this._initialLayoutDone||this.addToJobQueue(p);
};
qx.Proto._applyBorderX=function(vChild,vChanges,vStyle){var vBorder=vChild.getBorder();
vBorder?vBorder._applyWidgetX(vChild):qx.renderer.border.Border._resetBorderX(vChild);
};
qx.Proto._applyBorderY=function(vChild,vChanges,vStyle){var vBorder=vChild.getBorder();
vBorder?vBorder._applyWidgetY(vChild):qx.renderer.border.Border._resetBorderY(vChild);
};
qx.Proto._applyPaddingX=qx.lang.Function.returnTrue;
qx.Proto._applyPaddingY=qx.lang.Function.returnTrue;
qx.OO.addCachedProperty({name:$[835],defaultValue:false});
qx.OO.addCachedProperty({name:$[2373],defaultValue:false});
qx.OO.addCachedProperty({name:$[1768],defaultValue:false});
qx.OO.addCachedProperty({name:$[1657],defaultValue:false});
qx.OO.addCachedProperty({name:$[1893],defaultValue:false});
qx.OO.addCachedProperty({name:$[1781],defaultValue:false});
qx.Proto._computeHasPercentX=function(){return (this._computedLeftTypePercent||this._computedWidthTypePercent||this._computedMinWidthTypePercent||this._computedMaxWidthTypePercent||this._computedRightTypePercent);
};
qx.Proto._computeHasPercentY=function(){return (this._computedTopTypePercent||this._computedHeightTypePercent||this._computedMinHeightTypePercent||this._computedMaxHeightTypePercent||this._computedBottomTypePercent);
};
qx.Proto._computeHasAutoX=function(){return (this._computedWidthTypeAuto||this._computedMinWidthTypeAuto||this._computedMaxWidthTypeAuto);
};
qx.Proto._computeHasAutoY=function(){return (this._computedHeightTypeAuto||this._computedMinHeightTypeAuto||this._computedMaxHeightTypeAuto);
};
qx.Proto._computeHasFlexX=function(){return this._computedWidthTypeFlex;
};
qx.Proto._computeHasFlexY=function(){return this._computedHeightTypeFlex;
};
qx.ui.core.Widget.TYPE_NULL=0;
qx.ui.core.Widget.TYPE_PIXEL=1;
qx.ui.core.Widget.TYPE_PERCENT=2;
qx.ui.core.Widget.TYPE_AUTO=3;
qx.ui.core.Widget.TYPE_FLEX=4;
qx.Proto._evalUnitsPixelPercentAutoFlex=function(propValue){switch(propValue){case $[5]:return qx.ui.core.Widget.TYPE_AUTO;
case Infinity:case -Infinity:return qx.ui.core.Widget.TYPE_NULL;
}
switch(typeof propValue){case $[2]:return isNaN(propValue)?qx.ui.core.Widget.TYPE_NULL:qx.ui.core.Widget.TYPE_PIXEL;
case $[0]:return propValue.indexOf($[205])!=-1?qx.ui.core.Widget.TYPE_PERCENT:propValue.indexOf($[168])!=-1?qx.ui.core.Widget.TYPE_FLEX:qx.ui.core.Widget.TYPE_NULL;
}return qx.ui.core.Widget.TYPE_NULL;
};
qx.Proto._evalUnitsPixelPercentAuto=function(propValue){switch(propValue){case $[5]:return qx.ui.core.Widget.TYPE_AUTO;
case Infinity:case -Infinity:return qx.ui.core.Widget.TYPE_NULL;
}
switch(typeof propValue){case $[2]:return isNaN(propValue)?qx.ui.core.Widget.TYPE_NULL:qx.ui.core.Widget.TYPE_PIXEL;
case $[0]:return propValue.indexOf($[205])!=-1?qx.ui.core.Widget.TYPE_PERCENT:qx.ui.core.Widget.TYPE_NULL;
}return qx.ui.core.Widget.TYPE_NULL;
};
qx.Proto._evalUnitsPixelPercent=function(propValue){switch(propValue){case Infinity:case -Infinity:return qx.ui.core.Widget.TYPE_NULL;
}
switch(typeof propValue){case $[2]:return isNaN(propValue)?qx.ui.core.Widget.TYPE_NULL:qx.ui.core.Widget.TYPE_PIXEL;
case $[0]:return propValue.indexOf($[205])!=-1?qx.ui.core.Widget.TYPE_PERCENT:qx.ui.core.Widget.TYPE_NULL;
}return qx.ui.core.Widget.TYPE_NULL;
};
qx.ui.core.Widget.layoutPropertyTypes={};
qx.ui.core.Widget.initLayoutProperties=function(){var a=[$[42],$[43],$[86],$[108],$[100],$[116],$[11],$[10],$[12],$[16]];
for(var i=0,l=a.length,p,b,t;i<l;i++){p=a[i];
b=$[610]+qx.lang.String.toFirstUp(p);
t=b+$[527];
qx.ui.core.Widget.layoutPropertyTypes[p]={dataType:t,dataParsed:b+$[650],dataValue:b+$[366],typePixel:t+$[950],typePercent:t+$[2289],typeAuto:t+$[2397],typeFlex:t+$[2018],typeNull:t+$[1188]};
}};
qx.ui.core.Widget.initLayoutProperties();
qx.Proto._unitDetectionPixelPercentAutoFlex=function(propData,propValue){var r=qx.ui.core.Widget.layoutPropertyTypes[propData.name];
var s=r.dataType;
var p=r.dataParsed;
var v=r.dataValue;
var s1=r.typePixel;
var s2=r.typePercent;
var s3=r.typeAuto;
var s4=r.typeFlex;
var s5=r.typeNull;
var wasPercent=this[s2];
var wasAuto=this[s3];
var wasFlex=this[s4];
switch(this[s]=this._evalUnitsPixelPercentAutoFlex(propValue)){case qx.ui.core.Widget.TYPE_PIXEL:this[s1]=true;
this[s2]=this[s3]=this[s4]=this[s5]=false;
this[p]=this[v]=Math.round(propValue);
break;
case qx.ui.core.Widget.TYPE_PERCENT:this[s2]=true;
this[s1]=this[s3]=this[s4]=this[s5]=false;
this[p]=parseFloat(propValue);
this[v]=null;
break;
case qx.ui.core.Widget.TYPE_AUTO:this[s3]=true;
this[s1]=this[s2]=this[s4]=this[s5]=false;
this[p]=this[v]=null;
break;
case qx.ui.core.Widget.TYPE_FLEX:this[s4]=true;
this[s1]=this[s2]=this[s3]=this[s5]=false;
this[p]=parseFloat(propValue);
this[v]=null;
break;
default:this[s5]=true;
this[s1]=this[s2]=this[s3]=this[s4]=false;
this[p]=this[v]=null;
break;
}
if(wasPercent!=this[s2]){switch(propData.name){case $[86]:case $[108]:case $[42]:case $[11]:case $[10]:this._invalidateHasPercentX();
break;
case $[116]:case $[100]:case $[43]:case $[12]:case $[16]:this._invalidateHasPercentY();
break;
}}if(wasAuto!=this[s3]){switch(propData.name){case $[86]:case $[108]:case $[42]:this._invalidateHasAutoX();
break;
case $[100]:case $[116]:case $[43]:this._invalidateHasAutoY();
break;
}}if(wasFlex!=this[s4]){switch(propData.name){case $[42]:this._invalidateHasFlexX();
break;
case $[43]:this._invalidateHasFlexY();
break;
}}};
qx.Proto._unitDetectionPixelPercentAuto=function(propData,propValue){var r=qx.ui.core.Widget.layoutPropertyTypes[propData.name];
var s=r.dataType;
var p=r.dataParsed;
var v=r.dataValue;
var s1=r.typePixel;
var s2=r.typePercent;
var s3=r.typeAuto;
var s4=r.typeNull;
var wasPercent=this[s2];
var wasAuto=this[s3];
switch(this[s]=this._evalUnitsPixelPercentAuto(propValue)){case qx.ui.core.Widget.TYPE_PIXEL:this[s1]=true;
this[s2]=this[s3]=this[s4]=false;
this[p]=this[v]=Math.round(propValue);
break;
case qx.ui.core.Widget.TYPE_PERCENT:this[s2]=true;
this[s1]=this[s3]=this[s4]=false;
this[p]=parseFloat(propValue);
this[v]=null;
break;
case qx.ui.core.Widget.TYPE_AUTO:this[s3]=true;
this[s1]=this[s2]=this[s4]=false;
this[p]=this[v]=null;
break;
default:this[s4]=true;
this[s1]=this[s2]=this[s3]=false;
this[p]=this[v]=null;
break;
}
if(wasPercent!=this[s2]){switch(propData.name){case $[86]:case $[108]:case $[42]:case $[11]:case $[10]:this._invalidateHasPercentX();
break;
case $[100]:case $[116]:case $[43]:case $[12]:case $[16]:this._invalidateHasPercentY();
break;
}}if(wasAuto!=this[s3]){switch(propData.name){case $[86]:case $[108]:case $[42]:this._invalidateHasAutoX();
break;
case $[100]:case $[116]:case $[43]:this._invalidateHasAutoY();
break;
}}};
qx.Proto._unitDetectionPixelPercent=function(propData,propValue){var r=qx.ui.core.Widget.layoutPropertyTypes[propData.name];
var s=r.dataType;
var p=r.dataParsed;
var v=r.dataValue;
var s1=r.typePixel;
var s2=r.typePercent;
var s3=r.typeNull;
var wasPercent=this[s2];
switch(this[s]=this._evalUnitsPixelPercent(propValue)){case qx.ui.core.Widget.TYPE_PIXEL:this[s1]=true;
this[s2]=this[s3]=false;
this[p]=this[v]=Math.round(propValue);
break;
case qx.ui.core.Widget.TYPE_PERCENT:this[s2]=true;
this[s1]=this[s3]=false;
this[p]=parseFloat(propValue);
this[v]=null;
break;
default:this[s3]=true;
this[s1]=this[s2]=false;
this[p]=this[v]=null;
break;
}
if(wasPercent!=this[s2]){switch(propData.name){case $[86]:case $[108]:case $[42]:case $[11]:case $[10]:this._invalidateHasPercentX();
break;
case $[100]:case $[116]:case $[43]:case $[12]:case $[16]:this._invalidateHasPercentY();
break;
}}};
if(qx.core.Client.getInstance().isMshtml()){qx.ui.core.Widget.inlineEventMap={input:$[929],select:$[971],scroll:$[2205],focus:$[2024],blur:$[1890]};
qx.Proto.enableInlineEvent=function(vEventName){var vEventType=qx.ui.core.Widget.inlineEventMap[vEventName];
if(!this._inlineEvents){this._inlineEvents=[vEventType];
}else{this._inlineEvents.push(vEventType);
}
if(this._isCreated){this.getElement()[vEventType]=qx.ui.core.Widget.__oninlineevent;
}};
qx.Proto.disableInlineEvent=function(vEventName){var vEventType=qx.ui.core.Widget.inlineEventMap[vEventName];
if(this._inlineEvents){qx.lang.Array.remove(this._inlineEvents,vEventType);
}
if(this._isCreated){this.getElement()[vEventType]=null;
}};
qx.Proto._addInlineEvents=function(vElement){if(this._inlineEvents){for(var i=0,a=this._inlineEvents,l=a.length;i<l;i++){vElement[a[i]]=qx.ui.core.Widget.__oninlineevent;
}}};
qx.Proto._removeInlineEvents=function(vElement){if(this._inlineEvents){for(var i=0,a=this._inlineEvents,l=a.length;i<l;i++){vElement[a[i]]=null;
}}};
}else{qx.Proto.enableInlineEvent=function(vEventName){if(!this._inlineEvents){this._inlineEvents=[vEventName];
}else{this._inlineEvents.push(vEventName);
}
if(this._isCreated){this.getElement().addEventListener(vEventName,qx.ui.core.Widget.__oninlineevent,false);
}};
qx.Proto.disableInlineEvent=function(vEventName){if(this._inlineEvents){qx.lang.Array.remove(this._inlineEvents,vEventName);
}
if(this._isCreated){this.getElement().removeEventListener(vEventName,qx.ui.core.Widget.__oninlineevent,false);
}};
qx.Proto._addInlineEvents=function(vElement){if(this._inlineEvents){for(var i=0,a=this._inlineEvents,l=a.length;i<l;i++){vElement.addEventListener(a[i],qx.ui.core.Widget.__oninlineevent,false);
}}};
qx.Proto._removeInlineEvents=function(vElement){if(this._inlineEvents){for(var i=0,a=this._inlineEvents,l=a.length;i<l;i++){vElement.removeEventListener(a[i],qx.ui.core.Widget.__oninlineevent,false);
}}};
}qx.ui.core.Widget.__oninlineevent=function(e){if(!e){e=window.event;
}
if(this.qx_Widget){return this.qx_Widget._oninlineevent(e);
}};
qx.Proto._oninlineevent=function(e){if(qx.ui.core.Widget._inFlushGlobalQueues){return;
}switch(e.type){case $[1414]:this._oninlineproperty(e);
break;
case $[87]:this._oninlineinput(e);
break;
default:this.createDispatchEvent(e.type);
}};
qx.Proto._oninlineinput=function(e){this.createDispatchDataEvent($[87],this.getComputedValue());
if(e.stopPropagation){e.stopPropagation();
}e.returnValue=-1;
};
qx.Proto._oninlineproperty=function(e){switch(e.propertyName){case $[104]:if(!this._inValueProperty){this._oninlineinput(e);
}break;
}};
qx.Proto.getTopLevelWidget=function(){return this._hasParent?this.getParent().getTopLevelWidget():null;
};
qx.Proto.moveSelfBefore=function(vBefore){this.getParent().addBefore(this,vBefore);
};
qx.Proto.moveSelfAfter=function(vAfter){this.getParent().addAfter(this,vAfter);
};
qx.Proto.moveSelfToBegin=function(){this.getParent().addAtBegin(this);
};
qx.Proto.moveSelfToEnd=function(){this.getParent().addAtEnd(this);
};
qx.Proto.getPreviousSibling=function(){var p=this.getParent();
if(p==null){return null;
}var cs=p.getChildren();
return cs[cs.indexOf(this)-1];
};
qx.Proto.getNextSibling=function(){var p=this.getParent();
if(p==null){return null;
}var cs=p.getChildren();
return cs[cs.indexOf(this)+1];
};
qx.Proto.getPreviousVisibleSibling=function(){if(!this._hasParent){return null;
}var vChildren=this.getParent().getVisibleChildren();
return vChildren[vChildren.indexOf(this)-1];
};
qx.Proto.getNextVisibleSibling=function(){if(!this._hasParent){return null;
}var vChildren=this.getParent().getVisibleChildren();
return vChildren[vChildren.indexOf(this)+1];
};
qx.Proto.getPreviousActiveSibling=function(vIgnoreClasses){var vPrev=qx.ui.core.Widget.getActiveSiblingHelper(this,this.getParent(),-1,vIgnoreClasses,null);
return vPrev?vPrev:this.getParent().getLastActiveChild();
};
qx.Proto.getNextActiveSibling=function(vIgnoreClasses){var vNext=qx.ui.core.Widget.getActiveSiblingHelper(this,this.getParent(),1,vIgnoreClasses,null);
return vNext?vNext:this.getParent().getFirstActiveChild();
};
qx.Proto.isFirstChild=function(){return this._hasParent&&this.getParent().getFirstChild()==this;
};
qx.Proto.isLastChild=function(){return this._hasParent&&this.getParent().getLastChild()==this;
};
qx.Proto.isFirstVisibleChild=function(){return this._hasParent&&this.getParent().getFirstVisibleChild()==this;
};
qx.Proto.isLastVisibleChild=function(){return this._hasParent&&this.getParent().getLastVisibleChild()==this;
};
qx.Proto._modifyEnabled=function(propValue,propOldValue,propData){if(propValue){this.removeState($[134]);
}else{this.addState($[134]);
this.removeState($[58]);
if(qx.OO.isAvailable($[445])){this.removeState($[51]);
this.removeState($[19]);
}}return true;
};
qx.Proto.hasState=function(vState){return this._states[vState]?true:false;
};
qx.Proto.addState=function(vState){if(!this._states[vState]){this._states[vState]=true;
if(this._hasParent){qx.ui.core.Widget.addToGlobalStateQueue(this);
}}};
qx.Proto.removeState=function(vState){if(this._states[vState]){delete this._states[vState];
if(this._hasParent){qx.ui.core.Widget.addToGlobalStateQueue(this);
}}};
qx.Proto.setState=function(state,enabled){if(enabled){this.addState(state);
}else{this.removeState(state);
}};
qx.Proto._applyInitialAppearance=function(){var vAppearance=this.getAppearance();
if(vAppearance){try{var r=qx.manager.object.AppearanceManager.getInstance().getAppearanceTheme().initialFrom(vAppearance);
if(r){this.set(r);
}}catch(ex){this.error("Could not apply initial appearance",ex);
}}};
qx.Proto._applyStateAppearance=function(){this._applyStateStyleFocus(this._states);
var vAppearance=this.getAppearance();
if(vAppearance){try{var r=qx.manager.object.AppearanceManager.getInstance().getAppearanceTheme().stateFrom(vAppearance,this._states);
if(r){this.set(r);
}}catch(ex){this.error("Could not apply state appearance",ex);
}}};
qx.Proto._resetAppearanceThemeWrapper=function(vNewAppearanceTheme,vOldAppearanceTheme){var vAppearance=this.getAppearance();
if(vAppearance){var vOldAppearanceThemeObject=qx.manager.object.AppearanceManager.getInstance().getThemeById(vOldAppearanceTheme);
var vNewAppearanceThemeObject=qx.manager.object.AppearanceManager.getInstance().getThemeById(vNewAppearanceTheme);
var vOldAppearanceProperties=qx.lang.Object.mergeWith(vOldAppearanceThemeObject.initialFrom(vAppearance),vOldAppearanceThemeObject.stateFrom(vAppearance,this._states));
var vNewAppearanceProperties=qx.lang.Object.mergeWith(vNewAppearanceThemeObject.initialFrom(vAppearance),vNewAppearanceThemeObject.stateFrom(vAppearance,this._states));
for(var vProp in vOldAppearanceProperties){if(!(vProp in vNewAppearanceProperties)){this[qx.OO.resetter[vProp]]();
}}this.set(vNewAppearanceProperties);
}};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._applyStateStyleFocus=function(vStates){};
}else if(qx.core.Client.getInstance().isGecko()){qx.Proto._applyStateStyleFocus=function(vStates){if(vStates.focused){if(!qx.event.handler.FocusHandler.mouseFocus&&!this.getHideFocus()){this.setStyleProperty($[241],$[247]);
}}else{this.removeStyleProperty($[241]);
}};
}else{qx.Proto._applyStateStyleFocus=function(vStates){if(vStates.focused){if(!qx.event.handler.FocusHandler.mouseFocus&&!this.getHideFocus()){this.setStyleProperty($[260],$[247]);
}}else{this.setStyleProperty($[260],$[184]);
}};
}qx.Proto.addToStateQueue=function(){qx.ui.core.Widget.addToGlobalStateQueue(this);
};
qx.Proto.recursiveAddToStateQueue=function(){this.addToStateQueue();
};
qx.Proto._modifyAppearance=function(propValue,propOldValue,propData){var vAppearanceThemeObject=qx.manager.object.AppearanceManager.getInstance().getAppearanceTheme();
var vNewAppearanceProperties=vAppearanceThemeObject.initialFrom(propValue);
if(this.isCreated()){qx.lang.Object.mergeWith(vNewAppearanceProperties,vAppearanceThemeObject.stateFrom(propValue,this._states));
}
if(propOldValue){var vOldAppearanceProperties=vAppearanceThemeObject.initialFrom(propOldValue);
if(this.isCreated()){qx.lang.Object.mergeWith(vOldAppearanceProperties,vAppearanceThemeObject.stateFrom(propOldValue,this._states));
}
for(var vProp in vOldAppearanceProperties){if(!(vProp in vNewAppearanceProperties)){this[qx.OO.resetter[vProp]]();
}}}this.set(vNewAppearanceProperties);
return true;
};
qx.Proto._recursiveAppearanceThemeUpdate=function(vNewAppearanceTheme,vOldAppearanceTheme){try{this._resetAppearanceThemeWrapper(vNewAppearanceTheme,vOldAppearanceTheme);
}catch(ex){this.error("Failed to update appearance theme",ex);
}};
qx.Proto._applyElementData=function(el){};
qx.Proto.setHtmlProperty=function(propName,propValue){if(!this._htmlProperties){this._htmlProperties={};
}this._htmlProperties[propName]=propValue;
if(this._isCreated&&this.getElement()[propName]!=propValue){this.getElement()[propName]=propValue;
}return true;
};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto.removeHtmlProperty=function(propName){if(!this._htmlProperties){return;
}delete this._htmlProperties[propName];
if(this._isCreated){this.getElement().removeAttribute(propName);
}return true;
};
}else{qx.Proto.removeHtmlProperty=function(propName){if(!this._htmlProperties){return;
}delete this._htmlProperties[propName];
if(this._isCreated){this.getElement().removeAttribute(propName);
delete this.getElement()[propName];
}return true;
};
}qx.Proto.getHtmlProperty=function(propName){if(!this._htmlProperties){return $[1];
}return this._htmlProperties[propName]||$[1];
};
qx.Proto._applyHtmlProperties=function(vElement){var vProperties=this._htmlProperties;
if(vProperties){var propName;
for(propName in vProperties){vElement[propName]=vProperties[propName];
}}};
qx.Proto.setHtmlAttribute=function(propName,propValue){if(!this._htmlAttributes){this._htmlAttributes={};
}this._htmlAttributes[propName]=propValue;
if(this._isCreated){this.getElement().setAttribute(propName,propValue);
}return true;
};
qx.Proto.removeHtmlAttribute=function(propName){if(!this._htmlAttributes){return;
}delete this._htmlAttributes[propName];
if(this._isCreated){this.getElement().removeAttribute(propName);
}return true;
};
qx.Proto.getHtmlAttribute=function(propName){if(!this._htmlAttributes){return $[1];
}return this._htmlAttributes[propName]||$[1];
};
qx.Proto._applyHtmlAttributes=function(vElement){var vAttributes=this._htmlAttributes;
if(vAttributes){var propName;
for(propName in vAttributes){vElement.setAttribute(propName,vAttributes[propName]);
}}};
qx.Proto.getStyleProperty=function(propName){return this._styleProperties[propName]||$[1];
};
qx.Proto.setStyleProperty=function(propName,propValue){this._styleProperties[propName]=propValue;
if(this._isCreated){switch(propName){case $[237]:case $[129]:case $[113]:case $[136]:var vElement=this.getElement();
break;
default:var vElement=this._getTargetNode();
}
if(vElement){vElement.style[propName]=propValue;
}}return true;
};
qx.Proto.removeStyleProperty=function(propName){delete this._styleProperties[propName];
if(this._isCreated){switch(propName){case $[237]:case $[129]:case $[113]:case $[136]:var vElement=this.getElement();
break;
default:var vElement=this._getTargetNode();
}
if(vElement){vElement.style[propName]=$[1];
}}return true;
};
qx.Proto._applyStyleProperties=function(vElement){var vProperties=this._styleProperties;
var propName;
var vBaseElement=vElement;
var vTargetElement=this._getTargetNode();
for(propName in vProperties){switch(propName){case $[237]:case $[129]:vElement=vBaseElement;
break;
default:vElement=vTargetElement;
}var value=vProperties[propName];
vElement.style[propName]=(value==null)?$[1]:value;
}};
qx.Proto.isFocusable=function(){return this.isEnabled()&&this.isSeeable()&&this.getTabIndex()>=0;
};
qx.Proto.isFocusRoot=function(){return false;
};
qx.Proto.getFocusRoot=function(){if(this._hasParent){return this.getParent().getFocusRoot();
}return null;
};
qx.Proto.getActiveChild=function(){var vRoot=this.getFocusRoot();
if(vRoot){return vRoot.getActiveChild();
}return null;
};
qx.Proto._ontabfocus=qx.lang.Function.returnTrue;
qx.Proto._modifyFocused=function(propValue,propOldValue,propData){if(!this.isCreated()){return true;
}var vFocusRoot=this.getFocusRoot();
if(vFocusRoot){if(propValue){vFocusRoot.setFocusedChild(this);
this._visualizeFocus();
}else{if(vFocusRoot.getFocusedChild()==this){vFocusRoot.setFocusedChild(null);
}this._visualizeBlur();
}}return true;
};
qx.Proto._visualizeBlur=function(){if(this.getEnableElementFocus()&&(!this.getFocusRoot().getFocusedChild()||(this.getFocusRoot().getFocusedChild()&&this.getFocusRoot().getFocusedChild().getEnableElementFocus()))){try{this.getElement().blur();
}catch(ex){}}this.removeState($[159]);
return true;
};
qx.Proto._visualizeFocus=function(){if(!qx.event.handler.FocusHandler.mouseFocus&&this.getEnableElementFocus()){try{this.getElement().focus();
}catch(ex){}}this.addState($[159]);
return true;
};
qx.Proto.focus=function(){delete qx.event.handler.FocusHandler.mouseFocus;
this.setFocused(true);
};
qx.Proto.blur=function(){delete qx.event.handler.FocusHandler.mouseFocus;
this.setFocused(false);
};
qx.Proto._modifyCapture=function(propValue,propOldValue,propData){var vMgr=qx.event.handler.EventHandler.getInstance();
if(propOldValue){vMgr.setCaptureWidget(null);
}else if(propValue){vMgr.setCaptureWidget(this);
}return true;
};
qx.Proto._modifyZIndex=function(propValue,propOldValue,propData){return this.setStyleProperty(propData.name,propValue);
};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._modifyTabIndex=function(propValue,propOldValue,propData){if(propValue<0||!this.getEnabled()){this.setHtmlProperty($[163],$[72]);
}else{this.removeHtmlProperty($[163]);
}this.setHtmlProperty($[256],propValue<0?-1:1);
return true;
};
}else if(qx.core.Client.getInstance().isGecko()){qx.Proto._modifyTabIndex=function(propValue,propOldValue,propData){this.setStyleProperty($[2010],(propValue<0?$[453]:$[122]));
this.setStyleProperty($[788],(propValue<0?$[453]:$[122]));
return true;
};
}else{qx.Proto._modifyTabIndex=function(propValue,propOldValue,propData){this.setStyleProperty($[788],(propValue<0?$[453]:$[122]));
if(propValue<0||!this.getEnabled()){this.setHtmlProperty($[163],$[72]);
}else{this.removeHtmlProperty($[163]);
}this.setHtmlProperty($[256],propValue<0?-1:1);
return true;
};
}qx.Proto.setCssClassName=function(propValue){this.setHtmlProperty($[207],propValue);
};
qx.Proto.getCssClassName=function(){return this.getHtmlProperty($[207]);
};
qx.Proto.getWidgetFromPoint=function(x,y){var ret=this.getWidgetFromPointHelper(x,y);
return ret&&ret!=this?ret:null;
};
qx.Proto.getWidgetFromPointHelper=function(x,y){return this;
};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._modifySelectable=function(propValue,propOldValue,propData){if(propValue){return this.removeHtmlProperty($[163]);
}else{return this.setHtmlProperty($[163],$[72]);
}};
}else if(qx.core.Client.getInstance().isGecko()){qx.Proto._modifySelectable=function(propValue,propOldValue,propData){if(propValue){this.removeStyleProperty($[567]);
}else{this.setStyleProperty($[567],$[33]);
}return true;
};
}else if(qx.core.Client.getInstance().isOpera()){qx.Proto._modifySelectable=function(propValue,propOldValue,propData){return true;
};
}else if(qx.core.Client.getInstance().isKhtml()||qx.core.Client.getInstance().isWebkit()){qx.Proto._modifySelectable=function(propValue,propOldValue,propData){if(propValue){this.removeStyleProperty($[577]);
}else{this.setStyleProperty($[577],$[33]);
}return true;
};
}else{qx.Proto._modifySelectable=function(propValue,propOldValue,propData){if(propValue){return this.removeStyleProperty($[532]);
}else{this.setStyleProperty($[532],$[33]);
}};
}if(qx.core.Client.getInstance().isMshtml()){qx.Proto._modifyOpacity=function(propValue,propOldValue,propData){if(propValue==null||propValue>=1||propValue<0){this.removeStyleProperty($[129]);
}else{this.setStyleProperty($[129],($[1278]+Math.round(propValue*100)+$[82]));
}return true;
};
}else{qx.Proto._modifyOpacity=function(propValue,propOldValue,propData){if(propValue==null||propValue>1){if(qx.core.Client.getInstance().isGecko()){this.removeStyleProperty($[629]);
}else if(qx.core.Client.getInstance().isKhtml()){this.removeStyleProperty($[548]);
}this.removeStyleProperty($[358]);
}else{propValue=qx.lang.Number.limit(propValue,0,1);
if(qx.core.Client.getInstance().isGecko()){this.setStyleProperty($[629],propValue);
}else if(qx.core.Client.getInstance().isKhtml()){this.setStyleProperty($[548],propValue);
}this.setStyleProperty($[358],propValue);
}return true;
};
}qx.Proto._modifyCursor=function(propValue,propOldValue,propData){if(propValue){if(propValue==$[1820]&&qx.core.Client.getInstance().isMshtml()){this.setStyleProperty($[198],$[923]);
}else{this.setStyleProperty($[198],propValue);
}}else{this.removeStyleProperty($[198]);
}return true;
};
qx.Proto._modifyBackgroundImage=function(propValue,propOldValue,propData){return qx.util.Validation.isValidString(propValue)?this.setStyleProperty($[424],$[2414]+qx.manager.object.AliasManager.getInstance().resolvePath(propValue)+$[82]):this.removeStyleProperty($[424]);
};
qx.Proto._modifyClip=function(propValue,propOldValue,propData){return this._compileClipString();
};
qx.Proto._compileClipString=function(){var vLeft=this.getClipLeft();
var vTop=this.getClipTop();
var vWidth=this.getClipWidth();
var vHeight=this.getClipHeight();
var vRight,vBottom;
if(vLeft==null){vRight=(vWidth==null?$[5]:vWidth+$[21]);
vLeft=$[5];
}else{vRight=(vWidth==null?$[5]:vLeft+vWidth+$[21]);
vLeft=vLeft+$[21];
}
if(vTop==null){vBottom=(vHeight==null?$[5]:vHeight+$[21]);
vTop=$[5];
}else{vBottom=(vHeight==null?$[5]:vTop+vHeight+$[21]);
vTop=vTop+$[21];
}return this.setStyleProperty($[183],($[2382]+vTop+$[23]+vRight+$[23]+vBottom+$[23]+vLeft+$[82]));
};
qx.ui.core.Widget.initOverflow=function(){if(qx.ui.core.Widget.initOverflowDone){return;
}var t=document.createElement($[50]);
var s=t.style;
s.height=s.width=$[338];
s.overflow=$[66];
document.body.appendChild(t);
var c=qx.html.Dimension.getScrollBarSizeRight(t);
if(c){qx.ui.core.Widget.SCROLLBAR_SIZE=c;
}document.body.removeChild(t);
qx.ui.core.Widget.initOverflowDone=true;
};
if(qx.core.Client.getInstance().isGecko()){qx.Proto._modifyOverflow=function(propValue,propOldValue,propData){var pv=propValue;
var pn=propData.name;
switch(pv){case $[26]:pv=$[1423];
break;
case $[139]:pv=$[412];
break;
case $[112]:pv=$[394];
break;
}return this._applyOverflow(pn,pv,propValue,propOldValue);
};
}else if(qx.core.Client.getInstance().isMshtml()){qx.Proto._modifyOverflow=function(propValue,propOldValue,propData){var pv=propValue;
var pn=propData.name;
switch(pv){case $[139]:pn=$[303];
pv=$[66];
break;
case $[112]:pn=$[272];
pv=$[66];
break;
}var a=[$[189],$[303],$[272]];
for(var i=0;i<a.length;i++){if(a[i]!=pn){this.removeStyleProperty(a[i]);
}}return this._applyOverflow(pn,pv,propValue,propOldValue);
};
}else{qx.Proto._modifyOverflow=function(propValue,propOldValue,propData){var pv=propValue;
var pn=propData.name;
switch(pv){case $[139]:case $[112]:pv=$[66];
break;
}return this._applyOverflow(pn,pv,propValue,propOldValue);
};
}qx.Proto._applyOverflow=function(pn,pv,propValue,propOldValue){this.setStyleProperty(pn,pv);
this._invalidateFrameWidth();
this._invalidateFrameHeight();
return true;
};
qx.Proto.getOverflowX=function(){var vOverflow=this.getOverflow();
return vOverflow==$[112]?$[26]:vOverflow;
};
qx.Proto.getOverflowY=function(){var vOverflow=this.getOverflow();
return vOverflow==$[139]?$[26]:vOverflow;
};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._modifyHideFocus=function(propValue,propOldValue,propData){this.setHtmlProperty(propData.name,propValue);
return true;
};
}qx.Proto._modifyBackgroundColor=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.remove(this);
}
if(propValue){this._applyBackgroundColor(propValue.getStyle());
propValue.add(this);
}else{this._resetBackgroundColor();
}return true;
};
qx.Proto._modifyColor=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.remove(this);
}
if(propValue){this._applyColor(propValue.getStyle());
propValue.add(this);
}else{this._resetColor();
}return true;
};
qx.Proto._updateColors=function(vColor,vNewValue){if(this.getColor()==vColor){this._applyColor(vNewValue);
}
if(this.getBackgroundColor()==vColor){this._applyBackgroundColor(vNewValue);
}};
qx.Proto._applyColor=function(vNewValue){this.setStyleProperty($[443],vNewValue);
};
qx.Proto._applyBackgroundColor=function(vNewValue){this.setStyleProperty($[348],vNewValue);
};
qx.Proto._resetColor=function(vNewValue){this.removeStyleProperty($[443]);
};
qx.Proto._resetBackgroundColor=function(){this.removeStyleProperty($[348]);
};
qx.Proto._cachedBorderTop=0;
qx.Proto._cachedBorderRight=0;
qx.Proto._cachedBorderBottom=0;
qx.Proto._cachedBorderLeft=0;
qx.Proto._modifyBorder=function(propValue,propOldValue,propData){var vOldTop=this._cachedBorderTop;
var vOldRight=this._cachedBorderRight;
var vOldBottom=this._cachedBorderBottom;
var vOldLeft=this._cachedBorderLeft;
if(propOldValue){propOldValue.removeListenerWidget(this);
}
if(propValue){propValue.addListenerWidget(this);
this._cachedBorderTop=propValue.getTopWidth();
this._cachedBorderRight=propValue.getRightWidth();
this._cachedBorderBottom=propValue.getBottomWidth();
this._cachedBorderLeft=propValue.getLeftWidth();
}else{this._cachedBorderTop=this._cachedBorderRight=this._cachedBorderBottom=this._cachedBorderLeft=0;
}if((vOldLeft+vOldRight)!=(this._cachedBorderLeft+this._cachedBorderRight)){this._invalidateFrameWidth();
}this.addToQueue($[786]);
if((vOldTop+vOldBottom)!=(this._cachedBorderTop+this._cachedBorderBottom)){this._invalidateFrameHeight();
}this.addToQueue($[491]);
return true;
};
qx.Proto.getCachedBorderTop=function(){return this._cachedBorderTop;
};
qx.Proto.getCachedBorderRight=function(){return this._cachedBorderRight;
};
qx.Proto.getCachedBorderBottom=function(){return this._cachedBorderBottom;
};
qx.Proto.getCachedBorderLeft=function(){return this._cachedBorderLeft;
};
qx.Proto._updateBorder=function(vEdge){var vBorder=this.getBorder();
var vEdgeUp=qx.lang.String.toFirstUp(vEdge);
var vNewValue=vBorder[$[78]+vEdgeUp+$[607]]();
var vCacheName=$[2185]+vEdgeUp;
var vWidthChanged=this[vCacheName]!=vNewValue;
this[vCacheName]=vNewValue;
switch(vEdge){case $[11]:case $[10]:if(vWidthChanged){this.addToJobQueue($[1511]);
}this.addToJobQueue($[786]);
break;
case $[12]:case $[16]:if(vWidthChanged){this.addToJobQueue($[1625]);
}this.addToJobQueue($[491]);
break;
}};
qx.Proto._modifyPaddingX=function(propValue,propOldValue,propData){this._invalidateFrameWidth();
return true;
};
qx.Proto._modifyPaddingY=function(propValue,propOldValue,propData){this._invalidateFrameHeight();
return true;
};
qx.Proto._clonePropertyIgnoreList=$[1831];
qx.Proto.clone=function(cloneRecursive,customPropertyList){var cloneInstance=new this.constructor;
var propertyName;
var propertyList=[];
var propertyIngoreList=this._clonePropertyIgnoreList.split($[23]);
var sourcePropertyList=customPropertyList!=null?customPropertyList:this._properties.split($[23]);
var sourcePropertyListLength=sourcePropertyList.length-1;
do{propertyName=sourcePropertyList[sourcePropertyListLength];
if(!qx.lang.Array.contains(propertyIngoreList,propertyName)){propertyList.push(propertyName);
}}while(sourcePropertyListLength--);
propertyListLength=propertyList.length-1;
do{propertyName=qx.lang.String.toFirstUp(propertyList[propertyListLength]);
cloneInstance[$[83]+propertyName](this[$[78]+propertyName]());
}while(propertyListLength--);
if(qx.lang.Array.contains(sourcePropertyList,$[202])){var myParent=this.getParent();
if(myParent){cloneInstance.setParent(myParent);
}}if(cloneRecursive){this._cloneRecursive(cloneInstance);
}return cloneInstance;
};
qx.Proto._cloneRecursive=function(cloneInstance){};
qx.Proto.execute=function(){var vCommand=this.getCommand();
if(vCommand){vCommand.execute(this);
}this.createDispatchEvent($[38]);
};
qx.Proto._visualPropertyCheck=function(){if(!this.isCreated()){throw new Error("Element must be created previously!");
}};
qx.Proto.setScrollLeft=function(nScrollLeft){this._visualPropertyCheck();
this._getTargetNode().scrollLeft=nScrollLeft;
};
qx.Proto.setScrollTop=function(nScrollTop){this._visualPropertyCheck();
this._getTargetNode().scrollTop=nScrollTop;
};
qx.Proto.getOffsetLeft=function(){this._visualPropertyCheck();
return qx.html.Offset.getLeft(this.getElement());
};
qx.Proto.getOffsetTop=function(){this._visualPropertyCheck();
return qx.html.Offset.getTop(this.getElement());
};
qx.Proto.getScrollLeft=function(){this._visualPropertyCheck();
return this._getTargetNode().scrollLeft;
};
qx.Proto.getScrollTop=function(){this._visualPropertyCheck();
return this._getTargetNode().scrollTop;
};
qx.Proto.getClientWidth=function(){this._visualPropertyCheck();
return this._getTargetNode().clientWidth;
};
qx.Proto.getClientHeight=function(){this._visualPropertyCheck();
return this._getTargetNode().clientHeight;
};
qx.Proto.getOffsetWidth=function(){this._visualPropertyCheck();
return this.getElement().offsetWidth;
};
qx.Proto.getOffsetHeight=function(){this._visualPropertyCheck();
return this.getElement().offsetHeight;
};
qx.Proto.getScrollWidth=function(){this._visualPropertyCheck();
return this.getElement().scrollWidth;
};
qx.Proto.getScrollHeight=function(){this._visualPropertyCheck();
return this.getElement().scrollHeight;
};
qx.Proto.scrollIntoView=function(vAlignTopLeft){this.scrollIntoViewX(vAlignTopLeft);
this.scrollIntoViewY(vAlignTopLeft);
};
qx.Proto.scrollIntoViewX=function(vAlignLeft){if(!this._isCreated||!this._isDisplayable){return false;
}return qx.html.ScrollIntoView.scrollX(this.getElement(),vAlignLeft);
};
qx.Proto.scrollIntoViewY=function(vAlignTop){if(!this._isCreated||!this._isDisplayable){return false;
}return qx.html.ScrollIntoView.scrollY(this.getElement(),vAlignTop);
};
qx.Proto.supportsDrop=function(vDragCache){return true;
};
qx.OO.addProperty({name:$[1362],type:$[2],allowNull:false,defaultValue:10});
qx.OO.addProperty({name:$[1741],type:$[2],allowNull:false,defaultValue:400});
qx.OO.addProperty({name:$[825],type:$[2],allowNull:false,defaultValue:40});
qx.OO.addProperty({name:$[2226],type:$[2],allowNull:false,defaultValue:0});
qx.OO.addProperty({name:$[2017],type:$[2],allowNull:false,defaultValue:10});
qx.OO.addProperty({name:$[1974],type:$[2],allowNull:false,defaultValue:100});
qx.ui.core.Widget.FADE_IN='FADE_IN';
qx.ui.core.Widget.FADE_OUT='FADE_OUT';
qx.ui.core.Widget.FADE_FINISHED='FADE_FINISHED';
qx.Proto.fadeIn=function(vSteps,vTime){if(vSteps)this.setFadeSteps(vSteps);
if(vTime)this.setFadeTime(vTime);
this._fadeMode=qx.ui.core.Widget.FADE_IN;
var timer=this.getFadeTimer();
timer.addEventListener($[54],this._onInterval,this);
timer.start();
};
qx.Proto.fadeOut=function(vSteps,vTime){if(vSteps)this.setFadeSteps(vSteps);
if(vTime)this.setFadeTime(vTime);
this._fadeMode=qx.ui.core.Widget.FADE_OUT;
var timer=this.getFadeTimer();
timer.addEventListener($[54],this._onInterval,this);
timer.start();
};
qx.Proto.getFadeTimer=function(){if(this._fadeTimer){this._fadeTimer.setInterval(this.getFadeInterval());
}else{this._fadeTimer=new qx.client.Timer(this.getFadeInterval());
}return this._fadeTimer;
};
qx.Proto.resetFader=function(){this.setFadeCounter(0);
if(this.getFadeTimer()){this._fadeTimer.stop();
this._fadeTimer.dispose();
}this._fadeTimer.dispose();
this._fadeTimer=null;
};
qx.Proto._onInterval=function(e){this.getFadeTimer().stop();
var counter=this.getFadeCounter();
switch(this._fadeMode){case qx.ui.core.Widget.FADE_IN:this.setFadeCounter(++counter);
if(counter<=this.getFadeSteps()){this.setOpacity(this._computeFadeOpacity());
this.getFadeTimer().restart();
}else if(this.hasEventListeners(qx.ui.core.Widget.FADE_FINISHED)){this.createDispatchDataEvent(qx.ui.core.Widget.FADE_FINISHED,qx.ui.core.Widget.FADE_IN);
}break;
case qx.ui.core.Widget.FADE_OUT:this.setFadeCounter(--counter);
if(counter>=0){this.setOpacity(this._computeFadeOpacity());
this.getFadeTimer().restart();
}else if(this.hasEventListeners(qx.ui.core.Widget.FADE_FINISHED)){this.createDispatchDataEvent(qx.ui.core.Widget.FADE_FINISHED,qx.ui.core.Widget.FADE_OUT);
}break;
}qx.ui.core.Widget.flushGlobalQueues();
};
qx.Proto._modifyFadeSteps=function(propValue,propOldValue,propData){if(propValue<1)return;
this.setFadeInterval(parseInt(this.getFadeTime()/propValue));
this.setFadeUnit(Math.round(this.getFadeMax()/propValue));
return true;
};
qx.Proto._modifyFadeTime=function(propValue,propOldValue,propData){if(propValue<1)return;
this.setFadeInterval(parseInt(propValue/this.getFadeSteps()));
return true;
};
qx.Proto._modifyFadeUnit=function(propValue,propOldValue,propData){this.setFadeSteps(Math.round(this.getFadeMax()/propValue));
return true;
};
qx.Proto._modifyFadeMax=function(propValue,propOldValue,propData){this.setFadeUnit(Math.round(propValue/this.getFadeSteps()));
return true;
};
qx.Proto._computeFadeOpacity=function(){var op=this.getFadeUnit()*this.getFadeCounter()/100;
return (op);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}var vElement=this.getElement();
if(vElement){this._removeInlineEvents(vElement);
delete this._isCreated;
vElement.qx_Widget=null;
this._element=null;
this._style=null;
}this._inlineEvents=null;
this._element=null;
this._style=null;
this._borderElement=null;
this._borderStyle=null;
this._oldParent=null;
delete this._styleProperties;
delete this._htmlProperties;
delete this._htmlAttributes;
delete this._states;
for(var i in this._jobQueue){delete this._jobQueue[i];
}delete this._jobQueue;
for(var i in this._layoutChanges){delete this._layoutChanges[i];
}delete this._layoutChanges;
if(this._fadeTimer){this._fadeTimer.dispose();
this._fadeTimer=null;
}return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.html.Style */
qx.OO.defineClass($[2427]);
qx.html.Style.getStylePropertySure=function(vElement,propertyName){};
qx.html.Style.getStyleProperty=function(vElement,propertyName){};
if(Boolean(document.defaultView)&&Boolean(document.defaultView.getComputedStyle)){qx.html.Style.getStylePropertySure=function(el,prop){return !el?null:el.ownerDocument?el.ownerDocument.defaultView.getComputedStyle(el,$[1])[prop]:el.style[prop];
};
qx.html.Style.getStyleProperty=function(el,prop){try{return el.ownerDocument.defaultView.getComputedStyle(el,$[1])[prop];
}catch(ex){throw new Error("Could not evaluate computed style: "+el+"["+prop+"]: "+ex);
}};
}else if(qx.core.Client.getInstance().isMshtml()){qx.html.Style.getStyleProperty=function(el,prop){try{return el.currentStyle[prop];
}catch(ex){throw new Error("Could not evaluate computed style: "+el+"["+prop+"]: "+ex);
}};
qx.html.Style.getStylePropertySure=function(el,prop){try{if(!el){return null;
}
if(el.parentNode&&el.currentStyle){return el.currentStyle[prop];
}else{var v1=el.runtimeStyle[prop];
if(v1!=null&&typeof v1!=$[41]&&v1!=$[1]){return v1;
}return el.style[prop];
}}catch(ex){throw new Error("Could not evaluate computed style: "+el+"["+prop+"]: "+ex);
}};
}else{qx.html.Style.getStylePropertySure=function(el,prop){return !el?null:el.style[prop];
};
qx.html.Style.getStyleProperty=function(el,prop){try{return el.style[prop];
}catch(ex){throw new Error("Could not evaluate computed style: "+el+"["+prop+"]");
}};
}qx.html.Style.getStyleSize=function(vElement,propertyName){return parseInt(qx.html.Style.getStyleProperty(vElement,propertyName))||0;
};
qx.html.Style.getMarginLeft=function(vElement){return qx.html.Style.getStyleSize(vElement,$[475]);
};
qx.html.Style.getMarginTop=function(vElement){return qx.html.Style.getStyleSize(vElement,$[410]);
};
qx.html.Style.getMarginRight=function(vElement){return qx.html.Style.getStyleSize(vElement,$[426]);
};
qx.html.Style.getMarginBottom=function(vElement){return qx.html.Style.getStyleSize(vElement,$[461]);
};
qx.html.Style.getPaddingLeft=function(vElement){return qx.html.Style.getStyleSize(vElement,$[151]);
};
qx.html.Style.getPaddingTop=function(vElement){return qx.html.Style.getStyleSize(vElement,$[154]);
};
qx.html.Style.getPaddingRight=function(vElement){return qx.html.Style.getStyleSize(vElement,$[160]);
};
qx.html.Style.getPaddingBottom=function(vElement){return qx.html.Style.getStyleSize(vElement,$[162]);
};
qx.html.Style.getBorderLeft=function(vElement){return qx.html.Style.getStyleProperty(vElement,$[1197])==$[33]?0:qx.html.Style.getStyleSize(vElement,$[1668]);
};
qx.html.Style.getBorderTop=function(vElement){return qx.html.Style.getStyleProperty(vElement,$[1333])==$[33]?0:qx.html.Style.getStyleSize(vElement,$[1102]);
};
qx.html.Style.getBorderRight=function(vElement){return qx.html.Style.getStyleProperty(vElement,$[1350])==$[33]?0:qx.html.Style.getStyleSize(vElement,$[1566]);
};
qx.html.Style.getBorderBottom=function(vElement){return qx.html.Style.getStyleProperty(vElement,$[815])==$[33]?0:qx.html.Style.getStyleSize(vElement,$[1018]);
};




/* ID: qx.ui.core.Parent */
qx.OO.defineClass($[452],qx.ui.core.Widget,function(){if(this.classname==qx.ui.core.Parent.ABSTRACT_CLASS){throw new Error("Please omit the usage of qx.ui.core.Parent directly. Choose between any widget which inherits from qx.ui.core.Parent and so comes with a layout implementation!");
}qx.ui.core.Widget.call(this);
this._children=[];
this._layoutImpl=this._createLayoutImpl();
});
qx.ui.core.Parent.ABSTRACT_CLASS="qx.ui.core.Parent";
qx.OO.addProperty({name:$[890],type:$[4],instance:$[744]});
qx.OO.addProperty({name:$[1779],type:$[4],instance:$[167]});
qx.OO.addProperty({name:$[1688],type:$[4],instance:$[167]});
qx.OO.addCachedProperty({name:$[2274],defaultValue:null});
qx.Proto.isFocusRoot=function(){return this.getFocusHandler()!=null;
};
qx.Proto.getFocusRoot=function(){if(this.isFocusRoot()){return this;
}
if(this._hasParent){return this.getParent().getFocusRoot();
}return null;
};
qx.Proto.activateFocusRoot=function(){this.setFocusHandler(new qx.event.handler.FocusHandler(this));
};
qx.Proto._onfocuskeyevent=function(e){this.getFocusHandler()._onkeyevent(this,e);
};
qx.Proto._modifyFocusHandler=function(propValue,propOldValue,propData){if(propValue){this.addEventListener($[13],this._onfocuskeyevent);
this.addEventListener($[14],this._onfocuskeyevent);
if(this.getTabIndex()<1){this.setTabIndex(1);
}this.setHideFocus(true);
this.setActiveChild(this);
}else{this.removeEventListener($[13],this._onfocuskeyevent);
this.removeEventListener($[14],this._onfocuskeyevent);
this.setTabIndex(-1);
this.setHideFocus(false);
}return true;
};
qx.Proto._modifyFocusedChild=function(propValue,propOldValue,propData){var vFocusValid=propValue!=null;
var vBlurValid=propOldValue!=null;
if(qx.OO.isAvailable($[204])&&vFocusValid){var vMgr=qx.manager.object.PopupManager.getInstance();
if(vMgr){vMgr.update(propValue);
}}
if(vBlurValid){if(propOldValue.hasEventListeners($[386])){var vEventObject=new qx.event.type.FocusEvent($[386],propOldValue);
if(vFocusValid){vEventObject.setRelatedTarget(propValue);
}propOldValue.dispatchEvent(vEventObject);
vEventObject.dispose();
}}
if(vFocusValid){if(propValue.hasEventListeners($[341])){var vEventObject=new qx.event.type.FocusEvent($[341],propValue);
if(vBlurValid){vEventObject.setRelatedTarget(propOldValue);
}propValue.dispatchEvent(vEventObject);
vEventObject.dispose();
}}
if(vBlurValid){if(this.getActiveChild()==propOldValue&&!vFocusValid){this.setActiveChild(null);
}propOldValue.setFocused(false);
var vEventObject=new qx.event.type.FocusEvent($[172],propOldValue);
if(vFocusValid){vEventObject.setRelatedTarget(propValue);
}propOldValue.dispatchEvent(vEventObject);
if(qx.OO.isAvailable($[135])){var vMgr=qx.manager.object.ToolTipManager.getInstance();
if(vMgr){vMgr.handleBlur(vEventObject);
}}vEventObject.dispose();
}
if(vFocusValid){this.setActiveChild(propValue);
propValue.setFocused(true);
qx.event.handler.EventHandler.getInstance().setFocusRoot(this);
var vEventObject=new qx.event.type.FocusEvent($[227],propValue);
if(vBlurValid){vEventObject.setRelatedTarget(propOldValue);
}propValue.dispatchEvent(vEventObject);
if(qx.OO.isAvailable($[135])){var vMgr=qx.manager.object.ToolTipManager.getInstance();
if(vMgr){vMgr.handleFocus(vEventObject);
}}vEventObject.dispose();
}return true;
};
qx.Proto._layoutImpl=null;
qx.Proto._createLayoutImpl=function(){return null;
};
qx.Proto.getLayoutImpl=function(){return this._layoutImpl;
};
qx.Proto.getChildren=function(){return this._children;
};
qx.Proto.getChildrenLength=function(){return this.getChildren().length;
};
qx.Proto.hasChildren=function(){return this.getChildrenLength()>0;
};
qx.Proto.isEmpty=function(){return this.getChildrenLength()==0;
};
qx.Proto.indexOf=function(vChild){return this.getChildren().indexOf(vChild);
};
qx.Proto.contains=function(vWidget){switch(vWidget){case null:return false;
case this:return true;
default:return this.contains(vWidget.getParent());
}};
qx.Proto._computeVisibleChildren=function(){var vVisible=[];
var vChildren=this.getChildren();
var vLength=vChildren.length;
for(var i=0;i<vLength;i++){var vChild=vChildren[i];
if(vChild._isDisplayable){vVisible.push(vChild);
}}return vVisible;
};
qx.Proto.getVisibleChildrenLength=function(){return this.getVisibleChildren().length;
};
qx.Proto.hasVisibleChildren=function(){return this.getVisibleChildrenLength()>0;
};
qx.Proto.isVisibleEmpty=function(){return this.getVisibleChildrenLength()==0;
};
qx.Proto.add=function(){var vWidget;
for(var i=0,l=arguments.length;i<l;i++){vWidget=arguments[i];
if(!(vWidget instanceof qx.ui.core.Parent)&&!(vWidget instanceof qx.ui.basic.Terminator)){throw new Error("Invalid Widget: "+vWidget);
}else{vWidget.setParent(this);
}}return this;
};
qx.Proto.addAt=function(vChild,vIndex){if(vIndex==null||vIndex<0){throw new Error("Not a valid index for addAt(): "+vIndex);
}
if(vChild.getParent()==this){var vChildren=this.getChildren();
var vOldIndex=vChildren.indexOf(vChild);
if(vOldIndex!=vIndex){if(vOldIndex!=-1){qx.lang.Array.removeAt(vChildren,vOldIndex);
}qx.lang.Array.insertAt(vChildren,vChild,vIndex);
if(this._initialLayoutDone){this._invalidateVisibleChildren();
this.getLayoutImpl().updateChildrenOnMoveChild(vChild,vIndex,vOldIndex);
}}}else{vChild._insertIndex=vIndex;
vChild.setParent(this);
}};
qx.Proto.addAtBegin=function(vChild){return this.addAt(vChild,0);
};
qx.Proto.addAtEnd=function(vChild){var vLength=this.getChildrenLength();
return this.addAt(vChild,vChild.getParent()==this?vLength-1:vLength);
};
qx.Proto.addBefore=function(vChild,vBefore){var vChildren=this.getChildren();
var vTargetIndex=vChildren.indexOf(vBefore);
if(vTargetIndex==-1){throw new Error("Child to add before: "+vBefore+" is not inside this parent.");
}var vSourceIndex=vChildren.indexOf(vChild);
if(vSourceIndex==-1||vSourceIndex>vTargetIndex){vTargetIndex++;
}return this.addAt(vChild,Math.max(0,vTargetIndex-1));
};
qx.Proto.addAfter=function(vChild,vAfter){var vChildren=this.getChildren();
var vTargetIndex=vChildren.indexOf(vAfter);
if(vTargetIndex==-1){throw new Error("Child to add after: "+vAfter+" is not inside this parent.");
}var vSourceIndex=vChildren.indexOf(vChild);
if(vSourceIndex!=-1&&vSourceIndex<vTargetIndex){vTargetIndex--;
}return this.addAt(vChild,Math.min(vChildren.length,vTargetIndex+1));
};
qx.Proto.remove=function(){var vWidget;
for(var i=0,l=arguments.length;i<l;i++){vWidget=arguments[i];
if(!(vWidget instanceof qx.ui.core.Parent)&&!(vWidget instanceof qx.ui.basic.Terminator)){throw new Error("Invalid Widget: "+vWidget);
}else if(vWidget.getParent()==this){vWidget.setParent(null);
}}};
qx.Proto.removeAt=function(vIndex){var vChild=this.getChildren()[vIndex];
if(vChild){delete vChild._insertIndex;
vChild.setParent(null);
}};
qx.Proto.removeAll=function(){var cs=this.getChildren();
var co=cs[0];
while(co){this.remove(co);
co=cs[0];
}};
qx.Proto.getFirstChild=function(){return qx.lang.Array.getFirst(this.getChildren());
};
qx.Proto.getFirstVisibleChild=function(){return qx.lang.Array.getFirst(this.getVisibleChildren());
};
qx.Proto.getFirstActiveChild=function(vIgnoreClasses){return qx.ui.core.Widget.getActiveSiblingHelper(null,this,1,vIgnoreClasses,$[687]);
};
qx.Proto.getLastChild=function(){return qx.lang.Array.getLast(this.getChildren());
};
qx.Proto.getLastVisibleChild=function(){return qx.lang.Array.getLast(this.getVisibleChildren());
};
qx.Proto.getLastActiveChild=function(vIgnoreClasses){return qx.ui.core.Widget.getActiveSiblingHelper(null,this,-1,vIgnoreClasses,$[1220]);
};
qx.Proto.forEachChild=function(vFunc){var ch=this.getChildren(),chc,i=-1;
while(chc=ch[++i]){vFunc.call(chc,i);
}};
qx.Proto.forEachVisibleChild=function(vFunc){var ch=this.getVisibleChildren(),chc,i=-1;
while(chc=ch[++i]){vFunc.call(chc,i);
}};
qx.Proto._beforeAppear=function(){qx.ui.core.Widget.prototype._beforeAppear.call(this);
this.forEachVisibleChild(function(){if(this.isAppearRelevant()){this._beforeAppear();
}});
};
qx.Proto._afterAppear=function(){qx.ui.core.Widget.prototype._afterAppear.call(this);
this.forEachVisibleChild(function(){if(this.isAppearRelevant()){this._afterAppear();
}});
};
qx.Proto._beforeDisappear=function(){qx.ui.core.Widget.prototype._beforeDisappear.call(this);
this.forEachVisibleChild(function(){if(this.isAppearRelevant()){this._beforeDisappear();
}});
};
qx.Proto._afterDisappear=function(){qx.ui.core.Widget.prototype._afterDisappear.call(this);
this.forEachVisibleChild(function(){if(this.isAppearRelevant()){this._afterDisappear();
}});
};
qx.Proto._beforeInsertDom=function(){qx.ui.core.Widget.prototype._beforeInsertDom.call(this);
this.forEachVisibleChild(function(){if(this.isAppearRelevant()){this._beforeInsertDom();
}});
};
qx.Proto._afterInsertDom=function(){qx.ui.core.Widget.prototype._afterInsertDom.call(this);
this.forEachVisibleChild(function(){if(this.isAppearRelevant()){this._afterInsertDom();
}});
};
qx.Proto._beforeRemoveDom=function(){qx.ui.core.Widget.prototype._beforeRemoveDom.call(this);
this.forEachVisibleChild(function(){if(this.isAppearRelevant()){this._beforeRemoveDom();
}});
};
qx.Proto._afterRemoveDom=function(){qx.ui.core.Widget.prototype._afterRemoveDom.call(this);
this.forEachVisibleChild(function(){if(this.isAppearRelevant()){this._afterRemoveDom();
}});
};
qx.Proto._handleDisplayableCustom=function(vDisplayable,vParent,vHint){this.forEachChild(function(){this._handleDisplayable();
});
};
qx.Proto._addChildrenToStateQueue=function(){this.forEachVisibleChild(function(){this.addToStateQueue();
});
};
qx.Proto.recursiveAddToStateQueue=function(){this.addToStateQueue();
this.forEachVisibleChild(function(){this.recursiveAddToStateQueue();
});
};
qx.Proto._recursiveAppearanceThemeUpdate=function(vNewAppearanceTheme,vOldAppearanceTheme){qx.ui.core.Widget.prototype._recursiveAppearanceThemeUpdate.call(this,vNewAppearanceTheme,vOldAppearanceTheme);
this.forEachVisibleChild(function(){this._recursiveAppearanceThemeUpdate(vNewAppearanceTheme,vOldAppearanceTheme);
});
};
qx.Proto._addChildToChildrenQueue=function(vChild){if(!vChild._isInParentChildrenQueue&&!vChild._isDisplayable){this.warn($[1448]+vChild);
}
if(!vChild._isInParentChildrenQueue&&vChild._isDisplayable){qx.ui.core.Widget.addToGlobalLayoutQueue(this);
if(!this._childrenQueue){this._childrenQueue={};
}this._childrenQueue[vChild.toHashCode()]=vChild;
}};
qx.Proto._removeChildFromChildrenQueue=function(vChild){if(this._childrenQueue&&vChild._isInParentChildrenQueue){delete this._childrenQueue[vChild.toHashCode()];
if(qx.lang.Object.isEmpty(this._childrenQueue)){qx.ui.core.Widget.removeFromGlobalLayoutQueue(this);
}}};
qx.Proto._flushChildrenQueue=function(){if(!qx.lang.Object.isEmpty(this._childrenQueue)){this.getLayoutImpl().flushChildrenQueue(this._childrenQueue);
delete this._childrenQueue;
}};
qx.Proto._addChildrenToLayoutQueue=function(p){this.forEachChild(function(){this.addToLayoutChanges(p);
});
};
qx.Proto._layoutChild=function(vChild){if(!vChild._isDisplayable){this.warn($[1355]+vChild+$[1397]);
return;
}var vChanges=vChild._layoutChanges;
try{if(vChanges.borderX){this._applyBorderX(vChild,vChanges);
}
if(vChanges.borderY){this._applyBorderY(vChild,vChanges);
}}catch(ex){this.error("Could not apply border to child "+vChild,ex);
}
try{if(vChanges.paddingLeft||vChanges.paddingRight){vChild._applyPaddingX(this,vChanges);
}
if(vChanges.paddingTop||vChanges.paddingBottom){vChild._applyPaddingY(this,vChanges);
}}catch(ex){this.error("Could not apply padding to child "+vChild,ex);
}try{this.getLayoutImpl().layoutChild(vChild,vChanges);
}catch(ex){this.error("Could not layout child "+vChild+" through layout handler",ex);
}try{vChild._layoutPost(vChanges);
}catch(ex){this.error("Could not post layout child "+vChild,ex);
}try{if(vChanges.initial){vChild._initialLayoutDone=true;
qx.ui.core.Widget.addToGlobalDisplayQueue(vChild);
}}catch(ex){this.error("Could not handle display updates from layout flush for child "+vChild,ex);
}vChild._layoutChanges={};
delete vChild._isInParentLayoutQueue;
delete this._childrenQueue[vChild.toHashCode()];
};
qx.Proto._layoutPost=qx.lang.Function.returnTrue;
if(qx.core.Client.getInstance().isOpera()){qx.Proto._layoutChildOrig=qx.Proto._layoutChild;
qx.Proto._layoutChild=function(vChild){if(!vChild._initialLayoutDone||!vChild._layoutChanges.borderX||!vChild._layoutChanges.borderY){return this._layoutChildOrig(vChild);
}var vStyle=vChild.getElement().style;
var vOldDisplay=vStyle.display;
vStyle.display=$[33];
var vRet=this._layoutChildOrig(vChild);
vStyle.display=vOldDisplay;
return vRet;
};
}qx.Proto._computePreferredInnerWidth=function(){return this.getLayoutImpl().computeChildrenNeededWidth();
};
qx.Proto._computePreferredInnerHeight=function(){return this.getLayoutImpl().computeChildrenNeededHeight();
};
qx.Proto._changeInnerWidth=function(vNew,vOld){var vLayout=this.getLayoutImpl();
if(vLayout.invalidateChildrenFlexWidth){vLayout.invalidateChildrenFlexWidth();
}this.forEachVisibleChild(function(){if(vLayout.updateChildOnInnerWidthChange(this)&&this._recomputeBoxWidth()){this._recomputeOuterWidth();
this._recomputeInnerWidth();
}});
};
qx.Proto._changeInnerHeight=function(vNew,vOld){var vLayout=this.getLayoutImpl();
if(vLayout.invalidateChildrenFlexHeight){vLayout.invalidateChildrenFlexHeight();
}this.forEachVisibleChild(function(){if(vLayout.updateChildOnInnerHeightChange(this)&&this._recomputeBoxHeight()){this._recomputeOuterHeight();
this._recomputeInnerHeight();
}});
};
qx.Proto.getInnerWidthForChild=function(vChild){return this.getInnerWidth();
};
qx.Proto.getInnerHeightForChild=function(vChild){return this.getInnerHeight();
};
qx.Proto.getWidgetFromPointHelper=function(x,y){var ch=this.getChildren();
for(var chl=ch.length,i=0;i<chl;i++){if(qx.html.ElementFromPoint.getElementAbsolutePointChecker(ch[i].getElement(),x,y)){return ch[i].getWidgetFromPointHelper(x,y);
}}return this;
};
qx.Proto._cloneRecursive=function(cloneInstance){var ch=this.getChildren();
var chl=ch.length;
var cloneChild;
for(var i=0;i<chl;i++){cloneChild=ch[i].clone(true);
cloneInstance.add(cloneChild);
}};
qx.Proto._remappingChildTable=[$[563],$[267],$[612],$[701],$[498],$[321],$[678],$[507],$[244]];
qx.Proto._remapStart=$[2312];
qx.Proto._remapStop=$[2146];
qx.Proto.remapChildrenHandlingTo=function(vTarget){var t=this._remappingChildTable;
this._remappingChildTarget=vTarget;
for(var i=0,l=t.length,s;i<l;i++){s=t[i];
this[s]=new Function(qx.ui.core.Parent.prototype._remapStart+s+qx.ui.core.Parent.prototype._remapStop);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this._layoutImpl){this._layoutImpl.dispose();
this._layoutImpl=null;
}
for(var i in this._childrenQueue){delete this._childrenQueue[i];
}this._childrenQueue=null;
this._remappingChildTable=null;
this._remappingChildTarget=null;
if(this._children){var chl=this._children.length;
for(var i=chl-1;i>=0;i--){this._children[i].dispose();
this._children[i]=null;
}this._children=null;
}delete this._cachedVisibleChildren;
if(this.getFocusHandler()){this.removeEventListener($[13],this._onfocuskeyevent);
this.removeEventListener($[14],this._onfocuskeyevent);
this.forceFocusHandler(null);
}return qx.ui.core.Widget.prototype.dispose.call(this);
};




/* ID: qx.event.type.FocusEvent */
qx.OO.defineClass($[974],qx.event.type.Event,function(vType,vTarget){qx.event.type.Event.call(this,vType);
this.setTarget(vTarget);
switch(vType){case $[341]:case $[386]:this.setBubbles(true);
this.setPropagationStopped(false);
}});




/* ID: qx.ui.basic.Terminator */
qx.OO.defineClass($[1750],qx.ui.core.Widget,function(){qx.ui.core.Widget.call(this);
});
qx.Proto._applyPaddingX=function(vParent,vChanges,vStyle){if(vChanges.paddingLeft){this._applyRuntimePaddingLeft(this.getPaddingLeft());
}
if(vChanges.paddingRight){this._applyRuntimePaddingRight(this.getPaddingRight());
}};
qx.Proto._applyPaddingY=function(vParent,vChanges,vStyle){if(vChanges.paddingTop){this._applyRuntimePaddingTop(this.getPaddingTop());
}
if(vChanges.paddingBottom){this._applyRuntimePaddingBottom(this.getPaddingBottom());
}};
qx.Proto._applyContent=function(){if(this._computedWidthTypePixel){this._cachedPreferredInnerWidth=null;
}else{this._invalidatePreferredInnerWidth();
}if(this._computedHeightTypePixel){this._cachedPreferredInnerHeight=null;
}else{this._invalidatePreferredInnerHeight();
}if(this._initialLayoutDone){this.addToJobQueue($[84]);
}};
qx.Proto._layoutPost=function(vChanges){if(vChanges.initial||vChanges.load||vChanges.width||vChanges.height){this._postApply();
}};
qx.Proto._postApply=qx.lang.Function.returnTrue;
qx.Proto._computeBoxWidthFallback=qx.Proto.getPreferredBoxWidth;
qx.Proto._computeBoxHeightFallback=qx.Proto.getPreferredBoxHeight;
qx.Proto._computePreferredInnerWidth=qx.lang.Function.returnZero;
qx.Proto._computePreferredInnerHeight=qx.lang.Function.returnZero;
qx.Proto._isWidthEssential=function(){if(!this._computedLeftTypeNull&&!this._computedRightTypeNull){return true;
}
if(!this._computedWidthTypeNull&&!this._computedWidthTypeAuto){return true;
}
if(!this._computedMinWidthTypeNull&&!this._computedMinWidthTypeAuto){return true;
}
if(!this._computedMaxWidthTypeNull&&!this._computedMaxWidthTypeAuto){return true;
}
if(this._borderElement){return true;
}return false;
};
qx.Proto._isHeightEssential=function(){if(!this._computedTopTypeNull&&!this._computedBottomTypeNull){return true;
}
if(!this._computedHeightTypeNull&&!this._computedHeightTypeAuto){return true;
}
if(!this._computedMinHeightTypeNull&&!this._computedMinHeightTypeAuto){return true;
}
if(!this._computedMaxHeightTypeNull&&!this._computedMaxHeightTypeAuto){return true;
}
if(this._borderElement){return true;
}return false;
};




/* ID: qx.ui.layout.CanvasLayout */
qx.OO.defineClass($[1900],qx.ui.core.Parent,function(){qx.ui.core.Parent.call(this);
});
qx.Proto._createLayoutImpl=function(){return new qx.renderer.layout.CanvasLayoutImpl(this);
};




/* ID: qx.renderer.layout.LayoutImpl */
qx.OO.defineClass($[2190],qx.core.Object,function(vWidget){qx.core.Object.call(this);
this._widget=vWidget;
});
qx.Proto.getWidget=function(){return this._widget;
};
qx.Proto.computeChildBoxWidth=function(vChild){return vChild.getWidthValue()||vChild._computeBoxWidthFallback();
};
qx.Proto.computeChildBoxHeight=function(vChild){return vChild.getHeightValue()||vChild._computeBoxHeightFallback();
};
qx.Proto.computeChildNeededWidth=function(vChild){var vMinBox=vChild._computedMinWidthTypePercent?null:vChild.getMinWidthValue();
var vMaxBox=vChild._computedMaxWidthTypePercent?null:vChild.getMaxWidthValue();
var vBox=(vChild._computedWidthTypePercent||vChild._computedWidthTypeFlex?null:vChild.getWidthValue())||vChild.getPreferredBoxWidth()||0;
return qx.lang.Number.limit(vBox,vMinBox,vMaxBox)+vChild.getMarginLeft()+vChild.getMarginRight();
};
qx.Proto.computeChildNeededHeight=function(vChild){var vMinBox=vChild._computedMinHeightTypePercent?null:vChild.getMinHeightValue();
var vMaxBox=vChild._computedMaxHeightTypePercent?null:vChild.getMaxHeightValue();
var vBox=(vChild._computedHeightTypePercent||vChild._computedHeightTypeFlex?null:vChild.getHeightValue())||vChild.getPreferredBoxHeight()||0;
return qx.lang.Number.limit(vBox,vMinBox,vMaxBox)+vChild.getMarginTop()+vChild.getMarginBottom();
};
qx.Proto.computeChildrenNeededWidth_max=function(){for(var i=0,ch=this.getWidget().getVisibleChildren(),chl=ch.length,maxv=0;i<chl;i++){maxv=Math.max(maxv,ch[i].getNeededWidth());
}return maxv;
};
qx.Proto.computeChildrenNeededHeight_max=function(){for(var i=0,ch=this.getWidget().getVisibleChildren(),chl=ch.length,maxv=0;i<chl;i++){maxv=Math.max(maxv,ch[i].getNeededHeight());
}return maxv;
};
qx.Proto.computeChildrenNeededWidth_sum=function(){for(var i=0,ch=this.getWidget().getVisibleChildren(),chl=ch.length,sumv=0;i<chl;i++){sumv+=ch[i].getNeededWidth();
}return sumv;
};
qx.Proto.computeChildrenNeededHeight_sum=function(){for(var i=0,ch=this.getWidget().getVisibleChildren(),chl=ch.length,sumv=0;i<chl;i++){sumv+=ch[i].getNeededHeight();
}return sumv;
};
qx.Proto.computeChildrenNeededWidth=qx.Proto.computeChildrenNeededWidth_max;
qx.Proto.computeChildrenNeededHeight=qx.Proto.computeChildrenNeededHeight_max;
qx.Proto.updateSelfOnChildOuterWidthChange=function(vChild){};
qx.Proto.updateSelfOnChildOuterHeightChange=function(vChild){};
qx.Proto.updateChildOnInnerWidthChange=function(vChild){};
qx.Proto.updateChildOnInnerHeightChange=function(vChild){};
qx.Proto.updateSelfOnJobQueueFlush=function(vJobQueue){};
qx.Proto.updateChildrenOnJobQueueFlush=function(vJobQueue){};
qx.Proto.updateChildrenOnAddChild=function(vChild,vIndex){};
qx.Proto.updateChildrenOnRemoveChild=function(vChild,vIndex){};
qx.Proto.updateChildrenOnMoveChild=function(vChild,vIndex,vOldIndex){};
qx.Proto.flushChildrenQueue=function(vChildrenQueue){var vWidget=this.getWidget();
for(var vHashCode in vChildrenQueue){vWidget._layoutChild(vChildrenQueue[vHashCode]);
}};
qx.Proto.layoutChild=function(vChild,vJobs){};
qx.Proto.layoutChild_sizeLimitX=function(vChild,vJobs){};
qx.Proto.layoutChild_sizeLimitY=function(vChild,vJobs){};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto.layoutChild_sizeLimitX=qx.lang.Function.returnTrue;
qx.Proto.layoutChild_sizeLimitY=qx.lang.Function.returnTrue;
}else{qx.Proto.layoutChild_sizeLimitX=function(vChild,vJobs){if(vJobs.minWidth){vChild._computedMinWidthTypeNull?vChild._resetRuntimeMinWidth():vChild._applyRuntimeMinWidth(vChild.getMinWidthValue());
}else if(vJobs.initial&&!vChild._computedMinWidthTypeNull){vChild._applyRuntimeMinWidth(vChild.getMinWidthValue());
}
if(vJobs.maxWidth){vChild._computedMaxWidthTypeNull?vChild._resetRuntimeMaxWidth():vChild._applyRuntimeMaxWidth(vChild.getMaxWidthValue());
}else if(vJobs.initial&&!vChild._computedMaxWidthTypeNull){vChild._applyRuntimeMaxWidth(vChild.getMaxWidthValue());
}};
qx.Proto.layoutChild_sizeLimitY=function(vChild,vJobs){if(vJobs.minHeight){vChild._computedMinHeightTypeNull?vChild._resetRuntimeMinHeight():vChild._applyRuntimeMinHeight(vChild.getMinHeightValue());
}else if(vJobs.initial&&!vChild._computedMinHeightTypeNull){vChild._applyRuntimeMinHeight(vChild.getMinHeightValue());
}
if(vJobs.maxHeight){vChild._computedMaxHeightTypeNull?vChild._resetRuntimeMaxHeight():vChild._applyRuntimeMaxHeight(vChild.getMaxHeightValue());
}else if(vJobs.initial&&!vChild._computedMaxHeightTypeNull){vChild._applyRuntimeMaxHeight(vChild.getMaxHeightValue());
}};
}qx.Proto.layoutChild_marginX=function(vChild,vJobs){if(vJobs.marginLeft||vJobs.initial){var vValueLeft=vChild.getMarginLeft();
vValueLeft!=null?vChild._applyRuntimeMarginLeft(vValueLeft):vChild._resetRuntimeMarginLeft();
}
if(vJobs.marginRight||vJobs.initial){var vValueRight=vChild.getMarginRight();
vValueRight!=null?vChild._applyRuntimeMarginRight(vValueRight):vChild._resetRuntimeMarginRight();
}};
qx.Proto.layoutChild_marginY=function(vChild,vJobs){if(vJobs.marginTop||vJobs.initial){var vValueTop=vChild.getMarginTop();
vValueTop!=null?vChild._applyRuntimeMarginTop(vValueTop):vChild._resetRuntimeMarginTop();
}
if(vJobs.marginBottom||vJobs.initial){var vValueBottom=vChild.getMarginBottom();
vValueBottom!=null?vChild._applyRuntimeMarginBottom(vValueBottom):vChild._resetRuntimeMarginBottom();
}};
qx.Proto.layoutChild_sizeX_essentialWrapper=function(vChild,vJobs){return vChild._isWidthEssential()?this.layoutChild_sizeX(vChild,vJobs):vChild._resetRuntimeWidth();
};
qx.Proto.layoutChild_sizeY_essentialWrapper=function(vChild,vJobs){return vChild._isHeightEssential()?this.layoutChild_sizeY(vChild,vJobs):vChild._resetRuntimeHeight();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}this._widget=null;
qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.lang.Number */
qx.OO.defineClass($[2353]);
qx.lang.Number.isInRange=function(nr,vmin,vmax){return nr>=vmin&&nr<=vmax;
};
qx.lang.Number.isBetweenRange=function(nr,vmin,vmax){return nr>vmin&&nr<vmax;
};
qx.lang.Number.limit=function(nr,vmin,vmax){if(typeof vmax===$[2]&&nr>vmax){return vmax;
}else if(typeof vmin===$[2]&&nr<vmin){return vmin;
}else{return nr;
}};




/* ID: qx.renderer.layout.CanvasLayoutImpl */
qx.OO.defineClass($[1586],qx.renderer.layout.LayoutImpl,function(vWidget){qx.renderer.layout.LayoutImpl.call(this,vWidget);
});
qx.Proto.computeChildBoxWidth=function(vChild){var vValue=null;
if(vChild._computedLeftTypeNull||vChild._computedRightTypeNull){vValue=vChild.getWidthValue();
}else if(vChild._hasParent){vValue=this.getWidget().getInnerWidth()-vChild.getLeftValue()-vChild.getRightValue();
}return vValue||vChild._computeBoxWidthFallback();
};
qx.Proto.computeChildBoxHeight=function(vChild){var vValue=null;
if(vChild._computedTopTypeNull||vChild._computedBottomTypeNull){vValue=vChild.getHeightValue();
}else if(vChild._hasParent){vValue=this.getWidget().getInnerHeight()-vChild.getTopValue()-vChild.getBottomValue();
}return vValue||vChild._computeBoxHeightFallback();
};
qx.Proto.computeChildNeededWidth=function(vChild){var vLeft=vChild._computedLeftTypePercent?null:vChild.getLeftValue();
var vRight=vChild._computedRightTypePercent?null:vChild.getRightValue();
var vMinBox=vChild._computedMinWidthTypePercent?null:vChild.getMinWidthValue();
var vMaxBox=vChild._computedMaxWidthTypePercent?null:vChild.getMaxWidthValue();
if(vLeft!=null&&vRight!=null){var vBox=vChild.getPreferredBoxWidth()||0;
}else{var vBox=(vChild._computedWidthTypePercent?null:vChild.getWidthValue())||vChild.getPreferredBoxWidth()||0;
}return qx.lang.Number.limit(vBox,vMinBox,vMaxBox)+vLeft+vRight+vChild.getMarginLeft()+vChild.getMarginRight();
};
qx.Proto.computeChildNeededHeight=function(vChild){var vTop=vChild._computedTopTypePercent?null:vChild.getTopValue();
var vBottom=vChild._computedBottomTypePercent?null:vChild.getBottomValue();
var vMinBox=vChild._computedMinHeightTypePercent?null:vChild.getMinHeightValue();
var vMaxBox=vChild._computedMaxHeightTypePercent?null:vChild.getMaxHeightValue();
if(vTop!=null&&vBottom!=null){var vBox=vChild.getPreferredBoxHeight()||0;
}else{var vBox=(vChild._computedHeightTypePercent?null:vChild.getHeightValue())||vChild.getPreferredBoxHeight()||0;
}return qx.lang.Number.limit(vBox,vMinBox,vMaxBox)+vTop+vBottom+vChild.getMarginTop()+vChild.getMarginBottom();
};
qx.Proto.updateChildOnInnerWidthChange=function(vChild){var vUpdatePercent=vChild._recomputePercentX();
var vUpdateRange=vChild._recomputeRangeX();
return vUpdatePercent||vUpdateRange;
};
qx.Proto.updateChildOnInnerHeightChange=function(vChild){var vUpdatePercent=vChild._recomputePercentY();
var vUpdateRange=vChild._recomputeRangeY();
return vUpdatePercent||vUpdateRange;
};
qx.Proto.layoutChild=function(vChild,vJobs){this.layoutChild_sizeX_essentialWrapper(vChild,vJobs);
this.layoutChild_sizeY_essentialWrapper(vChild,vJobs);
this.layoutChild_sizeLimitX(vChild,vJobs);
this.layoutChild_sizeLimitY(vChild,vJobs);
this.layoutChild_locationX(vChild,vJobs);
this.layoutChild_locationY(vChild,vJobs);
this.layoutChild_marginX(vChild,vJobs);
this.layoutChild_marginY(vChild,vJobs);
};
if(qx.core.Client.getInstance().isMshtml()||qx.core.Client.getInstance().isOpera()){qx.Proto.layoutChild_sizeX=function(vChild,vJobs){if(vJobs.initial||vJobs.width||vJobs.minWidth||vJobs.maxWidth||vJobs.left||vJobs.right){if(vChild._computedMinWidthTypeNull&&vChild._computedWidthTypeNull&&vChild._computedMaxWidthTypeNull&&!(!vChild._computedLeftTypeNull&&!vChild._computedRightTypeNull)){vChild._resetRuntimeWidth();
}else{vChild._applyRuntimeWidth(vChild.getBoxWidth());
}}};
qx.Proto.layoutChild_sizeY=function(vChild,vJobs){if(vJobs.initial||vJobs.height||vJobs.minHeight||vJobs.maxHeight||vJobs.top||vJobs.bottom){if(vChild._computedMinHeightTypeNull&&vChild._computedHeightTypeNull&&vChild._computedMaxHeightTypeNull&&!(!vChild._computedTopTypeNull&&!vChild._computedBottomTypeNull)){vChild._resetRuntimeHeight();
}else{vChild._applyRuntimeHeight(vChild.getBoxHeight());
}}};
}else{qx.Proto.layoutChild_sizeX=function(vChild,vJobs){if(vJobs.initial||vJobs.width){vChild._computedWidthTypeNull?vChild._resetRuntimeWidth():vChild._applyRuntimeWidth(vChild.getWidthValue());
}};
qx.Proto.layoutChild_sizeY=function(vChild,vJobs){if(vJobs.initial||vJobs.height){vChild._computedHeightTypeNull?vChild._resetRuntimeHeight():vChild._applyRuntimeHeight(vChild.getHeightValue());
}};
}qx.Proto.layoutChild_locationX=function(vChild,vJobs){var vWidget=this.getWidget();
if(vJobs.initial||vJobs.left||vJobs.parentPaddingLeft){vChild._computedLeftTypeNull?vChild._computedRightTypeNull&&vWidget.getPaddingLeft()>0?vChild._applyRuntimeLeft(vWidget.getPaddingLeft()):vChild._resetRuntimeLeft():vChild._applyRuntimeLeft(vChild.getLeftValue()+vWidget.getPaddingLeft());
}
if(vJobs.initial||vJobs.right||vJobs.parentPaddingRight){vChild._computedRightTypeNull?vChild._computedLeftTypeNull&&vWidget.getPaddingRight()>0?vChild._applyRuntimeRight(vWidget.getPaddingRight()):vChild._resetRuntimeRight():vChild._applyRuntimeRight(vChild.getRightValue()+vWidget.getPaddingRight());
}};
qx.Proto.layoutChild_locationY=function(vChild,vJobs){var vWidget=this.getWidget();
if(vJobs.initial||vJobs.top||vJobs.parentPaddingTop){vChild._computedTopTypeNull?vChild._computedBottomTypeNull&&vWidget.getPaddingTop()>0?vChild._applyRuntimeTop(vWidget.getPaddingTop()):vChild._resetRuntimeTop():vChild._applyRuntimeTop(vChild.getTopValue()+vWidget.getPaddingTop());
}
if(vJobs.initial||vJobs.bottom||vJobs.parentPaddingBottom){vChild._computedBottomTypeNull?vChild._computedTopTypeNull&&vWidget.getPaddingBottom()>0?vChild._applyRuntimeBottom(vWidget.getPaddingBottom()):vChild._resetRuntimeBottom():vChild._applyRuntimeBottom(vChild.getBottomValue()+vWidget.getPaddingBottom());
}};




/* ID: qx.html.StyleSheet */
qx.OO.defineClass($[1512]);
qx.html.StyleSheet.includeFile=function(vHref){var el=document.createElement($[1933]);
el.type=$[652];
el.rel=$[1334];
el.href=vHref;
var head=document.getElementsByTagName($[732])[0];
head.appendChild(el);
};
qx.html.StyleSheet.createElement=function(vCssText){};
if(document.createStyleSheet){qx.html.StyleSheet.createElement=function(vCssText){var vSheet=document.createStyleSheet();
if(vCssText){vSheet.cssText=vCssText;
}return vSheet;
};
}else{qx.html.StyleSheet.createElement=function(vCssText){var vElement=document.createElement($[143]);
vElement.type=$[652];
vElement.appendChild(document.createTextNode(vCssText||$[1669]));
document.getElementsByTagName($[732])[0].appendChild(vElement);
if(vElement.sheet){return vElement.sheet;
}else{var styles=document.styleSheets;
for(var i=styles.length-1;i>=0;i--){if(styles[i].ownerNode==vElement){return styles[i];
}}}throw $[2125];
};
}qx.html.StyleSheet.addRule=function(vSheet,vSelector,vStyle){};
if(document.createStyleSheet){qx.html.StyleSheet.addRule=function(vSheet,vSelector,vStyle){vSheet.addRule(vSelector,vStyle);
};
}else if(qx.core.Client.getInstance().isSafari2()){qx.html.StyleSheet.addRule=function(vSheet,vSelector,vStyle){if(!vSheet._qxRules){vSheet._qxRules={};
}
if(!vSheet._qxRules[vSelector]){var ruleNode=document.createTextNode(vSelector+$[292]+vStyle+$[281]);
vSheet.ownerNode.appendChild(ruleNode);
vSheet._qxRules[vSelector]=ruleNode;
}};
}else{qx.html.StyleSheet.addRule=function(vSheet,vSelector,vStyle){vSheet.insertRule(vSelector+$[292]+vStyle+$[281],vSheet.cssRules.length);
};
}qx.html.StyleSheet.removeRule=function(vSheet,vSelector){};
if(document.createStyleSheet){qx.html.StyleSheet.removeRule=function(vSheet,vSelector){var vRules=vSheet.rules;
var vLength=vRules.length;
for(var i=vLength-1;i>=0;i--){if(vRules[i].selectorText==vSelector){vSheet.removeRule(i);
}}};
}else if(qx.core.Client.getInstance().isSafari2()){qx.html.StyleSheet.removeRule=function(vSheet,vSelector){var warn=function(){qx.log.Logger.ROOT_LOGGER.warn($[965]);
};
if(!vSheet._qxRules){warn();
}var ruleNode=vSheet._qxRules[vSelector];
if(ruleNode){vSheet.ownerNode.removeChild(ruleNode);
vSheet._qxRules[vSelector]=null;
}else{warn();
}};
}else{qx.html.StyleSheet.removeRule=function(vSheet,vSelector){var vRules=vSheet.cssRules;
var vLength=vRules.length;
for(var i=vLength-1;i>=0;i--){if(vRules[i].selectorText==vSelector){vSheet.deleteRule(i);
}}};
}qx.html.StyleSheet.removeAllRules=function(vSheet){};
if(document.createStyleSheet){qx.html.StyleSheet.removeAllRules=function(vSheet){var vRules=vSheet.rules;
var vLength=vRules.length;
for(var i=vLength-1;i>=0;i--){vSheet.removeRule(i);
}};
}else if(qx.core.Client.getInstance().isSafari2()){qx.html.StyleSheet.removeAllRules=function(vSheet){var node=vSheet.ownerNode;
var rules=node.childNodes;
while(rules.length>0){node.removeChild(rules[0]);
}};
}else{qx.html.StyleSheet.removeAllRules=function(vSheet){var vRules=vSheet.cssRules;
var vLength=vRules.length;
for(var i=vLength-1;i>=0;i--){vSheet.deleteRule(i);
}};
}qx.html.StyleSheet.addImport=function(vSheet,vUrl){};
if(document.createStyleSheet){qx.html.StyleSheet.addImport=function(vSheet,vUrl){vSheet.addImport(vUrl);
};
}else if(qx.core.Client.getInstance().isSafari2()){qx.html.StyleSheet.addImport=function(vSheet,vUrl){vSheet.ownerNode.appendChild(document.createTextNode($[752]+vUrl+$[600]));
};
}else{qx.html.StyleSheet.addImport=function(vSheet,vUrl){vSheet.insertRule($[752]+vUrl+$[600],vSheet.cssRules.length);
};
}qx.html.StyleSheet.removeImport=function(vSheet,vUrl){};
if(document.createStyleSheet){qx.html.StyleSheet.removeImport=function(vSheet,vUrl){var vImports=vSheet.imports;
var vLength=vImports.length;
for(var i=vLength-1;i>=0;i--){if(vImports[i].href==vUrl){vSheet.removeImport(i);
}}};
}else{qx.html.StyleSheet.removeImport=function(vSheet,vUrl){var vRules=vSheet.cssRules;
var vLength=vRules.length;
for(var i=vLength-1;i>=0;i--){if(vRules[i].href==vUrl){vSheet.deleteRule(i);
}}};
}qx.html.StyleSheet.removeAllImports=function(vSheet){};
if(document.createStyleSheet){qx.html.StyleSheet.removeAllImports=function(vSheet){var vImports=vSheet.imports;
var vLength=vImports.length;
for(var i=vLength-1;i>=0;i--){vSheet.removeImport(i);
}};
}else{qx.html.StyleSheet.removeAllImports=function(vSheet){var vRules=vSheet.cssRules;
var vLength=vRules.length;
for(var i=vLength-1;i>=0;i--){if(vRules[i].type==vRules[i].IMPORT_RULE){vSheet.deleteRule(i);
}}};
}



/* ID: qx.ui.core.ClientDocument */
qx.OO.defineClass($[399],qx.ui.layout.CanvasLayout,function(){this._window=window;
this._document=window.document;
this.setElement(this._document.body);
this.addToStateQueue();
qx.ui.layout.CanvasLayout.call(this);
this._styleProperties={};
this.activateFocusRoot();
this._cachedInnerWidth=this._document.body.offsetWidth;
this._cachedInnerHeight=this._document.body.offsetHeight;
this.addEventListener($[405],this._onwindowresize);
this._modalWidgets=[];
this._modalNativeWindow=null;
qx.event.handler.EventHandler.getInstance().setFocusRoot(this);
});
qx.OO.addProperty({name:$[2100],type:$[0]});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1349]});
qx.Settings.setDefault($[626],true);
qx.Settings.setDefault($[692],true);
qx.Proto._modifyParent=qx.lang.Function.returnTrue;
qx.Proto._modifyVisible=qx.lang.Function.returnTrue;
qx.Proto._modifyElement=function(propValue,propOldValue,propData){this._isCreated=qx.util.Validation.isValidElement(propValue);
if(propOldValue){propOldValue.qx_Widget=null;
}
if(propValue){propValue.qx_Widget=this;
this._element=propValue;
this._style=propValue.style;
}else{this._element=null;
this._style=null;
}return true;
};
qx.Proto.getTopLevelWidget=qx.lang.Function.returnThis;
qx.Proto.getWindowElement=function(){return this._window;
};
qx.Proto.getDocumentElement=function(){return this._document;
};
qx.Proto.getParent=qx.Proto.getToolTip=qx.lang.Function.returnNull;
qx.Proto.isMaterialized=qx.Proto.isSeeable=qx.lang.Function.returnTrue;
qx.Proto._isDisplayable=true;
qx.Proto._hasParent=false;
qx.Proto._initialLayoutDone=true;
qx.Proto._getBlocker=function(){if(!this._blocker){this._blocker=new qx.ui.core.ClientDocumentBlocker;
this._blocker.addEventListener($[6],this.blockHelper,this);
this._blocker.addEventListener($[7],this.blockHelper,this);
this.add(this._blocker);
}return this._blocker;
};
qx.Proto.blockHelper=function(e){if(this._modalNativeWindow){try{this._modalNativeWindow._window.focus();
}catch(ex){this.debug("Window seems to be closed already! => Releasing Blocker: ("+e.getType()+")",ex);
this.release(this._modalNativeWindow);
}}};
qx.Proto.block=function(vActiveChild){this._getBlocker().show();
if(qx.OO.isAvailable($[728])&&vActiveChild instanceof qx.ui.window.Window){this._modalWidgets.push(vActiveChild);
var vOrigIndex=vActiveChild.getZIndex();
this._getBlocker().setZIndex(vOrigIndex);
vActiveChild.setZIndex(vOrigIndex+1);
}else if(qx.OO.isAvailable($[478])&&vActiveChild instanceof qx.client.NativeWindow){this._modalNativeWindow=vActiveChild;
this._getBlocker().setZIndex(1e7);
}};
qx.Proto.release=function(vActiveChild){if(vActiveChild){if(qx.OO.isAvailable($[478])&&vActiveChild instanceof qx.client.NativeWindow){this._modalNativeWindow=null;
}else{qx.lang.Array.remove(this._modalWidgets,vActiveChild);
}}var l=this._modalWidgets.length;
if(l==0){this._getBlocker().hide();
}else{var oldActiveChild=this._modalWidgets[l-1];
var o=oldActiveChild.getZIndex();
this._getBlocker().setZIndex(o);
oldActiveChild.setZIndex(o+1);
}};
qx.Proto.createStyleElement=function(vCssText){return qx.html.StyleSheet.createElement(vCssText);
};
qx.Proto.addCssRule=function(vSheet,vSelector,vStyle){return qx.html.StyleSheet.addRule(vSheet,vSelector,vStyle);
};
qx.Proto.removeCssRule=function(vSheet,vSelector){return qx.html.StyleSheet.removeRule(vSheet,vSelector);
};
qx.Proto.removeAllCssRules=function(vSheet){return qx.html.StyleSheet.removeAllRules(vSheet);
};
if(qx.Settings.getValueOfClass($[399],$[692])){qx.html.StyleSheet.createElement($[1713]+$[2056]+qx.core.Client.getInstance().getEngineBoxSizingAttribute()+$[1785]+qx.core.Client.getInstance().getEngineBoxSizingAttribute()+$[1889]);
}
if(qx.Settings.getValueOfClass($[399],$[626])){qx.html.StyleSheet.createElement($[2425]);
}qx.Proto._modifyGlobalCursor=function(propValue,propOldValue,propData){if(!this._globalCursorStyleSheet){this._globalCursorStyleSheet=this.createStyleElement();
}this.removeAllCssRules(this._globalCursorStyleSheet);
if(propValue){this.addCssRule(this._globalCursorStyleSheet,$[168],$[946]+propValue+$[1128]);
}return true;
};
qx.Proto._onwindowresize=function(e){if(qx.OO.isAvailable($[204])){qx.manager.object.PopupManager.getInstance().update();
}this._recomputeInnerWidth();
this._recomputeInnerHeight();
qx.ui.core.Widget.flushGlobalQueues();
};
qx.Proto._computeInnerWidth=function(){return this._document.body.offsetWidth;
};
qx.Proto._computeInnerHeight=function(){return this._document.body.offsetHeight;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}delete this._window;
delete this._document;
delete this._modalWidgets;
delete this._modalNativeWindow;
this.removeEventListener($[405],this._onwindowresize);
this._globalCursorStyleSheet=null;
if(this._blocker){this._blocker.removeEventListener($[6],this.blockHelper,this);
this._blocker.removeEventListener($[7],this.blockHelper,this);
this._blocker.dispose();
this._blocker=null;
}return qx.ui.layout.CanvasLayout.prototype.dispose.call(this);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.ui.core.ClientDocumentBlocker */
qx.OO.defineClass($[2200],qx.ui.basic.Terminator,function(){qx.ui.basic.Terminator.call(this);
this.setEdge(0);
this.setZIndex(1e8);
this.setDisplay(false);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1911]});




/* ID: qx.event.handler.FocusHandler */
qx.OO.defineClass($[744],qx.core.Target,function(vWidget){qx.core.Target.call(this);
if(vWidget!=null){this._attachedWidget=vWidget;
}});
qx.event.handler.FocusHandler.mouseFocus=false;
qx.Proto.getAttachedWidget=function(){return this._attachedWidget;
};
qx.event.handler.FocusHandler.tabEventType=qx.core.Client.getInstance().isMshtml()?$[13]:$[14];
qx.Proto._onkeyevent=function(vContainer,vEvent){if(vEvent.getKeyIdentifier()!=$[223]){return;
}vEvent.stopPropagation();
vEvent.preventDefault();
if(vEvent.getType()!=qx.event.handler.FocusHandler.tabEventType){return;
}qx.event.handler.FocusHandler.mouseFocus=false;
var vCurrent=this.getAttachedWidget().getFocusedChild();
if(!vEvent.isShiftPressed()){var vNext=vCurrent?this.getWidgetAfter(vContainer,vCurrent):this.getFirstWidget(vContainer);
}else{var vNext=vCurrent?this.getWidgetBefore(vContainer,vCurrent):this.getLastWidget(vContainer);
}if(vNext){vNext.setFocused(true);
vNext._ontabfocus();
}};
qx.Proto.compareTabOrder=function(c1,c2){if(c1==c2){return 0;
}var t1=c1.getTabIndex();
var t2=c2.getTabIndex();
if(t1!=t2){return t1-t2;
}var y1=qx.html.Location.getPageBoxTop(c1.getElement());
var y2=qx.html.Location.getPageBoxTop(c2.getElement());
if(y1!=y2){return y1-y2;
}var x1=qx.html.Location.getPageBoxLeft(c1.getElement());
var x2=qx.html.Location.getPageBoxLeft(c2.getElement());
if(x1!=x2){return x1-x2;
}var z1=c1.getZIndex();
var z2=c2.getZIndex();
if(z1!=z2){return z1-z2;
}return 0;
};
qx.Proto.getFirstWidget=function(vParentContainer){return this._getFirst(vParentContainer,null);
};
qx.Proto.getLastWidget=function(vParentContainer){return this._getLast(vParentContainer,null);
};
qx.Proto.getWidgetAfter=function(vParentContainer,vWidget){if(vParentContainer==vWidget){return this.getFirstWidget(vParentContainer);
}
if(vWidget.getAnonymous()){vWidget=vWidget.getParent();
}
if(vWidget==null){return [];
}var vAll=[];
this._getAllAfter(vParentContainer,vWidget,vAll);
vAll.sort(this.compareTabOrder);
return vAll.length>0?vAll[0]:this.getFirstWidget(vParentContainer);
};
qx.Proto.getWidgetBefore=function(vParentContainer,vWidget){if(vParentContainer==vWidget){return this.getLastWidget(vParentContainer);
}
if(vWidget.getAnonymous()){vWidget=vWidget.getParent();
}
if(vWidget==null){return [];
}var vAll=[];
this._getAllBefore(vParentContainer,vWidget,vAll);
vAll.sort(this.compareTabOrder);
var vChildrenLength=vAll.length;
return vChildrenLength>0?vAll[vChildrenLength-1]:this.getLastWidget(vParentContainer);
};
qx.Proto._getAllAfter=function(vParent,vWidget,vArray){var vChildren=vParent.getChildren();
var vCurrentChild;
var vChildrenLength=vChildren.length;
for(var i=0;i<vChildrenLength;i++){vCurrentChild=vChildren[i];
if(!(vCurrentChild instanceof qx.ui.core.Parent)&&!(vCurrentChild instanceof qx.ui.basic.Terminator)){continue;
}
if(vCurrentChild.isFocusable()&&vCurrentChild.getTabIndex()>0&&this.compareTabOrder(vWidget,vCurrentChild)<0){vArray.push(vChildren[i]);
}
if(!vCurrentChild.isFocusRoot()&&vCurrentChild instanceof qx.ui.core.Parent){this._getAllAfter(vCurrentChild,vWidget,vArray);
}}};
qx.Proto._getAllBefore=function(vParent,vWidget,vArray){var vChildren=vParent.getChildren();
var vCurrentChild;
var vChildrenLength=vChildren.length;
for(var i=0;i<vChildrenLength;i++){vCurrentChild=vChildren[i];
if(!(vCurrentChild instanceof qx.ui.core.Parent)&&!(vCurrentChild instanceof qx.ui.basic.Terminator)){continue;
}
if(vCurrentChild.isFocusable()&&vCurrentChild.getTabIndex()>0&&this.compareTabOrder(vWidget,vCurrentChild)>0){vArray.push(vCurrentChild);
}
if(!vCurrentChild.isFocusRoot()&&vCurrentChild instanceof qx.ui.core.Parent){this._getAllBefore(vCurrentChild,vWidget,vArray);
}}};
qx.Proto._getFirst=function(vParent,vFirstWidget){var vChildren=vParent.getChildren();
var vCurrentChild;
var vChildrenLength=vChildren.length;
for(var i=0;i<vChildrenLength;i++){vCurrentChild=vChildren[i];
if(!(vCurrentChild instanceof qx.ui.core.Parent)&&!(vCurrentChild instanceof qx.ui.basic.Terminator)){continue;
}
if(vCurrentChild.isFocusable()&&vCurrentChild.getTabIndex()>0){if(vFirstWidget==null||this.compareTabOrder(vCurrentChild,vFirstWidget)<0){vFirstWidget=vCurrentChild;
}}
if(!vCurrentChild.isFocusRoot()&&vCurrentChild instanceof qx.ui.core.Parent){vFirstWidget=this._getFirst(vCurrentChild,vFirstWidget);
}}return vFirstWidget;
};
qx.Proto._getLast=function(vParent,vLastWidget){var vChildren=vParent.getChildren();
var vCurrentChild;
var vChildrenLength=vChildren.length;
for(var i=0;i<vChildrenLength;i++){vCurrentChild=vChildren[i];
if(!(vCurrentChild instanceof qx.ui.core.Parent)&&!(vCurrentChild instanceof qx.ui.basic.Terminator)){continue;
}
if(vCurrentChild.isFocusable()&&vCurrentChild.getTabIndex()>0){if(vLastWidget==null||this.compareTabOrder(vCurrentChild,vLastWidget)>0){vLastWidget=vCurrentChild;
}}
if(!vCurrentChild.isFocusRoot()&&vCurrentChild instanceof qx.ui.core.Parent){vLastWidget=this._getLast(vCurrentChild,vLastWidget);
}}return vLastWidget;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._attachedWidget=null;
qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.html.Location */
qx.OO.defineClass($[1941]);
qx.html.Location.getPageOuterLeft=function(el){return qx.html.Location.getPageBoxLeft(el)-qx.html.Style.getMarginLeft(el);
};
qx.html.Location.getPageOuterTop=function(el){return qx.html.Location.getPageBoxTop(el)-qx.html.Style.getMarginTop(el);
};
qx.html.Location.getPageOuterRight=function(el){return qx.html.Location.getPageBoxRight(el)+qx.html.Style.getMarginRight(el);
};
qx.html.Location.getPageOuterBottom=function(el){return qx.html.Location.getPageBoxBottom(el)+qx.html.Style.getMarginBottom(el);
};
qx.html.Location.getClientOuterLeft=function(el){return qx.html.Location.getClientBoxLeft(el)-qx.html.Style.getMarginLeft(el);
};
qx.html.Location.getClientOuterTop=function(el){return qx.html.Location.getClientBoxTop(el)-qx.html.Style.getMarginTop(el);
};
qx.html.Location.getClientOuterRight=function(el){return qx.html.Location.getClientBoxRight(el)+qx.html.Style.getMarginRight(el);
};
qx.html.Location.getClientOuterBottom=function(el){return qx.html.Location.getClientBoxBottom(el)+qx.html.Style.getMarginBottom(el);
};
qx.html.Location.getClientBoxLeft=function(el){};
qx.html.Location.getClientBoxTop=function(el){};
qx.html.Location.getClientBoxRight=function(el){};
qx.html.Location.getClientBoxBottom=function(el){};
qx.html.Location.getPageBoxLeft=function(el){};
qx.html.Location.getPageBoxTop=function(el){};
qx.html.Location.getPageBoxRight=function(el){};
qx.html.Location.getPageBoxBottom=function(el){};
if(qx.core.Client.getInstance().isMshtml()){qx.html.Location.getClientBoxLeft=function(el){return el.getBoundingClientRect().left;
};
qx.html.Location.getClientBoxTop=function(el){return el.getBoundingClientRect().top;
};
qx.html.Location.getPageBoxLeft=function(el){return qx.html.Location.getClientBoxLeft(el)+qx.html.Scroll.getLeftSum(el);
};
qx.html.Location.getPageBoxTop=function(el){return qx.html.Location.getClientBoxTop(el)+qx.html.Scroll.getTopSum(el);
};
}else if(qx.core.Client.getInstance().isGecko()){qx.html.Location.getClientBoxLeft=function(el){return qx.html.Location.getClientAreaLeft(el)-qx.html.Style.getBorderLeft(el);
};
qx.html.Location.getClientBoxTop=function(el){return qx.html.Location.getClientAreaTop(el)-qx.html.Style.getBorderTop(el);
};
qx.html.Location.getPageBoxLeft=function(el){return qx.html.Location.getPageAreaLeft(el)-qx.html.Style.getBorderLeft(el);
};
qx.html.Location.getPageBoxTop=function(el){return qx.html.Location.getPageAreaTop(el)-qx.html.Style.getBorderTop(el);
};
}else{qx.html.Location.getPageBoxLeft=function(el){var sum=el.offsetLeft;
while(el.tagName.toLowerCase()!=$[111]){el=el.offsetParent;
sum+=el.offsetLeft;
}return sum;
};
qx.html.Location.getPageBoxTop=function(el){var sum=el.offsetTop;
while(el.tagName.toLowerCase()!=$[111]){el=el.offsetParent;
sum+=el.offsetTop;
}return sum;
};
qx.html.Location.getClientBoxLeft=function(el){var sum=el.offsetLeft;
while(el.tagName.toLowerCase()!=$[111]){el=el.offsetParent;
sum+=el.offsetLeft-el.scrollLeft;
}return sum;
};
qx.html.Location.getClientBoxTop=function(el){var sum=el.offsetTop;
while(el.tagName.toLowerCase()!=$[111]){el=el.offsetParent;
sum+=el.offsetTop-el.scrollTop;
}return sum;
};
}
if(qx.core.Client.getInstance().isMshtml()){qx.html.Location.getClientBoxRight=function(el){return el.getBoundingClientRect().right;
};
qx.html.Location.getClientBoxBottom=function(el){return el.getBoundingClientRect().bottom;
};
qx.html.Location.getPageBoxRight=function(el){return qx.html.Location.getClientBoxRight(el)+qx.html.Scroll.getLeftSum(el);
};
qx.html.Location.getPageBoxBottom=function(el){return qx.html.Location.getClientBoxBottom(el)+qx.html.Scroll.getTopSum(el);
};
}else{qx.html.Location.getClientBoxRight=function(el){return qx.html.Location.getClientBoxLeft(el)+qx.html.Dimension.getBoxWidth(el);
};
qx.html.Location.getClientBoxBottom=function(el){return qx.html.Location.getClientBoxTop(el)+qx.html.Dimension.getBoxHeight(el);
};
qx.html.Location.getPageBoxRight=function(el){return qx.html.Location.getPageBoxLeft(el)+qx.html.Dimension.getBoxWidth(el);
};
qx.html.Location.getPageBoxBottom=function(el){return qx.html.Location.getPageBoxTop(el)+qx.html.Dimension.getBoxHeight(el);
};
}qx.html.Location.getClientAreaLeft=function(el){};
qx.html.Location.getClientAreaTop=function(el){};
qx.html.Location.getPageAreaLeft=function(el){};
qx.html.Location.getPageAreaTop=function(el){};
if(qx.core.Client.getInstance().isGecko()){qx.html.Location.getPageAreaLeft=function(el){return el.ownerDocument.getBoxObjectFor(el).x;
};
qx.html.Location.getPageAreaTop=function(el){return el.ownerDocument.getBoxObjectFor(el).y;
};
qx.html.Location.getClientAreaLeft=function(el){return qx.html.Location.getPageAreaLeft(el)-qx.html.Scroll.getLeftSum(el);
};
qx.html.Location.getClientAreaTop=function(el){return qx.html.Location.getPageAreaTop(el)-qx.html.Scroll.getTopSum(el);
};
}else{qx.html.Location.getClientAreaLeft=function(el){return qx.html.Location.getClientBoxLeft(el)+qx.html.Style.getBorderLeft(el);
};
qx.html.Location.getClientAreaTop=function(el){return qx.html.Location.getClientBoxTop(el)+qx.html.Style.getBorderTop(el);
};
qx.html.Location.getPageAreaLeft=function(el){return qx.html.Location.getPageBoxLeft(el)+qx.html.Style.getBorderLeft(el);
};
qx.html.Location.getPageAreaTop=function(el){return qx.html.Location.getPageBoxTop(el)+qx.html.Style.getBorderTop(el);
};
}qx.html.Location.getClientAreaRight=function(el){return qx.html.Location.getClientAreaLeft(el)+qx.html.Dimension.getAreaWidth(el);
};
qx.html.Location.getClientAreaBottom=function(el){return qx.html.Location.getClientAreaTop(el)+qx.html.Dimension.getAreaHeight(el);
};
qx.html.Location.getPageAreaRight=function(el){return qx.html.Location.getPageAreaLeft(el)+qx.html.Dimension.getAreaWidth(el);
};
qx.html.Location.getPageAreaBottom=function(el){return qx.html.Location.getPageAreaTop(el)+qx.html.Dimension.getAreaHeight(el);
};
qx.html.Location.getClientInnerLeft=function(el){return qx.html.Location.getClientAreaLeft(el)+qx.html.Style.getPaddingLeft(el);
};
qx.html.Location.getClientInnerTop=function(el){return qx.html.Location.getClientAreaTop(el)+qx.html.Style.getPaddingTop(el);
};
qx.html.Location.getClientInnerRight=function(el){return qx.html.Location.getClientInnerLeft(el)+qx.html.Dimension.getInnerWidth(el);
};
qx.html.Location.getClientInnerBottom=function(el){return qx.html.Location.getClientInnerTop(el)+qx.html.Dimension.getInnerHeight(el);
};
qx.html.Location.getPageInnerLeft=function(el){return qx.html.Location.getPageAreaLeft(el)+qx.html.Style.getPaddingLeft(el);
};
qx.html.Location.getPageInnerTop=function(el){return qx.html.Location.getPageAreaTop(el)+qx.html.Style.getPaddingTop(el);
};
qx.html.Location.getPageInnerRight=function(el){return qx.html.Location.getPageInnerLeft(el)+qx.html.Dimension.getInnerWidth(el);
};
qx.html.Location.getPageInnerBottom=function(el){return qx.html.Location.getPageInnerTop(el)+qx.html.Dimension.getInnerHeight(el);
};
qx.html.Location.getScreenBoxLeft=function(el){};
qx.html.Location.getScreenBoxTop=function(el){};
if(qx.core.Client.getInstance().isGecko()){qx.html.Location.getScreenBoxLeft=function(el){var sum=0;
var p=el.parentNode;
while(p.nodeType==1){sum+=p.scrollLeft;
p=p.parentNode;
}return el.ownerDocument.getBoxObjectFor(el).screenX-sum;
};
qx.html.Location.getScreenBoxTop=function(el){var sum=0;
var p=el.parentNode;
while(p.nodeType==1){sum+=p.scrollTop;
p=p.parentNode;
}return el.ownerDocument.getBoxObjectFor(el).screenY-sum;
};
}else{qx.html.Location.getScreenBoxLeft=function(el){return qx.html.Location.getScreenDocumentLeft(el)+qx.html.Location.getPageBoxLeft(el);
};
qx.html.Location.getScreenBoxTop=function(el){return qx.html.Location.getScreenDocumentTop(el)+qx.html.Location.getPageBoxTop(el);
};
}qx.html.Location.getScreenBoxRight=function(el){return qx.html.Location.getScreenBoxLeft(el)+qx.html.Dimension.getBoxWidth(el);
};
qx.html.Location.getScreenBoxBottom=function(el){return qx.html.Location.getScreenBoxTop(el)+qx.html.Dimension.getBoxHeight(el);
};
qx.html.Location.getScreenOuterLeft=function(el){return qx.html.Location.getScreenBoxLeft(el)-qx.html.Style.getMarginLeft(el);
};
qx.html.Location.getScreenOuterTop=function(el){return qx.html.Location.getScreenBoxTop(el)-qx.html.Style.getMarginTop(el);
};
qx.html.Location.getScreenOuterRight=function(el){return qx.html.Location.getScreenBoxRight(el)+qx.html.Style.getMarginRight(el);
};
qx.html.Location.getScreenOuterBottom=function(el){return qx.html.Location.getScreenBoxBottom(el)+qx.html.Style.getMarginBottom(el);
};
qx.html.Location.getScreenAreaLeft=function(el){return qx.html.Location.getScreenBoxLeft(el)+qx.html.Dimension.getInsetLeft(el);
};
qx.html.Location.getScreenAreaTop=function(el){return qx.html.Location.getScreenBoxTop(el)+qx.html.Dimension.getInsetTop(el);
};
qx.html.Location.getScreenAreaRight=function(el){return qx.html.Location.getScreenBoxRight(el)-qx.html.Dimension.getInsetRight(el);
};
qx.html.Location.getScreenAreaBottom=function(el){return qx.html.Location.getScreenBoxBottom(el)-qx.html.Dimension.getInsetBottom(el);
};
qx.html.Location.getScreenInnerLeft=function(el){return qx.html.Location.getScreenAreaLeft(el)+qx.html.Style.getPaddingLeft(el);
};
qx.html.Location.getScreenInnerTop=function(el){return qx.html.Location.getScreenAreaTop(el)+qx.html.Style.getPaddingTop(el);
};
qx.html.Location.getScreenInnerRight=function(el){return qx.html.Location.getScreenAreaRight(el)-qx.html.Style.getPaddingRight(el);
};
qx.html.Location.getScreenInnerBottom=function(el){return qx.html.Location.getScreenAreaBottom(el)-qx.html.Style.getPaddingBottom(el);
};
qx.html.Location.getScreenDocumentLeft=function(el){};
qx.html.Location.getScreenDocumentTop=function(el){};
qx.html.Location.getScreenDocumentRight=function(el){};
qx.html.Location.getScreenDocumentBottom=function(el){};
if(qx.core.Client.getInstance().isGecko()){qx.html.Location.getScreenDocumentLeft=function(el){return qx.html.Location.getScreenOuterLeft(el.ownerDocument.body);
};
qx.html.Location.getScreenDocumentTop=function(el){return qx.html.Location.getScreenOuterTop(el.ownerDocument.body);
};
qx.html.Location.getScreenDocumentRight=function(el){return qx.html.Location.getScreenOuterRight(el.ownerDocument.body);
};
qx.html.Location.getScreenDocumentBottom=function(el){return qx.html.Location.getScreenOuterBottom(el.ownerDocument.body);
};
}else{qx.html.Location.getScreenDocumentLeft=function(el){return el.document.parentWindow.screenLeft;
};
qx.html.Location.getScreenDocumentTop=function(el){return el.document.parentWindow.screenTop;
};
qx.html.Location.getScreenDocumentRight=function(el){};
qx.html.Location.getScreenDocumentBottom=function(el){};
}



/* ID: qx.html.Scroll */
qx.OO.defineClass($[1119]);
qx.html.Scroll.getLeftSum=function(el){var sum=0;
var p=el.parentNode;
while(p.nodeType==1){sum+=p.scrollLeft;
p=p.parentNode;
}return sum;
};
qx.html.Scroll.getTopSum=function(el){var sum=0;
var p=el.parentNode;
while(p.nodeType==1){sum+=p.scrollTop;
p=p.parentNode;
}return sum;
};




/* ID: qx.html.Dimension */
qx.OO.defineClass($[862]);
qx.html.Dimension.getOuterWidth=function(el){return qx.html.Dimension.getBoxWidth(el)+qx.html.Style.getMarginLeft(el)+qx.html.Style.getMarginRight(el);
};
qx.html.Dimension.getOuterHeight=function(el){return qx.html.Dimension.getBoxHeight(el)+qx.html.Style.getMarginTop(el)+qx.html.Style.getMarginBottom(el);
};
qx.html.Dimension.getBoxWidthForZeroHeight=function(el){var h=el.offsetHeight;
if(h==0){var o=el.style.height;
el.style.height=$[763];
}var v=el.offsetWidth;
if(h==0){el.style.height=o;
}return v;
};
qx.html.Dimension.getBoxHeightForZeroWidth=function(el){var w=el.offsetWidth;
if(w==0){var o=el.style.width;
el.style.width=$[763];
}var v=el.offsetHeight;
if(w==0){el.style.width=o;
}return v;
};
qx.html.Dimension.getBoxWidth=function(el){return el.offsetWidth;
};
qx.html.Dimension.getBoxHeight=function(el){return el.offsetHeight;
};
qx.html.Dimension.getAreaWidth=function(el){};
qx.html.Dimension.getAreaHeight=function(el){};
if(qx.core.Client.getInstance().isGecko()){qx.html.Dimension.getAreaWidth=function(el){if(el.clientWidth!=0&&el.clientWidth!=(qx.html.Style.getBorderLeft(el)+qx.html.Style.getBorderRight(el))){return el.clientWidth;
}else{return qx.html.Dimension.getBoxWidth(el)-qx.html.Dimension.getInsetLeft(el)-qx.html.Dimension.getInsetRight(el);
}};
qx.html.Dimension.getAreaHeight=function(el){if(el.clientHeight!=0&&el.clientHeight!=(qx.html.Style.getBorderTop(el)+qx.html.Style.getBorderBottom(el))){return el.clientHeight;
}else{return qx.html.Dimension.getBoxHeight(el)-qx.html.Dimension.getInsetTop(el)-qx.html.Dimension.getInsetBottom(el);
}};
}else{qx.html.Dimension.getAreaWidth=function(el){return el.clientWidth!=0?el.clientWidth:(qx.html.Dimension.getBoxWidth(el)-qx.html.Dimension.getInsetLeft(el)-qx.html.Dimension.getInsetRight(el));
};
qx.html.Dimension.getAreaHeight=function(el){return el.clientHeight!=0?el.clientHeight:(qx.html.Dimension.getBoxHeight(el)-qx.html.Dimension.getInsetTop(el)-qx.html.Dimension.getInsetBottom(el));
};
}qx.html.Dimension.getInnerWidth=function(el){return qx.html.Dimension.getAreaWidth(el)-qx.html.Style.getPaddingLeft(el)-qx.html.Style.getPaddingRight(el);
};
qx.html.Dimension.getInnerHeight=function(el){return qx.html.Dimension.getAreaHeight(el)-qx.html.Style.getPaddingTop(el)-qx.html.Style.getPaddingBottom(el);
};
qx.html.Dimension.getInsetLeft=function(el){};
qx.html.Dimension.getInsetTop=function(el){};
qx.html.Dimension.getInsetRight=function(el){};
qx.html.Dimension.getInsetBottom=function(el){};
if(qx.core.Client.getInstance().isMshtml()){qx.html.Dimension.getInsetLeft=function(el){return el.clientLeft;
};
qx.html.Dimension.getInsetTop=function(el){return el.clientTop;
};
qx.html.Dimension.getInsetRight=function(el){if(qx.html.Style.getStyleProperty(el,$[272])==$[26]||el.clientWidth==0){return qx.html.Style.getBorderRight(el);
}return Math.max(0,el.offsetWidth-el.clientLeft-el.clientWidth);
};
qx.html.Dimension.getInsetBottom=function(el){if(qx.html.Style.getStyleProperty(el,$[303])==$[26]||el.clientHeight==0){return qx.html.Style.getBorderBottom(el);
}return Math.max(0,el.offsetHeight-el.clientTop-el.clientHeight);
};
}else{qx.html.Dimension.getInsetLeft=function(el){return qx.html.Style.getBorderLeft(el);
};
qx.html.Dimension.getInsetTop=function(el){return qx.html.Style.getBorderTop(el);
};
qx.html.Dimension.getInsetRight=function(el){if(el.clientWidth==0){var ov=qx.html.Style.getStyleProperty(el,$[189]);
var sbv=ov==$[66]||ov==$[394]?16:0;
return Math.max(0,qx.html.Style.getBorderRight(el)+sbv);
}return Math.max(0,el.offsetWidth-el.clientWidth-qx.html.Style.getBorderLeft(el));
};
qx.html.Dimension.getInsetBottom=function(el){if(el.clientHeight==0){var ov=qx.html.Style.getStyleProperty(el,$[189]);
var sbv=ov==$[66]||ov==$[412]?16:0;
return Math.max(0,qx.html.Style.getBorderBottom(el)+sbv);
}return Math.max(0,el.offsetHeight-el.clientHeight-qx.html.Style.getBorderTop(el));
};
}qx.html.Dimension.getScrollBarSizeLeft=function(el){return 0;
};
qx.html.Dimension.getScrollBarSizeTop=function(el){return 0;
};
qx.html.Dimension.getScrollBarSizeRight=function(el){return qx.html.Dimension.getInsetRight(el)-qx.html.Style.getBorderRight(el);
};
qx.html.Dimension.getScrollBarSizeBottom=function(el){return qx.html.Dimension.getInsetBottom(el)-qx.html.Style.getBorderBottom(el);
};
qx.html.Dimension.getScrollBarVisibleX=function(el){return qx.html.Dimension.getScrollBarSizeRight(el)>0;
};
qx.html.Dimension.getScrollBarVisibleY=function(el){return qx.html.Dimension.getScrollBarSizeBottom(el)>0;
};




/* ID: qx.manager.object.AliasManager */
qx.OO.defineClass($[322],qx.core.Target,function(){qx.core.Target.call(this);
this._aliases={};
this._uris={};
this.add($[1384],this.getSetting($[372]));
});
qx.Settings.setDefault($[314],$[1295]);
qx.Settings.setDefault($[372],qx.Settings.getValue($[314])+$[1454]);
qx.Proto.add=function(vAlias,vUriStart){this._aliases[vAlias]=vUriStart;
for(var vPath in this._uris){if(vPath.substring(0,vPath.indexOf($[127]))==vAlias){this._uris[vPath]=null;
}}this.createDispatchEvent($[32]);
};
qx.Proto.remove=function(vAlias){delete this._aliases[vAlias];
for(var vPath in this._uris){if(vPath.substring(0,vPath.indexOf($[127]))==vAlias){this._uris[vPath]=null;
}}this.createDispatchEvent($[32]);
};
qx.Proto.resolve=function(vAlias){return this._aliases[vAlias];
};
qx.Proto.resolvePath=function(vPath,vForceUpdate){var vUri=this._uris[vPath];
if(vUri==null){vUri=this._uris[vPath]=this._computePath(vPath);
}return vUri;
};
qx.Proto._computePath=function(vPath){switch(vPath.charAt(0)){case $[127]:case $[53]:return vPath;
default:if(qx.lang.String.startsWith(vPath,qx.net.Protocol.URI_HTTP)||qx.lang.String.startsWith(vPath,qx.net.Protocol.URI_HTTPS)||qx.lang.String.startsWith(vPath,qx.net.Protocol.URI_FILE)){return vPath;
}var vAlias=vPath.substring(0,vPath.indexOf($[127]));
var vResolved=this._aliases[vAlias];
if(vResolved!=null){return vResolved+vPath.substring(vAlias.length);
}return vPath;
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._aliases=null;
this._uris=null;
return qx.core.Target.prototype.dispose.call(this);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.net.Protocol */
qx.OO.defineClass($[1438],{HTTP:"http",HTTPS:"https",FTP:"ftp",FILE:"file",URI_HTTP:"http://",URI_HTTPS:"https://",URI_FTP:"ftp://",URI_FILE:"file://"});




/* ID: qx.html.Offset */
qx.OO.defineClass($[1272]);
qx.html.Offset.getLeft=function(vElement){};
qx.html.Offset.getTop=function(vElement){};
if(qx.core.Client.getInstance().isGecko()){qx.html.Offset.getLeft=function(el){var val=el.offsetLeft;
var pa=el.parentNode;
var pose=qx.html.Style.getStyleProperty(el,$[93]);
var posp=qx.html.Style.getStyleProperty(pa,$[93]);
if(pose!=$[91]&&pose!=$[188]){val-=qx.html.Style.getBorderLeft(pa);
}if(posp!=$[91]&&posp!=$[188]){while(pa){pa=pa.parentNode;
if(!pa||typeof pa.tagName!==$[0]){break;
}var posi=qx.html.Style.getStyleProperty(pa,$[93]);
if(posi==$[91]||posi==$[188]){val-=qx.html.Style.getBorderLeft(pa)+qx.html.Style.getPaddingLeft(pa);
break;
}}}return val;
};
qx.html.Offset.getTop=function(el){var val=el.offsetTop;
var pa=el.parentNode;
var pose=qx.html.Style.getStyleProperty(el,$[93]);
var posp=qx.html.Style.getStyleProperty(pa,$[93]);
if(pose!=$[91]&&pose!=$[188]){val-=qx.html.Style.getBorderTop(pa);
}if(posp!=$[91]&&posp!=$[188]){while(pa){pa=pa.parentNode;
if(!pa||typeof pa.tagName!==$[0]){break;
}var posi=qx.html.Style.getStyleProperty(pa,$[93]);
if(posi==$[91]||posi==$[188]){val-=qx.html.Style.getBorderTop(pa)+qx.html.Style.getPaddingTop(pa);
break;
}}}return val;
};
}else{qx.html.Offset.getLeft=function(el){return el.offsetLeft;
};
qx.html.Offset.getTop=function(el){return el.offsetTop;
};
}



/* ID: qx.html.ScrollIntoView */
qx.OO.defineClass($[2369]);
qx.dom.BODY_TAG_NAME="body";
qx.html.ScrollIntoView.scrollX=function(vElement,vAlignLeft){var vParentWidth,vParentScrollLeft,vWidth,vHasScroll;
var vParent=vElement.parentNode;
var vOffset=vElement.offsetLeft;
var vWidth=vElement.offsetWidth;
while(vParent){switch(qx.html.Style.getStyleProperty(vParent,$[189])){case $[66]:case $[5]:case $[412]:vHasScroll=true;
break;
default:switch(qx.html.Style.getStyleProperty(vParent,$[303])){case $[66]:case $[5]:vHasScroll=true;
break;
default:vHasScroll=false;
}}
if(vHasScroll){vParentWidth=vParent.clientWidth;
vParentScrollLeft=vParent.scrollLeft;
if(vAlignLeft){vParent.scrollLeft=vOffset;
}else if(vAlignLeft==false){vParent.scrollLeft=vOffset+vWidth-vParentWidth;
}else if(vWidth>vParentWidth||vOffset<vParentScrollLeft){vParent.scrollLeft=vOffset;
}else if((vOffset+vWidth)>(vParentScrollLeft+vParentWidth)){vParent.scrollLeft=vOffset+vWidth-vParentWidth;
}vOffset=vParent.offsetLeft;
vWidth=vParent.offsetWidth;
}else{vOffset+=vParent.offsetLeft;
}
if(vParent.tagName.toLowerCase()==qx.dom.BODY_TAG_NAME){break;
}vParent=vParent.parentNode;
}return true;
};
qx.html.ScrollIntoView.scrollY=function(vElement,vAlignTop){var vParentHeight,vParentScrollTop,vHeight,vHasScroll;
var vParent=vElement.parentNode;
var vOffset=vElement.offsetTop;
var vHeight=vElement.offsetHeight;
while(vParent){switch(qx.html.Style.getStyleProperty(vParent,$[189])){case $[66]:case $[5]:case $[394]:vHasScroll=true;
break;
default:switch(qx.html.Style.getStyleProperty(vParent,$[272])){case $[66]:case $[5]:vHasScroll=true;
break;
default:vHasScroll=false;
}}
if(vHasScroll){vParentHeight=vParent.clientHeight;
vParentScrollTop=vParent.scrollTop;
if(vAlignTop){vParent.scrollTop=vOffset;
}else if(vAlignTop==false){vParent.scrollTop=vOffset+vHeight-vParentHeight;
}else if(vHeight>vParentHeight||vOffset<vParentScrollTop){vParent.scrollTop=vOffset;
}else if((vOffset+vHeight)>(vParentScrollTop+vParentHeight)){vParent.scrollTop=vOffset+vHeight-vParentHeight;
}vOffset=vParent.offsetTop;
vHeight=vParent.offsetHeight;
}else{vOffset+=vParent.offsetTop;
}
if(vParent.tagName.toLowerCase()==qx.dom.BODY_TAG_NAME){break;
}vParent=vParent.parentNode;
}return true;
};




/* ID: qx.dom.Node */
qx.OO.defineClass($[2167],{ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12});




/* ID: qx.event.type.MouseEvent */
qx.OO.defineClass($[1876],qx.event.type.DomEvent,function(vType,vDomEvent,vDomTarget,vTarget,vOriginalTarget,vRelatedTarget){qx.event.type.DomEvent.call(this,vType,vDomEvent,vDomTarget,vTarget,vOriginalTarget);
if(vRelatedTarget){this.setRelatedTarget(vRelatedTarget);
}});
qx.Clazz.C_BUTTON_LEFT="left";
qx.Clazz.C_BUTTON_MIDDLE="middle";
qx.Clazz.C_BUTTON_RIGHT="right";
qx.Clazz.C_BUTTON_NONE="none";
qx.event.type.MouseEvent._screenX=qx.event.type.MouseEvent._screenY=qx.event.type.MouseEvent._clientX=qx.event.type.MouseEvent._clientY=qx.event.type.MouseEvent._pageX=qx.event.type.MouseEvent._pageY=0;
qx.event.type.MouseEvent._button=null;
qx.event.type.MouseEvent._storeEventState=function(e){qx.event.type.MouseEvent._screenX=e.getScreenX();
qx.event.type.MouseEvent._screenY=e.getScreenY();
qx.event.type.MouseEvent._clientX=e.getClientX();
qx.event.type.MouseEvent._clientY=e.getClientY();
qx.event.type.MouseEvent._pageX=e.getPageX();
qx.event.type.MouseEvent._pageY=e.getPageY();
qx.event.type.MouseEvent._button=e.getButton();
};
qx.event.type.MouseEvent.getScreenX=function(){return qx.event.type.MouseEvent._screenX;
};
qx.event.type.MouseEvent.getScreenY=function(){return qx.event.type.MouseEvent._screenY;
};
qx.event.type.MouseEvent.getClientX=function(){return qx.event.type.MouseEvent._clientX;
};
qx.event.type.MouseEvent.getClientY=function(){return qx.event.type.MouseEvent._clientY;
};
qx.event.type.MouseEvent.getPageX=function(){return qx.event.type.MouseEvent._pageX;
};
qx.event.type.MouseEvent.getPageY=function(){return qx.event.type.MouseEvent._pageY;
};
qx.event.type.MouseEvent.getButton=function(){return qx.event.type.MouseEvent._button;
};
if(qx.core.Client.getInstance().isMshtml()){qx.event.type.MouseEvent.buttons={left:1,right:2,middle:4};
}else{qx.event.type.MouseEvent.buttons={left:0,right:2,middle:1};
}qx.Proto.getScreenX=function(){return this.getDomEvent().screenX;
};
qx.Proto.getScreenY=function(){return this.getDomEvent().screenY;
};
if(qx.core.Client.getInstance().isMshtml()){qx.OO.addFastProperty({name:$[995],readOnly:true});
qx.OO.addFastProperty({name:$[868],readOnly:true});
if(qx.core.Client.getInstance().isInQuirksMode()){qx.Proto._computePageX=function(){return this.getDomEvent().clientX+document.documentElement.scrollLeft;
};
qx.Proto._computePageY=function(){return this.getDomEvent().clientY+document.documentElement.scrollTop;
};
}else{qx.Proto._computePageX=function(){return this.getDomEvent().clientX+document.body.scrollLeft;
};
qx.Proto._computePageY=function(){return this.getDomEvent().clientY+document.body.scrollTop;
};
}}else if(qx.core.Client.getInstance().isGecko()){qx.Proto.getPageX=function(){return this.getDomEvent().pageX;
};
qx.Proto.getPageY=function(){return this.getDomEvent().pageY;
};
}else{qx.Proto.getPageX=function(){return this.getDomEvent().clientX;
};
qx.Proto.getPageY=function(){return this.getDomEvent().clientY;
};
}if(qx.core.Client.getInstance().isMshtml()||qx.core.Client.getInstance().isGecko()){qx.Proto.getClientX=function(){return this.getDomEvent().clientX;
};
qx.Proto.getClientY=function(){return this.getDomEvent().clientY;
};
}else{qx.OO.addFastProperty({name:$[803],readOnly:true});
qx.OO.addFastProperty({name:$[2344],readOnly:true});
qx.Proto._computeClientX=function(){return this.getDomEvent().clientX+(document.body&&document.body.scrollLeft!=null?document.body.scrollLeft:0);
};
qx.Proto._computeClientY=function(){return this.getDomEvent().clientY+(document.body&&document.body.scrollTop!=null?document.body.scrollTop:0);
};
}qx.OO.addFastProperty({name:$[118],readOnly:true});
if(qx.core.Client.getInstance().isMshtml()){qx.Proto.isLeftButtonPressed=function(){if(this.getType()==$[27]){return true;
}else{return this.getButton()===qx.event.type.MouseEvent.C_BUTTON_LEFT;
}};
}else{qx.Proto.isLeftButtonPressed=function(){return this.getButton()===qx.event.type.MouseEvent.C_BUTTON_LEFT;
};
}qx.Proto.isMiddleButtonPressed=function(){return this.getButton()===qx.event.type.MouseEvent.C_BUTTON_MIDDLE;
};
qx.Proto.isRightButtonPressed=function(){return this.getButton()===qx.event.type.MouseEvent.C_BUTTON_RIGHT;
};
qx.Proto._computeButton=function(){var e=this.getDomEvent();
if(e.which){switch(e.which){case 1:return qx.event.type.MouseEvent.C_BUTTON_LEFT;
case 3:return qx.event.type.MouseEvent.C_BUTTON_RIGHT;
case 2:return qx.event.type.MouseEvent.C_BUTTON_MIDDLE;
default:return qx.event.type.MouseEvent.C_BUTTON_NONE;
}}else{switch(e.button){case 1:return qx.event.type.MouseEvent.C_BUTTON_LEFT;
case 2:return qx.event.type.MouseEvent.C_BUTTON_RIGHT;
case 4:return qx.event.type.MouseEvent.C_BUTTON_MIDDLE;
default:return qx.event.type.MouseEvent.C_BUTTON_NONE;
}}};
qx.OO.addFastProperty({name:$[2055],readOnly:true});
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._computeWheelDelta=function(){return this.getDomEvent().wheelDelta/120;
};
}else if(qx.core.Client.getInstance().isOpera()){qx.Proto._computeWheelDelta=function(){return -this.getDomEvent().wheelDelta/120;
};
}else{qx.Proto._computeWheelDelta=function(){return -this.getDomEvent().detail/3;
};
}



/* ID: qx.manager.object.IframeManager */
qx.OO.defineClass($[477],qx.manager.object.ObjectManager,function(){qx.manager.object.ObjectManager.call(this);
});
qx.Proto.handleMouseDown=function(evt){var iframeMap=this.getAll();
for(var key in iframeMap){var iframe=iframeMap[key];
iframe.block();
}};
qx.Proto.handleMouseUp=function(evt){var iframeMap=this.getAll();
for(var key in iframeMap){var iframe=iframeMap[key];
iframe.release();
}};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.io.image.PreloaderSystem */
qx.OO.defineClass($[1721],qx.core.Target,function(vPreloadList,vCallBack,vCallBackScope){qx.core.Target.call(this);
this._list=vPreloadList;
this._timer=new qx.client.Timer(this.getSetting($[22]));
this._timer.addEventListener($[54],this._oninterval,this);
if(vCallBack){this.addEventListener($[17],vCallBack,vCallBackScope||null);
this.start();
}});
qx.Proto._stopped=false;
qx.Settings.setDefault($[22],3000);
qx.Proto.start=function(){if(qx.lang.Object.isEmpty(this._list)){this.createDispatchEvent($[17]);
return;
}
for(var vSource in this._list){var vPreloader=qx.manager.object.ImagePreloaderManager.getInstance().create(qx.manager.object.AliasManager.getInstance().resolvePath(vSource));
if(vPreloader.isErroneous()||vPreloader.isLoaded()){delete this._list[vSource];
}else{vPreloader._origSource=vSource;
vPreloader.addEventListener($[84],this._onload,this);
vPreloader.addEventListener($[106],this._onerror,this);
}}this._check();
};
qx.Proto._onload=function(e){delete this._list[e.getTarget()._origSource];
this._check();
};
qx.Proto._onerror=function(e){delete this._list[e.getTarget()._origSource];
this._check();
};
qx.Proto._oninterval=function(e){this.error("Could not preload: "+qx.lang.Object.getKeysAsString(this._list));
this._stopped=true;
this._timer.stop();
this.createDispatchEvent($[17]);
};
qx.Proto._check=function(){if(this._stopped){return;
}if(qx.lang.Object.isEmpty(this._list)){this._timer.stop();
this.createDispatchEvent($[17]);
}else{this._timer.restart();
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}this._list=null;
if(this._timer){this._timer.dispose();
this._timer=null;
}return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.client.Timer */
qx.OO.defineClass($[2207],qx.core.Target,function(vInterval){qx.core.Target.call(this);
this.setEnabled(false);
if(vInterval!=null){this.setInterval(vInterval);
}var o=this;
this.__oninterval=function(){o._oninterval();
};
});
qx.OO.addProperty({name:$[54],type:$[2],defaultValue:1000});
qx.Proto._intervalHandle=null;
qx.Proto._modifyEnabled=function(propValue,propOldValue,propData){if(propOldValue){window.clearInterval(this._intervalHandle);
this._intervalHandle=null;
}else if(propValue){this._intervalHandle=window.setInterval(this.__oninterval,this.getInterval());
}return true;
};
qx.Proto.start=function(){this.setEnabled(true);
};
qx.Proto.startWith=function(vInterval){this.setInterval(vInterval);
this.start();
};
qx.Proto.stop=function(){this.setEnabled(false);
};
qx.Proto.restart=function(){this.stop();
this.start();
};
qx.Proto.restartWith=function(vInterval){this.stop();
this.startWith(vInterval);
};
qx.Proto._oninterval=function(){if(this.getEnabled()){this.createDispatchEvent($[54]);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.stop();
if(this._intervalHandler){window.clearInterval(this._intervalHandle);
this._intervalHandler=null;
}this.__oninterval=null;
return qx.core.Target.prototype.dispose.call(this);
};
qx.client.Timer.once=function(vFunction,vObject,vTimeout){var vTimer=new qx.client.Timer(vTimeout);
vTimer.addEventListener($[54],function(e){vFunction.call(vObject,e);
vTimer.dispose();
vObject=null;
},vObject);
vTimer.start();
};




/* ID: qx.manager.object.ImagePreloaderManager */
qx.OO.defineClass($[1470],qx.manager.object.ObjectManager,function(){qx.manager.object.ObjectManager.call(this);
});
qx.Proto.add=function(vObject){this._objects[vObject.getUri()]=vObject;
};
qx.Proto.remove=function(vObject){delete this._objects[vObject.getUri()];
};
qx.Proto.has=function(vSource){return this._objects[vSource]!=null;
};
qx.Proto.get=function(vSource){return this._objects[vSource];
};
qx.Proto.create=function(vSource){if(this._objects[vSource]){return this._objects[vSource];
}return new qx.io.image.Preloader(vSource);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.io.image.Preloader */
qx.OO.defineClass($[1522],qx.core.Target,function(vSource){if(qx.manager.object.ImagePreloaderManager.getInstance().has(vSource)){this.debug("Reuse qx.io.image.Preloader in old-style!");
this.debug("Please use qx.manager.object.ImagePreloaderManager.getInstance().create(source) instead!");
return qx.manager.object.ImagePreloaderManager.getInstance().get(vSource);
}qx.core.Target.call(this);
this._element=new Image;
this._element.qx_ImagePreloader=this;
if(qx.core.Client.getInstance().isWebkit()){var self=this;
this._element.onload=function(e){return self._onload(e);
};
this._element.onerror=function(e){return self._onerror(e);
};
}else{this._element.onload=qx.io.image.Preloader.__onload;
this._element.onerror=qx.io.image.Preloader.__onerror;
}this._source=vSource;
this._element.src=vSource;
if(qx.core.Client.getInstance().isMshtml()){this._isPng=/\.png$/i.test(this._element.nameProp);
}qx.manager.object.ImagePreloaderManager.getInstance().add(this);
});
qx.Proto._source=null;
qx.Proto._isLoaded=false;
qx.Proto._isErroneous=false;
qx.Proto.getUri=function(){return this._source;
};
qx.Proto.getSource=function(){return this._source;
};
qx.Proto.isLoaded=function(){return this._isLoaded;
};
qx.Proto.isErroneous=function(){return this._isErroneous;
};
qx.Proto._isPng=false;
qx.Proto.getIsPng=function(){return this._isPng;
};
if(qx.core.Client.getInstance().isGecko()){qx.Proto.getWidth=function(){return this._element.naturalWidth;
};
qx.Proto.getHeight=function(){return this._element.naturalHeight;
};
}else{qx.Proto.getWidth=function(){return this._element.width;
};
qx.Proto.getHeight=function(){return this._element.height;
};
}qx.io.image.Preloader.__onload=function(e){this.qx_ImagePreloader._onload();
};
qx.io.image.Preloader.__onerror=function(e){this.qx_ImagePreloader._onerror();
};
qx.Proto._onload=function(){if(this._isLoaded||this._isErroneous){return;
}this._isLoaded=true;
this._isErroneous=false;
if(this.hasEventListeners($[84])){this.dispatchEvent(new qx.event.type.Event($[84]),true);
}};
qx.Proto._onerror=function(){if(this._isLoaded||this._isErroneous){return;
}this.debug("Could not load: "+this._source);
this._isLoaded=false;
this._isErroneous=true;
if(this.hasEventListeners($[106])){this.dispatchEvent(new qx.event.type.Event($[106]),true);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this._element){this._element.onload=this._element.onerror=null;
this._element.qx_ImagePreloader=null;
this._element=null;
}this._isLoaded=this._isErroneous=this._isPng=false;
return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.manager.object.ImageManager */
qx.OO.defineClass($[1123],qx.manager.object.ObjectManager,function(){qx.manager.object.ObjectManager.call(this);
this._iconThemes={};
this._widgetThemes={};
this._sources={};
qx.manager.object.AliasManager.getInstance().addEventListener($[32],this._onaliaschange,this);
});
qx.Settings.setDefault($[439],$[721]);
qx.Settings.setDefault($[433],$[795]);
qx.OO.addProperty({name:$[439],type:$[4],instance:$[655]});
qx.OO.addProperty({name:$[433],type:$[4],instance:$[682]});
qx.Proto.registerIconTheme=function(vThemeClass){this._iconThemes[vThemeClass.classname]=vThemeClass;
if(vThemeClass.classname==this.getSetting($[439])){this.setIconTheme(vThemeClass.getInstance());
}};
qx.Proto.registerWidgetTheme=function(vThemeClass){this._widgetThemes[vThemeClass.classname]=vThemeClass;
if(vThemeClass.classname==this.getSetting($[433])){this.setWidgetTheme(vThemeClass.getInstance());
}};
qx.Proto.setIconThemeById=function(vId){this.setIconTheme(this._iconThemes[vId].getInstance());
};
qx.Proto.setWidgetThemeById=function(vId){this.setWidgetTheme(this._widgetThemes[vId].getInstance());
};
qx.Proto._onaliaschange=function(){this._updateImages();
};
qx.Proto._modifyIconTheme=function(propValue,propOldValue,propData){propValue?qx.manager.object.AliasManager.getInstance().add($[94],propValue.getSetting($[306])):qx.manager.object.AliasManager.getInstance().remove($[94]);
return true;
};
qx.Proto._modifyWidgetTheme=function(propValue,propOldValue,propData){propValue?qx.manager.object.AliasManager.getInstance().add($[561],propValue.getSetting($[306])):qx.manager.object.AliasManager.getInstance().remove($[561]);
return true;
};
qx.Proto.getPreloadImageList=function(){var vPreload={};
for(var vSource in this._sources){if(this._sources[vSource]){vPreload[vSource]=true;
}}return vPreload;
};
qx.Proto.getPostPreloadImageList=function(){var vPreload={};
for(var vSource in this._sources){if(!this._sources[vSource]){vPreload[vSource]=true;
}}return vPreload;
};
qx.Proto._updateImages=function(){var vAll=this.getAll();
var vPreMgr=qx.manager.object.ImagePreloaderManager.getInstance();
var vAliasMgr=qx.manager.object.AliasManager.getInstance();
var vObject;
for(var vHashCode in vAll){vObject=vAll[vHashCode];
vObject.setPreloader(vPreMgr.create(vAliasMgr.resolvePath(vObject.getSource())));
}return true;
};
qx.Proto.createThemeList=function(vParent,xCor,yCor){var vButton;
var vThemes=this._iconThemes;
var vIcon=$[2458];
var vPrefix=$[1169];
var vEvent=$[38];
for(var vId in vThemes){var vObj=vThemes[vId].getInstance();
var vButton=new qx.ui.form.Button(vPrefix+vObj.getTitle(),vIcon);
vButton.setLocation(xCor,yCor);
vButton.addEventListener(vEvent,new Function($[1571]+vId+$[373]));
vParent.add(vButton);
yCor+=30;
}};
qx.Proto.preload=function(vPath){qx.manager.object.ImagePreloaderManager.getInstance().create(qx.manager.object.AliasManager.getInstance().resolvePath(vPath));
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}qx.manager.object.AliasManager.getInstance().removeEventListener($[32],this._onaliaschange,this);
this._sources=null;
this._iconThemes=null;
this._widgetThemes=null;
return qx.manager.object.ObjectManager.prototype.dispose.call(this);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.renderer.theme.IconTheme */
qx.OO.defineClass($[655],qx.core.Object,function(vTitle){qx.core.Object.call(this);
this.setTitle(vTitle);
});
qx.OO.addProperty({name:$[170],type:$[0],allowNull:false,defaultValue:$[1]});




/* ID: qx.theme.icon.Nuvola */
qx.OO.defineClass($[721],qx.renderer.theme.IconTheme,function(){qx.renderer.theme.IconTheme.call(this,$[2366]);
});
qx.Settings.setDefault($[306],qx.Settings.getValueOfClass($[322],$[314])+$[2029]);
qx.Clazz.getInstance=qx.lang.Function.returnInstance;
qx.manager.object.ImageManager.getInstance().registerIconTheme(qx.Clazz);




/* ID: qx.renderer.theme.WidgetTheme */
qx.OO.defineClass($[682],qx.core.Object,function(vTitle){qx.core.Object.call(this);
this.setTitle(vTitle);
});
qx.OO.addProperty({name:$[170],type:$[0],allowNull:false,defaultValue:$[1]});




/* ID: qx.theme.widget.Windows */
qx.OO.defineClass($[795],qx.renderer.theme.WidgetTheme,function(){qx.renderer.theme.WidgetTheme.call(this,$[557]);
});
qx.Settings.setDefault($[306],qx.Settings.getValueOfClass($[322],$[314])+$[1420]);
qx.Clazz.getInstance=qx.lang.Function.returnInstance;
qx.manager.object.ImageManager.getInstance().registerWidgetTheme(qx.Clazz);




/* ID: qx.renderer.font.FontCache */
qx.OO.defineClass($[1417]);
qx.renderer.font.FontCache=function(propValue,propData){var propKey;
var propKeyAsStyle=false;
switch(typeof propValue){case $[0]:if(propValue!=$[1]){propValue=propKey=propValue.toLowerCase();
break;
}return propValue;
case $[2]:propKey=propValue.toString();
break;
case $[4]:if(propValue==null||propValue instanceof qx.renderer.font.Font){return propValue;
}if(typeof propValue.join===$[31]){propKey=propValue.join($[44]).toLowerCase();
break;
}default:return propValue;
}
if(qx.renderer.font.FontCache._data[propKey]){return qx.renderer.font.FontCache._data[propKey];
}return qx.renderer.font.FontCache._data[propKey]=qx.renderer.font.Font.fromString(propKey);
};
qx.renderer.font.FontCache._data={};




/* ID: qx.ui.embed.HtmlEmbed */
qx.OO.defineClass($[1780],qx.ui.basic.Terminator,function(vHtml){qx.ui.basic.Terminator.call(this);
if(vHtml!=null){this.setHtml(vHtml);
}});
qx.OO.addProperty({name:$[141],type:$[0]});
qx.OO.addProperty({name:$[290],type:$[4],instance:$[216],convert:qx.renderer.font.FontCache,allowMultipleArguments:true});
qx.OO.addProperty({name:$[206],type:$[3],defaultValue:true});
qx.Proto._modifyHtml=function(){if(this._isCreated){this._syncHtml();
}return true;
};
qx.Proto._modifyFont=function(propValue,propOldValue,propData){if(propValue){propValue._applyWidget(this);
}else if(propOldValue){propOldValue._resetWidget(this);
}return true;
};
qx.Proto._modifyWrap=function(propValue,propOldValue,propData){this.setStyleProperty($[147],propValue?$[122]:$[197]);
return true;
};
qx.Proto._applyElementData=function(){this._syncHtml();
};
qx.Proto._syncHtml=function(){this.getElement().innerHTML=this.getHtml();
};




/* ID: qx.ui.embed.LinkEmbed */
qx.OO.defineClass($[1799],qx.ui.embed.HtmlEmbed,function(vHtml,vUri,vTarget){qx.ui.embed.HtmlEmbed.call(this,vHtml);
if(typeof vUri!=$[41]){this.setUri(vUri);
}
if(typeof vTarget!=$[41]){this.setTarget(vTarget);
}});
qx.OO.addProperty({name:$[1570],type:$[0],defaultValue:$[277],impl:$[141]});
qx.OO.addProperty({name:$[526],type:$[0],defaultValue:$[949],impl:$[141]});
qx.ui.embed.LinkEmbed.LINK_START="<a target='";
qx.ui.embed.LinkEmbed.HREF_START="' href='";
qx.ui.embed.LinkEmbed.HREF_STOP="'>";
qx.ui.embed.LinkEmbed.LINK_STOP="</a>";
qx.Proto._syncHtml=function(){var vHtml=[];
vHtml.push(qx.ui.embed.LinkEmbed.LINK_START);
vHtml.push(this.getTarget());
vHtml.push(qx.ui.embed.LinkEmbed.HREF_START);
vHtml.push(this.getUri());
vHtml.push(qx.ui.embed.LinkEmbed.HREF_STOP);
vHtml.push(this.getHtml());
vHtml.push(qx.ui.embed.LinkEmbed.LINK_STOP);
this.getElement().innerHTML=vHtml.join($[1]);
};




/* ID: qx.ui.layout.BoxLayout */
qx.OO.defineClass($[1069],qx.ui.core.Parent,function(vOrientation){qx.ui.core.Parent.call(this);
if(vOrientation!=null){this.setOrientation(vOrientation);
}});
qx.ui.layout.BoxLayout.STR_REVERSED="-reversed";
qx.OO.addProperty({name:$[703],type:$[0],possibleValues:[$[29],$[20]],addToQueueRuntime:true});
qx.OO.addProperty({name:$[772],type:$[2],defaultValue:0,addToQueueRuntime:true,impl:$[193]});
qx.OO.addProperty({name:$[460],type:$[0],defaultValue:$[11],possibleValues:[$[11],$[74],$[10]],impl:$[482],addToQueueRuntime:true});
qx.OO.addProperty({name:$[383],type:$[0],defaultValue:$[12],possibleValues:[$[12],$[34],$[16]],impl:$[482],addToQueueRuntime:true});
qx.OO.addProperty({name:$[571],type:$[3],defaultValue:false,impl:$[482],addToQueueRuntime:true});
qx.OO.addProperty({name:$[2116],type:$[3],defaultValue:true,addToQueueRuntime:true});
qx.OO.addProperty({name:$[2441],type:$[3],defaultValue:false,addToQueueRuntime:true});
qx.Proto._createLayoutImpl=function(){return this.getOrientation()==$[20]?new qx.renderer.layout.VerticalBoxLayoutImpl(this):new qx.renderer.layout.HorizontalBoxLayoutImpl(this);
};
qx.Proto._layoutHorizontal=false;
qx.Proto._layoutVertical=false;
qx.Proto._layoutMode=$[11];
qx.Proto.isHorizontal=function(){return this._layoutHorizontal;
};
qx.Proto.isVertical=function(){return this._layoutVertical;
};
qx.Proto.getLayoutMode=function(){if(this._layoutMode==null){this._updateLayoutMode();
}return this._layoutMode;
};
qx.Proto._updateLayoutMode=function(){this._layoutMode=this._layoutVertical?this.getVerticalChildrenAlign():this.getHorizontalChildrenAlign();
if(this.getReverseChildrenOrder()){this._layoutMode+=qx.ui.layout.BoxLayout.STR_REVERSED;
}};
qx.Proto._invalidateLayoutMode=function(){this._layoutMode=null;
};
qx.Proto._modifyOrientation=function(propValue,propOldValue,propData){this._layoutHorizontal=propValue==$[29];
this._layoutVertical=propValue==$[20];
if(this._layoutImpl){this._layoutImpl.dispose();
this._layoutImpl=null;
}
if(qx.util.Validation.isValidString(propValue)){this._layoutImpl=this._createLayoutImpl();
}return this._modifyLayoutOrder(propValue,propOldValue,propData);
};
qx.Proto._modifyLayoutOrder=function(propValue,propOldValue,propData){this._invalidateLayoutMode();
return this._modifyLayout(propValue,propOldValue,propData);
};
qx.Proto._modifyLayout=function(propValue,propOldValue,propData){this._invalidatePreferredInnerDimensions();
this._invalidateAccumulatedChildrenOuterWidth();
this._invalidateAccumulatedChildrenOuterHeight();
return true;
};
qx.OO.addCachedProperty({name:$[1284],defaultValue:null});
qx.OO.addCachedProperty({name:$[1023],defaultValue:null});
qx.Proto._computeAccumulatedChildrenOuterWidth=function(){var ch=this.getVisibleChildren(),chc,i=-1,sp=this.getSpacing(),s=-sp;
while(chc=ch[++i]){s+=chc.getOuterWidth()+sp;
}return s;
};
qx.Proto._computeAccumulatedChildrenOuterHeight=function(){var ch=this.getVisibleChildren(),chc,i=-1,sp=this.getSpacing(),s=-sp;
while(chc=ch[++i]){s+=chc.getOuterHeight()+sp;
}return s;
};
qx.Proto._recomputeChildrenStretchingX=function(){var ch=this.getVisibleChildren(),chc,i=-1;
while(chc=ch[++i]){if(chc._recomputeStretchingX()&&chc._recomputeBoxWidth()){chc._recomputeOuterWidth();
}}};
qx.Proto._recomputeChildrenStretchingY=function(){var ch=this.getVisibleChildren(),chc,i=-1;
while(chc=ch[++i]){if(chc._recomputeStretchingY()&&chc._recomputeBoxHeight()){chc._recomputeOuterHeight();
}}};




/* ID: qx.renderer.layout.VerticalBoxLayoutImpl */
qx.OO.defineClass($[876],qx.renderer.layout.LayoutImpl,function(vWidget){qx.renderer.layout.LayoutImpl.call(this,vWidget);
});
qx.OO.addProperty({name:$[551],type:$[3],defaultValue:true});
qx.Proto.computeChildBoxWidth=function(vChild){if(this.getWidget().getStretchChildrenOrthogonalAxis()&&vChild._computedWidthTypeNull&&vChild.getAllowStretchX()){return this.getWidget().getInnerWidth();
}return vChild.getWidthValue()||vChild._computeBoxWidthFallback();
};
qx.Proto.computeChildBoxHeight=function(vChild){return vChild.getHeightValue()||vChild._computeBoxHeightFallback();
};
qx.Proto.computeChildrenFlexHeight=function(){if(this._childrenFlexHeightComputed||!this.getEnableFlexSupport()){return;
}this._childrenFlexHeightComputed=true;
var vWidget=this.getWidget();
var vChildren=vWidget.getVisibleChildren();
var vChildrenLength=vChildren.length;
var vCurrentChild;
var vFlexibleChildren=[];
var vAvailHeight=vWidget.getInnerHeight();
var vUsedHeight=vWidget.getSpacing()*(vChildrenLength-1);
var vIterator;
for(vIterator=0;vIterator<vChildrenLength;vIterator++){vCurrentChild=vChildren[vIterator];
if(vCurrentChild._computedHeightTypeFlex){vFlexibleChildren.push(vCurrentChild);
if(vWidget._computedHeightTypeAuto){vUsedHeight+=vCurrentChild.getPreferredBoxHeight();
}}else{vUsedHeight+=vCurrentChild.getOuterHeight();
}}var vRemainingHeight=vAvailHeight-vUsedHeight;
var vFlexibleChildrenLength=vFlexibleChildren.length;
var vPrioritySum=0;
for(vIterator=0;vIterator<vFlexibleChildrenLength;vIterator++){vPrioritySum+=vFlexibleChildren[vIterator]._computedHeightParsed;
}var vPartHeight=vRemainingHeight/vPrioritySum;
if(!vWidget.getUseAdvancedFlexAllocation()){for(vIterator=0;vIterator<vFlexibleChildrenLength;vIterator++){vCurrentChild=vFlexibleChildren[vIterator];
vCurrentChild._computedHeightFlexValue=Math.round(vCurrentChild._computedHeightParsed*vPartHeight);
vUsedHeight+=vCurrentChild._computedHeightFlexValue;
}}else{var vAllocationDiff=0;
var vMinAllocationLoops,vFlexibleChildrenLength,vAdjust,vCurrentAllocationSum,vFactorSum,vComputedFlexibleHeight;
for(vIterator=0;vIterator<vFlexibleChildrenLength;vIterator++){vCurrentChild=vFlexibleChildren[vIterator];
vComputedFlexibleHeight=vCurrentChild._computedHeightFlexValue=vCurrentChild._computedHeightParsed*vPartHeight;
vAllocationDiff+=vComputedFlexibleHeight-qx.lang.Number.limit(vComputedFlexibleHeight,vCurrentChild.getMinHeightValue(),vCurrentChild.getMaxHeightValue());
}vAllocationDiff=Math.round(vAllocationDiff);
if(vAllocationDiff==0){for(vIterator=0;vIterator<vFlexibleChildrenLength;vIterator++){vCurrentChild=vFlexibleChildren[vIterator];
vCurrentChild._computedHeightFlexValue=Math.round(vCurrentChild._computedHeightFlexValue);
vUsedHeight+=vCurrentChild._computedHeightFlexValue;
}}else{var vUp=vAllocationDiff>0;
for(vIterator=vFlexibleChildrenLength-1;vIterator>=0;vIterator--){vCurrentChild=vFlexibleChildren[vIterator];
if(vUp){vAdjust=(vCurrentChild.getMaxHeightValue()||Infinity)-vCurrentChild._computedHeightFlexValue;
if(vAdjust>0){vCurrentChild._allocationLoops=Math.floor(vAdjust/vCurrentChild._computedHeightParsed);
}else{qx.lang.Array.removeAt(vFlexibleChildren,vIterator);
vCurrentChild._computedHeightFlexValue=Math.round(vCurrentChild._computedHeightFlexValue);
vUsedHeight+=Math.round(vCurrentChild._computedHeightFlexValue+vAdjust);
}}else{vAdjust=qx.util.Validation.isValidNumber(vCurrentChild.getMinHeightValue())?vCurrentChild._computedHeightFlexValue-vCurrentChild.getMinHeightValue():vCurrentChild._computedHeightFlexValue;
if(vAdjust>0){vCurrentChild._allocationLoops=Math.floor(vAdjust/vCurrentChild._computedHeightParsed);
}else{qx.lang.Array.removeAt(vFlexibleChildren,vIterator);
vCurrentChild._computedHeightFlexValue=Math.round(vCurrentChild._computedHeightFlexValue);
vUsedHeight+=Math.round(vCurrentChild._computedHeightFlexValue-vAdjust);
}}}while(vAllocationDiff!=0&&vFlexibleChildrenLength>0){vFlexibleChildrenLength=vFlexibleChildren.length;
vMinAllocationLoops=Infinity;
vFactorSum=0;
for(vIterator=0;vIterator<vFlexibleChildrenLength;vIterator++){vMinAllocationLoops=Math.min(vMinAllocationLoops,vFlexibleChildren[vIterator]._allocationLoops);
vFactorSum+=vFlexibleChildren[vIterator]._computedHeightParsed;
}vCurrentAllocationSum=Math.min(vFactorSum*vMinAllocationLoops,vAllocationDiff);
vAllocationDiff-=vCurrentAllocationSum;
for(vIterator=vFlexibleChildrenLength-1;vIterator>=0;vIterator--){vCurrentChild=vFlexibleChildren[vIterator];
vCurrentChild._computedHeightFlexValue+=vCurrentAllocationSum/vFactorSum*vCurrentChild._computedHeightParsed;
if(vCurrentChild._allocationLoops==vMinAllocationLoops){vCurrentChild._computedHeightFlexValue=Math.round(vCurrentChild._computedHeightFlexValue);
vUsedHeight+=vCurrentChild._computedHeightFlexValue;
delete vCurrentChild._allocationLoops;
qx.lang.Array.removeAt(vFlexibleChildren,vIterator);
}else{if(vAllocationDiff==0){vCurrentChild._computedHeightFlexValue=Math.round(vCurrentChild._computedHeightFlexValue);
vUsedHeight+=vCurrentChild._computedHeightFlexValue;
delete vCurrentChild._allocationLoops;
}else{vCurrentChild._allocationLoops-=vMinAllocationLoops;
}}}}}}vCurrentChild._computedHeightFlexValue+=vAvailHeight-vUsedHeight;
};
qx.Proto.invalidateChildrenFlexHeight=function(){delete this._childrenFlexHeightComputed;
};
qx.Proto.computeChildrenNeededHeight=function(){var w=this.getWidget();
return qx.renderer.layout.LayoutImpl.prototype.computeChildrenNeededHeight_sum.call(this)+((w.getVisibleChildrenLength()-1)*w.getSpacing());
};
qx.Proto.updateSelfOnChildOuterHeightChange=function(vChild){this.getWidget()._invalidateAccumulatedChildrenOuterHeight();
};
qx.Proto.updateChildOnInnerWidthChange=function(vChild){var vUpdatePercent=vChild._recomputePercentX();
var vUpdateStretch=vChild._recomputeStretchingX();
if((vChild.getHorizontalAlign()||this.getWidget().getHorizontalChildrenAlign())==$[74]){vChild.addToLayoutChanges($[115]);
}return vUpdatePercent||vUpdateStretch;
};
qx.Proto.updateChildOnInnerHeightChange=function(vChild){if(this.getWidget().getVerticalChildrenAlign()==$[34]){vChild.addToLayoutChanges($[126]);
}var vUpdatePercent=vChild._recomputePercentY();
var vUpdateFlex=vChild._recomputeFlexY();
return vUpdatePercent||vUpdateFlex;
};
qx.Proto.updateSelfOnJobQueueFlush=function(vJobQueue){if(vJobQueue.addChild||vJobQueue.removeChild){this.getWidget()._invalidateAccumulatedChildrenOuterHeight();
}};
qx.Proto.updateChildrenOnJobQueueFlush=function(vQueue){var vStretchX=false,vStretchY=false;
var vWidget=this.getWidget();
if(vQueue.orientation){vStretchX=vStretchY=true;
}if(vQueue.spacing||vQueue.orientation||vQueue.reverseChildrenOrder||vQueue.verticalChildrenAlign){vWidget._addChildrenToLayoutQueue($[126]);
}
if(vQueue.horizontalChildrenAlign){vWidget._addChildrenToLayoutQueue($[115]);
}
if(vQueue.stretchChildrenOrthogonalAxis){vStretchX=true;
}if(vStretchX){vWidget._recomputeChildrenStretchingX();
vWidget._addChildrenToLayoutQueue($[42]);
}
if(vStretchY){vWidget._recomputeChildrenStretchingY();
vWidget._addChildrenToLayoutQueue($[43]);
}return true;
};
qx.Proto.updateChildrenOnRemoveChild=function(vChild,vIndex){var w=this.getWidget(),ch=w.getVisibleChildren(),chl=ch.length,chc,i=-1;
if(this.getEnableFlexSupport()){for(var i=0;i<chl;i++){chc=ch[i];
if(chc.getHasFlexY()){vIndex=Math.min(vIndex,i);
break;
}}i=-1;
}switch(w.getLayoutMode()){case $[16]:case $[287]:while((chc=ch[++i])&&i<vIndex){chc.addToLayoutChanges($[126]);
}break;
case $[34]:case $[273]:while(chc=ch[++i]){chc.addToLayoutChanges($[126]);
}break;
default:i+=vIndex;
while(chc=ch[++i]){chc.addToLayoutChanges($[126]);
}}};
qx.Proto.updateChildrenOnMoveChild=function(vChild,vIndex,vOldIndex){var vChildren=this.getWidget().getVisibleChildren();
var vStart=Math.min(vIndex,vOldIndex);
var vStop=Math.max(vIndex,vOldIndex)+1;
for(var i=vStart;i<vStop;i++){vChildren[i].addToLayoutChanges($[126]);
}};
qx.Proto.flushChildrenQueue=function(vChildrenQueue){var w=this.getWidget(),ch=w.getVisibleChildren(),chl=ch.length,chc,i;
if(this.getEnableFlexSupport()){this.invalidateChildrenFlexHeight();
for(i=0;i<chl;i++){chc=ch[i];
if(chc.getHasFlexY()){chc._computedHeightValue=null;
if(chc._recomputeBoxHeight()){chc._recomputeOuterHeight();
chc._recomputeInnerHeight();
}vChildrenQueue[chc.toHashCode()]=chc;
chc._layoutChanges.height=true;
}}}
switch(w.getLayoutMode()){case $[16]:case $[287]:for(var i=chl-1;i>=0&&!vChildrenQueue[ch[i].toHashCode()];i--){}for(var j=0;j<=i;j++){w._layoutChild(chc=ch[j]);
}break;
case $[34]:case $[273]:i=-1;
while(chc=ch[++i]){w._layoutChild(chc);
}break;
default:i=-1;
var changed=false;
while(chc=ch[++i]){if(changed||vChildrenQueue[chc.toHashCode()]){w._layoutChild(chc);
changed=true;
}}}};
qx.Proto.layoutChild=function(vChild,vJobs){this.layoutChild_sizeX(vChild,vJobs);
this.layoutChild_sizeY(vChild,vJobs);
this.layoutChild_sizeLimitX(vChild,vJobs);
this.layoutChild_sizeLimitY(vChild,vJobs);
this.layoutChild_locationX(vChild,vJobs);
this.layoutChild_locationY(vChild,vJobs);
this.layoutChild_marginX(vChild,vJobs);
this.layoutChild_marginY(vChild,vJobs);
};
if(qx.core.Client.getInstance().isMshtml()||qx.core.Client.getInstance().isOpera()||qx.core.Client.getInstance().isWebkit()){qx.Proto.layoutChild_sizeX=function(vChild,vJobs){if(vJobs.initial||vJobs.width||vJobs.minWidth||vJobs.maxWidth){if((vChild._isWidthEssential()&&(!vChild._computedWidthTypeNull||!vChild._computedMinWidthTypeNull||!vChild._computedMaxWidthTypeNull))||(vChild.getAllowStretchX()&&this.getWidget().getStretchChildrenOrthogonalAxis())){vChild._applyRuntimeWidth(vChild.getBoxWidth());
}else{vChild._resetRuntimeWidth();
}}};
qx.Proto.layoutChild_sizeY=function(vChild,vJobs){if(vJobs.initial||vJobs.height||vJobs.minHeight||vJobs.maxHeight){if(vChild._isHeightEssential()&&(!vChild._computedHeightTypeNull||!vChild._computedMinHeightTypeNull||!vChild._computedMaxHeightTypeNull)){vChild._applyRuntimeHeight(vChild.getBoxHeight());
}else{vChild._resetRuntimeHeight();
}}};
}else{qx.Proto.layoutChild_sizeX=function(vChild,vJobs){if(vJobs.initial||vJobs.width){if(vChild._isWidthEssential()&&!vChild._computedWidthTypeNull){vChild._applyRuntimeWidth(vChild.getWidthValue());
}else{vChild._resetRuntimeWidth();
}}};
qx.Proto.layoutChild_sizeY=function(vChild,vJobs){if(vJobs.initial||vJobs.height){if(vChild._isHeightEssential()&&!vChild._computedHeightTypeNull){vChild._applyRuntimeHeight(vChild.getHeightValue());
}else{vChild._resetRuntimeHeight();
}}};
}qx.Proto.layoutChild_locationY=function(vChild,vJobs){var vWidget=this.getWidget();
if(vWidget.getFirstVisibleChild()==vChild){switch(vWidget.getLayoutMode()){case $[16]:case $[287]:var vPos=vWidget.getPaddingBottom()+vWidget.getAccumulatedChildrenOuterHeight()-vChild.getOuterHeight();
break;
case $[34]:case $[273]:var vPos=vWidget.getPaddingTop()+Math.round((vWidget.getInnerHeight()-vWidget.getAccumulatedChildrenOuterHeight())/2);
break;
default:var vPos=vWidget.getPaddingTop();
}}else{var vPrev=vChild.getPreviousVisibleSibling();
switch(vWidget.getLayoutMode()){case $[16]:case $[287]:var vPos=vPrev._cachedLocationVertical-vChild.getOuterHeight()-vWidget.getSpacing();
break;
default:var vPos=vPrev._cachedLocationVertical+vPrev.getOuterHeight()+vWidget.getSpacing();
}}vChild._cachedLocationVertical=vPos;
switch(this.getWidget().getLayoutMode()){case $[16]:case $[1784]:case $[273]:vPos+=!vChild._computedBottomTypeNull?vChild.getBottomValue():!vChild._computedTopTypeNull?-(vChild.getTopValue()):0;
vChild._resetRuntimeTop();
vChild._applyRuntimeBottom(vPos);
break;
default:vPos+=!vChild._computedTopTypeNull?vChild.getTopValue():!vChild._computedBottomTypeNull?-(vChild.getBottomValue()):0;
vChild._resetRuntimeBottom();
vChild._applyRuntimeTop(vPos);
}};
qx.Proto.layoutChild_locationX=function(vChild,vJobs){var vWidget=this.getWidget();
if(qx.core.Client.getInstance().isGecko()&&vChild.getAllowStretchX()&&vWidget.getStretchChildrenOrthogonalAxis()&&vChild._computedWidthTypeNull){vChild._applyRuntimeLeft(vWidget.getPaddingLeft()||0);
vChild._applyRuntimeRight(vWidget.getPaddingRight()||0);
return;
}var vAlign=vChild.getHorizontalAlign()||vWidget.getHorizontalChildrenAlign();
var vPos=vAlign==$[74]?Math.round((vWidget.getInnerWidth()-vChild.getOuterWidth())/2):0;
if(vAlign==$[10]){vPos+=vWidget.getPaddingRight();
if(!vChild._computedRightTypeNull){vPos+=vChild.getRightValue();
}else if(!vChild._computedLeftTypeNull){vPos-=vChild.getLeftValue();
}vChild._resetRuntimeLeft();
vChild._applyRuntimeRight(vPos);
}else{vPos+=vWidget.getPaddingLeft();
if(!vChild._computedLeftTypeNull){vPos+=vChild.getLeftValue();
}else if(!vChild._computedRightTypeNull){vPos-=vChild.getRightValue();
}vChild._resetRuntimeRight();
vChild._applyRuntimeLeft(vPos);
}};




/* ID: qx.renderer.layout.HorizontalBoxLayoutImpl */
qx.OO.defineClass($[931],qx.renderer.layout.LayoutImpl,function(vWidget){qx.renderer.layout.LayoutImpl.call(this,vWidget);
});
qx.OO.addProperty({name:$[551],type:$[3],defaultValue:true});
qx.Proto.computeChildBoxWidth=function(vChild){return vChild.getWidthValue()||vChild._computeBoxWidthFallback();
};
qx.Proto.computeChildBoxHeight=function(vChild){if(this.getWidget().getStretchChildrenOrthogonalAxis()&&vChild._computedHeightTypeNull&&vChild.getAllowStretchY()){return this.getWidget().getInnerHeight();
}return vChild.getHeightValue()||vChild._computeBoxHeightFallback();
};
qx.Proto.computeChildrenFlexWidth=function(){if(this._childrenFlexWidthComputed||!this.getEnableFlexSupport()){return;
}this._childrenFlexWidthComputed=true;
var vWidget=this.getWidget();
var vChildren=vWidget.getVisibleChildren();
var vChildrenLength=vChildren.length;
var vCurrentChild;
var vFlexibleChildren=[];
var vAvailWidth=vWidget.getInnerWidth();
var vUsedWidth=vWidget.getSpacing()*(vChildrenLength-1);
var vIterator;
for(vIterator=0;vIterator<vChildrenLength;vIterator++){vCurrentChild=vChildren[vIterator];
if(vCurrentChild._computedWidthTypeFlex){vFlexibleChildren.push(vCurrentChild);
if(vWidget._computedWidthTypeAuto){vUsedWidth+=vCurrentChild.getPreferredBoxWidth();
}}else{vUsedWidth+=vCurrentChild.getOuterWidth();
}}var vRemainingWidth=vAvailWidth-vUsedWidth;
var vFlexibleChildrenLength=vFlexibleChildren.length;
var vPrioritySum=0;
for(vIterator=0;vIterator<vFlexibleChildrenLength;vIterator++){vPrioritySum+=vFlexibleChildren[vIterator]._computedWidthParsed;
}var vPartWidth=vRemainingWidth/vPrioritySum;
if(!vWidget.getUseAdvancedFlexAllocation()){for(vIterator=0;vIterator<vFlexibleChildrenLength;vIterator++){vCurrentChild=vFlexibleChildren[vIterator];
vCurrentChild._computedWidthFlexValue=Math.round(vCurrentChild._computedWidthParsed*vPartWidth);
vUsedWidth+=vCurrentChild._computedWidthFlexValue;
}}else{var vAllocationDiff=0;
var vMinAllocationLoops,vFlexibleChildrenLength,vAdjust,vCurrentAllocationSum,vFactorSum,vComputedFlexibleWidth;
for(vIterator=0;vIterator<vFlexibleChildrenLength;vIterator++){vCurrentChild=vFlexibleChildren[vIterator];
vComputedFlexibleWidth=vCurrentChild._computedWidthFlexValue=vCurrentChild._computedWidthParsed*vPartWidth;
vAllocationDiff+=vComputedFlexibleWidth-qx.lang.Number.limit(vComputedFlexibleWidth,vCurrentChild.getMinWidthValue(),vCurrentChild.getMaxWidthValue());
}vAllocationDiff=Math.round(vAllocationDiff);
if(vAllocationDiff==0){for(vIterator=0;vIterator<vFlexibleChildrenLength;vIterator++){vCurrentChild=vFlexibleChildren[vIterator];
vCurrentChild._computedWidthFlexValue=Math.round(vCurrentChild._computedWidthFlexValue);
vUsedWidth+=vCurrentChild._computedWidthFlexValue;
}}else{var vUp=vAllocationDiff>0;
for(vIterator=vFlexibleChildrenLength-1;vIterator>=0;vIterator--){vCurrentChild=vFlexibleChildren[vIterator];
if(vUp){vAdjust=(vCurrentChild.getMaxWidthValue()||Infinity)-vCurrentChild._computedWidthFlexValue;
if(vAdjust>0){vCurrentChild._allocationLoops=Math.floor(vAdjust/vCurrentChild._computedWidthParsed);
}else{qx.lang.Array.removeAt(vFlexibleChildren,vIterator);
vCurrentChild._computedWidthFlexValue=Math.round(vCurrentChild._computedWidthFlexValue);
vUsedWidth+=Math.round(vCurrentChild._computedWidthFlexValue+vAdjust);
}}else{vAdjust=qx.util.Validation.isValidNumber(vCurrentChild.getMinWidthValue())?vCurrentChild._computedWidthFlexValue-vCurrentChild.getMinWidthValue():vCurrentChild._computedWidthFlexValue;
if(vAdjust>0){vCurrentChild._allocationLoops=Math.floor(vAdjust/vCurrentChild._computedWidthParsed);
}else{qx.lang.Array.removeAt(vFlexibleChildren,vIterator);
vCurrentChild._computedWidthFlexValue=Math.round(vCurrentChild._computedWidthFlexValue);
vUsedWidth+=Math.round(vCurrentChild._computedWidthFlexValue-vAdjust);
}}}while(vAllocationDiff!=0&&vFlexibleChildrenLength>0){vFlexibleChildrenLength=vFlexibleChildren.length;
vMinAllocationLoops=Infinity;
vFactorSum=0;
for(vIterator=0;vIterator<vFlexibleChildrenLength;vIterator++){vMinAllocationLoops=Math.min(vMinAllocationLoops,vFlexibleChildren[vIterator]._allocationLoops);
vFactorSum+=vFlexibleChildren[vIterator]._computedWidthParsed;
}vCurrentAllocationSum=Math.min(vFactorSum*vMinAllocationLoops,vAllocationDiff);
vAllocationDiff-=vCurrentAllocationSum;
for(vIterator=vFlexibleChildrenLength-1;vIterator>=0;vIterator--){vCurrentChild=vFlexibleChildren[vIterator];
vCurrentChild._computedWidthFlexValue+=vCurrentAllocationSum/vFactorSum*vCurrentChild._computedWidthParsed;
if(vCurrentChild._allocationLoops==vMinAllocationLoops){vCurrentChild._computedWidthFlexValue=Math.round(vCurrentChild._computedWidthFlexValue);
vUsedWidth+=vCurrentChild._computedWidthFlexValue;
delete vCurrentChild._allocationLoops;
qx.lang.Array.removeAt(vFlexibleChildren,vIterator);
}else{if(vAllocationDiff==0){vCurrentChild._computedWidthFlexValue=Math.round(vCurrentChild._computedWidthFlexValue);
vUsedWidth+=vCurrentChild._computedWidthFlexValue;
delete vCurrentChild._allocationLoops;
}else{vCurrentChild._allocationLoops-=vMinAllocationLoops;
}}}}}}vCurrentChild._computedWidthFlexValue+=vAvailWidth-vUsedWidth;
};
qx.Proto.invalidateChildrenFlexWidth=function(){delete this._childrenFlexWidthComputed;
};
qx.Proto.computeChildrenNeededWidth=function(){var w=this.getWidget();
return qx.renderer.layout.LayoutImpl.prototype.computeChildrenNeededWidth_sum.call(this)+((w.getVisibleChildrenLength()-1)*w.getSpacing());
};
qx.Proto.updateSelfOnChildOuterWidthChange=function(vChild){this.getWidget()._invalidateAccumulatedChildrenOuterWidth();
};
qx.Proto.updateChildOnInnerWidthChange=function(vChild){if(this.getWidget().getHorizontalChildrenAlign()==$[74]){vChild.addToLayoutChanges($[115]);
}var vUpdatePercent=vChild._recomputePercentX();
var vUpdateFlex=vChild._recomputeFlexX();
return vUpdatePercent||vUpdateFlex;
};
qx.Proto.updateChildOnInnerHeightChange=function(vChild){var vUpdatePercent=vChild._recomputePercentY();
var vUpdateStretch=vChild._recomputeStretchingY();
if((vChild.getVerticalAlign()||this.getWidget().getVerticalChildrenAlign())==$[34]){vChild.addToLayoutChanges($[126]);
}return vUpdatePercent||vUpdateStretch;
};
qx.Proto.updateSelfOnJobQueueFlush=function(vJobQueue){if(vJobQueue.addChild||vJobQueue.removeChild){this.getWidget()._invalidateAccumulatedChildrenOuterWidth();
}};
qx.Proto.updateChildrenOnJobQueueFlush=function(vQueue){var vStretchX=false,vStretchY=false;
var vWidget=this.getWidget();
if(vQueue.orientation){vStretchX=vStretchY=true;
}if(vQueue.spacing||vQueue.orientation||vQueue.reverseChildrenOrder||vQueue.horizontalChildrenAlign){vWidget._addChildrenToLayoutQueue($[115]);
}
if(vQueue.verticalChildrenAlign){vWidget._addChildrenToLayoutQueue($[126]);
}
if(vQueue.stretchChildrenOrthogonalAxis){vStretchY=true;
}if(vStretchX){vWidget._recomputeChildrenStretchingX();
vWidget._addChildrenToLayoutQueue($[42]);
}
if(vStretchY){vWidget._recomputeChildrenStretchingY();
vWidget._addChildrenToLayoutQueue($[43]);
}return true;
};
qx.Proto.updateChildrenOnRemoveChild=function(vChild,vIndex){var w=this.getWidget(),ch=w.getVisibleChildren(),chl=ch.length,chc,i=-1;
if(this.getEnableFlexSupport()){for(i=0;i<chl;i++){chc=ch[i];
if(chc.getHasFlexX()){vIndex=Math.min(vIndex,i);
break;
}}i=-1;
}switch(w.getLayoutMode()){case $[10]:case $[262]:while((chc=ch[++i])&&i<vIndex){chc.addToLayoutChanges($[115]);
}break;
case $[74]:case $[293]:while(chc=ch[++i]){chc.addToLayoutChanges($[115]);
}break;
default:i+=vIndex;
while(chc=ch[++i]){chc.addToLayoutChanges($[115]);
}}};
qx.Proto.updateChildrenOnMoveChild=function(vChild,vIndex,vOldIndex){var vChildren=this.getWidget().getVisibleChildren();
var vStart=Math.min(vIndex,vOldIndex);
var vStop=Math.max(vIndex,vOldIndex)+1;
for(var i=vStart;i<vStop;i++){vChildren[i].addToLayoutChanges($[115]);
}};
qx.Proto.flushChildrenQueue=function(vChildrenQueue){var w=this.getWidget(),ch=w.getVisibleChildren(),chl=ch.length,chc,i;
if(this.getEnableFlexSupport()){this.invalidateChildrenFlexWidth();
for(i=0;i<chl;i++){chc=ch[i];
if(chc.getHasFlexX()){chc._computedWidthValue=null;
if(chc._recomputeBoxWidth()){chc._recomputeOuterWidth();
chc._recomputeInnerWidth();
}vChildrenQueue[chc.toHashCode()]=chc;
chc._layoutChanges.width=true;
}}}
switch(w.getLayoutMode()){case $[10]:case $[262]:for(var i=chl-1;i>=0&&!vChildrenQueue[ch[i].toHashCode()];i--){}for(var j=0;j<=i;j++){w._layoutChild(chc=ch[j]);
}break;
case $[74]:case $[293]:i=-1;
while(chc=ch[++i]){w._layoutChild(chc);
}break;
default:i=-1;
var changed=false;
while(chc=ch[++i]){if(changed||vChildrenQueue[chc.toHashCode()]){w._layoutChild(chc);
changed=true;
}}}};
qx.Proto.layoutChild=function(vChild,vJobs){this.layoutChild_sizeX(vChild,vJobs);
this.layoutChild_sizeY(vChild,vJobs);
this.layoutChild_sizeLimitX(vChild,vJobs);
this.layoutChild_sizeLimitY(vChild,vJobs);
this.layoutChild_locationX(vChild,vJobs);
this.layoutChild_locationY(vChild,vJobs);
this.layoutChild_marginX(vChild,vJobs);
this.layoutChild_marginY(vChild,vJobs);
};
if(qx.core.Client.getInstance().isMshtml()||qx.core.Client.getInstance().isOpera()||qx.core.Client.getInstance().isWebkit()){qx.Proto.layoutChild_sizeX=function(vChild,vJobs){if(vJobs.initial||vJobs.width||vJobs.minWidth||vJobs.maxWidth){if(vChild._isWidthEssential()&&(!vChild._computedWidthTypeNull||!vChild._computedMinWidthTypeNull||!vChild._computedMaxWidthTypeNull)){vChild._applyRuntimeWidth(vChild.getBoxWidth());
}else{vChild._resetRuntimeWidth();
}}};
qx.Proto.layoutChild_sizeY=function(vChild,vJobs){if(vJobs.initial||vJobs.height||vJobs.minHeight||vJobs.maxHeight){if((vChild._isHeightEssential()&&(!vChild._computedHeightTypeNull||!vChild._computedMinHeightTypeNull||!vChild._computedMaxHeightTypeNull))||(vChild.getAllowStretchY()&&this.getWidget().getStretchChildrenOrthogonalAxis())){vChild._applyRuntimeHeight(vChild.getBoxHeight());
}else{vChild._resetRuntimeHeight();
}}};
}else{qx.Proto.layoutChild_sizeX=function(vChild,vJobs){if(vJobs.initial||vJobs.width){if(vChild._isWidthEssential()&&!vChild._computedWidthTypeNull){vChild._applyRuntimeWidth(vChild.getWidthValue());
}else{vChild._resetRuntimeWidth();
}}};
qx.Proto.layoutChild_sizeY=function(vChild,vJobs){if(vJobs.initial||vJobs.height){if(vChild._isHeightEssential()&&!vChild._computedHeightTypeNull){vChild._applyRuntimeHeight(vChild.getHeightValue());
}else{vChild._resetRuntimeHeight();
}}};
}qx.Proto.layoutChild_locationX=function(vChild,vJobs){var vWidget=this.getWidget();
if(vWidget.getFirstVisibleChild()==vChild){switch(vWidget.getLayoutMode()){case $[10]:case $[262]:var vPos=vWidget.getPaddingRight()+vWidget.getAccumulatedChildrenOuterWidth()-vChild.getOuterWidth();
break;
case $[74]:case $[293]:var vPos=vWidget.getPaddingLeft()+Math.round((vWidget.getInnerWidth()-vWidget.getAccumulatedChildrenOuterWidth())/2);
break;
default:var vPos=vWidget.getPaddingLeft();
}}else{var vPrev=vChild.getPreviousVisibleSibling();
switch(vWidget.getLayoutMode()){case $[10]:case $[262]:var vPos=vPrev._cachedLocationHorizontal-vChild.getOuterWidth()-vWidget.getSpacing();
break;
default:var vPos=vPrev._cachedLocationHorizontal+vPrev.getOuterWidth()+vWidget.getSpacing();
}}vChild._cachedLocationHorizontal=vPos;
switch(vWidget.getLayoutMode()){case $[10]:case $[1525]:case $[293]:vPos+=!vChild._computedRightTypeNull?vChild.getRightValue():!vChild._computedLeftTypeNull?-(vChild.getLeftValue()):0;
vChild._resetRuntimeLeft();
vChild._applyRuntimeRight(vPos);
break;
default:vPos+=!vChild._computedLeftTypeNull?vChild.getLeftValue():!vChild._computedRightTypeNull?-(vChild.getRightValue()):0;
vChild._resetRuntimeRight();
vChild._applyRuntimeLeft(vPos);
}};
qx.Proto.layoutChild_locationY=function(vChild,vJobs){var vWidget=this.getWidget();
if(qx.core.Client.getInstance().isGecko()&&vChild.getAllowStretchY()&&vWidget.getStretchChildrenOrthogonalAxis()&&vChild._computedHeightTypeNull){vChild._applyRuntimeTop(vWidget.getPaddingTop()||0);
vChild._applyRuntimeBottom(vWidget.getPaddingBottom()||0);
return;
}var vAlign=vChild.getVerticalAlign()||vWidget.getVerticalChildrenAlign();
var vPos=vAlign==$[34]?Math.round((vWidget.getInnerHeight()-vChild.getOuterHeight())/2):0;
if(vAlign==$[16]){vPos+=vWidget.getPaddingBottom();
if(!vChild._computedBottomTypeNull){vPos+=vChild.getBottomValue();
}else if(!vChild._computedTopTypeNull){vPos-=vChild.getTopValue();
}vChild._resetRuntimeTop();
vChild._applyRuntimeBottom(vPos);
}else{vPos+=vWidget.getPaddingTop();
if(!vChild._computedTopTypeNull){vPos+=vChild.getTopValue();
}else if(!vChild._computedBottomTypeNull){vPos-=vChild.getBottomValue();
}vChild._resetRuntimeBottom();
vChild._applyRuntimeTop(vPos);
}};




/* ID: qx.ui.basic.Atom */
qx.OO.defineClass($[1531],qx.ui.layout.BoxLayout,function(vLabel,vIcon,vIconWidth,vIconHeight,vFlash){qx.ui.layout.BoxLayout.call(this);
if(this.getOrientation()==null){this.setOrientation($[29]);
}this.setSelectable(false);
this.getLayoutImpl().setEnableFlexSupport(false);
this.setLabel(vLabel);
if(qx.OO.isAvailable($[360])&&vFlash!=null&&vIconWidth!=null&&vIconHeight!=null&&qx.ui.embed.Flash.getPlayerVersion().getMajor()>0){this._flashMode=true;
this.setIcon(vFlash);
this.setIconWidth(vIconWidth);
this.setIconHeight(vIconHeight);
}else if(vIcon!=null){this.setIcon(vIcon);
if(vIconWidth!=null){this.setIconWidth(vIconWidth);
}
if(vIconHeight!=null){this.setIconHeight(vIconHeight);
}}});
qx.ui.basic.Atom.SHOW_LABEL="label";
qx.ui.basic.Atom.SHOW_ICON="icon";
qx.ui.basic.Atom.SHOW_BOTH="both";
qx.OO.addProperty({name:$[109]});
qx.OO.addProperty({name:$[94],type:$[0]});
qx.OO.addProperty({name:$[790],type:$[0]});
qx.OO.addProperty({name:$[2149],type:$[0],defaultValue:$[640],possibleValues:[$[640],$[109],$[94],$[33],null]});
qx.OO.addProperty({name:$[566],type:$[0],defaultValue:$[11],possibleValues:[$[12],$[10],$[16],$[11]]});
qx.OO.addProperty({name:$[793],type:$[2]});
qx.OO.addProperty({name:$[575],type:$[2]});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[187]});
qx.Proto._flashMode=false;
qx.Proto._labelObject=null;
qx.Proto._iconObject=null;
qx.Proto._createLabel=function(){var l=this._labelObject=new qx.ui.basic.Label(this.getLabel());
l.setAnonymous(true);
l.setEnabled(this.getEnabled());
l.setSelectable(false);
this.addAt(l,this._iconObject?1:0);
};
qx.Proto._createIcon=function(){if(this._flashMode&&qx.OO.isAvailable($[360])){var i=this._iconObject=new qx.ui.embed.Flash(this.getIcon());
}else{var i=this._iconObject=new qx.ui.basic.Image();
}i.setAnonymous(true);
this._updateIcon();
this.addAt(i,0);
};
qx.Proto._updateIcon=function(){if(this._iconObject&&this.getIcon&&this.getDisabledIcon){var disabledIcon=this.getDisabledIcon();
if(disabledIcon){if(this.getEnabled()){this._iconObject.setSource(this.getIcon());
}else{this._iconObject.setSource(disabledIcon);
}this._iconObject.setEnabled(true);
}else{this._iconObject.setSource(this.getIcon());
this._iconObject.setEnabled(this.getEnabled());
}}};
qx.Proto.getLabelObject=function(){return this._labelObject;
};
qx.Proto.getIconObject=function(){return this._iconObject;
};
qx.Proto._modifyEnabled=function(propValue,propOldValue,propData){this._updateIcon();
if(this._labelObject){this._labelObject.setEnabled(propValue);
}return qx.ui.layout.BoxLayout.prototype._modifyEnabled.call(this,propValue,propOldValue,propData);
};
qx.Proto._modifyIconPosition=function(propValue,propOldValue,propData){switch(propValue){case $[12]:case $[16]:this.setOrientation($[20]);
this.setReverseChildrenOrder(propValue==$[16]);
break;
default:this.setOrientation($[29]);
this.setReverseChildrenOrder(propValue==$[10]);
break;
}return true;
};
qx.Proto._modifyShow=function(propValue,propOldValue,propData){this._handleIcon();
this._handleLabel();
return true;
};
qx.Proto._modifyLabel=function(propValue,propOldValue,propData){if(this._labelObject){this._labelObject.setHtml(propValue);
}this._handleLabel();
return true;
};
qx.Proto._modifyIcon=function(propValue,propOldValue,propData){this._updateIcon();
this._handleIcon();
return true;
};
qx.Proto._modifyDisabledIcon=function(propValue,propOldValue,propData){this._updateIcon();
this._handleIcon();
return true;
};
qx.Proto._modifyIconWidth=function(propValue,propOldValue,propData){this._iconObject.setWidth(propValue);
return true;
};
qx.Proto._modifyIconHeight=function(propValue,propOldValue,propData){this._iconObject.setHeight(propValue);
return true;
};
qx.Proto._iconIsVisible=false;
qx.Proto._labelIsVisible=false;
qx.Proto._handleLabel=function(){switch(this.getShow()){case qx.ui.basic.Atom.SHOW_LABEL:case qx.ui.basic.Atom.SHOW_BOTH:this._labelIsVisible=qx.util.Validation.isValidString(this.getLabel())||this.getLabel() instanceof qx.locale.LocalizedString;
break;
default:this._labelIsVisible=false;
}
if(this._labelIsVisible){this._labelObject?this._labelObject.setDisplay(true):this._createLabel();
}else if(this._labelObject){this._labelObject.setDisplay(false);
}};
qx.Proto._handleIcon=function(){switch(this.getShow()){case qx.ui.basic.Atom.SHOW_ICON:case qx.ui.basic.Atom.SHOW_BOTH:this._iconIsVisible=qx.util.Validation.isValidString(this.getIcon());
break;
default:this._iconIsVisible=false;
}
if(this._iconIsVisible){this._iconObject?this._iconObject.setDisplay(true):this._createIcon();
}else if(this._iconObject){this._iconObject.setDisplay(false);
}};
qx.Proto._cloneRecursive=qx.lang.Function.returnTrue;
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._iconObject){this._iconObject.dispose();
this._iconObject=null;
}
if(this._labelObject){this._labelObject.dispose();
this._labelObject=null;
}return qx.ui.layout.BoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.basic.Label */
qx.OO.defineClass($[1709],qx.ui.basic.Terminator,function(vHtml,vMnemonic){qx.ui.basic.Terminator.call(this);
if(vHtml!=null){this.setHtml(vHtml);
}
if(vMnemonic!=null){this.setMnemonic(vMnemonic);
}this.setAllowStretchX(false);
this.setAllowStretchY(false);
this.auto();
});
qx.Clazz._measureNodes={};
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[109]});
qx.OO.addProperty({name:$[141]});
qx.OO.addProperty({name:$[213],type:$[0],defaultValue:$[11],possibleValues:[$[11],$[74],$[10],$[601]]});
qx.OO.addProperty({name:$[2362],type:$[0],defaultValue:$[48],possibleValues:[$[33],$[48],$[2172],$[1632],$[823],$[1702]]});
qx.OO.addProperty({name:$[1229],type:$[0]});
qx.OO.addProperty({name:$[290],type:$[4],instance:$[216],convert:qx.renderer.font.FontCache,allowMultipleArguments:true});
qx.OO.addProperty({name:$[206],type:$[3],defaultValue:true});
qx.ui.basic.Label.SYMBOL_ELLIPSIS=String.fromCharCode(8230);
qx.ui.basic.Label.SUPPORT_NATIVE_ELLIPSIS=qx.core.Client.getInstance().isMshtml();
qx.ui.basic.Label._fontProperties={"none":[],"default":[$[138],$[90],$[150],$[156],$[161]],"extended":[$[138],$[90],$[150],$[156],$[423],$[161],$[406],$[147],$[329]],"multiline":[$[138],$[90],$[150],$[156],$[161],$[128],$[418]],"extendedmultiline":[$[138],$[90],$[150],$[156],$[423],$[161],$[406],$[147],$[329],$[128],$[723],$[418],$[581]],"all":[$[138],$[90],$[150],$[1157],$[156],$[423],$[1828],$[128],$[581],$[161],$[927],$[1257],$[406],$[2303],$[147],$[723],$[329],$[418]]};
qx.ui.basic.Label.createMeasureNode=function(vId){var vNode=qx.ui.basic.Label._measureNodes[vId];
if(!vNode){vNode=document.createElement($[50]);
var vStyle=vNode.style;
vStyle.width=vStyle.height=$[5];
vStyle.visibility=$[26];
vStyle.position=$[91];
vStyle.zIndex=$[1740];
document.body.appendChild(vNode);
qx.ui.basic.Label._measureNodes[vId]=vNode;
}return vNode;
};
qx.Proto._localized=false;
qx.Proto._htmlContent=$[1];
qx.Proto._htmlMode=false;
qx.Proto._hasMnemonic=false;
qx.Proto._mnemonicHtml=$[1];
qx.Proto._mnemonicTest=null;
qx.Proto._modifyHtml=function(propValue,propOldValue,propData){this._localized=this.getHtml() instanceof qx.locale.LocalizedString;
this._updateHtml();
return true;
};
qx.Proto._updateHtml=function(){if(this._localized){this._htmlContent=this.getHtml().toString();
qx.locale.Manager.getInstance().addEventListener($[212],this._updateHtml,this);
}else{this._htmlContent=this.getHtml()||$[1];
qx.locale.Manager.getInstance().removeEventListener($[212],this._updateHtml,this);
}this._htmlMode=qx.util.Validation.isValidString(this._htmlContent)&&this._htmlContent.match(/<.*>/)?true:false;
if(this._isCreated){this._applyContent();
}};
qx.Proto._modifyTextAlign=function(propValue,propOldValue,propData){this.setStyleProperty($[213],propValue);
return true;
};
qx.Proto._modifyMnemonic=function(propValue,propOldValue,propData){this._hasMnemonic=qx.util.Validation.isValidString(propValue)&&propValue.length==1;
this._mnemonicHtml=this._hasMnemonic?$[1655]+propValue+$[1154]:$[1];
this._mnemonicTest=this._hasMnemonic?new RegExp($[2409]+propValue+$[1732]+propValue+$[1605]+propValue+$[2347]+propValue+$[82],$[1749]):null;
return true;
};
qx.Proto._modifyFont=function(propValue,propOldValue,propData){this._invalidatePreferredInnerDimensions();
if(propValue){propValue._applyWidget(this);
}else if(propOldValue){propOldValue._resetWidget(this);
}return true;
};
qx.Proto._modifyWrap=function(propValue,propOldValue,propData){this.setStyleProperty($[147],propValue?$[122]:$[197]);
return true;
};
qx.Proto._computeObjectNeededDimensions=function(){var vNode=this._copyStyles();
var vHtml=this._htmlContent;
if(this._hasMnemonic&&!this._mnemonicTest.test(vHtml)){vHtml+=this._mnemonicHtml;
}vNode.innerHTML=vHtml;
this._cachedPreferredInnerWidth=vNode.scrollWidth;
this._cachedPreferredInnerHeight=vNode.scrollHeight;
};
qx.Proto._copyStyles=function(){var vProps=this.getFontPropertiesProfile();
var vNode=qx.ui.basic.Label.createMeasureNode(vProps);
var vUseProperties=qx.ui.basic.Label._fontProperties[vProps];
var vUsePropertiesLength=vUseProperties.length-1;
var vProperty=vUseProperties[vUsePropertiesLength--];
var vStyle=vNode.style;
var vTemp;
if(!vProperty){return vNode;
}
do{vStyle[vProperty]=qx.util.Validation.isValid(vTemp=this.getStyleProperty([vProperty]))?vTemp:$[1];
}while(vProperty=vUseProperties[vUsePropertiesLength--]);
return vNode;
};
qx.Proto._computePreferredInnerWidth=function(){this._computeObjectNeededDimensions();
return this._cachedPreferredInnerWidth;
};
qx.Proto._computePreferredInnerHeight=function(){this._computeObjectNeededDimensions();
return this._cachedPreferredInnerHeight;
};
qx.Proto._postApply=function(){var vHtml=this._htmlContent;
var vElement=this._getTargetNode();
var vMnemonicMode=0;
if(qx.util.Validation.isInvalidString(vHtml)){vElement.innerHTML=$[1];
return;
}
if(this._hasMnemonic){vMnemonicMode=this._mnemonicTest.test(vHtml)?1:2;
}if(!this._htmlMode&&!this.getWrap()){switch(this._computedWidthType){case qx.ui.core.Widget.TYPE_PIXEL:case qx.ui.core.Widget.TYPE_PERCENT:case qx.ui.core.Widget.TYPE_FLEX:var vNeeded=this.getPreferredInnerWidth();
var vInner=this.getInnerWidth();
if(vInner<vNeeded){vElement.style.overflow=$[26];
if(qx.ui.basic.Label.SUPPORT_NATIVE_ELLIPSIS){vElement.style.textOverflow=$[340];
vHtml+=this._mnemonicHtml;
}else{var vMeasureNode=this._copyStyles();
var vSplitString=vHtml.split($[44]);
var vSplitLength=vSplitString.length;
var vWordIterator=0;
var vCharaterIterator=0;
var vPost=qx.ui.basic.Label.SYMBOL_ELLIPSIS;
var vUseInnerText=true;
if(vMnemonicMode==2){var vPost=this._mnemonicHtml+vPost;
vUseInnerText=false;
}if(vSplitLength>1){var vSplitTemp=[];
for(vWordIterator=0;vWordIterator<vSplitLength;vWordIterator++){vSplitTemp.push(vSplitString[vWordIterator]);
var vLabelText=vSplitTemp.join($[44])+vPost;
if(vUseInnerText){qx.dom.Element.setTextContent(vMeasureNode,vLabelText);
}else{vMeasureNode.innerHTML=vLabelText;
}
if((vMeasureNode.scrollWidth>vInner)&&(this._computedWidthType!=qx.ui.core.Widget.TYPE_FLEX)){break;
}}vSplitTemp.pop();
vSplitTemp=[vSplitTemp.join($[44])];
vCharaterString=vHtml.replace(vSplitTemp[0],$[1]);
}else{var vSplitTemp=[];
vCharaterString=vHtml;
}var vCharaterLength=vCharaterString.length;
for(var vCharaterIterator=0;vCharaterIterator<vCharaterLength;vCharaterIterator++){vSplitTemp.push(vCharaterString.charAt(vCharaterIterator));
var vLabelText=vSplitTemp.join($[1])+vPost;
if(vUseInnerText){qx.dom.Element.setTextContent(vMeasureNode,vLabelText);
}else{vMeasureNode.innerHTML=vLabelText;
}
if(vMeasureNode.scrollWidth>vInner){break;
}}vSplitTemp.pop();
vSplitTemp.push(vPost);
vHtml=vSplitTemp.join($[1]);
}break;
}else{vHtml+=this._mnemonicHtml;
}default:vElement.style.overflow=$[1];
if(qx.ui.basic.Label.SUPPORT_NATIVE_ELLIPSIS){vElement.style.textOverflow=$[1];
}}}
if(vMnemonicMode==1){this._mnemonicTest.test(vHtml);
vHtml=RegExp.$1+$[1249]+RegExp.$7+$[988]+RegExp.rightContext;
}return this._postApplyHtml(vElement,vHtml,vMnemonicMode);
};
qx.Proto._postApplyHtml=function(vElement,vHtml,vMnemonicMode){if(this._htmlMode||vMnemonicMode>0){vElement.innerHTML=vHtml;
}else{try{qx.dom.Element.setTextContent(vElement,vHtml);
}catch(ex){vElement.innerHTML=vHtml;
}}};




/* ID: qx.dom.Element */
qx.OO.defineClass($[1026]);
qx.Clazz.cleanWhitespace=function(vElement){for(var i=0;i<vElement.childNodes.length;i++){var node=vElement.childNodes[i];
if(node.nodeType==qx.dom.Node.TEXT&&!/\S/.test(node.nodeValue)){vElement.removeChild(node);
}}};
qx.Clazz.isEmpty=function(vElement){return vElement.innerHTML.match(/^\s*$/);
};
qx.Clazz.getTextContent=function(element){var text=$[1];
var childNodes=element.childNodes;
for(var i=0;i<childNodes.length;i++){var node=childNodes[i];
if(node.nodeType==qx.dom.Node.TEXT||node.nodeType==qx.dom.Node.CDATA_SECTION){text+=node.nodeValue;
}}return text;
};
qx.Clazz.setTextContent=function(vElement,sValue){};
if(qx.core.Client.getInstance().supportsTextContent()){qx.Clazz.setTextContent=function(vElement,sValue){vElement.textContent=sValue;
};
}else if(qx.core.Client.getInstance().supportsInnerText()){qx.Clazz.setTextContent=function(vElement,sValue){vElement.innerText=sValue;
};
}else{qx.Clazz.setTextContent=function(vElement,sValue){vElement.innerHTML=qx.html.String.escape(sValue);
};
}



/* ID: qx.ui.basic.Image */
qx.OO.defineClass($[1100],qx.ui.basic.Terminator,function(vSource,vWidth,vHeight){qx.ui.basic.Terminator.call(this);
this.setHtmlProperty($[1208],$[1]);
this.setHtmlProperty($[170],$[1]);
this.setSource(vSource||$[59]);
this.setWidth(vWidth!==undefined?vWidth:$[5]);
this.setHeight(vHeight!==undefined?vHeight:$[5]);
this.setSelectable(false);
});
qx.OO.addProperty({name:$[484],type:$[0]});
qx.OO.addProperty({name:$[1739],type:$[4]});
qx.OO.addProperty({name:$[1049],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1722],type:$[3],defaultValue:false});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[278]});
qx.Proto._onload=function(){this.setLoaded(true);
};
qx.Proto._onerror=function(){this.debug("Could not load: "+this.getSource());
this.setLoaded(false);
if(this.hasEventListeners($[106])){this.dispatchEvent(new qx.event.type.Event($[106]),true);
}};
qx.Proto._beforeAppear=function(){var vSource=this.getSource();
if(qx.util.Validation.isValidString(vSource)){qx.manager.object.ImageManager.getInstance()._sources[vSource]++;
}return qx.ui.basic.Terminator.prototype._beforeAppear.call(this);
};
qx.Proto._beforeDisappear=function(){var vSource=this.getSource();
if(qx.util.Validation.isValidString(vSource)){if(qx.manager.object.ImageManager.getInstance()._sources[vSource]<=1){delete qx.manager.object.ImageManager.getInstance()._sources[vSource];
}else{qx.manager.object.ImageManager.getInstance()._sources[vSource]--;
}}return qx.ui.basic.Terminator.prototype._beforeDisappear.call(this);
};
qx.Proto._modifySource=function(propValue,propOldValue,propData){if(propValue&&typeof qx.manager.object.ImageManager.getInstance()._sources[propValue]===$[41]){qx.manager.object.ImageManager.getInstance()._sources[propValue]=0;
}
if(propOldValue){if(qx.manager.object.ImageManager.getInstance()._sources[propOldValue]<=1){delete qx.manager.object.ImageManager.getInstance()._sources[propOldValue];
}else{qx.manager.object.ImageManager.getInstance()._sources[propOldValue]--;
}}
if(this.isCreated()){if(propValue){this.setPreloader(qx.manager.object.ImagePreloaderManager.getInstance().create(qx.manager.object.AliasManager.getInstance().resolvePath(propValue)));
}else if(propOldValue){this._resetContent();
this.setPreloader(null);
}}return true;
};
qx.Proto._modifyPreloader=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.removeEventListener($[84],this._onload,this);
propOldValue.removeEventListener($[106],this._onerror,this);
}
if(propValue){qx.manager.object.ImageManager.getInstance().add(this);
this.forceLoaded(false);
if(propValue.isErroneous()){this._onerror();
}else if(propValue.isLoaded()){this.setLoaded(true);
}else{propValue.addEventListener($[84],this._onload,this);
propValue.addEventListener($[106],this._onerror,this);
}}else{qx.manager.object.ImageManager.getInstance().remove(this);
this.setLoaded(false);
}return true;
};
qx.Proto._modifyLoaded=function(propValue,propOldValue,propData){if(propValue&&this.isCreated()){this._applyContent();
}else if(!propValue){this._invalidatePreferredInnerWidth();
this._invalidatePreferredInnerHeight();
}return true;
};
qx.Proto._modifyElement=function(propValue,propOldValue,propData){if(propValue){if(!this._image){try{if(qx.core.Client.getInstance().isWebkit()){this._image=document.createElement($[378]);
}else{this._image=new Image;
}this._image.style.border=$[1575];
this._image.style.verticalAlign=$[12];
}catch(ex){this.error("Failed while creating image #1",ex);
}
if(!qx.core.Client.getInstance().isMshtml()){this._applyEnabled();
}}propValue.appendChild(this._image);
}qx.ui.basic.Terminator.prototype._modifyElement.call(this,propValue,propOldValue,propData);
if(propValue){try{var vSource=this.getSource();
if(qx.util.Validation.isValidString(vSource)){this.setPreloader(qx.manager.object.ImagePreloaderManager.getInstance().create(qx.manager.object.AliasManager.getInstance().resolvePath(vSource)));
}}catch(ex){this.error("Failed while creating image #2",ex);
}}return true;
};
qx.Proto._postApply=function(){if(!this.getLoaded()){this._updateContent(qx.manager.object.AliasManager.getInstance().resolvePath($[59]));
return;
}this._postApplyDimensions();
this._updateContent();
};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._modifyEnabled=function(propValue,propOldValue,propData){if(this._image){this._applyEnabled();
}return qx.ui.basic.Terminator.prototype._modifyEnabled.call(this,propValue,propOldValue,propData);
};
qx.Proto._updateContent=function(vSource){var i=this._image;
var pl=this.getPreloader();
if(pl.getIsPng()&&this.getEnabled()){i.src=qx.manager.object.AliasManager.getInstance().resolvePath($[59]);
i.style.filter=$[174]+(vSource||pl.getSource())+$[169];
}else{i.src=vSource||pl.getSource();
i.style.filter=this.getEnabled()?$[1]:$[1373];
}};
qx.Proto._resetContent=function(){var i=this._image;
i.src=qx.manager.object.AliasManager.getInstance().resolvePath($[59]);
i.style.filter=$[1];
};
qx.Proto._applyEnabled=qx.Proto._postApply;
}else{qx.Proto._updateContent=function(vSource){this._image.src=vSource||this.getPreloader().getSource();
};
qx.Proto._resetContent=function(){this._image.src=qx.manager.object.AliasManager.getInstance().resolvePath($[59]);
};
qx.Proto._applyEnabled=function(){if(this._image){var o=this.getEnabled()?$[1]:0.3;
var s=this._image.style;
s.opacity=s.KhtmlOpacity=s.MozOpacity=o;
}};
qx.Proto._modifyEnabled=function(propValue,propOldValue,propData){if(this._image){this._applyEnabled();
}return qx.ui.basic.Terminator.prototype._modifyEnabled.call(this,propValue,propOldValue,propData);
};
}qx.Proto._computePreferredInnerWidth=function(){if(this.getLoaded()){return this.getPreloader().getWidth();
}else if(qx.util.Validation.isValidString(this.getSource())){var vPreloader=qx.manager.object.ImagePreloaderManager.getInstance().get(qx.manager.object.AliasManager.getInstance().resolvePath(this.getSource()));
if(vPreloader&&vPreloader.isLoaded()){return vPreloader.getWidth();
}}return 0;
};
qx.Proto._computePreferredInnerHeight=function(){if(this.getLoaded()){return this.getPreloader().getHeight();
}else if(qx.util.Validation.isValidString(this.getSource())){var vPreloader=qx.manager.object.ImagePreloaderManager.getInstance().get(qx.manager.object.AliasManager.getInstance().resolvePath(this.getSource()));
if(vPreloader&&vPreloader.isLoaded()){return vPreloader.getHeight();
}}return 0;
};
qx.Proto._applyContent=function(){qx.ui.basic.Terminator.prototype._applyContent.call(this);
qx.ui.core.Widget.flushGlobalQueues();
};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._postApplyDimensions=function(){try{var vImageStyle=this._image.style;
if(this.getResizeToInner()){vImageStyle.pixelWidth=this.getInnerWidth();
vImageStyle.pixelHeight=this.getInnerHeight();
}else{vImageStyle.pixelWidth=this.getPreferredInnerWidth();
vImageStyle.pixelHeight=this.getPreferredInnerHeight();
}}catch(ex){this.error("postApplyDimensions failed",ex);
}};
}else{qx.Proto._postApplyDimensions=function(){try{var vImageNode=this._image;
if(this.getResizeToInner()){vImageNode.width=this.getInnerWidth();
vImageNode.height=this.getInnerHeight();
}else{vImageNode.width=this.getPreferredInnerWidth();
vImageNode.height=this.getPreferredInnerHeight();
}}catch(ex){this.error("postApplyDimensions failed",ex);
}};
}if(qx.core.Client.getInstance().isMshtml()){qx.Proto._changeInnerWidth=function(vNew,vOld){if(this.getResizeToInner()){this._image.style.pixelWidth=vNew;
}};
qx.Proto._changeInnerHeight=function(vNew,vOld){if(this.getResizeToInner()){this._image.style.pixelHeight=vNew;
}};
}else{qx.Proto._changeInnerWidth=function(vNew,vOld){if(this.getResizeToInner()){this._image.width=vNew;
}};
qx.Proto._changeInnerHeight=function(vNew,vOld){if(this.getResizeToInner()){this._image.height=vNew;
}};
}qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}var vPreloader=this.getPreloader();
if(vPreloader){vPreloader.removeEventListener($[84],this._onload,this);
vPreloader.removeEventListener($[106],this._onerror,this);
this.forcePreloader(null);
}
if(this._image){this._image.style.filter=$[1];
this._image=null;
}qx.manager.object.ImageManager.getInstance().remove(this);
return qx.ui.basic.Terminator.prototype.dispose.call(this);
};




/* ID: qx.ui.form.ListItem */
qx.OO.defineClass($[781],qx.ui.basic.Atom,function(vText,vIcon,vValue){qx.ui.basic.Atom.call(this,vText,vIcon);
if(vValue!=null){this.setValue(vValue);
}this.addEventListener($[46],this._ondblclick);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[2181]});
qx.OO.addProperty({name:$[104]});
qx.Proto.handleStateChange=function(){if(this.hasState($[396])){this.setStyleProperty($[241],$[247]);
this.setStyleProperty($[260],$[247]);
}else{this.removeStyleProperty($[241]);
this.setStyleProperty($[260],$[184]);
}};
qx.Proto._applyStateStyleFocus=function(vStates){};
qx.Proto.matchesString=function(vText){return vText!=$[1]&&this.getLabel().toLowerCase().indexOf(vText.toLowerCase())==0;
};
qx.Proto.matchesStringExact=function(vText){return vText!=$[1]&&this.getLabel().toLowerCase()==String(vText).toLowerCase();
};
qx.Proto.matchesValue=function(vText){return vText!=$[1]&&this.getValue().toLowerCase().indexOf(vText.toLowerCase())==0;
};
qx.Proto.matchesValueExact=function(vText){return vText!=$[1]&&this.getValue().toLowerCase()==String(vText).toLowerCase();
};
qx.Proto._ondblclick=function(e){var vCommand=this.getCommand();
if(vCommand){vCommand.execute();
}};




/* ID: qx.util.Compare */
qx.OO.defineClass($[1529]);
qx.util.Compare.byString=function(a,b){return a==b?0:a>b?1:-1;
};
qx.util.Compare.byStringCaseInsensitive=function(a,b){return qx.util.Compare.byString(a.toLowerCase(),b.toLowerCase());
};
qx.util.Compare.byStringUmlautsShort=function(a,b){return qx.util.Compare.byString(qx.util.Normalization.umlautsShort(a),qx.util.Normalization.umlautsShort(b));
};
qx.util.Compare.byStringUmlautsShortCaseInsensitive=function(a,b){return qx.util.Compare.byString(qx.util.Normalization.umlautsShort(a).toLowerCase(),qx.util.Normalization.umlautsShort(b).toLowerCase());
};
qx.util.Compare.byStringUmlautsLong=function(a,b){return qx.util.Compare.byString(qx.util.Normalization.umlautsLong(a),qx.util.Normalization.umlautsLong(b));
};
qx.util.Compare.byStringUmlautsLongCaseInsensitive=function(a,b){return qx.util.Compare.byString(qx.util.Normalization.umlautsLong(a).toLowerCase(),qx.util.Normalization.umlautsLong(b).toLowerCase());
};
qx.util.Compare.byFloat=function(a,b){return a-b;
};
qx.util.Compare.byInteger=qx.util.Compare.byNumber=qx.util.Compare.byFloat;
qx.util.Compare.byIntegerString=function(a,b){return parseInt(a)-parseInt(b);
};
qx.util.Compare.byFloatString=function(a,b){return parseFloat(a)-parseFloat(b);
};
qx.util.Compare.byNumberString=qx.util.Compare.byFloatString;
qx.util.Compare.byIPv4=function(a,b){var ipa=a.split($[53],4);
var ipb=b.split($[53],4);
for(var i=0;i<3;i++){a=parseInt(ipa[i]);
b=parseInt(ipb[i]);
if(a!=b){return a-b;
}}return parseInt(ipa[3])-parseInt(ipb[3]);
};
qx.util.Compare.byZIndex=function(a,b){return a.getZIndex()-b.getZIndex();
};




/* ID: qx.util.Normalization */
qx.OO.defineClass($[1089]);
qx.util.Normalization._umlautsRegExp=/[\xE4\xF6\xFC\xDF\xC4\xD6\xDC]/g;
qx.util.Normalization._umlautsShortData={"\xC4":$[121],"\xD6":$[625],"\xDC":$[1014],"\xE4":$[242],"\xF6":$[1067],"\xFC":$[2206],"\xDF":$[327]};
qx.util.Normalization._umlautsShort=function(vChar){return qx.util.Normalization._umlautsShortData[vChar];
};
qx.util.Normalization.umlautsShort=function(vString){return vString.replace(qx.util.Normalization._umlautsRegExp,qx.util.Normalization._umlautsShort);
};
qx.util.Normalization._umlautsLongData={"\xC4":$[1549],"\xD6":$[2230],"\xDC":$[1737],"\xE4":$[1466],"\xF6":$[2113],"\xFC":$[1654],"\xDF":$[736]};
qx.util.Normalization._umlautsLong=function(vChar){return qx.util.Normalization._umlautsLongData[vChar];
};
qx.util.Normalization.umlautsLong=function(vString){return vString.replace(qx.util.Normalization._umlautsRegExp,qx.util.Normalization._umlautsLong);
};




/* ID: qx.io.remote.AbstractRemoteTransport */
qx.OO.defineClass($[1694],qx.core.Target,function(){qx.core.Target.call(this);
});
qx.OO.addProperty({name:$[317],type:$[0]});
qx.OO.addProperty({name:$[716],type:$[0]});
qx.OO.addProperty({name:$[511],type:$[3]});
qx.OO.addProperty({name:$[304],type:$[0]});
qx.OO.addProperty({name:$[409],type:$[0]});
qx.OO.addProperty({name:$[295],type:$[0]});
qx.OO.addProperty({name:$[239],type:$[0],possibleValues:[$[158],$[107],$[52],$[61],$[17],$[35],$[22],$[28]],defaultValue:$[158]});
qx.OO.addProperty({name:$[979],type:$[4]});
qx.OO.addProperty({name:$[767],type:$[4]});
qx.OO.addProperty({name:$[714],type:$[0]});
qx.OO.addProperty({name:$[363],type:$[3]});
qx.Proto.send=function(){throw new Error("send is abstract");
};
qx.Proto.abort=function(){if(qx.Settings.getValueOfClass($[30],$[25])){this.warn($[1590]);
}this.setState($[35]);
};
qx.Proto.timeout=function(){if(qx.Settings.getValueOfClass($[30],$[25])){this.warn($[1047]);
}this.setState($[22]);
};
qx.Proto.failed=function(){if(qx.Settings.getValueOfClass($[30],$[25])){this.warn($[2334]);
}this.setState($[28]);
};
qx.Proto.setRequestHeader=function(vLabel,vValue){throw new Error("setRequestHeader is abstract");
};
qx.Proto.getResponseHeader=function(vLabel){throw new Error("getResponseHeader is abstract");
};
qx.Proto.getResponseHeaders=function(){throw new Error("getResponseHeaders is abstract");
};
qx.Proto.getStatusCode=function(){throw new Error("getStatusCode is abstract");
};
qx.Proto.getStatusText=function(){throw new Error("getStatusText is abstract");
};
qx.Proto.getResponseText=function(){throw new Error("getResponseText is abstract");
};
qx.Proto.getResponseXml=function(){throw new Error("getResponseXml is abstract");
};
qx.Proto.getFetchedLength=function(){throw new Error("getFetchedLength is abstract");
};
qx.Proto._modifyState=function(propValue,propOldValue,propData){if(qx.Settings.getValueOfClass($[30],$[25])){this.debug("State: "+propValue);
}
switch(propValue){case $[158]:this.createDispatchEvent($[158]);
break;
case $[107]:this.createDispatchEvent($[107]);
break;
case $[52]:this.createDispatchEvent($[52]);
break;
case $[61]:this.createDispatchEvent($[61]);
break;
case $[17]:this.createDispatchEvent($[17]);
break;
case $[35]:this.createDispatchEvent($[35]);
break;
case $[28]:this.createDispatchEvent($[28]);
break;
case $[22]:this.createDispatchEvent($[22]);
break;
}return true;
};




/* ID: qx.io.remote.Exchange */
qx.OO.defineClass($[30],qx.core.Target,function(vRequest){qx.core.Target.call(this);
this.setRequest(vRequest);
vRequest.setTransport(this);
});
qx.Settings.setDefault($[25],false);
qx.io.remote.Exchange.typesOrder=[$[456],$[438],$[416]];
qx.io.remote.Exchange.typesReady=false;
qx.io.remote.Exchange.typesAvailable={};
qx.io.remote.Exchange.typesSupported={};
qx.io.remote.Exchange.registerType=function(vClass,vId){qx.io.remote.Exchange.typesAvailable[vId]=vClass;
};
qx.io.remote.Exchange.initTypes=function(){if(qx.io.remote.Exchange.typesReady){return;
}
for(var vId in qx.io.remote.Exchange.typesAvailable){var vTransporterImpl=qx.io.remote.Exchange.typesAvailable[vId];
if(vTransporterImpl.isSupported()){qx.io.remote.Exchange.typesSupported[vId]=vTransporterImpl;
}}qx.io.remote.Exchange.typesReady=true;
if(qx.lang.Object.isEmpty(qx.io.remote.Exchange.typesSupported)){throw new Error("No supported transport types were found!");
}};
qx.io.remote.Exchange.canHandle=function(vImpl,vNeeds,vResponseType){if(!qx.lang.Array.contains(vImpl.handles.responseTypes,vResponseType)){return false;
}
for(var vKey in vNeeds){if(!vImpl.handles[vKey]){return false;
}}return true;
};
qx.io.remote.Exchange._nativeMap={0:$[158],1:$[107],2:$[52],3:$[61],4:$[17]};
qx.io.remote.Exchange.wasSuccessful=function(vStatusCode,vReadyState,vIsLocal){if(vIsLocal){switch(vStatusCode){case null:case 0:return true;
case -1:return vReadyState<4;
default:return typeof vStatusCode===$[41];
}}else{switch(vStatusCode){case -1:if(qx.Settings.getValueOfClass($[30],$[25])&&vReadyState>3){qx.log.Logger.getClassLogger(qx.io.remote.Exchange).debug("Failed with statuscode: -1 at readyState "+vReadyState);
}return vReadyState<4;
case 200:case 304:return true;
case 201:case 202:case 203:case 204:case 205:return true;
case 206:if(qx.Settings.getValueOfClass($[30],$[25])&&vReadyState===4){qx.log.Logger.getClassLogger(qx.io.remote.Exchange).debug("Failed with statuscode: 206 (Partial content while being complete!)");
}return vReadyState!==4;
case 300:case 301:case 302:case 303:case 305:case 400:case 401:case 402:case 403:case 404:case 405:case 406:case 407:case 408:case 409:case 410:case 411:case 412:case 413:case 414:case 415:case 500:case 501:case 502:case 503:case 504:case 505:if(qx.Settings.getValueOfClass($[30],$[25])){qx.log.Logger.getClassLogger(qx.io.remote.Exchange).debug("Failed with typical HTTP statuscode: "+vStatusCode);
}return false;
case 12002:case 12029:case 12030:case 12031:case 12152:case 13030:if(qx.Settings.getValueOfClass($[30],$[25])){qx.log.Logger.getClassLogger(qx.io.remote.Exchange).debug("Failed with MSHTML specific HTTP statuscode: "+vStatusCode);
}return false;
default:if(vStatusCode>206&&vStatusCode<300){return true;
}qx.log.Logger.getClassLogger(qx.io.remote.Exchange).debug("Unknown status code: "+vStatusCode+" ("+vReadyState+")");
throw new Error("Unknown status code: "+vStatusCode);
}}};
qx.io.remote.Exchange.statusCodeToString=function(vStatusCode){switch(vStatusCode){case -1:return $[1604];
case 200:return $[2235];
case 304:return $[846];
case 206:return $[888];
case 204:return $[1624];
case 300:return $[1966];
case 301:return $[1280];
case 302:return $[1226];
case 303:return $[1001];
case 305:return $[817];
case 400:return $[2076];
case 401:return $[2143];
case 402:return $[2035];
case 403:return $[1696];
case 404:return $[2129];
case 405:return $[2233];
case 406:return $[1111];
case 407:return $[1716];
case 408:return $[1925];
case 409:return $[1553];
case 410:return $[2137];
case 411:return $[2298];
case 412:return $[2242];
case 413:return $[2350];
case 414:return $[1107];
case 415:return $[2239];
case 500:return $[1422];
case 501:return $[840];
case 502:return $[1021];
case 503:return $[2215];
case 504:return $[2269];
case 505:return $[891];
case 12002:return $[1415];
case 12029:return $[488];
case 12030:return $[488];
case 12031:return $[488];
case 12152:return $[1147];
case 13030:return $[2013];
default:return $[1597];
}};
qx.OO.addProperty({name:$[644],type:$[4],instance:$[748]});
qx.OO.addProperty({name:$[749],type:$[4]});
qx.OO.addProperty({name:$[239],type:$[0],possibleValues:[$[107],$[52],$[61],$[17],$[35],$[22],$[28]],defaultValue:$[107]});
qx.Proto.send=function(){var vRequest=this.getRequest();
if(!vRequest){return this.error("Please attach a request object first");
}qx.io.remote.Exchange.initTypes();
var vUsage=qx.io.remote.Exchange.typesOrder;
var vSupported=qx.io.remote.Exchange.typesSupported;
var vResponseType=vRequest.getResponseType();
var vNeeds={};
if(vRequest.getAsynchronous()){vNeeds.asynchronous=true;
}else{vNeeds.synchronous=true;
}
if(vRequest.getCrossDomain()){vNeeds.crossDomain=true;
}
if(vRequest.getFileUpload()){vNeeds.fileUpload=true;
}for(var field in vRequest.getFormFields()){vNeeds.programaticFormFields=true;
break;
}var vTransportImpl,vTransport;
for(var i=0,l=vUsage.length;i<l;i++){vTransportImpl=vSupported[vUsage[i]];
if(vTransportImpl){if(!qx.io.remote.Exchange.canHandle(vTransportImpl,vNeeds,vResponseType)){continue;
}
try{if(qx.Settings.getValueOfClass($[30],$[25])){this.debug("Using implementation: "+vTransportImpl.classname);
}vTransport=new vTransportImpl;
this.setImplementation(vTransport);
vTransport.setUseBasicHttpAuth(vRequest.getUseBasicHttpAuth());
vTransport.send();
return true;
}catch(ex){return this.error("Request handler throws error",ex);
}}}this.error("There is no transport implementation available to handle this request: "+vRequest);
};
qx.Proto.abort=function(){var vImplementation=this.getImplementation();
if(vImplementation){if(qx.Settings.getValueOfClass($[30],$[25])){this.debug("Abort: implementation "+vImplementation.toHashCode());
}vImplementation.abort();
}else{if(qx.Settings.getValueOfClass($[30],$[25])){this.debug("Abort: forcing state to be aborted");
}this.setState($[35]);
}};
qx.Proto.timeout=function(){var vImplementation=this.getImplementation();
if(vImplementation){this.warn($[2095]+vImplementation.toHashCode());
vImplementation.timeout();
}else{this.warn($[853]);
this.setState($[22]);
}if(this.getRequest()){this.getRequest().setTimeout(0);
}};
qx.Proto._onsending=function(e){this.setState($[52]);
};
qx.Proto._onreceiving=function(e){this.setState($[61]);
};
qx.Proto._oncompleted=function(e){this.setState($[17]);
};
qx.Proto._onabort=function(e){this.setState($[35]);
};
qx.Proto._onfailed=function(e){this.setState($[28]);
};
qx.Proto._ontimeout=function(e){this.setState($[22]);
};
qx.Proto._modifyImplementation=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.removeEventListener($[52],this._onsending,this);
propOldValue.removeEventListener($[61],this._onreceiving,this);
propOldValue.removeEventListener($[17],this._oncompleted,this);
propOldValue.removeEventListener($[35],this._onabort,this);
propOldValue.removeEventListener($[22],this._ontimeout,this);
propOldValue.removeEventListener($[28],this._onfailed,this);
}
if(propValue){var vRequest=this.getRequest();
propValue.setUrl(vRequest.getUrl());
propValue.setMethod(vRequest.getMethod());
propValue.setAsynchronous(vRequest.getAsynchronous());
propValue.setUsername(vRequest.getUsername());
propValue.setPassword(vRequest.getPassword());
propValue.setParameters(vRequest.getParameters());
propValue.setRequestHeaders(vRequest.getRequestHeaders());
propValue.setData(vRequest.getData());
propValue.setResponseType(vRequest.getResponseType());
propValue.addEventListener($[52],this._onsending,this);
propValue.addEventListener($[61],this._onreceiving,this);
propValue.addEventListener($[17],this._oncompleted,this);
propValue.addEventListener($[35],this._onabort,this);
propValue.addEventListener($[22],this._ontimeout,this);
propValue.addEventListener($[28],this._onfailed,this);
}return true;
};
qx.Proto._modifyState=function(propValue,propOldValue,propData){var vRequest=this.getRequest();
if(qx.Settings.getValueOfClass($[30],$[25])){this.debug("State: "+propOldValue+" => "+propValue);
}
switch(propValue){case $[52]:this.createDispatchEvent($[52]);
break;
case $[61]:this.createDispatchEvent($[61]);
break;
case $[17]:case $[35]:case $[22]:case $[28]:var vImpl=this.getImplementation();
if(!vImpl){break;
}var vResponse=new qx.io.remote.Response;
if(propValue==$[17]){var vContent=vImpl.getResponseContent();
vResponse.setContent(vContent);
if(vContent===null){if(qx.Settings.getValueOfClass($[30],$[25])){this.debug("Altered State: "+propValue+" => failed");
}propValue=$[28];
}}vResponse.setStatusCode(vImpl.getStatusCode());
vResponse.setResponseHeaders(vImpl.getResponseHeaders());
var vEventType;
switch(propValue){case $[17]:vEventType=$[17];
break;
case $[35]:vEventType=$[35];
break;
case $[22]:vEventType=$[22];
break;
case $[28]:vEventType=$[28];
break;
}this.setImplementation(null);
vImpl.dispose();
this.createDispatchDataEvent(vEventType,vResponse);
break;
}return true;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}var vImpl=this.getImplementation();
if(vImpl){this.setImplementation(null);
vImpl.dispose();
}this.setRequest(null);
return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.util.Mime */
qx.OO.defineClass($[1879],{JAVASCRIPT:"text/javascript",JSON:"application/json",XML:"application/xml",TEXT:"text/plain",HTML:"text/html"});




/* ID: qx.io.remote.XmlHttpTransport */
qx.OO.defineClass($[456],qx.io.remote.AbstractRemoteTransport,function(){qx.io.remote.AbstractRemoteTransport.call(this);
this._req=qx.io.remote.XmlHttpTransport.createRequestObject();
var o=this;
this._req.onreadystatechange=function(e){return o._onreadystatechange(e);
};
});
qx.io.remote.Exchange.registerType(qx.io.remote.XmlHttpTransport,$[456]);
qx.io.remote.XmlHttpTransport.handles={synchronous:true,asynchronous:true,crossDomain:false,fileUpload:false,programaticFormFields:false,responseTypes:[qx.util.Mime.TEXT,qx.util.Mime.JAVASCRIPT,qx.util.Mime.JSON,qx.util.Mime.XML,qx.util.Mime.HTML]};
qx.io.remote.XmlHttpTransport.requestObjects=[];
qx.io.remote.XmlHttpTransport.requestObjectCount=0;
qx.io.remote.XmlHttpTransport.isSupported=function(){return qx.net.HttpRequest.create()!=null?true:false;
};
qx.io.remote.XmlHttpTransport.createRequestObject=function(){return qx.net.HttpRequest.create();
};
qx.Proto._localRequest=false;
qx.Proto._lastReadyState=0;
qx.Proto.getRequest=function(){return this._req;
};
qx.Proto.send=function(){this._lastReadyState=0;
var vRequest=this.getRequest();
var vMethod=this.getMethod();
var vAsynchronous=this.getAsynchronous();
var vUrl=this.getUrl();
var vLocalRequest=(qx.core.Client.getInstance().getRunsLocally()&&!(/^http(s){0,1}\:/.test(vUrl)));
this._localRequest=vLocalRequest;
var vParameters=this.getParameters();
var vParametersList=[];
for(var vId in vParameters){var value=vParameters[vId];
if(value instanceof Array){for(var i=0;i<value.length;i++){vParametersList.push(encodeURIComponent(vId)+$[15]+encodeURIComponent(value[i]));
}}else{vParametersList.push(encodeURIComponent(vId)+$[15]+encodeURIComponent(value));
}}
if(vParametersList.length>0){vUrl+=(vUrl.indexOf($[166])>=0?$[89]:$[166])+vParametersList.join($[89]);
}var encode64=function(input){var keyStr=$[1363];
var output=$[1];
var chr1,chr2,chr3;
var enc1,enc2,enc3,enc4;
var i=0;
do{chr1=input.charCodeAt(i++);
chr2=input.charCodeAt(i++);
chr3=input.charCodeAt(i++);
enc1=chr1>>2;
enc2=((chr1&3)<<4)|(chr2>>4);
enc3=((chr2&15)<<2)|(chr3>>6);
enc4=chr3&63;
if(isNaN(chr2)){enc3=enc4=64;
}else if(isNaN(chr3)){enc4=64;
}output+=keyStr.charAt(enc1)+keyStr.charAt(enc2)+keyStr.charAt(enc3)+keyStr.charAt(enc4);
}while(i<input.length);
return output;
};
if(this.getUsername()){if(this.getUseBasicHttpAuth()){vRequest.open(vMethod,vUrl,vAsynchronous);
vRequest.setRequestHeader($[1283],$[1682]+encode64(this.getUsername()+$[1714]+this.getPassword()));
}else{vRequest.open(vMethod,vUrl,vAsynchronous,this.getUsername(),this.getPassword());
}}else{vRequest.open(vMethod,vUrl,vAsynchronous);
}vRequest.setRequestHeader($[1705],window.location.href);
var vRequestHeaders=this.getRequestHeaders();
for(var vId in vRequestHeaders){vRequest.setRequestHeader(vId,vRequestHeaders[vId]);
}try{vRequest.send(this.getData());
}catch(ex){if(vLocalRequest){this.failedLocally();
}else{this.error("Failed to send data: "+ex,"send");
this.failed();
}return;
}if(!vAsynchronous){this._onreadystatechange();
}};
qx.Proto.failedLocally=function(){if(this.getState()===$[28]){return;
}this.warn($[808]+this.getUrl());
this.failed();
};
qx.Proto._onreadystatechange=function(e){switch(this.getState()){case $[17]:case $[35]:case $[28]:case $[22]:if(qx.Settings.getValueOfClass($[30],$[25])){this.warn($[381]);
}return;
}var vReadyState=this.getReadyState();
if(vReadyState==4){if(!qx.io.remote.Exchange.wasSuccessful(this.getStatusCode(),vReadyState,this._localRequest)){return this.failed();
}}while(this._lastReadyState<vReadyState){this.setState(qx.io.remote.Exchange._nativeMap[++this._lastReadyState]);
}};
qx.Proto.getReadyState=function(){var vReadyState=null;
try{vReadyState=this._req.readyState;
}catch(ex){}return vReadyState;
};
qx.Proto.setRequestHeader=function(vLabel,vValue){this._req.setRequestHeader(vLabel,vValue);
};
qx.Proto.getResponseHeader=function(vLabel){var vResponseHeader=null;
try{this.getRequest().getResponseHeader(vLabel)||null;
}catch(ex){}return vResponseHeader;
};
qx.Proto.getStringResponseHeaders=function(){var vSourceHeader=null;
try{var vLoadHeader=this._req.getAllResponseHeaders();
if(vLoadHeader){vSourceHeader=vLoadHeader;
}}catch(ex){}return vSourceHeader;
};
qx.Proto.getResponseHeaders=function(){var vSourceHeader=this.getStringResponseHeaders();
var vHeader={};
if(vSourceHeader){var vValues=vSourceHeader.split(/[\r\n]+/g);
for(var i=0,l=vValues.length;i<l;i++){var vPair=vValues[i].match(/^([^:]+)\s*:\s*(.+)$/i);
if(vPair){vHeader[vPair[1]]=vPair[2];
}}}return vHeader;
};
qx.Proto.getStatusCode=function(){var vStatusCode=-1;
try{vStatusCode=this.getRequest().status;
}catch(ex){}return vStatusCode;
};
qx.Proto.getStatusText=function(){var vStatusText=$[1];
try{vStatusText=this.getRequest().statusText;
}catch(ex){}return vStatusText;
};
qx.Proto.getResponseText=function(){var vResponseText=null;
var vStatus=this.getStatusCode();
var vReadyState=this.getReadyState();
if(qx.io.remote.Exchange.wasSuccessful(vStatus,vReadyState,this._localRequest)){try{vResponseText=this.getRequest().responseText;
}catch(ex){}}return vResponseText;
};
qx.Proto.getResponseXml=function(){var vResponseXML=null;
var vStatus=this.getStatusCode();
var vReadyState=this.getReadyState();
if(qx.io.remote.Exchange.wasSuccessful(vStatus,vReadyState,this._localRequest)){try{vResponseXML=this.getRequest().responseXML;
}catch(ex){}}if(typeof vResponseXML==$[4]&&vResponseXML!=null){if(!vResponseXML.documentElement){var s=String(this.getRequest().responseText).replace(/<\?xml[^\?]*\?>/,$[1]);
vResponseXML.loadXML(s);
}if(!vResponseXML.documentElement){throw new Error("Missing Document Element!");
}
if(vResponseXML.documentElement.tagName==$[1953]){throw new Error("XML-File is not well-formed!");
}}else{throw new Error("Response was not a valid xml document ["+this.getRequest().responseText+"]");
}return vResponseXML;
};
qx.Proto.getFetchedLength=function(){var vText=this.getResponseText();
return typeof vText==$[0]?vText.length:0;
};
qx.Proto.getResponseContent=function(){if(this.getState()!==$[17]){if(qx.Settings.getValueOfClass($[30],$[25])){this.warn($[395]);
}return null;
}
if(qx.Settings.getValueOfClass($[30],$[25])){this.debug("Returning content for responseType: "+this.getResponseType());
}var vText=this.getResponseText();
switch(this.getResponseType()){case qx.util.Mime.TEXT:case qx.util.Mime.HTML:return vText;
case qx.util.Mime.JSON:try{return vText&&vText.length>0?qx.io.Json.parseQx(vText):null;
}catch(ex){this.error("Could not execute json: ["+vText+"]",ex);
return $[1790]+vText+$[2142];
}case qx.util.Mime.JAVASCRIPT:try{return vText&&vText.length>0?window.eval(vText):null;
}catch(ex){return this.error("Could not execute javascript: ["+vText+"]",ex);
}case qx.util.Mime.XML:return this.getResponseXml();
default:this.warn($[362]+this.getResponseType()+$[251]);
return null;
}};
qx.Proto._modifyState=function(propValue,propOldValue,propData){if(qx.Settings.getValueOfClass($[30],$[25])){this.debug("State: "+propValue);
}
switch(propValue){case $[158]:this.createDispatchEvent($[158]);
break;
case $[107]:this.createDispatchEvent($[107]);
break;
case $[52]:this.createDispatchEvent($[52]);
break;
case $[61]:this.createDispatchEvent($[61]);
break;
case $[17]:this.createDispatchEvent($[17]);
break;
case $[28]:this.createDispatchEvent($[28]);
break;
case $[35]:this.getRequest().abort();
this.createDispatchEvent($[35]);
break;
case $[22]:this.getRequest().abort();
this.createDispatchEvent($[22]);
break;
}return true;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}var vRequest=this.getRequest();
if(vRequest){if(!qx.core.Client.getInstance().isMshtml()){vRequest.onreadystatechange=null;
}switch(vRequest.readyState){case 1:case 2:case 3:vRequest.abort();
}this._req=null;
}return qx.io.remote.AbstractRemoteTransport.prototype.dispose.call(this);
};




/* ID: qx.net.HttpRequest */
qx.OO.defineClass($[2346]);
qx.Clazz.create=function(){return null;
};
if(window.XMLHttpRequest&&!(location.protocol===$[653]&&qx.core.Client.getInstance().isMshtml())){qx.Clazz.create=function(){return new XMLHttpRequest;
};
}else if(window.ActiveXObject){qx.Clazz.create=function(){var vServers=[$[1777],$[1986],$[2258],$[2159],$[2027]];
var vObject;
var vServer;
for(var i=0,l=vServers.length;i<l;i++){vServer=vServers[i];
try{vObject=new ActiveXObject(vServer);
break;
}catch(ex){vObject=null;
}}return vObject;
};
}



/* ID: qx.io.Json */
qx.OO.defineClass($[771]);
qx.Clazz.stringify=function(v,beautify){};
qx.Clazz.parse=function(text){};
qx.Settings.setDefault($[2223],true);
qx.Settings.setDefault($[25],false);
qx.io.Json=function(){var m={'\b':'\\b','\t':'\\t','\n':'\\n','\f':'\\f','\r':'\\r','"':'\\"','\\':'\\\\'},s={'boolean':function(x){return String(x);
},number:function(x){return isFinite(x)?String(x):'null';
},string:function(x){if(/["\\\x00-\x1f]/.test(x)){x=x.replace(/([\x00-\x1f\\"])/g,function(a,b){var c=m[b];
if(c){return c;
}c=b.charCodeAt();
return '\\u00'+Math.floor(c/16).toString(16)+(c%16).toString(16);
});
}return '"'+x+'"';
},object:function(x){if(x){var a=[],b,f,i,l,v;
if(x instanceof Array){var beautify=qx.io.Json._beautify;
a[0]='[';
if(beautify){qx.io.Json._indent+=qx.io.Json.BEAUTIFYING_INDENT;
a.push(qx.io.Json._indent);
}l=x.length;
for(i=0;i<l;i+=1){v=x[i];
f=s[typeof v];
if(f){v=f(v);
if(typeof v=='string'){if(b){a[a.length]=',';
if(beautify){a.push(qx.io.Json._indent);
}}a[a.length]=v;
b=true;
}}}
if(beautify){qx.io.Json._indent=qx.io.Json._indent.substring(0,qx.io.Json._indent.length-qx.io.Json.BEAUTIFYING_INDENT.length);
a.push(qx.io.Json._indent);
}a[a.length]=']';
}else if(x instanceof Date){var dateParams=x.getUTCFullYear()+","+x.getUTCMonth()+","+x.getUTCDate()+","+x.getUTCHours()+","+x.getUTCMinutes()+","+x.getUTCSeconds()+","+x.getUTCMilliseconds();
return "new Date(Date.UTC("+dateParams+"))";
}else if(x instanceof Object){var beautify=qx.io.Json._beautify;
a[0]='{';
if(beautify){qx.io.Json._indent+=qx.io.Json.BEAUTIFYING_INDENT;
a.push(qx.io.Json._indent);
}
for(i in x){v=x[i];
f=s[typeof v];
if(f){v=f(v);
if(typeof v=='string'){if(b){a[a.length]=',';
if(beautify){a.push(qx.io.Json._indent);
}}a.push(s.string(i),':',v);
b=true;
}}}
if(beautify){qx.io.Json._indent=qx.io.Json._indent.substring(0,qx.io.Json._indent.length-qx.io.Json.BEAUTIFYING_INDENT.length);
a.push(qx.io.Json._indent);
}a[a.length]='}';
}else{return;
}return a.join('');
}return 'null';
},undefined:function(x){if(qx.Settings.getValueOfClass("qx.io.Json","encodeUndefined"))return 'null';
}};
return {copyright:'(c)2005 JSON.org',license:'http://www.JSON.org/license.html',stringify:function(v,beautify){this._beautify=beautify;
this._indent=this.BEAUTIFYING_LINE_END;
var f=s[typeof v];
var ret=null;
if(f){v=f(v);
if(typeof v=='string'){ret=v;
}}if(qx.Settings.getValueOfClass("qx.io.Json","enableDebug")){var logger=qx.log.Logger.getClassLogger(qx.core.Object);
logger.debug("JSON request: "+ret);
}return ret;
},parse:function(text){try{return !(/[^,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]/.test(text.replace(/"(\\.|[^"\\])*"/g,'')))&&eval('('+text+')');
}catch(e){return false;
}}};
}();
qx.io.Json.parseQx=function(text){if(qx.Settings.getValueOfClass($[771],$[25])){var logger=qx.log.Logger.getClassLogger(qx.core.Object);
logger.debug("JSON response: "+text);
}var obj=(text&&text.length>0)?eval($[724]+text+$[1930]):null;
return obj;
};
qx.io.Json.BEAUTIFYING_INDENT="  ";
qx.io.Json.BEAUTIFYING_LINE_END="\n";




/* ID: qx.io.remote.IframeTransport */
qx.OO.defineClass($[438],qx.io.remote.AbstractRemoteTransport,function(){qx.io.remote.AbstractRemoteTransport.call(this);
var vUniqueId=(new Date).valueOf();
var vFrameName=$[1812]+vUniqueId;
var vFormName=$[1652]+vUniqueId;
if(qx.core.Client.getInstance().isMshtml()){this._frame=document.createElement($[560]+vFrameName+$[770]);
}else{this._frame=document.createElement($[232]);
}this._frame.src=$[810];
this._frame.id=this._frame.name=vFrameName;
this._frame.onload=function(e){return o._onload(e);
};
this._frame.style.display=$[33];
document.body.appendChild(this._frame);
this._form=document.createElement($[935]);
this._form.target=vFrameName;
this._form.id=this._form.name=vFormName;
this._form.style.display=$[33];
document.body.appendChild(this._form);
this._data=document.createElement($[288]);
this._data.id=this._data.name=$[1939];
this._form.appendChild(this._data);
var o=this;
this._frame.onreadystatechange=function(e){return o._onreadystatechange(e);
};
});
qx.Proto._lastReadyState=0;
qx.io.remote.Exchange.registerType(qx.io.remote.IframeTransport,$[438]);
qx.io.remote.IframeTransport.handles={synchronous:false,asynchronous:true,crossDomain:false,fileUpload:true,programaticFormFields:true,responseTypes:[qx.util.Mime.TEXT,qx.util.Mime.JAVASCRIPT,qx.util.Mime.JSON,qx.util.Mime.XML,qx.util.Mime.HTML]};
qx.io.remote.IframeTransport.isSupported=function(){return true;
};
qx.Proto.send=function(){var vMethod=this.getMethod();
var vUrl=this.getUrl();
var vParameters=this.getParameters();
var vParametersList=[];
for(var vId in vParameters){var value=vParameters[vId];
if(value instanceof Array){for(var i=0;i<value.length;i++){vParametersList.push(encodeURIComponent(vId)+$[15]+encodeURIComponent(value[i]));
}}else{vParametersList.push(encodeURIComponent(vId)+$[15]+encodeURIComponent(value));
}}
if(vParametersList.length>0){vUrl+=(vUrl.indexOf($[166])>=0?$[89]:$[166])+vParametersList.join($[89]);
}var vFormFields=this.getFormFields();
for(var vId in vFormFields){var vField=document.createElement($[288]);
vField.name=vId;
vField.appendChild(document.createTextNode(vFormFields[vId]));
this._form.appendChild(vField);
}this._form.action=vUrl;
this._form.method=vMethod;
this._data.appendChild(document.createTextNode(this.getData()));
this._form.submit();
};
qx.io.remote.IframeTransport._numericMap={"uninitialized":1,"loading":2,"loaded":2,"interactive":3,"complete":4};
qx.Proto._onload=function(e){if(this._form.src){return;
}this._switchReadyState(qx.io.remote.IframeTransport._numericMap.complete);
};
qx.Proto._onreadystatechange=function(e){this._switchReadyState(qx.io.remote.IframeTransport._numericMap[this._frame.readyState]);
};
qx.Proto._switchReadyState=function(vReadyState){switch(this.getState()){case $[17]:case $[35]:case $[28]:case $[22]:this.warn($[381]);
return;
}while(this._lastReadyState<vReadyState){this.setState(qx.io.remote.Exchange._nativeMap[++this._lastReadyState]);
}};
qx.Proto.setRequestHeader=function(vLabel,vValue){};
qx.Proto.getResponseHeader=function(vLabel){return null;
};
qx.Proto.getResponseHeaders=function(){return {};
};
qx.Proto.getStatusCode=function(){return 200;
};
qx.Proto.getStatusText=function(){return $[1];
};
qx.Proto.getIframeWindow=function(){return qx.html.Iframe.getWindow(this._frame);
};
qx.Proto.getIframeDocument=function(){return qx.html.Iframe.getDocument(this._frame);
};
qx.Proto.getIframeBody=function(){return qx.html.Iframe.getBody(this._frame);
};
qx.Proto.getIframeTextContent=function(){var vBody=this.getIframeBody();
if(!vBody){return null;
}if(vBody.firstChild.tagName.toLowerCase()==$[875]){return vBody.firstChild.innerHTML;
}else{return vBody.innerHTML;
}};
qx.Proto.getIframeHtmlContent=function(){var vBody=this.getIframeBody();
return vBody?vBody.innerHTML:null;
};
qx.Proto.getFetchedLength=function(){return 0;
};
qx.Proto.getResponseContent=function(){if(this.getState()!==$[17]){if(qx.Settings.getValueOfClass($[30],$[25])){this.warn($[395]);
}return null;
}
if(qx.Settings.getValueOfClass($[30],$[25])){this.debug("Returning content for responseType: "+this.getResponseType());
}var vText=this.getIframeTextContent();
switch(this.getResponseType()){case qx.util.Mime.TEXT:return vText;
break;
case qx.util.Mime.HTML:return this.getIframeHtmlContent();
break;
case qx.util.Mime.JSON:try{return vText&&vText.length>0?qx.io.Json.parseQx(vText):null;
}catch(ex){return this.error("Could not execute json: ("+vText+")",ex);
}case qx.util.Mime.JAVASCRIPT:try{return vText&&vText.length>0?window.eval(vText):null;
}catch(ex){return this.error("Could not execute javascript: ("+vText+")",ex);
}case qx.util.Mime.XML:return this.getIframeDocument();
default:this.warn($[362]+this.getResponseType()+$[251]);
return null;
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._frame){this._frame.onload=null;
this._frame.onreadystatechange=null;
if(qx.core.Client.getInstance().isGecko()){this._frame.src=qx.manager.object.AliasManager.getInstance().resolvePath($[59]);
}document.body.removeChild(this._frame);
this._frame=null;
}
if(this._form){document.body.removeChild(this._form);
this._form=null;
}return qx.io.remote.AbstractRemoteTransport.prototype.dispose.call(this);
};




/* ID: qx.html.Iframe */
qx.OO.defineClass($[1977]);
qx.html.Iframe.getWindow=function(vIframe){};
qx.html.Iframe.getDocument=function(vIframe){};
if(qx.core.Client.getInstance().isMshtml()){qx.html.Iframe.getWindow=function(vIframe){try{return vIframe.contentWindow;
}catch(ex){return null;
}};
qx.html.Iframe.getDocument=function(vIframe){try{var vWin=qx.html.Iframe.getWindow(vIframe);
return vWin?vWin.document:null;
}catch(ex){return null;
}};
}else{qx.html.Iframe.getWindow=function(vIframe){try{var vDoc=qx.html.Iframe.getDocument(vIframe);
return vDoc?vDoc.defaultView:null;
}catch(ex){return null;
}};
qx.html.Iframe.getDocument=function(vIframe){try{return vIframe.contentDocument;
}catch(ex){return null;
}};
}qx.html.Iframe.getBody=function(vIframe){var vDoc=qx.html.Iframe.getDocument(vIframe);
return vDoc?vDoc.getElementsByTagName($[111])[0]:null;
};




/* ID: qx.io.remote.ScriptTransport */
qx.OO.defineClass($[416],qx.io.remote.AbstractRemoteTransport,function(){qx.io.remote.AbstractRemoteTransport.call(this);
var vUniqueId=++qx.io.remote.ScriptTransport._uniqueId;
if(vUniqueId>=2000000000){qx.io.remote.ScriptTransport._uniqueId=vUniqueId=1;
}this._element=null;
this._uniqueId=vUniqueId;
});
qx.Clazz._uniqueId=0;
qx.Clazz._instanceRegistry={};
qx.Clazz.ScriptTransport_PREFIX=$[2119];
qx.Clazz.ScriptTransport_ID_PARAM=qx.Clazz.ScriptTransport_PREFIX+$[268];
qx.Clazz.ScriptTransport_DATA_PARAM=qx.Clazz.ScriptTransport_PREFIX+$[304];
qx.Proto._lastReadyState=0;
qx.io.remote.Exchange.registerType(qx.io.remote.ScriptTransport,$[416]);
qx.io.remote.ScriptTransport.handles={synchronous:false,asynchronous:true,crossDomain:true,fileUpload:false,programaticFormFields:false,responseTypes:[qx.util.Mime.TEXT,qx.util.Mime.JAVASCRIPT,qx.util.Mime.JSON]};
qx.io.remote.ScriptTransport.isSupported=function(){return true;
};
qx.Proto.send=function(){var vUrl=this.getUrl();
vUrl+=(vUrl.indexOf($[166])>=0?$[89]:$[166])+qx.io.remote.ScriptTransport.ScriptTransport_ID_PARAM+$[15]+this._uniqueId;
var vParameters=this.getParameters();
var vParametersList=[];
for(var vId in vParameters){if(vId.indexOf(qx.io.remote.ScriptTransport.ScriptTransport_PREFIX)==0){this.error("Illegal parameter name. The following prefix is used internally by qooxdoo): "+qx.io.remote.ScriptTransport.ScriptTransport_PREFIX);
}var value=vParameters[vId];
if(value instanceof Array){for(var i=0;i<value.length;i++){vParametersList.push(encodeURIComponent(vId)+$[15]+encodeURIComponent(value[i]));
}}else{vParametersList.push(encodeURIComponent(vId)+$[15]+encodeURIComponent(value));
}}
if(vParametersList.length>0){vUrl+=$[89]+vParametersList.join($[89]);
}vData=this.getData();
if(vData!=null){vUrl+=$[89]+qx.io.remote.ScriptTransport.ScriptTransport_DATA_PARAM+$[15]+encodeURIComponent(vData);
}qx.io.remote.ScriptTransport._instanceRegistry[this._uniqueId]=this;
this._element=document.createElement($[525]);
this._element.charset=$[2008];
this._element.src=vUrl;
document.body.appendChild(this._element);
};
qx.io.remote.ScriptTransport._numericMap={"uninitialized":1,"loading":2,"loaded":2,"interactive":3,"complete":4};
qx.Proto._switchReadyState=function(vReadyState){switch(this.getState()){case $[17]:case $[35]:case $[28]:case $[22]:this.warn($[381]);
return;
}while(this._lastReadyState<vReadyState){this.setState(qx.io.remote.Exchange._nativeMap[++this._lastReadyState]);
}};
qx.Clazz._requestFinished=function(id,content){var vInstance=qx.io.remote.ScriptTransport._instanceRegistry[id];
if(vInstance==null){if(qx.Settings.getValueOfClass($[30],$[25])){this.warn($[2348]);
}}else{vInstance._responseContent=content;
vInstance._switchReadyState(qx.io.remote.ScriptTransport._numericMap.complete);
}};
qx.Proto.setRequestHeader=function(vLabel,vValue){};
qx.Proto.getResponseHeader=function(vLabel){return null;
};
qx.Proto.getResponseHeaders=function(){return {};
};
qx.Proto.getStatusCode=function(){return 200;
};
qx.Proto.getStatusText=function(){return $[1];
};
qx.Proto.getFetchedLength=function(){return 0;
};
qx.Proto.getResponseContent=function(){if(this.getState()!==$[17]){if(qx.Settings.getValueOfClass($[30],$[25])){this.warn($[395]);
}return null;
}
if(qx.Settings.getValueOfClass($[30],$[25])){this.debug("Returning content for responseType: "+this.getResponseType());
}
switch(this.getResponseType()){case qx.util.Mime.TEXT:case qx.util.Mime.JSON:case qx.util.Mime.JAVASCRIPT:return this._responseContent;
default:this.warn($[362]+this.getResponseType()+$[251]);
return null;
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._element!=null){delete qx.io.remote.ScriptTransport._instanceRegistry[this._uniqueId];
document.body.removeChild(this._element);
this._element=null;
}return qx.io.remote.AbstractRemoteTransport.prototype.dispose.call(this);
};




/* ID: qx.net.Http */
qx.OO.defineClass($[1313],{METHOD_GET:"GET",METHOD_POST:"POST",METHOD_PUT:"PUT",METHOD_HEAD:"HEAD",METHOD_DELETE:"DELETE"});




/* ID: qx.io.remote.Request */
qx.OO.defineClass($[748],qx.core.Target,function(vUrl,vMethod,vResponseType){qx.core.Target.call(this);
this._requestHeaders={};
this._parameters={};
this._formFields={};
this.setUrl(vUrl);
this.setMethod(vMethod||qx.net.Http.METHOD_GET);
this.setResponseType(vResponseType||qx.util.Mime.TEXT);
this.setProhibitCaching(true);
this.setRequestHeader($[2107],$[1224]);
this.setRequestHeader($[2272],qx.core.Version.toString());
this._seqNum=++qx.io.remote.Request._seqNum;
});
qx.OO.addProperty({name:$[317],type:$[0]});
qx.OO.addProperty({name:$[716],type:$[0],possibleValues:[qx.net.Http.METHOD_GET,qx.net.Http.METHOD_POST,qx.net.Http.METHOD_PUT,qx.net.Http.METHOD_HEAD,qx.net.Http.METHOD_DELETE]});
qx.OO.addProperty({name:$[511],type:$[3],defaultValue:true,getAlias:$[1130]});
qx.OO.addProperty({name:$[304],type:$[0]});
qx.OO.addProperty({name:$[409],type:$[0]});
qx.OO.addProperty({name:$[295],type:$[0]});
qx.OO.addProperty({name:$[239],type:$[0],possibleValues:[$[107],$[238],$[52],$[61],$[17],$[35],$[22],$[28]],defaultValue:$[107]});
qx.OO.addProperty({name:$[714],type:$[0],possibleValues:[qx.util.Mime.TEXT,qx.util.Mime.JAVASCRIPT,qx.util.Mime.JSON,qx.util.Mime.XML,qx.util.Mime.HTML]});
qx.OO.addProperty({name:$[22],type:$[2]});
qx.OO.addProperty({name:$[1427],type:$[3]});
qx.OO.addProperty({name:$[776],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[2295],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[968],type:$[4],instance:$[30]});
qx.OO.addProperty({name:$[363],type:$[3]});
qx.Proto.send=function(){qx.io.remote.RequestQueue.getInstance().add(this);
};
qx.Proto.abort=function(){qx.io.remote.RequestQueue.getInstance().abort(this);
};
qx.Proto.reset=function(){switch(this.getState()){case $[52]:case $[61]:this.error("Aborting already sent request!");
case $[238]:this.abort();
break;
}};
qx.Proto.isConfigured=function(){return this.getState()===$[107];
};
qx.Proto.isQueued=function(){return this.getState()===$[238];
};
qx.Proto.isSending=function(){return this.getState()===$[52];
};
qx.Proto.isReceiving=function(){return this.getState()===$[61];
};
qx.Proto.isCompleted=function(){return this.getState()===$[17];
};
qx.Proto.isAborted=function(){return this.getState()===$[35];
};
qx.Proto.isTimeout=function(){return this.getState()===$[22];
};
qx.Proto.isFailed=function(){return this.getState()===$[28];
};
qx.Proto._onqueued=function(e){this.setState($[238]);
this.dispatchEvent(e);
};
qx.Proto._onsending=function(e){this.setState($[52]);
this.dispatchEvent(e);
};
qx.Proto._onreceiving=function(e){this.setState($[61]);
this.dispatchEvent(e);
};
qx.Proto._oncompleted=function(e){this.setState($[17]);
this.dispatchEvent(e);
this.dispose();
};
qx.Proto._onaborted=function(e){this.setState($[35]);
this.dispatchEvent(e);
this.dispose();
};
qx.Proto._ontimeout=function(e){this.setState($[22]);
this.dispatchEvent(e);
this.dispose();
};
qx.Proto._onfailed=function(e){this.setState($[28]);
this.dispatchEvent(e);
this.dispose();
};
qx.Proto._modifyState=function(propValue,propOldValue,propData){if(qx.Settings.getValueOfClass($[30],$[25])){this.debug("State: "+propValue);
}return true;
};
qx.Proto._modifyProhibitCaching=function(propValue,propOldValue,propData){if(propValue){this.setParameter($[540],new Date().valueOf());
this.setRequestHeader($[573],$[726]);
this.setRequestHeader($[639],$[726]);
}else{this.removeParameter($[540]);
this.removeRequestHeader($[573]);
this.removeRequestHeader($[639]);
}return true;
};
qx.Proto._modifyMethod=function(propValue,propOldValue,propData){if(propValue===qx.net.Http.METHOD_POST){this.setRequestHeader($[246],$[637]);
}else{this.removeRequestHeader($[246]);
}return true;
};
qx.Proto._modifyResponseType=function(propValue,propOldValue,propData){this.setRequestHeader($[1178],propValue);
return true;
};
qx.Proto.setRequestHeader=function(vId,vValue){this._requestHeaders[vId]=vValue;
};
qx.Proto.removeRequestHeader=function(vId){delete this._requestHeaders[vId];
};
qx.Proto.getRequestHeader=function(vId){return this._requestHeaders[vId]||null;
};
qx.Proto.getRequestHeaders=function(){return this._requestHeaders;
};
qx.Proto.setParameter=function(vId,vValue){this._parameters[vId]=vValue;
};
qx.Proto.removeParameter=function(vId){delete this._parameters[vId];
};
qx.Proto.getParameter=function(vId){return this._parameters[vId]||null;
};
qx.Proto.getParameters=function(){return this._parameters;
};
qx.Proto.setFormField=function(vId,vValue){this._formFields[vId]=vValue;
};
qx.Proto.removeFormField=function(vId){delete this._formFields[vId];
};
qx.Proto.getFormField=function(vId){return this._formFields[vId]||null;
};
qx.Proto.getFormFields=function(){return this._formFields;
};
qx.io.remote.Request._seqNum=0;
qx.Proto.getSequenceNumber=function(){return this._seqNum;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._requestHeaders=null;
this._parameters=null;
this._formFields=null;
this.setTransport(null);
return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.io.remote.RequestQueue */
qx.OO.defineClass($[1403],qx.core.Target,function(){qx.core.Target.call(this);
this._queue=[];
this._active=[];
this._totalRequests=0;
this._timer=new qx.client.Timer(500);
this._timer.addEventListener($[54],this._oninterval,this);
});
qx.OO.addProperty({name:$[1066],type:$[2]});
qx.OO.addProperty({name:$[2212],type:$[2],defaultValue:3});
qx.OO.addProperty({name:$[1755],type:$[2],defaultValue:5000});
qx.Proto._debug=function(){var vText=this._active.length+$[127]+(this._queue.length+this._active.length);
if(qx.Settings.getValueOfClass($[30],$[25])){this.debug("Progress: "+vText);
window.status=$[1888]+vText;
}};
qx.Proto._check=function(){this._debug();
if(this._active.length==0&&this._queue.length==0){this._timer.stop();
}if(!this.getEnabled()){return;
}if(this._active.length>=this.getMaxConcurrentRequests()||this._queue.length==0){return;
}if(this.getMaxTotalRequests()!=null&&this._totalRequests>=this.getMaxTotalRequests()){return;
}var vRequest=this._queue.shift();
var vTransport=new qx.io.remote.Exchange(vRequest);
this._totalRequests++;
this._active.push(vTransport);
this._debug();
vTransport.addEventListener($[52],vRequest._onsending,vRequest);
vTransport.addEventListener($[61],vRequest._onreceiving,vRequest);
vTransport.addEventListener($[17],vRequest._oncompleted,vRequest);
vTransport.addEventListener($[35],vRequest._onaborted,vRequest);
vTransport.addEventListener($[22],vRequest._ontimeout,vRequest);
vTransport.addEventListener($[28],vRequest._onfailed,vRequest);
vTransport.addEventListener($[52],this._onsending,this);
vTransport.addEventListener($[17],this._oncompleted,this);
vTransport.addEventListener($[35],this._oncompleted,this);
vTransport.addEventListener($[22],this._oncompleted,this);
vTransport.addEventListener($[28],this._oncompleted,this);
vTransport._start=(new Date).valueOf();
vTransport.send();
if(this._queue.length>0){this._check();
}};
qx.Proto._remove=function(vTransport){var vRequest=vTransport.getRequest();
vTransport.removeEventListener($[52],vRequest._onsending,vRequest);
vTransport.removeEventListener($[61],vRequest._onreceiving,vRequest);
vTransport.removeEventListener($[17],vRequest._oncompleted,vRequest);
vTransport.removeEventListener($[35],vRequest._onaborted,vRequest);
vTransport.removeEventListener($[22],vRequest._ontimeout,vRequest);
vTransport.removeEventListener($[28],vRequest._onfailed,vRequest);
vTransport.removeEventListener($[52],this._onsending,this);
vTransport.removeEventListener($[17],this._oncompleted,this);
vTransport.removeEventListener($[35],this._oncompleted,this);
vTransport.removeEventListener($[22],this._oncompleted,this);
vTransport.removeEventListener($[28],this._oncompleted,this);
qx.lang.Array.remove(this._active,vTransport);
vTransport.dispose();
this._check();
};
qx.Proto._activeCount=0;
qx.Proto._onsending=function(e){if(qx.Settings.getValueOfClass($[30],$[25])){this._activeCount++;
e.getTarget()._counted=true;
this.debug("ActiveCount: "+this._activeCount);
}};
qx.Proto._oncompleted=function(e){if(qx.Settings.getValueOfClass($[30],$[25])){if(e.getTarget()._counted){this._activeCount--;
this.debug("ActiveCount: "+this._activeCount);
}}this._remove(e.getTarget());
};
qx.Proto._oninterval=function(e){var vActive=this._active;
if(vActive.length==0){return;
}var vCurrent=(new Date).valueOf();
var vTransport;
var vRequest;
var vDefaultTimeout=this.getDefaultTimeout();
var vTimeout;
var vTime;
for(var i=vActive.length-1;i>=0;i--){vTransport=vActive[i];
vRequest=vTransport.getRequest();
if(vRequest.isAsynchronous()){vTimeout=vRequest.getTimeout();
if(vTimeout==0){continue;
}
if(vTimeout==null){vTimeout=vDefaultTimeout;
}vTime=vCurrent-vTransport._start;
if(vTime>vTimeout){this.warn($[837]+vTransport.toHashCode());
this.warn(vTime+$[900]+vTimeout+$[200]);
vTransport.timeout();
}}}};
qx.Proto._modifyEnabled=function(propValue,propOldValue,propData){if(propValue){this._check();
}this._timer.setEnabled(propValue);
return true;
};
qx.Proto.add=function(vRequest){vRequest.setState($[238]);
this._queue.push(vRequest);
this._check();
if(this.getEnabled()){this._timer.start();
}};
qx.Proto.abort=function(vRequest){var vTransport=vRequest.getTransport();
if(vTransport){vTransport.abort();
}else if(qx.lang.Array.contains(this._queue,vRequest)){qx.lang.Array.remove(this._queue,vRequest);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._active){for(var i=0,a=this._active,l=a.length;i<l;i++){this._remove(a[i]);
}this._active=null;
}
if(this._timer){this._timer.removeEventListener($[54],this._oninterval,this);
this._timer=null;
}this._queue=null;
return qx.core.Target.prototype.dispose.call(this);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.io.remote.Response */
qx.OO.defineClass($[1174],qx.core.Target,function(){qx.core.Target.call(this);
});
qx.OO.addProperty({name:$[239],type:$[2]});
qx.OO.addProperty({name:$[1495],type:$[2]});
qx.OO.addProperty({name:$[489]});
qx.OO.addProperty({name:$[1296],type:$[4]});
qx.Proto.getResponseHeader=function(vHeader){var vAll=this.getResponseHeaders();
if(vAll){return vAll[vHeader]||null;
}return null;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.ui.form.TextField */
qx.OO.defineClass($[967],qx.ui.basic.Terminator,function(vValue){qx.ui.basic.Terminator.call(this);
if(typeof vValue===$[0]){this.setValue(vValue);
}this.setTagName($[87]);
this.setHtmlProperty($[217],$[249]);
this.setHtmlAttribute($[2404],$[1028]);
this.setTabIndex(1);
this.setSelectable(true);
this.enableInlineEvent($[87]);
this.addEventListener($[172],this._onblur);
this.addEventListener($[227],this._onfocus);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[148]});
qx.OO.addProperty({name:$[104],type:$[0],defaultValue:$[1]});
qx.OO.addProperty({name:$[1450],type:$[2]});
qx.OO.addProperty({name:$[1045],type:$[3]});
qx.OO.addProperty({name:$[2263],type:$[2]});
qx.OO.addProperty({name:$[847],type:$[2]});
qx.OO.addProperty({name:$[2321],type:$[0]});
qx.OO.addProperty({name:$[1022],type:$[31]});
qx.OO.addProperty({name:$[290],type:$[4],instance:$[216],convert:qx.renderer.font.FontCache,allowMultipleArguments:true});
qx.Proto._clonePropertyIgnoreList+=$[2410];
qx.Proto._modifyEnabled=function(propValue,propOldValue,propData){propValue?this.removeHtmlAttribute($[134]):this.setHtmlAttribute($[134],$[134]);
return qx.ui.basic.Terminator.prototype._modifyEnabled.call(this,propValue,propOldValue,propData);
};
qx.Proto._modifyValue=function(propValue,propOldValue,propData){this._inValueProperty=true;
this.setHtmlProperty(propData.name,propValue==null?$[1]:propValue);
delete this._inValueProperty;
return true;
};
qx.Proto._modifyMaxLength=function(propValue,propOldValue,propData){return propValue?this.setHtmlProperty(propData.name,propValue):this.removeHtmlProperty(propData.name);
};
qx.Proto._modifyReadOnly=function(propValue,propOldValue,propData){return propValue?this.setHtmlProperty(propData.name,propData.name):this.removeHtmlProperty(propData.name);
};
qx.Proto._modifyFont=function(propValue,propOldValue,propData){this._invalidatePreferredInnerDimensions();
if(propValue){propValue._applyWidget(this);
}else if(propOldValue){propOldValue._resetWidget(this);
}return true;
};
qx.Proto.getComputedValue=function(e){this._visualPropertyCheck();
return this.getElement().value;
};
qx.ui.form.TextField.createRegExpValidator=function(vRegExp){return function(s){return vRegExp.test(s);
};
};
qx.Proto.isValid=function(){var vValidator=this.getValidator();
return !vValidator||vValidator(this.getValue());
};
qx.Proto.isComputedValid=function(){var vValidator=this.getValidator();
return !vValidator||vValidator(this.getComputedValue());
};
qx.Proto._computePreferredInnerWidth=function(){return 120;
};
qx.Proto._computePreferredInnerHeight=function(){return 15;
};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._firstInputFixApplied=false;
qx.Proto._afterAppear=function(){qx.ui.basic.Terminator.prototype._afterAppear.call(this);
if(!this._firstInputFixApplied){qx.client.Timer.once(this._ieFirstInputFix,this,1);
}};
qx.Proto._ieFirstInputFix=function(){this._inValueProperty=true;
this.getElement().value=this.getValue()===null?$[1]:this.getValue();
this._firstInputFixApplied=true;
delete this._inValueProperty;
};
}qx.Proto._textOnFocus=null;
qx.Proto._ontabfocus=function(e){this.selectAll();
};
qx.Proto._onfocus=function(e){this._textOnFocus=this.getComputedValue();
};
qx.Proto._onblur=function(e){var vValue=this.getComputedValue().toString();
if(this._textOnFocus!=vValue){this.setValue(vValue);
}this.setSelectionLength(0);
};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._getRange=function(){this._visualPropertyCheck();
return this.getElement().createTextRange();
};
qx.Proto._getSelectionRange=function(){this._visualPropertyCheck();
return this.getTopLevelWidget().getDocumentElement().selection.createRange();
};
qx.Proto.setSelectionStart=function(vStart){this._visualPropertyCheck();
var vText=this.getElement().value;
var i=0;
while(i<vStart){i=vText.indexOf($[797],i);
if(i==-1){break;
}vStart--;
i++;
}var vRange=this._getRange();
vRange.collapse();
vRange.move($[595],vStart);
vRange.select();
};
qx.Proto.getSelectionStart=function(){this._visualPropertyCheck();
var vSelectionRange=this._getSelectionRange();
if(!this.getElement().contains(vSelectionRange.parentElement())){return -1;
}var vRange=this._getRange();
vRange.setEndPoint($[1963],vSelectionRange);
return vRange.text.length;
};
qx.Proto.setSelectionLength=function(vLength){this._visualPropertyCheck();
var vSelectionRange=this._getSelectionRange();
if(!this.getElement().contains(vSelectionRange.parentElement())){return;
}vSelectionRange.collapse();
vSelectionRange.moveEnd($[595],vLength);
vSelectionRange.select();
};
qx.Proto.getSelectionLength=function(){this._visualPropertyCheck();
var vSelectionRange=this._getSelectionRange();
if(!this.getElement().contains(vSelectionRange.parentElement())){return 0;
}return vSelectionRange.text.length;
};
qx.Proto.setSelectionText=function(vText){this._visualPropertyCheck();
var vStart=this.getSelectionStart();
var vSelectionRange=this._getSelectionRange();
if(!this.getElement().contains(vSelectionRange.parentElement())){return;
}vSelectionRange.text=vText;
this.setValue(this.getElement().value);
this.setSelectionStart(vStart);
this.setSelectionLength(vText.length);
return true;
};
qx.Proto.getSelectionText=function(){this._visualPropertyCheck();
var vSelectionRange=this._getSelectionRange();
if(!this.getElement().contains(vSelectionRange.parentElement())){return $[1];
}return vSelectionRange.text;
};
qx.Proto.selectAll=function(){this._visualPropertyCheck();
if(this.getValue()!=null){this.setSelectionStart(0);
this.setSelectionLength(this.getValue().length);
}this.getElement().select();
};
qx.Proto.selectFromTo=function(vStart,vEnd){this._visualPropertyCheck();
this.setSelectionStart(vStart);
this.setSelectionLength(vEnd-vStart);
};
}else{qx.Proto.setSelectionStart=function(vStart){this._visualPropertyCheck();
this.getElement().selectionStart=vStart;
};
qx.Proto.getSelectionStart=function(){this._visualPropertyCheck();
return this.getElement().selectionStart;
};
qx.Proto.setSelectionLength=function(vLength){this._visualPropertyCheck();
var el=this.getElement();
if(qx.util.Validation.isValidString(el.value)){el.selectionEnd=el.selectionStart+vLength;
}};
qx.Proto.getSelectionLength=function(){this._visualPropertyCheck();
var el=this.getElement();
return el.selectionEnd-el.selectionStart;
};
qx.Proto.setSelectionText=function(vText){this._visualPropertyCheck();
var el=this.getElement();
var vOldText=el.value;
var vStart=el.selectionStart;
var vOldTextBefore=vOldText.substr(0,vStart);
var vOldTextAfter=vOldText.substr(el.selectionEnd);
var vValue=el.value=vOldTextBefore+vText+vOldTextAfter;
el.selectionStart=vStart;
el.selectionEnd=vStart+vText.length;
this.setValue(vValue);
return true;
};
qx.Proto.getSelectionText=function(){this._visualPropertyCheck();
return this.getElement().value.substr(this.getSelectionStart(),this.getSelectionLength());
};
qx.Proto.selectAll=function(){this._visualPropertyCheck();
this.getElement().select();
};
qx.Proto.selectFromTo=function(vStart,vEnd){this._visualPropertyCheck();
var el=this.getElement();
el.selectionStart=vStart;
el.selectionEnd=vEnd;
};
}qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[172],this._onblur);
this.removeEventListener($[227],this._onfocus);
qx.ui.basic.Terminator.prototype.dispose.call(this);
};




/* ID: qx.ui.form.TextArea */
qx.OO.defineClass($[2408],qx.ui.form.TextField,function(vValue){qx.ui.form.TextField.call(this,vValue);
this.setTagName($[288]);
this.removeHtmlProperty($[217]);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[2421]});
qx.OO.addProperty({name:$[206],type:$[3]});
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._modifyWrap=function(propValue,propOldValue,propData){return this.setStyleProperty($[147],propValue?$[122]:$[197]);
};
}else{qx.Proto._modifyWrap=function(propValue,propOldValue,propData){return this.setHtmlProperty($[206],propValue?$[1259]:$[1395]);
};
}qx.Proto._computePreferredInnerHeight=function(){return 60;
};




/* ID: qx.ui.layout.FlowLayout */
qx.OO.defineClass($[2237],qx.ui.core.Parent,function(){qx.ui.core.Parent.call(this);
});
qx.OO.addProperty({name:$[741],type:$[2],defaultValue:0,addToQueueRuntime:true,impl:$[193]});
qx.OO.addProperty({name:$[677],type:$[2],defaultValue:0,addToQueueRuntime:true,impl:$[193]});
qx.OO.addProperty({name:$[460],type:$[0],defaultValue:$[11],possibleValues:[$[11],$[10]],addToQueueRuntime:true});
qx.OO.addProperty({name:$[383],type:$[0],defaultValue:$[12],possibleValues:[$[12],$[16]],addToQueueRuntime:true});
qx.OO.addProperty({name:$[571],type:$[3],defaultValue:false,addToQueueRuntime:true,impl:$[193]});
qx.Proto._createLayoutImpl=function(){return new qx.renderer.layout.FlowLayoutImpl(this);
};
qx.Proto._changeInnerWidth=function(vNew,vOld){qx.ui.core.Parent.prototype._changeInnerWidth.call(this,vNew,vOld);
this._invalidatePreferredInnerHeight();
};
qx.Proto._modifyLayout=function(propValue,propOldValue,propData){this._invalidatePreferredInnerDimensions();
return true;
};




/* ID: qx.renderer.layout.FlowLayoutImpl */
qx.OO.defineClass($[1560],qx.renderer.layout.LayoutImpl,function(vWidget){qx.renderer.layout.LayoutImpl.call(this,vWidget);
});
qx.renderer.layout.FlowLayoutImpl.STR_FIRST="getFirstVisibleChild";
qx.renderer.layout.FlowLayoutImpl.STR_LAST="getLastVisibleChild";
qx.renderer.layout.FlowLayoutImpl.STR_NEXT="getNextSibling";
qx.renderer.layout.FlowLayoutImpl.STR_PREVIOUS="getPreviousSibling";
qx.Proto.computeChildrenNeededWidth=function(){var w=this.getWidget();
return qx.renderer.layout.LayoutImpl.prototype.computeChildrenNeededWidth_sum.call(this)+((w.getVisibleChildrenLength()-1)*w.getHorizontalSpacing());
};
qx.Proto.computeChildrenNeededHeight=function(){var vWidget=this.getWidget();
var vInnerWidth=vWidget.getInnerWidth();
var vHorizontalSpacing=vWidget.getHorizontalSpacing();
var vVerticalSpacing=vWidget.getVerticalSpacing();
var vReversed=vWidget.getReverseChildrenOrder();
var vRowWidth=0;
var vRowHeight=0;
var vRowHeightSum=0;
for(var i=0,ch=vWidget.getVisibleChildren(),chl=ch.length,chc;i<chl;i++){chc=vReversed?ch[chl-1-i]:ch[i];
vRowWidth+=chc.getNeededWidth();
if(vRowWidth>vInnerWidth){vRowHeightSum+=vRowHeight+vVerticalSpacing;
vRowWidth=chc.getNeededWidth();
vRowHeight=chc.getNeededHeight();
}else{vRowHeight=Math.max(vRowHeight,chc.getNeededHeight());
}vRowWidth+=vHorizontalSpacing;
}return vRowHeightSum+vRowHeight;
};
qx.Proto.updateSelfOnChildOuterWidthChange=function(vChild){this.getWidget()._invalidatePreferredInnerHeight();
};
qx.Proto.updateChildOnInnerWidthChange=function(vChild){vChild._recomputePercentX();
vChild.addToLayoutChanges($[77]);
return true;
};
qx.Proto.updateChildOnInnerHeightChange=function(vChild){vChild._recomputePercentY();
vChild.addToLayoutChanges($[77]);
return true;
};
qx.Proto.updateChildrenOnJobQueueFlush=function(vQueue){if(vQueue.horizontalSpacing||vQueue.verticalSpacing||vQueue.reverseChildrenOrder||vQueue.horizontalChildrenAlign||vQueue.verticalChildrenAlign){this.getWidget()._addChildrenToLayoutQueue($[77]);
}};
qx.Proto.updateChildrenOnRemoveChild=function(vChild,vIndex){var w=this.getWidget(),ch=w.getVisibleChildren(),chl=ch.length,chc,i=-1;
if(w.getReverseChildrenOrder()){while((chc=ch[++i])&&i<vIndex){chc.addToLayoutChanges($[77]);
}}else{i+=vIndex;
while(chc=ch[++i]){chc.addToLayoutChanges($[77]);
}}};
qx.Proto.updateChildrenOnMoveChild=function(vChild,vIndex,vOldIndex){for(var i=Math.min(vIndex,vOldIndex),ch=this.getWidget().getVisibleChildren(),l=ch.length;i<l;i++){ch[i].addToLayoutChanges($[77]);
}};
qx.Proto.flushChildrenQueue=function(vChildrenQueue){var w=this.getWidget(),ch=w.getVisibleChildren(),chl=ch.length,chc,chh;
if(w.getReverseChildrenOrder()){var i=chl,changed=false;
while(chc=ch[--i]){chh=chc.toHashCode();
if(changed||vChildrenQueue[chh]){w._layoutChild(chc);
changed=true;
}}}else{var i=-1,changed=false;
while(chc=ch[++i]){chh=chc.toHashCode();
if(changed||vChildrenQueue[chh]){w._layoutChild(chc);
changed=true;
}}}};
qx.Proto.layoutChild=function(vChild,vJobs){this.layoutChild_sizeX_essentialWrapper(vChild,vJobs);
this.layoutChild_sizeY_essentialWrapper(vChild,vJobs);
this.layoutChild_sizeLimitX(vChild,vJobs);
this.layoutChild_sizeLimitY(vChild,vJobs);
this.layoutChild_marginX(vChild,vJobs);
this.layoutChild_marginY(vChild,vJobs);
this.layoutChild_location(vChild,vJobs);
};
if(qx.core.Client.getInstance().isMshtml()||qx.core.Client.getInstance().isOpera()){qx.Proto.layoutChild_sizeX=function(vChild,vJobs){if(vJobs.initial||vJobs.width||vJobs.minWidth||vJobs.maxWidth){vChild._computedWidthTypeNull&&vChild._computedMinWidthTypeNull&&vChild._computedMaxWidthTypeNull?vChild._resetRuntimeWidth():vChild._applyRuntimeWidth(vChild.getBoxWidth());
}};
qx.Proto.layoutChild_sizeY=function(vChild,vJobs){if(vJobs.initial||vJobs.height||vJobs.minHeight||vJobs.maxHeight){vChild._computedHeightTypeNull&&vChild._computedMinHeightTypeNull&&vChild._computedMaxHeightTypeNull?vChild._resetRuntimeHeight():vChild._applyRuntimeHeight(vChild.getBoxHeight());
}};
}else{qx.Proto.layoutChild_sizeX=function(vChild,vJobs){if(vJobs.initial||vJobs.width){vChild._computedWidthTypeNull?vChild._resetRuntimeWidth():vChild._applyRuntimeWidth(vChild.getWidthValue());
}};
qx.Proto.layoutChild_sizeY=function(vChild,vJobs){if(vJobs.initial||vJobs.height){vChild._computedHeightTypeNull?vChild._resetRuntimeHeight():vChild._applyRuntimeHeight(vChild.getHeightValue());
}};
}qx.Proto.layoutChild_location=function(vChild,vJobs){var vWidget=this.getWidget();
var vReverse=vWidget.getReverseChildrenOrder();
var vMethodBegin=vReverse?qx.renderer.layout.FlowLayoutImpl.STR_LAST:qx.renderer.layout.FlowLayoutImpl.STR_FIRST;
var vMethodContinue=vReverse?qx.renderer.layout.FlowLayoutImpl.STR_NEXT:qx.renderer.layout.FlowLayoutImpl.STR_PREVIOUS;
if(vChild==vWidget[vMethodBegin]()){vChild._cachedLocationHorizontal=vChild._cachedLocationVertical=vChild._cachedRow=0;
}else{var vTempChild=vChild[vMethodContinue]();
vChild._cachedLocationHorizontal=vTempChild._cachedLocationHorizontal+vTempChild.getOuterWidth()+vWidget.getHorizontalSpacing();
vChild._cachedLocationVertical=vTempChild._cachedLocationVertical;
vChild._cachedRow=vTempChild._cachedRow;
if((vChild._cachedLocationHorizontal+vChild.getOuterWidth())>vWidget.getInnerWidth()){vRowMax=vTempChild.getOuterHeight();
while((vTempChild=vTempChild[vMethodContinue]())&&vTempChild._cachedRow==vChild._cachedRow){vRowMax=Math.max(vRowMax,vTempChild.getOuterHeight());
}vChild._cachedLocationHorizontal=0;
vChild._cachedLocationVertical+=vWidget.getVerticalSpacing()+vRowMax;
vChild._cachedRow++;
}}if(vWidget.getHorizontalChildrenAlign()==$[10]){vChild._resetRuntimeLeft();
vChild._applyRuntimeRight(vWidget.getPaddingRight()+vChild._cachedLocationHorizontal);
}else{vChild._resetRuntimeRight();
vChild._applyRuntimeLeft(vWidget.getPaddingLeft()+vChild._cachedLocationHorizontal);
}
if(vWidget.getVerticalChildrenAlign()==$[16]){vChild._resetRuntimeTop();
vChild._applyRuntimeBottom(vWidget.getPaddingBottom()+vChild._cachedLocationVertical);
}else{vChild._resetRuntimeBottom();
vChild._applyRuntimeTop(vWidget.getPaddingTop()+vChild._cachedLocationVertical);
}};




/* ID: qx.ui.pageview.AbstractPane */
qx.OO.defineClass($[1025],qx.ui.layout.CanvasLayout,function(){qx.ui.layout.CanvasLayout.call(this);
});




/* ID: qx.ui.pageview.buttonview.Pane */
qx.OO.defineClass($[1912],qx.ui.pageview.AbstractPane,function(){qx.ui.pageview.AbstractPane.call(this);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1481]});
qx.Proto._applyStateAppearance=function(){var vPos=this.getParent().getBarPosition();
this._states.barHorizontal=vPos===$[12]||vPos===$[16];
qx.ui.pageview.AbstractButton.prototype._applyStateAppearance.call(this);
};




/* ID: qx.ui.pageview.AbstractButton */
qx.OO.defineClass($[1834],qx.ui.basic.Atom,function(vText,vIcon,vIconWidth,vIconHeight,vFlash){qx.ui.basic.Atom.call(this,vText,vIcon,vIconWidth,vIconHeight,vFlash);
this.setTabIndex(1);
this.addEventListener($[40],this._onmouseover);
this.addEventListener($[47],this._onmouseout);
this.addEventListener($[6],this._onmousedown);
this.addEventListener($[13],this._onkeydown);
this.addEventListener($[14],this._onkeypress);
});
qx.OO.addProperty({name:$[81],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[407],type:$[4]});
qx.OO.addProperty({name:$[261],type:$[4],instance:$[214],allowNull:true});
qx.OO.addProperty({name:$[97],type:$[0]});
qx.Proto.getView=function(){return this.getParent().getParent();
};
qx.Proto._modifyManager=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.remove(this);
}
if(propValue){propValue.add(this);
}return true;
};
qx.Proto._modifyParent=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.getManager().remove(this);
}
if(propValue){propValue.getManager().add(this);
}return qx.ui.basic.Atom.prototype._modifyParent.call(this,propValue,propOldValue,propData);
};
qx.Proto._modifyPage=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.setButton(null);
}
if(propValue){propValue.setButton(this);
this.getChecked()?propValue.show():propValue.hide();
}return true;
};
qx.Proto._modifyChecked=function(propValue,propOldValue,propData){if(this._hasParent){var vManager=this.getManager();
if(vManager){vManager.handleItemChecked(this,propValue);
}}propValue?this.addState($[81]):this.removeState($[81]);
var vPage=this.getPage();
if(vPage){this.getChecked()?vPage.show():vPage.hide();
}return true;
};
qx.Proto._modifyName=function(propValue,propOldValue,propData){if(this.getManager()){this.getManager().setName(propValue);
}return true;
};
qx.Proto._onmousedown=function(e){this.setChecked(true);
};
qx.Proto._onmouseover=function(e){this.addState($[58]);
};
qx.Proto._onmouseout=function(e){this.removeState($[58]);
};
qx.Proto._onkeydown=function(e){};
qx.Proto._onkeypress=function(e){};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[40],this._onmouseover);
this.removeEventListener($[47],this._onmouseout);
this.removeEventListener($[6],this._onmousedown);
this.removeEventListener($[13],this._onkeydown);
this.removeEventListener($[14],this._onkeypress);
return qx.ui.basic.Atom.prototype.dispose.call(this);
};




/* ID: qx.manager.selection.RadioManager */
qx.OO.defineClass($[214],qx.core.Target,function(vName,vMembers){qx.core.Target.call(this);
this._items=[];
this.setName(vName!=null?vName:qx.manager.selection.RadioManager.AUTO_NAME_PREFIX+this._hashCode);
if(vMembers!=null){this.add.apply(this,vMembers);
}});
qx.manager.selection.RadioManager.AUTO_NAME_PREFIX="qx-radio-";
qx.OO.addProperty({name:$[24]});
qx.OO.addProperty({name:$[97],type:$[0]});
qx.Proto.getItems=function(){return this._items;
};
qx.Proto.getEnabledItems=function(){var b=[];
for(var i=0,a=this._items,l=a.length;i<l;i++){if(a[i].getEnabled()){b.push(a[i]);
}}return b;
};
qx.Proto.handleItemChecked=function(vItem,vChecked){if(vChecked){this.setSelected(vItem);
}else if(this.getSelected()==vItem){this.setSelected(null);
}};
qx.Proto.add=function(varargs){var vItems=arguments;
var vLength=vItems.length;
var vItem;
for(var i=0;i<vLength;i++){vItem=vItems[i];
if(qx.lang.Array.contains(this._items,vItem)){return;
}this._items.push(vItem);
vItem.setManager(this);
if(vItem.getChecked()){this.setSelected(vItem);
}vItem.setEnabled(this.getEnabled());
vItem.setName(this.getName());
}};
qx.Proto.remove=function(vItem){qx.lang.Array.remove(this._items,vItem);
vItem.setManager(null);
if(vItem.getChecked()){this.setSelected(null);
}};
qx.Proto._modifySelected=function(propValue,propOldValue,propData){if(propOldValue&&propOldValue.getChecked()){propOldValue.setChecked(false);
}
if(propValue&&!propValue.getChecked()){propValue.setChecked(true);
}return true;
};
qx.Proto._modifyEnabled=function(propValue,propOldValue,propData){for(var i=0,vItems=this._items,vLength=vItems.length;i<vLength;i++){vItems[i].setEnabled(propValue);
}return true;
};
qx.Proto._modifyName=function(propValue,propOldValue,propData){for(var i=0,vItems=this._items,vLength=vItems.length;i<vLength;i++){vItems[i].setName(propValue);
}return true;
};
qx.Proto.selectNext=function(vItem){var vIndex=this._items.indexOf(vItem);
if(vIndex==-1){return;
}var i=0;
var vLength=this._items.length;
vIndex=(vIndex+1)%vLength;
while(i<vLength&&!this._items[vIndex].getEnabled()){vIndex=(vIndex+1)%vLength;
i++;
}this._selectByIndex(vIndex);
};
qx.Proto.selectPrevious=function(vItem){var vIndex=this._items.indexOf(vItem);
if(vIndex==-1){return;
}var i=0;
var vLength=this._items.length;
vIndex=(vIndex-1+vLength)%vLength;
while(i<vLength&&!this._items[vIndex].getEnabled()){vIndex=(vIndex-1+vLength)%vLength;
i++;
}this._selectByIndex(vIndex);
};
qx.Proto._selectByIndex=function(vIndex){if(this._items[vIndex].getEnabled()){this.setSelected(this._items[vIndex]);
this._items[vIndex].setFocused(true);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.forceSelected(null);
if(this._items){for(var i,vItems=this._items,vLength=vItems.length;i<vLength;i++){vItems[i].dispose();
delete vItems[i];
}vItems=null;
delete this._items;
}return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.ui.table.AbstractResizeBehavior */
qx.OO.defineClass($[2135],qx.core.Object,function(){qx.core.Object.call(this);
this._resizeColumnData=[];
});
qx.Proto._setNumColumns=function(numColumns){throw new Error("_setNumColumns is abstract");
};
qx.Proto.onAppear=function(tableColumnModel,event){throw new Error("onAppear is abstract");
};
qx.Proto.onTableWidthChanged=function(tableColumnModel,event){throw new Error("onTableWidthChanged is abstract");
};
qx.Proto.onVerticalScrollBarChanged=function(tableColumnModel,event){throw new Error("onVerticalScrollBarChanged is abstract");
};
qx.Proto.onColumnWidthChanged=function(tableColumnModel,event){throw new Error("onColumnWidthChanged is abstract");
};
qx.Proto.onVisibilityChanged=function(tableColumnModel,event){throw new Error("onVisibilityChanged is abstract");
};
qx.Proto._getAvailableWidth=function(tableColumnModel){var el=tableColumnModel._table.getElement();
var width=qx.html.Dimension.getInnerWidth(el)-2;
var scrollers=tableColumnModel._table._getPaneScrollerArr();
var lastScroller=scrollers[scrollers.length-1];
tableColumnModel._table._updateScrollBarVisibility();
if(tableColumnModel._table.getColumnVisibilityButtonVisible()||(lastScroller._verScrollBar.getVisibility()&&lastScroller._verScrollBar.getWidth()==$[5])){return {width:width-16,extraWidth:0};
}return {width:width-16,extraWidth:16};
};




/* ID: qx.html.Textile */
qx.OO.defineClass($[1439]);
qx.html.Textile.textilize=function(s){var r=s;
var qtags=[[$[1447],$[1335]],[$[1830],$[2316]],[$[1562],$[2058]],[$[1170],$[2002]],[$[1129],$[2030]],[$[1135],$[1980]]];
var ttag,htag,re,line,lines,nr,changed,inlist,listtype;
for(var i=0;i<qtags.length;i++){ttag=qtags[i][0];
htag=qtags[i][1];
re=new RegExp(ttag+$[1891]+ttag,$[123]);
r=r.replace(re,$[2248]+htag+$[719]+$[2317]+$[2383]+htag+$[719]);
}re=new RegExp($[857],$[123]);
r=r.replace(re,$[1506]);
re=new RegExp($[2462],$[123]);
r=r.replace(re,$[1806]);
re=new RegExp($[1383],$[642]);
r=r.replace(re,$[1917]);
re=new RegExp($[1626],$[642]);
r=r.replace(re,$[2261]);
re=new RegExp($[2364],$[123]);
r=r.replace(re,$[798]);
re=new RegExp($[1641],$[123]);
r=r.replace(re,$[1472]);
re=new RegExp($[1072],$[123]);
r=r.replace(re,$[2001]);
re=new RegExp($[1228],$[123]);
r=r.replace(re,$[69]);
lines=r.split($[69]);
nr=$[1];
for(var i=0;i<lines.length;i++){line=lines[i].replace(/\s*$/,$[1]);
changed=0;
if(line.search(/^\s*bq\.\s+/)!=-1){line=line.replace(/^\s*bq\.\s+/,$[1182])+$[1017];
changed=1;
}if(line.search(/^\s*h[1-6]\.\s+/)!=-1){re=new RegExp($[2012],$[123]);
line=line.replace(re,$[2394]);
changed=1;
}
if(line.search(/^\s*\*\s+/)!=-1){line=line.replace(/^\s*\*\s+/,$[2118])+$[1149];
changed=1;
}
if(line.search(/^\s*#\s+/)!=-1){line=line.replace(/^\s*#\s+/,$[2141])+$[844];
changed=1;
}
if(!changed&&(line.replace(/\s/g,$[1]).length>0)){line=$[1400]+line+$[1877];
}lines[i]=line+$[69];
}inlist=0;
listtype=$[1];
for(var i=0;i<lines.length;i++){line=lines[i];
if(inlist&&listtype==$[492]&&!line.match(/^\t<liu/)){line=$[939]+line;
inlist=0;
}
if(inlist&&listtype==$[582]&&!line.match(/^\t<lio/)){line=$[2057]+line;
inlist=0;
}
if(!inlist&&line.match(/^\t<liu/)){line=$[2310]+line;
inlist=1;
listtype=$[492];
}
if(!inlist&&line.match(/^\t<lio/)){line=$[1179]+line;
inlist=1;
listtype=$[582];
}lines[i]=line;
}r=lines.join($[69]);
r=r.replace(/li[o|u]>/g,$[975]);
return r;
};




/* ID: qx.ui.pageview.AbstractPageView */
qx.OO.defineClass($[2134],qx.ui.layout.BoxLayout,function(vBarClass,vPaneClass){qx.ui.layout.BoxLayout.call(this);
this._bar=new vBarClass;
this._pane=new vPaneClass;
this.add(this._bar,this._pane);
this.setOrientation($[20]);
});
qx.Proto.getPane=function(){return this._pane;
};
qx.Proto.getBar=function(){return this._bar;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._bar){this._bar.dispose();
this._bar=null;
}
if(this._pane){this._pane.dispose();
this._pane=null;
}return qx.ui.layout.BoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.pageview.tabview.TabView */
qx.OO.defineClass($[1162],qx.ui.pageview.AbstractPageView,function(){qx.ui.pageview.AbstractPageView.call(this,qx.ui.pageview.tabview.Bar,qx.ui.pageview.tabview.Pane);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1468]});
qx.OO.addProperty({name:$[2060],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1563],type:$[3],defaultValue:true});
qx.Proto._modifyAlignTabsToLeft=function(propValue,propOldValue,propData){var vBar=this._bar;
vBar.setHorizontalChildrenAlign(propValue?$[11]:$[10]);
vBar._addChildrenToStateQueue();
return true;
};
qx.Proto._modifyPlaceBarOnTop=function(propValue,propOldValue,propData){var vBar=this._bar;
if(propValue){vBar.moveSelfToBegin();
}else{vBar.moveSelfToEnd();
}vBar._addChildrenToStateQueue();
return true;
};




/* ID: qx.ui.pageview.AbstractBar */
qx.OO.defineClass($[1127],qx.ui.layout.BoxLayout,function(){qx.ui.layout.BoxLayout.call(this);
this._manager=new qx.manager.selection.RadioManager;
this.addEventListener($[62],this._onmousewheel);
});
qx.Proto.getManager=function(){return this._manager;
};
qx.Proto._lastDate=(new Date(0)).valueOf();
qx.Proto._onmousewheel=function(e){var vDate=(new Date).valueOf();
if((vDate-50)<this._lastDate){return;
}this._lastDate=vDate;
var vManager=this.getManager();
var vItems=vManager.getEnabledItems();
var vPos=vItems.indexOf(vManager.getSelected());
if(this.getWheelDelta(e)>0){var vNext=vItems[vPos+1];
if(!vNext){vNext=vItems[0];
}}else if(vPos>0){var vNext=vItems[vPos-1];
if(!vNext){vNext=vItems[0];
}}else{vNext=vItems[vItems.length-1];
}vManager.setSelected(vNext);
};
qx.Proto.getWheelDelta=function(e){return e.getWheelDelta();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this._manager){this._manager.dispose();
this._manager=null;
}this.removeEventListener($[62],this._onmousewheel);
return qx.ui.layout.BoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.pageview.tabview.Bar */
qx.OO.defineClass($[2049],qx.ui.pageview.AbstractBar,function(){qx.ui.pageview.AbstractBar.call(this);
this.setZIndex(2);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1183]});




/* ID: qx.ui.pageview.tabview.Pane */
qx.OO.defineClass($[1863],qx.ui.pageview.AbstractPane,function(){qx.ui.pageview.AbstractPane.call(this);
this.setZIndex(1);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[865]});




/* ID: qx.ui.popup.Popup */
qx.OO.defineClass($[119],qx.ui.layout.CanvasLayout,function(){qx.ui.layout.CanvasLayout.call(this);
this.setZIndex(this._minZIndex);
if(this._isFocusRoot){this.activateFocusRoot();
}});
qx.Proto._isFocusRoot=true;
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[638]});
qx.OO.addProperty({name:$[1533],type:$[3],defaultValue:true});
qx.OO.changeProperty({name:$[113],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1556],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1385],type:$[3],defaultValue:true});
qx.Proto._showTimeStamp=(new Date(0)).valueOf();
qx.Proto._hideTimeStamp=(new Date(0)).valueOf();
qx.Settings.setDefault($[384],$[36]);
qx.Settings.setDefault($[471],$[36]);
qx.Settings.setDefault($[444],$[36]);
qx.Settings.setDefault($[402],$[36]);
qx.Proto._beforeAppear=function(){qx.ui.layout.CanvasLayout.prototype._beforeAppear.call(this);
if(this.getRestrictToPageOnOpen()){this._wantedLeft=this.getLeft();
if(this._wantedLeft!=null){this.setLeft(10000);
if(this.getElement()!=null){this.getElement().style.left=10000;
}}}qx.manager.object.PopupManager.getInstance().add(this);
qx.manager.object.PopupManager.getInstance().update(this);
this._showTimeStamp=(new Date).valueOf();
this.bringToFront();
};
qx.Proto._beforeDisappear=function(){qx.ui.layout.CanvasLayout.prototype._beforeDisappear.call(this);
qx.manager.object.PopupManager.getInstance().remove(this);
this._hideTimeStamp=(new Date).valueOf();
};
qx.Proto._afterAppear=function(){qx.ui.layout.CanvasLayout.prototype._afterAppear.call(this);
if(this.getRestrictToPageOnOpen()){var doc=qx.ui.core.ClientDocument.getInstance();
var docWidth=doc.getClientWidth();
var docHeight=doc.getClientHeight();
var restrictToPageLeft=parseInt(qx.Settings.getValueOfClass($[119],$[384]));
var restrictToPageRight=parseInt(qx.Settings.getValueOfClass($[119],$[471]));
var restrictToPageTop=parseInt(qx.Settings.getValueOfClass($[119],$[444]));
var restrictToPageBottom=parseInt(qx.Settings.getValueOfClass($[119],$[402]));
var left=(this._wantedLeft==null)?this.getLeft():this._wantedLeft;
var top=this.getTop();
var width=this.getBoxWidth();
var height=this.getBoxHeight();
var oldLeft=this.getLeft();
var oldTop=top;
if(left+width>docWidth-restrictToPageRight){left=docWidth-restrictToPageRight-width;
}
if(top+height>docHeight-restrictToPageBottom){top=docHeight-restrictToPageBottom-height;
}
if(left<restrictToPageLeft){left=restrictToPageLeft;
}
if(top<restrictToPageTop){top=restrictToPageTop;
}
if(left!=oldLeft||top!=oldTop){var self=this;
window.setTimeout(function(){self.setLeft(left);
self.setTop(top);
qx.ui.core.Widget.flushGlobalQueues();
},0);
}}};
qx.Proto._makeActive=function(){this.getFocusRoot().setActiveChild(this);
};
qx.Proto._makeInactive=function(){var vRoot=this.getFocusRoot();
var vCurrent=vRoot.getActiveChild();
if(vCurrent==this){vRoot.setActiveChild(vRoot);
}};
qx.Proto._minZIndex=1e6;
qx.Proto.bringToFront=function(){this.forceZIndex(Infinity);
this._sendTo();
};
qx.Proto.sendToBack=function(){this.forceZIndex(-Infinity);
this._sendTo();
};
qx.Proto._sendTo=function(){var vPopups=qx.lang.Object.getValues(qx.manager.object.PopupManager.getInstance().getAll());
if(qx.OO.isAvailable($[191])){var vMenus=qx.lang.Object.getValues(qx.manager.object.MenuManager.getInstance().getAll());
var vAll=vPopups.concat(vMenus).sort(qx.util.Compare.byZIndex);
}else{var vAll=vPopups.sort(qx.util.Compare.byZIndex);
}var vLength=vAll.length;
var vIndex=this._minZIndex;
for(var i=0;i<vLength;i++){vAll[i].setZIndex(vIndex++);
}};
qx.Proto.getShowTimeStamp=function(){return this._showTimeStamp;
};
qx.Proto.getHideTimeStamp=function(){return this._hideTimeStamp;
};
qx.Proto.positionRelativeTo=function(el,offsetX,offsetY){if(el instanceof qx.ui.core.Widget){el=el.getElement();
}
if(el){var gecko=qx.core.Client.getInstance().isGecko();
var loc=qx.html.Location;
this.setLocation(loc.getClientAreaLeft(el)-(gecko?qx.html.Style.getBorderLeft(el):0)+(offsetX||0),loc.getClientAreaTop(el)-(gecko?qx.html.Style.getBorderTop(el):0)+(offsetY||0));
}else{this.warn($[1728]);
}};
qx.Proto.centerToBrowser=function(){var d=qx.ui.core.ClientDocument.getInstance();
var left=(d.getClientWidth()-this.getBoxWidth())/2;
var top=(d.getClientHeight()-this.getBoxHeight())/2;
this.setLeft(left<0?0:left);
this.setTop(top<0?0:top);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._showTimeStamp=null;
this._hideTimeStamp=null;
return qx.ui.layout.CanvasLayout.prototype.dispose.call(this);
};




/* ID: qx.manager.object.PopupManager */
qx.OO.defineClass($[204],qx.manager.object.ObjectManager,function(){qx.manager.object.ObjectManager.call(this);
});
qx.Proto.update=function(vTarget){if(!(vTarget instanceof qx.ui.core.Widget)){vTarget=null;
}var vPopup,vHashCode;
var vAll=this.getAll();
for(vHashCode in vAll){vPopup=vAll[vHashCode];
if(!vPopup.getAutoHide()||vTarget==vPopup||vPopup.contains(vTarget)){continue;
}
if(qx.OO.isAvailable($[319])&&vTarget instanceof qx.ui.popup.ToolTip&&!(vPopup instanceof qx.ui.popup.ToolTip)){continue;
}vPopup.hide();
}};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.ui.table.DataRowRenderer */
qx.OO.defineClass($[673],qx.core.Object,function(){qx.core.Object.call(this);
});
qx.Proto.updateDataRowElement=function(rowInfo,rowElement){throw new Error("updateDataRowElement is abstract");
};




/* ID: qx.ui.table.DefaultDataRowRenderer */
qx.OO.defineClass($[2122],qx.ui.table.DataRowRenderer,function(){qx.ui.table.DataRowRenderer.call(this);
var Ddrr=qx.ui.table.DefaultDataRowRenderer;
this._colors={bgcolFocusedSelected:Ddrr.BGCOL_FOCUSED_SELECTED,bgcolFocusedSelectedBlur:Ddrr.BGCOL_FOCUSED_SELECTED_BLUR,bgcolFocused:Ddrr.BGCOL_FOCUSED,bgcolFocusedBlur:Ddrr.BGCOL_FOCUSED_BLUR,bgcolSelected:Ddrr.BGCOL_SELECTED,bgcolSelectedBlur:Ddrr.BGCOL_SELECTED_BLUR,bgcolEven:Ddrr.BGCOL_EVEN,bgcolOdd:Ddrr.BGCOL_ODD,colSelected:Ddrr.COL_SELECTED,colNormal:Ddrr.COL_NORMAL};
});
qx.OO.addProperty({name:$[1684],type:$[3],allowNull:false,defaultValue:true});
qx.OO.addProperty({name:$[1729],type:$[3],allowNull:false,defaultValue:true});
qx.OO.addProperty({name:$[138],type:$[0],allowNull:false,defaultValue:$[1620]});
qx.OO.addProperty({name:$[90],type:$[0],allowNull:false,defaultValue:$[1617]});
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._colors=null;
qx.util.format.Format.prototype.dispose.call(this);
};
qx.Proto.updateDataRowElement=function(rowInfo,rowElem){rowElem.style.fontFamily=this.getFontFamily();
rowElem.style.fontSize=this.getFontSize();
if(rowInfo.focusedRow&&this.getHighlightFocusRow()){if(rowInfo.table.getFocused()||!this.getVisualizeFocusedState()){rowElem.style.backgroundColor=rowInfo.selected?this._colors.bgcolFocusedSelected:this._colors.bgcolFocused;
}else{rowElem.style.backgroundColor=rowInfo.selected?this._colors.bgcolFocusedSelectedBlur:this._colors.bgcolFocusedBlur;
}}else{if(rowInfo.selected){if(rowInfo.table.getFocused()||!this.getVisualizeFocusedState()){rowElem.style.backgroundColor=this._colors.bgcolSelected;
}else{rowElem.style.backgroundColor=this._colors.bgcolSelectedBlur;
}}else{rowElem.style.backgroundColor=(rowInfo.row%2==0)?this._colors.bgcolEven:this._colors.bgcolOdd;
}}rowElem.style.color=rowInfo.selected?this._colors.colSelected:this._colors.colNormal;
};
qx.Proto._createRowStyle_array_join=function(rowInfo,htmlArr){htmlArr.push($[1815]);
htmlArr.push(this.getFontFamily());
htmlArr.push($[804]);
htmlArr.push(this.getFontSize());
htmlArr.push($[1081]);
if(rowInfo.focusedRow&&this.getHighlightFocusRow()){if(rowInfo.table.getFocused()||!this.getVisualizeFocusedState()){htmlArr.push(rowInfo.selected?this._colors.bgcolFocusedSelected:this._colors.bgcolFocused);
}else{htmlArr.push(rowInfo.selected?this._colors.bgcolFocusedSelectedBlur:this._colors.bgcolFocusedBlur);
}}else{if(rowInfo.selected){if(rowInfo.table.getFocused()||!this.getVisualizeFocusedState()){htmlArr.push(this._colors.bgcolSelected);
}else{htmlArr.push(this._colors.bgcolSelectedBlur);
}}else{htmlArr.push((rowInfo.row%2==0)?this._colors.bgcolEven:this._colors.bgcolOdd);
}}htmlArr.push($[2422]);
htmlArr.push(rowInfo.selected?this._colors.colSelected:this._colors.colNormal);
};
qx.Proto.setRowColors=function(colors){for(var color in colors){this._colors[color]=colors[color];
}};
qx.Clazz.BGCOL_FOCUSED_SELECTED="#5a8ad3";
qx.Clazz.BGCOL_FOCUSED_SELECTED_BLUR="#b3bac6";
qx.Clazz.BGCOL_FOCUSED="#ddeeff";
qx.Clazz.BGCOL_FOCUSED_BLUR="#dae0e7";
qx.Clazz.BGCOL_SELECTED="#335ea8";
qx.Clazz.BGCOL_SELECTED_BLUR="#989ea8";
qx.Clazz.BGCOL_EVEN="#faf8f3";
qx.Clazz.BGCOL_ODD="white";
qx.Clazz.COL_SELECTED="white";
qx.Clazz.COL_NORMAL="black";




/* ID: qx.util.format.Format */
qx.OO.defineClass($[1030],qx.core.Object,function(){qx.core.Object.call(this);
});
qx.Proto.format=function(obj){throw new Error("format is abstract");
};
qx.Proto.parse=function(str){throw new Error("parse is abstract");
};




/* ID: qx.ui.treevirtual.SimpleTreeDataRowRenderer */
qx.OO.defineClass($[1518],qx.ui.table.DefaultDataRowRenderer,function(){qx.ui.table.DefaultDataRowRenderer.call(this);
});
qx.Proto.updateDataRowElement=function(rowInfo,rowElem){var tree=rowInfo.table;
var rowData=rowInfo.rowData;
var tableModel=tree.getTableModel();
var treeCol=tableModel.getTreeColumn();
var node=rowData[treeCol];
rowInfo.selected=node.bSelected;
if(node.bSelected){var nodeRowMap=tableModel.getNodeRowMap();
var row=nodeRowMap[node.nodeId];
tree.getSelectionModel()._addSelectionInterval(row,row);
}var ddrr=qx.ui.table.DefaultDataRowRenderer;
ddrr.prototype.updateDataRowElement.call(this,rowInfo,rowElem);
};




/* ID: qx.ui.layout.HorizontalBoxLayout */
qx.OO.defineClass($[1347],qx.ui.layout.BoxLayout,function(){qx.ui.layout.BoxLayout.call(this,$[29]);
});




/* ID: qx.ui.toolbar.Part */
qx.OO.defineClass($[1271],qx.ui.layout.HorizontalBoxLayout,function(){qx.ui.layout.HorizontalBoxLayout.call(this);
this._handle=new qx.ui.toolbar.PartHandle;
this.add(this._handle);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1704]});
qx.Proto._cloneRecursive=function(cloneInstance){var vChildren=this.getChildren();
var vLength=vChildren.length;
for(var i=0;i<vLength;i++){if(!(vChildren[i] instanceof qx.ui.toolbar.PartHandle)){cloneInstance.add(vChildren[i].clone(true));
}}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this._handle){this._handle.dispose();
this._handle=null;
}return qx.ui.layout.HorizontalBoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.toolbar.PartHandle */
qx.OO.defineClass($[2152],qx.ui.layout.CanvasLayout,function(){qx.ui.layout.CanvasLayout.call(this);
var l=new qx.ui.basic.Terminator;
l.setAppearance($[1113]);
this.add(l);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1526]});




/* ID: qx.ui.table.TablePaneHeader */
qx.OO.defineClass($[1670],qx.ui.layout.HorizontalBoxLayout,function(paneScroller){qx.ui.layout.HorizontalBoxLayout.call(this);
this._paneScroller=paneScroller;
});
qx.Proto.getPaneScroller=function(){return this._paneScroller;
};
qx.Proto.getTable=function(){return this._paneScroller.getTable();
};
qx.Proto._onColWidthChanged=function(evt){var data=evt.getData();
this.setColumnWidth(data.col,data.newWidth);
};
qx.Proto._onColOrderChanged=function(evt){this._updateContent(true);
};
qx.Proto._onPaneModelChanged=function(evt){this._updateContent(true);
};
qx.Proto._onTableModelMetaDataChanged=function(evt){this._updateContent();
};
qx.Proto.setColumnWidth=function(col,width){var x=this.getPaneScroller().getTablePaneModel().getX(col);
var children=this.getChildren();
if(children[x]!=null){children[x].setWidth(width);
}};
qx.Proto.setMouseOverColumn=function(col){if(col!=this._lastMouseOverColumn){var paneModel=this.getPaneScroller().getTablePaneModel();
var children=this.getChildren();
if(this._lastMouseOverColumn!=null){var widget=children[paneModel.getX(this._lastMouseOverColumn)];
if(widget!=null){widget.removeState($[40]);
}}
if(col!=null){children[paneModel.getX(col)].addState($[40]);
}this._lastMouseOverColumn=col;
}};
qx.Proto.showColumnMoveFeedback=function(col,x){var elem=this.getElement();
if(this._moveFeedback==null){var xPos=this.getPaneScroller().getTablePaneModel().getX(col);
var cellWidget=this.getChildren()[xPos];
var tableModel=this.getTable().getTableModel();
var columnModel=this.getTable().getTableColumnModel();
var cellInfo={xPos:xPos,col:col,name:tableModel.getColumnName(col)};
var cellRenderer=columnModel.getHeaderCellRenderer(col);
var feedback=cellRenderer.createHeaderCell(cellInfo);
feedback.setWidth(cellWidget.getBoxWidth());
feedback.setHeight(cellWidget.getBoxHeight());
feedback.setZIndex(1000000);
feedback.setOpacity(0.8);
feedback.setTop(qx.html.Location.getClientBoxTop(elem));
this.getTopLevelWidget().add(feedback);
this._moveFeedback=feedback;
}this._moveFeedback.setLeft(qx.html.Location.getClientBoxLeft(elem)+x);
};
qx.Proto.hideColumnMoveFeedback=function(){if(this._moveFeedback!=null){this.getTopLevelWidget().remove(this._moveFeedback);
this._moveFeedback.dispose();
this._moveFeedback=null;
}};
qx.Proto.isShowingColumnMoveFeedback=function(){return this._moveFeedback!=null;
};
qx.Proto._updateContent=function(completeUpdate){var tableModel=this.getTable().getTableModel();
var columnModel=this.getTable().getTableColumnModel();
var paneModel=this.getPaneScroller().getTablePaneModel();
var children=this.getChildren();
var oldColCount=children.length;
var colCount=paneModel.getColumnCount();
var sortedColum=tableModel.getSortColumnIndex();
if(completeUpdate){this._cleanUpCells();
}var cellInfo={};
cellInfo.sortedAscending=tableModel.isSortAscending();
for(var x=0;x<colCount;x++){var col=paneModel.getColumnAtX(x);
var colWidth=columnModel.getColumnWidth(col);
var cellRenderer=columnModel.getHeaderCellRenderer(col);
cellInfo.xPos=x;
cellInfo.col=col;
cellInfo.name=tableModel.getColumnName(col);
cellInfo.editable=tableModel.isColumnEditable(col);
cellInfo.sorted=(col==sortedColum);
var cachedWidget=children[x];
if(cachedWidget==null){cachedWidget=cellRenderer.createHeaderCell(cellInfo);
cachedWidget.set({width:colWidth,height:$[39]});
this.add(cachedWidget);
}else{cellRenderer.updateHeaderCell(cellInfo,cachedWidget);
}}};
qx.Proto._cleanUpCells=function(){var children=this.getChildren();
for(var x=children.length-1;x>=0;x--){var cellWidget=children[x];
this.remove(cellWidget);
cellWidget.dispose();
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}this._paneScroller=null;
return qx.ui.layout.HorizontalBoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.embed.Iframe */
qx.OO.defineClass($[2132],qx.ui.basic.Terminator,function(vSource){qx.ui.basic.Terminator.call(this);
this.setSelectable(false);
this.setTabIndex(0);
var o=this;
this.__onreadystatechange=function(e){return o._onreadystatechange(e);
};
this.__onload=function(e){return o._onload(e);
};
if(vSource!=undefined){this.setSource(vSource);
}});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[232]});
qx.OO.addProperty({name:$[484],type:$[0]});
qx.OO.addProperty({name:$[2322],type:$[0]});
qx.Proto._iframeNode=null;
qx.Proto.getIframeNode=function(){return this._iframeNode;
};
qx.Proto.setIframeNode=function(vIframeNode){return this._iframeNode=vIframeNode;
};
qx.Proto._blockerNode=null;
qx.Proto.getBlockerNode=function(){return this._blockerNode;
};
qx.Proto.setBlockerNode=function(vBlockerNode){return this._blockerNode=vBlockerNode;
};
qx.Proto.reload=function(){this._applySource();
};
qx.Proto.block=function(){if(this._blockerNode){this._blockerNode.style.display=$[1];
}};
qx.Proto.release=function(){if(this._blockerNode){this._blockerNode.style.display=$[33];
}};
qx.Proto._modifyElement=function(propValue,propOldValue,propData){var iframeNode=this.getIframeNode();
if(!iframeNode){qx.ui.embed.Iframe.initIframe(this.getFrameName());
iframeNode=this.setIframeNode(qx.ui.embed.Iframe._element.cloneNode(true));
qx.ui.embed.Iframe.initBlocker();
var blockerNode=this.setBlockerNode(qx.ui.embed.Iframe._blocker.cloneNode(true));
if(qx.core.Client.getInstance().isMshtml()){iframeNode.onreadystatechange=this.__onreadystatechange;
}else{iframeNode.onload=this.__onload;
}}this._applySource();
propValue.appendChild(iframeNode);
propValue.appendChild(blockerNode);
qx.ui.basic.Terminator.prototype._modifyElement.call(this,propValue,propOldValue,propData);
return true;
};
qx.Proto._beforeAppear=function(){qx.ui.basic.Terminator.prototype._beforeAppear.call(this);
qx.manager.object.IframeManager.getInstance().add(this);
};
qx.Proto._beforeDisappear=function(){qx.ui.basic.Terminator.prototype._beforeDisappear.call(this);
qx.manager.object.IframeManager.getInstance().remove(this);
};
qx.Proto._modifySource=function(propValue,propOldValue,propData){if(this.isCreated()){this._applySource();
}return true;
};
qx.Proto._applySource=function(){var currentSource=this.getSource();
if(qx.util.Validation.isInvalidString(currentSource)){currentSource=qx.manager.object.AliasManager.getInstance().resolvePath($[59]);
}this._isLoaded=false;
this.getIframeNode().src=currentSource;
};
qx.Proto._modifyFrameName=function(propValue,propOldValue,propName,uniqModIds){if(this.isCreated()){throw new Error("Not allowed to set frame name after it has been created");
}return true;
};
qx.Proto._onreadystatechange=function(){if(this.getIframeNode().readyState==$[343]){this.dispatchEvent(new qx.event.type.Event($[84]),true);
}};
qx.Proto._onload=function(){this._isLoaded=true;
this.dispatchEvent(new qx.event.type.Event($[84]),true);
};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto.getContentWindow=function(){if(this.isCreated()){try{return this.getIframeNode().contentWindow;
}catch(ex){}}return null;
};
qx.Proto.getContentDocument=function(){var win=this.getContentWindow();
if(win){try{return win.document;
}catch(ex){}}return null;
};
}else{qx.Proto.getContentWindow=function(){var doc=this.getContentDocument();
return doc?doc.defaultView:null;
};
qx.Proto.getContentDocument=function(){if(this.isCreated()){try{return this.getIframeNode().contentDocument;
}catch(ex){}}return null;
};
}qx.Proto._isLoaded=false;
if(qx.core.Client.getInstance().isMshtml()){qx.Proto.isLoaded=function(){var doc=this.getContentDocument();
return doc?doc.readyState==$[343]:false;
};
}else{qx.Proto.isLoaded=function(){return this._isLoaded;
};
}qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.__onreadystatechange=this.__onload=null;
if(this._iframeNode){this._iframeNode.onreadystatechange=null;
this._iframeNode.onload=null;
this._iframeNode=null;
}qx.ui.basic.Terminator.prototype.dispose.call(this);
};
qx.ui.embed.Iframe.initIframe=function(vFrameName){if(qx.ui.embed.Iframe._element&&!vFrameName){return;
}
if(vFrameName&&qx.core.Client.getInstance().isMshtml()){var f=qx.ui.embed.Iframe._element=document.createElement($[560]+vFrameName+$[770]);
}else{var f=qx.ui.embed.Iframe._element=document.createElement($[232]);
if(vFrameName){f.name=vFrameName;
}}f.frameBorder=$[36];
f.frameSpacing=$[36];
f.marginWidth=$[36];
f.marginHeight=$[36];
f.width=$[39];
f.height=$[39];
f.hspace=$[36];
f.vspace=$[36];
f.border=$[36];
f.scrolling=$[5];
f.unselectable=$[72];
f.allowTransparency=$[578];
f.style.position=$[91];
f.style.top=0;
f.style.left=0;
};
qx.ui.embed.Iframe.initBlocker=function(){if(qx.ui.embed.Iframe._blocker){return;
}var b=qx.ui.embed.Iframe._blocker=document.createElement($[50]);
if(qx.core.Client.getInstance().isMshtml()){b.style.backgroundColor=$[101];
b.style.filter=$[1288];
}b.style.position=$[91];
b.style.top=0;
b.style.left=0;
b.style.width=$[39];
b.style.height=$[39];
b.style.zIndex=1;
b.style.display=$[33];
};




/* ID: qx.ui.table.HeaderCellRenderer */
qx.OO.defineClass($[2071],qx.core.Object,function(){qx.core.Object.call(this);
});
qx.Proto.createHeaderCell=function(cellInfo){throw new Error("createHeaderCell is abstract");
};
qx.Proto.updateHeaderCell=function(cellInfo,cellWidget){throw new Error("updateHeaderCell is abstract");
};
qx.OO.addProperty({name:$[2174],type:$[2],defaultValue:16,allowNull:false});




/* ID: qx.ui.table.DefaultHeaderCellRenderer */
qx.OO.defineClass($[1770],qx.ui.table.HeaderCellRenderer,function(){qx.ui.table.HeaderCellRenderer.call(this);
});
qx.Proto.createHeaderCell=function(cellInfo){var widget=new qx.ui.basic.Atom();
widget.setAppearance($[2145]);
this.updateHeaderCell(cellInfo,widget);
return widget;
};
qx.Proto.updateHeaderCell=function(cellInfo,cellWidget){var DefaultHeaderCellRenderer=qx.ui.table.DefaultHeaderCellRenderer;
cellWidget.setLabel(cellInfo.name);
cellWidget.setIcon(cellInfo.sorted?(cellInfo.sortedAscending?$[2075]:$[2225]):null);
cellWidget.setState(DefaultHeaderCellRenderer.STATE_SORTED,cellInfo.sorted);
cellWidget.setState(DefaultHeaderCellRenderer.STATE_SORTED_ASCENDING,cellInfo.sortedAscending);
};
qx.Clazz.STATE_SORTED="sorted";
qx.Clazz.STATE_SORTED_ASCENDING="sortedAscending";




/* ID: qx.ui.layout.VerticalBoxLayout */
qx.OO.defineClass($[2393],qx.ui.layout.BoxLayout,function(){qx.ui.layout.BoxLayout.call(this,$[20]);
});




/* ID: qx.ui.menu.Layout */
qx.OO.defineClass($[2099],qx.ui.layout.VerticalBoxLayout,function(){qx.ui.layout.VerticalBoxLayout.call(this);
this.setAnonymous(true);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1904]});
qx.Proto._createLayoutImpl=function(){return new qx.renderer.layout.MenuLayoutImpl(this);
};




/* ID: qx.renderer.layout.MenuLayoutImpl */
qx.OO.defineClass($[1951],qx.renderer.layout.VerticalBoxLayoutImpl,function(vWidget){qx.renderer.layout.VerticalBoxLayoutImpl.call(this,vWidget);
this.setEnableFlexSupport(false);
});
qx.Proto.updateChildrenOnJobQueueFlush=function(vQueue){var vWidget=this.getWidget();
var ch,chc;
if(vQueue.preferredInnerWidth){var ch=vWidget.getChildren(),chl=ch.length,chc;
var sch,schl;
for(var i=0;i<chl;i++){chc=ch[i];
sch=chc.getChildren();
schl=sch.length;
for(var j=0;j<schl;j++){sch[j].addToLayoutChanges($[115]);
}}}return qx.renderer.layout.VerticalBoxLayoutImpl.prototype.updateChildrenOnJobQueueFlush.call(this,vQueue);
};




/* ID: qx.ui.table.Table */
qx.OO.defineClass($[2309],qx.ui.layout.VerticalBoxLayout,function(tableModel){qx.ui.layout.VerticalBoxLayout.call(this);
this._scrollerParent=new qx.ui.layout.HorizontalBoxLayout;
this._scrollerParent.setDimension($[39],$[37]);
this._scrollerParent.setSpacing(1);
this._statusBar=new qx.ui.basic.Label;
this._statusBar.setAppearance($[1796]);
this._statusBar.setDimension($[39],$[5]);
this.add(this._scrollerParent,this._statusBar);
this._columnVisibilityBt=new qx.ui.toolbar.Button(null,$[1428]);
this._columnVisibilityBt.addEventListener($[38],this._onColumnVisibilityBtExecuted,this);
this._selectionManager=this.getNewSelectionManager()(this);
this.setSelectionModel(this.getNewSelectionModel()(this));
this.setTableColumnModel(this.getNewTableColumnModel()(this));
if(tableModel!=null){this.setTableModel(tableModel);
}this.setMetaColumnCounts([-1]);
this.setTabIndex(1);
this.addEventListener($[13],this._onkeydown);
this.addEventListener($[14],this._onkeypress);
this.addEventListener($[393],this._onFocusChanged);
this._focusedCol=0;
this._focusedRow=0;
});
qx.Clazz.DEFAULT_DATA_ROW_RENDERER=new qx.ui.table.DefaultDataRowRenderer();
qx.OO.addProperty({name:$[722],type:$[4],instance:$[486]});
qx.OO.addProperty({name:$[1958],type:$[4],instance:$[706]});
qx.OO.addProperty({name:$[1207],type:$[4],instance:$[555]});
qx.OO.addProperty({name:$[2091],type:$[2],defaultValue:15});
qx.OO.addProperty({name:$[1370],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[2286],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1847],type:$[4]});
qx.OO.addProperty({name:$[536],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1715],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1731],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1576],type:$[2],defaultValue:16,allowNull:false});
qx.OO.addProperty({name:$[2063],type:$[4],instance:$[673],defaultValue:qx.Clazz.DEFAULT_DATA_ROW_RENDERER,allowNull:false});
qx.OO.addProperty({name:$[2105],type:$[31],setOnlyOnce:true,defaultValue:function(obj){return new qx.ui.table.SelectionManager(obj);
}});
qx.OO.addProperty({name:$[2102],type:$[31],setOnlyOnce:true,defaultValue:function(obj){return new qx.ui.table.SelectionModel(obj);
}});
qx.OO.addProperty({name:$[1947],type:$[31],setOnlyOnce:true,defaultValue:function(obj){return new qx.ui.table.TableColumnModel(obj);
}});
qx.OO.addProperty({name:$[2357],type:$[31],setOnlyOnce:true,defaultValue:function(obj){return new qx.ui.table.TablePane(obj);
}});
qx.OO.addProperty({name:$[1712],type:$[31],setOnlyOnce:true,defaultValue:function(obj){return new qx.ui.table.TablePaneHeader(obj);
}});
qx.OO.addProperty({name:$[1921],type:$[31],setOnlyOnce:true,defaultValue:function(obj){return new qx.ui.table.TablePaneScroller(obj);
}});
qx.OO.addProperty({name:$[2460],type:$[31],setOnlyOnce:true,defaultValue:function(columnModel){return new qx.ui.table.TablePaneModel(columnModel);
}});
qx.Proto._modifySelectionModel=function(propValue,propOldValue,propData){this._selectionManager.setSelectionModel(propValue);
if(propOldValue!=null){propOldValue.removeEventListener($[145],this._onSelectionChanged,this);
}propValue.addEventListener($[145],this._onSelectionChanged,this);
return true;
};
qx.Proto._modifyTableModel=function(propValue,propOldValue,propData){this.getTableColumnModel().init(propValue.getColumnCount(),this);
if(propOldValue!=null){propOldValue.removeEventListener(qx.ui.table.TableModel.EVENT_TYPE_META_DATA_CHANGED,this._onTableModelMetaDataChanged,this);
propOldValue.removeEventListener(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,this._onTableModelDataChanged,this);
}propValue.addEventListener(qx.ui.table.TableModel.EVENT_TYPE_META_DATA_CHANGED,this._onTableModelMetaDataChanged,this);
propValue.addEventListener(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,this._onTableModelDataChanged,this);
this._updateStatusBar();
return true;
};
qx.Proto._modifyTableColumnModel=function(propValue,propOldValue,propData){if(propOldValue!=null){propOldValue.removeEventListener($[178],this._onColVisibilityChanged,this);
propOldValue.removeEventListener($[179],this._onColWidthChanged,this);
propOldValue.removeEventListener($[228],this._onColOrderChanged,this);
}propValue.addEventListener($[178],this._onColVisibilityChanged,this);
propValue.addEventListener($[179],this._onColWidthChanged,this);
propValue.addEventListener($[228],this._onColOrderChanged,this);
var tm=this.getTableModel();
if(tm){propValue.init(tm.getColumnCount(),this);
}var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){var paneScroller=scrollerArr[i];
var paneModel=paneScroller.getTablePaneModel();
paneModel._tableColumnModel=propValue;
}return true;
};
qx.Proto._modifyStatusBarVisible=function(propValue,propOldValue,propData){this._statusBar.setDisplay(propValue);
if(propValue){this._updateStatusBar();
}return true;
};
qx.Proto._modifyColumnVisibilityButtonVisible=function(propValue,propOldValue,propData){this._columnVisibilityBt.setDisplay(propValue);
return true;
};
qx.Proto._modifyMetaColumnCounts=function(propValue,propOldValue,propData){var metaColumnCounts=propValue;
var scrollerArr=this._getPaneScrollerArr();
this._cleanUpMetaColumns(metaColumnCounts.length);
var leftX=0;
for(var i=0;i<scrollerArr.length;i++){var paneScroller=scrollerArr[i];
var paneModel=paneScroller.getTablePaneModel();
paneModel.setFirstColumnX(leftX);
paneModel.setMaxColumnCount(metaColumnCounts[i]);
leftX+=metaColumnCounts[i];
}if(metaColumnCounts.length>scrollerArr.length){var selectionModel=this.getSelectionModel();
var tableModel=this.getTableModel();
var columnModel=this.getTableColumnModel();
for(var i=scrollerArr.length;i<metaColumnCounts.length;i++){var paneModel=this.getNewTablePaneModel()(columnModel);
paneModel.setFirstColumnX(leftX);
paneModel.setMaxColumnCount(metaColumnCounts[i]);
leftX+=metaColumnCounts[i];
var paneScroller=this.getNewTablePaneScroller()(this);
paneScroller.setTablePaneModel(paneModel);
paneScroller.addEventListener($[570],this._onScrollY,this);
this._scrollerParent.add(paneScroller);
}}for(var i=0;i<scrollerArr.length;i++){var paneScroller=scrollerArr[i];
var isLast=(i==(scrollerArr.length-1));
paneScroller.getHeader().setHeight(this.getHeaderCellHeight());
paneScroller.setTopRightWidget(isLast?this._columnVisibilityBt:null);
}this._updateScrollerWidths();
this._updateScrollBarVisibility();
return true;
};
qx.Proto._modifyFocusCellOnMouseMove=function(propValue,propOldValue,propData){var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].setFocusCellOnMouseMove(propValue);
}return true;
};
qx.Proto._modifyKeepFirstVisibleRowComplete=function(propValue,propOldValue,propData){var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i]._onKeepFirstVisibleRowCompleteChanged();
}return true;
};
qx.Proto._modifyHeaderCellHeight=function(propValue,propOldValue,propData){var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].getHeader().setHeight(propValue);
}return true;
};
qx.Proto._getSelectionManager=function(){return this._selectionManager;
};
qx.Proto._getPaneScrollerArr=function(){return this._scrollerParent.getChildren();
};
qx.Proto.getPaneScroller=function(metaColumn){return this._getPaneScrollerArr()[metaColumn];
};
qx.Proto._cleanUpMetaColumns=function(fromMetaColumn){var scrollerArr=this._getPaneScrollerArr();
if(scrollerArr!=null){for(var i=scrollerArr.length-1;i>=fromMetaColumn;i--){var paneScroller=scrollerArr[i];
paneScroller.removeEventListener($[570],this._onScrollY,this);
this._scrollerParent.remove(paneScroller);
paneScroller.dispose();
}}};
qx.Proto._onSelectionChanged=function(evt){var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i]._onSelectionChanged(evt);
}this._updateStatusBar();
};
qx.Proto._onTableModelMetaDataChanged=function(evt){var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i]._onTableModelMetaDataChanged(evt);
}this._updateStatusBar();
};
qx.Proto._onTableModelDataChanged=function(evt){var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i]._onTableModelDataChanged(evt);
}var rowCount=this.getTableModel().getRowCount();
if(rowCount!=this._lastRowCount){this._lastRowCount=rowCount;
this._updateScrollBarVisibility();
this._updateStatusBar();
}};
qx.Proto._onScrollY=function(evt){if(!this._internalChange){this._internalChange=true;
var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].setScrollY(evt.getData());
}this._internalChange=false;
}};
qx.Proto._onkeydown=function(evt){if(!this.getEnabled()){return;
}var identifier=evt.getKeyIdentifier();
var consumed=false;
var oldFocusedRow=this._focusedRow;
if(this.isEditing()){if(evt.getModifiers()==0){consumed=true;
switch(identifier){case $[45]:this.stopEditing();
var oldFocusedRow=this._focusedRow;
this.moveFocusedCell(0,1);
if(this._focusedRow!=oldFocusedRow){this.startEditing();
}break;
case $[96]:this.cancelEditing();
this.focus();
break;
default:consumed=false;
break;
}}}else{consumed=true;
switch(identifier){case $[130]:this.setFocusedCell(this._focusedCol,0,true);
break;
case $[144]:var rowCount=this.getTableModel().getRowCount();
this.setFocusedCell(this._focusedCol,rowCount-1,true);
break;
default:consumed=false;
break;
}if(evt.getModifiers()==0){consumed=true;
switch(identifier){case $[339]:case $[45]:this.startEditing();
break;
default:consumed=false;
break;
}}else if(evt.isCtrlPressed()){consumed=true;
switch(identifier){case $[121]:var rowCount=this.getTableModel().getRowCount();
if(rowCount>0){this.getSelectionModel().setSelectionInterval(0,rowCount-1);
}break;
default:consumed=false;
break;
}}}
if(oldFocusedRow!=this._focusedRow){this._selectionManager.handleMoveKeyDown(this._focusedRow,evt);
}
if(consumed){evt.preventDefault();
evt.stopPropagation();
}};
qx.Proto._onkeypress=function(evt){if(!this.getEnabled()){return;
}
if(this.isEditing()){return;
}var oldFocusedRow=this._focusedRow;
var consumed=true;
var identifier=evt.getKeyIdentifier();
switch(identifier){case $[85]:this._selectionManager.handleSelectKeyDown(this._focusedRow,evt);
break;
case $[55]:this.moveFocusedCell(-1,0);
break;
case $[56]:this.moveFocusedCell(1,0);
break;
case $[73]:this.moveFocusedCell(0,-1);
break;
case $[71]:this.moveFocusedCell(0,1);
break;
case $[75]:case $[88]:var scroller=this.getPaneScroller(0);
var pane=scroller.getTablePane();
var rowCount=pane.getVisibleRowCount()-1;
var rowHeight=this.getRowHeight();
var direction=(identifier==$[75])?-1:1;
scroller.setScrollY(scroller.getScrollY()+direction*rowCount*rowHeight);
this.moveFocusedCell(0,direction*rowCount);
break;
default:consumed=false;
}
if(oldFocusedRow!=this._focusedRow){this._selectionManager.handleMoveKeyDown(this._focusedRow,evt);
}
if(consumed){evt.preventDefault();
evt.stopPropagation();
}};
qx.Proto._onFocusChanged=function(evt){var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i]._onFocusChanged(evt);
}};
qx.Proto._onColVisibilityChanged=function(evt){var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i]._onColVisibilityChanged(evt);
}this._updateScrollerWidths();
this._updateScrollBarVisibility();
};
qx.Proto._onColWidthChanged=function(evt){var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i]._onColWidthChanged(evt);
}this._updateScrollerWidths();
this._updateScrollBarVisibility();
};
qx.Proto._onColOrderChanged=function(evt){var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i]._onColOrderChanged(evt);
}this._updateScrollerWidths();
this._updateScrollBarVisibility();
};
qx.Proto.getTablePaneScrollerAtPageX=function(pageX){var metaCol=this._getMetaColumnAtPageX(pageX);
return (metaCol!=-1)?this.getPaneScroller(metaCol):null;
};
qx.Proto.setFocusedCell=function(col,row,scrollVisible){if(!this.isEditing()&&(col!=this._focusedCol||row!=this._focusedRow)){this._focusedCol=col;
this._focusedRow=row;
var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){scrollerArr[i].setFocusedCell(col,row);
}
if(scrollVisible){this.scrollCellVisible(col,row);
}}};
qx.Proto.getFocusedColumn=function(){return this._focusedCol;
};
qx.Proto.getFocusedRow=function(){return this._focusedRow;
};
qx.Proto.moveFocusedCell=function(deltaX,deltaY){var col=this._focusedCol;
var row=this._focusedRow;
if(deltaX!=0){var columnModel=this.getTableColumnModel();
var x=columnModel.getVisibleX(col);
var colCount=columnModel.getVisibleColumnCount();
x=qx.lang.Number.limit(x+deltaX,0,colCount-1);
col=columnModel.getVisibleColumnAtX(x);
}
if(deltaY!=0){var tableModel=this.getTableModel();
row=qx.lang.Number.limit(row+deltaY,0,tableModel.getRowCount()-1);
}this.setFocusedCell(col,row,true);
};
qx.Proto.scrollCellVisible=function(col,row){var columnModel=this.getTableColumnModel();
var x=columnModel.getVisibleX(col);
var metaColumn=this._getMetaColumnAtColumnX(x);
if(metaColumn!=-1){this.getPaneScroller(metaColumn).scrollCellVisible(col,row);
}};
qx.Proto.isEditing=function(){if(this._focusedCol!=null){var x=this.getTableColumnModel().getVisibleX(this._focusedCol);
var metaColumn=this._getMetaColumnAtColumnX(x);
return this.getPaneScroller(metaColumn).isEditing();
}};
qx.Proto.startEditing=function(){if(this._focusedCol!=null){var x=this.getTableColumnModel().getVisibleX(this._focusedCol);
var metaColumn=this._getMetaColumnAtColumnX(x);
return this.getPaneScroller(metaColumn).startEditing();
}return false;
};
qx.Proto.stopEditing=function(){if(this._focusedCol!=null){var x=this.getTableColumnModel().getVisibleX(this._focusedCol);
var metaColumn=this._getMetaColumnAtColumnX(x);
this.getPaneScroller(metaColumn).stopEditing();
}};
qx.Proto.cancelEditing=function(){if(this._focusedCol!=null){var x=this.getTableColumnModel().getVisibleX(this._focusedCol);
var metaColumn=this._getMetaColumnAtColumnX(x);
this.getPaneScroller(metaColumn).cancelEditing();
}};
qx.Proto._getMetaColumnAtPageX=function(pageX){var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){var elem=scrollerArr[i].getElement();
if(pageX>=qx.html.Location.getPageBoxLeft(elem)&&pageX<=qx.html.Location.getPageBoxRight(elem)){return i;
}}return -1;
};
qx.Proto._getMetaColumnAtColumnX=function(visXPos){var metaColumnCounts=this.getMetaColumnCounts();
var rightXPos=0;
for(var i=0;i<metaColumnCounts.length;i++){var counts=metaColumnCounts[i];
rightXPos+=counts;
if(counts==-1||visXPos<rightXPos){return i;
}}return -1;
};
qx.Proto._updateStatusBar=function(){if(this.getStatusBarVisible()){var selectedRowCount=this.getSelectionModel().getSelectedCount();
var rowCount=this.getTableModel().getRowCount();
var text;
if(selectedRowCount==0){text=rowCount+((rowCount==1)?$[633]:$[698]);
}else{text=selectedRowCount+$[1674]+rowCount+((rowCount==1)?$[633]:$[698])+$[1598];
}this._statusBar.setHtml(text);
}};
qx.Proto._updateScrollerWidths=function(){var scrollerArr=this._getPaneScrollerArr();
for(var i=0;i<scrollerArr.length;i++){var isLast=(i==(scrollerArr.length-1));
var width=isLast?$[37]:scrollerArr[i].getTablePaneModel().getTotalWidth();
scrollerArr[i].setWidth(width);
}};
qx.Proto._updateScrollBarVisibility=function(){if(this.isSeeable()){var horBar=qx.ui.table.TablePaneScroller.HORIZONTAL_SCROLLBAR;
var verBar=qx.ui.table.TablePaneScroller.VERTICAL_SCROLLBAR;
var scrollerArr=this._getPaneScrollerArr();
var horNeeded=false;
var verNeeded=false;
for(var i=0;i<scrollerArr.length;i++){var isLast=(i==(scrollerArr.length-1));
var bars=scrollerArr[i].getNeededScrollBars(horNeeded,!isLast);
if(bars&horBar){horNeeded=true;
}
if(isLast&&(bars&verBar)){verNeeded=true;
}}for(var i=0;i<scrollerArr.length;i++){var isLast=(i==(scrollerArr.length-1));
var bHadVerticalScrollBar;
scrollerArr[i].setHorizontalScrollBarVisible(horNeeded);
if(isLast){bHadVerticalScrollBar=scrollerArr[i].getVerticalScrollBarVisible();
}scrollerArr[i].setVerticalScrollBarVisible(isLast&&verNeeded);
if(isLast&&verNeeded!=bHadVerticalScrollBar){this.createDispatchDataEvent($[663],verNeeded);
}}}};
qx.Proto._onColumnVisibilityBtExecuted=function(){if((this._columnVisibilityMenuCloseTime==null)||(new Date().getTime()>this._columnVisibilityMenuCloseTime+200)){this._toggleColumnVisibilityMenu();
}};
qx.Proto._toggleColumnVisibilityMenu=function(){if(this._columnVisibilityMenu==null||!this._columnVisibilityMenu.isSeeable()){if(!this.getEnabled()){return;
}var menu=new qx.ui.menu.Menu;
menu.addEventListener($[226],function(evt){this._columnVisibilityMenuCloseTime=new Date().getTime();
},this);
var tableModel=this.getTableModel();
var columnModel=this.getTableColumnModel();
if(this.hasEventListeners($[506])){var data={table:this,menu:menu};
var event=new qx.event.type.DataEvent($[506],data);
this.dispatchEvent(event,true);
}
for(var x=0;x<columnModel.getOverallColumnCount();x++){var col=columnModel.getOverallColumnAtX(x);
var visible=columnModel.isColumnVisible(col);
var cmd={col:col};
var bt=new qx.ui.menu.CheckBox(tableModel.getColumnName(col),null,visible);
var handler=this._createColumnVisibilityCheckBoxHandler(col);
bt._handler=handler;
bt.addEventListener($[38],handler,this);
menu.add(bt);
}if(this.hasEventListeners($[342])){var data={table:this,menu:menu};
var event=new qx.event.type.DataEvent($[342],data);
this.dispatchEvent(event,true);
}menu.setParent(this.getTopLevelWidget());
this._columnVisibilityMenu=menu;
var btElem=this._columnVisibilityBt.getElement();
menu.setRestrictToPageOnOpen(false);
menu.setTop(qx.html.Location.getClientBoxBottom(btElem));
menu.setLeft(-1000);
var self=this;
window.setTimeout(function(){if(self.getDisposed()){return;
}menu.show();
qx.ui.core.Widget.flushGlobalQueues();
menu.setLeft(qx.html.Location.getClientBoxRight(btElem)-menu.getOffsetWidth());
qx.ui.core.Widget.flushGlobalQueues();
},0);
}else{menu.hide();
this._cleanupColumnVisibilityMenu();
}};
qx.Proto._cleanupColumnVisibilityMenu=function(){if(this._columnVisibilityMenu!=null&&!this._columnVisibilityMenu.getDisposed()){this._columnVisibilityMenu.dispose();
this._columnVisibilityMenu=null;
}};
qx.Proto._createColumnVisibilityCheckBoxHandler=function(col){return function(evt){var columnModel=this.getTableColumnModel();
columnModel.setColumnVisible(col,!columnModel.isColumnVisible(col));
};
};
qx.Proto.setColumnWidth=function(col,width){this.getTableColumnModel().setColumnWidth(col,width);
};
qx.Proto._changeInnerWidth=function(newValue,oldValue){var self=this;
window.setTimeout(function(){if(self.getDisposed()){return;
}self.createDispatchEvent($[658]);
self._updateScrollerWidths();
self._updateScrollBarVisibility();
qx.ui.core.Widget.flushGlobalQueues();
},0);
return qx.ui.layout.VerticalBoxLayout.prototype._changeInnerWidth.call(this,newValue,oldValue);
};
qx.Proto._changeInnerHeight=function(newValue,oldValue){var self=this;
window.setTimeout(function(){if(self.getDisposed()){return;
}self._updateScrollBarVisibility();
qx.ui.core.Widget.flushGlobalQueues();
},0);
return qx.ui.layout.VerticalBoxLayout.prototype._changeInnerHeight.call(this,newValue,oldValue);
};
qx.Proto._afterAppear=function(){qx.ui.layout.VerticalBoxLayout.prototype._afterAppear.call(this);
this._updateScrollBarVisibility();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._tableModel){this._tableModel.removeEventListener(qx.ui.table.TableModel.EVENT_TYPE_META_DATA_CHANGED,this._onTableModelMetaDataChanged,this);
}this._columnVisibilityBt.removeEventListener($[38],this._onColumnVisibilityBtExecuted,this);
this._columnVisibilityBt.dispose();
this._cleanupColumnVisibilityMenu();
this._cleanUpMetaColumns(0);
var selectionModel=this.getSelectionModel();
if(selectionModel!=null){selectionModel.removeEventListener($[145],this._onSelectionChanged,this);
}var tableModel=this.getTableModel();
if(tableModel!=null){tableModel.removeEventListener(qx.ui.table.TableModel.EVENT_TYPE_META_DATA_CHANGED,this._onTableModelMetaDataChanged,this);
tableModel.removeEventListener(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,this._onTableModelDataChanged,this);
}var tableColumnModel=this.getTableColumnModel();
if(tableColumnModel){tableColumnModel.removeEventListener($[178],this._onColVisibilityChanged,this);
tableColumnModel.removeEventListener($[179],this._onColWidthChanged,this);
tableColumnModel.removeEventListener($[228],this._onColOrderChanged,this);
}this.removeEventListener($[13],this._onkeydown);
this.removeEventListener($[14],this._onkeypress);
return qx.ui.layout.VerticalBoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.form.Button */
qx.OO.defineClass($[445],qx.ui.basic.Atom,function(vText,vIcon,vIconWidth,vIconHeight,vFlash){qx.ui.basic.Atom.call(this,vText,vIcon,vIconWidth,vIconHeight,vFlash);
this.setTabIndex(1);
this.addEventListener($[40],this._onmouseover);
this.addEventListener($[47],this._onmouseout);
this.addEventListener($[6],this._onmousedown);
this.addEventListener($[7],this._onmouseup);
this.addEventListener($[13],this._onkeydown);
this.addEventListener($[76],this._onkeyup);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[118]});
qx.Proto._onmouseover=function(e){if(e.getTarget()!=this){return;
}
if(this.hasState($[51])){this.removeState($[51]);
this.addState($[19]);
}this.addState($[58]);
};
qx.Proto._onmouseout=function(e){if(e.getTarget()!=this){return;
}this.removeState($[58]);
if(this.hasState($[19])){this.setCapture(true);
this.removeState($[19]);
this.addState($[51]);
}};
qx.Proto._onmousedown=function(e){if(e.getTarget()!=this||!e.isLeftButtonPressed()){return;
}this.removeState($[51]);
this.addState($[19]);
};
qx.Proto._onmouseup=function(e){this.setCapture(false);
var hasPressed=this.hasState($[19]);
var hasAbandoned=this.hasState($[51]);
if(hasPressed){this.removeState($[19]);
}
if(hasAbandoned){this.removeState($[51]);
}
if(!hasAbandoned){this.addState($[58]);
if(hasPressed){this.execute();
}}};
qx.Proto._onkeydown=function(e){switch(e.getKeyIdentifier()){case $[45]:case $[85]:this.removeState($[51]);
this.addState($[19]);
}};
qx.Proto._onkeyup=function(e){switch(e.getKeyIdentifier()){case $[45]:case $[85]:if(this.hasState($[19])){this.removeState($[51]);
this.removeState($[19]);
this.execute();
}}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[40],this._onmouseover,this);
this.removeEventListener($[47],this._onmouseout,this);
this.removeEventListener($[6],this._onmousedown,this);
this.removeEventListener($[7],this._onmouseup,this);
this.removeEventListener($[13],this._onkeydown,this);
this.removeEventListener($[76],this._onkeyup,this);
return qx.ui.basic.Atom.prototype.dispose.call(this);
};




/* ID: qx.ui.toolbar.Button */
qx.OO.defineClass($[2337],qx.ui.form.Button,function(vText,vIcon,vIconWidth,vIconHeight,vFlash){qx.ui.form.Button.call(this,vText,vIcon,vIconWidth,vIconHeight,vFlash);
this.setTabIndex(-1);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[2249]});
qx.Proto._onkeydown=qx.lang.Function.returnTrue;
qx.Proto._onkeyup=qx.lang.Function.returnTrue;




/* ID: qx.ui.table.SelectionModel */
qx.OO.defineClass($[486],qx.core.Target,function(){qx.core.Target.call(this);
this._selectedRangeArr=[];
this._anchorSelectionIndex=-1;
this._leadSelectionIndex=-1;
this.hasBatchModeRefCount=0;
this._hadChangeEventInBatchMode=false;
});
qx.Clazz.NO_SELECTION=1;
qx.Clazz.SINGLE_SELECTION=2;
qx.Clazz.SINGLE_INTERVAL_SELECTION=3;
qx.Clazz.MULTIPLE_INTERVAL_SELECTION=4;
qx.OO.addProperty({name:$[1265],type:$[2],defaultValue:qx.Clazz.SINGLE_SELECTION,allowNull:false,possibleValues:[qx.Clazz.NO_SELECTION,qx.Clazz.SINGLE_SELECTION,qx.Clazz.SINGLE_INTERVAL_SELECTION,qx.Clazz.MULTIPLE_INTERVAL_SELECTION]});
qx.Proto._modifySelectionMode=function(selectionMode){if(selectionMode==qx.ui.table.SelectionModel.NO_SELECTION){this.clearSelection();
}return true;
};
qx.Proto.setBatchMode=function(batchMode){if(batchMode){this.hasBatchModeRefCount+=1;
}else{if(this.hasBatchModeRefCount==0){throw new Error("Try to turn off batch mode althoug it was not turned on.");
}this.hasBatchModeRefCount-=1;
if(this._hadChangeEventInBatchMode){this._hadChangeEventInBatchMode=false;
this._fireChangeSelection();
}}return this.hasBatchMode();
};
qx.Proto.hasBatchMode=function(){return this.hasBatchModeRefCount>0;
};
qx.Proto.getAnchorSelectionIndex=function(){return this._anchorSelectionIndex;
};
qx.Proto.getLeadSelectionIndex=function(){return this._leadSelectionIndex;
};
qx.Proto.clearSelection=function(){if(!this.isSelectionEmpty()){this._clearSelection();
this._fireChangeSelection();
}};
qx.Proto.isSelectionEmpty=function(){return this._selectedRangeArr.length==0;
};
qx.Proto.getSelectedCount=function(){var selectedCount=0;
for(var i=0;i<this._selectedRangeArr.length;i++){var range=this._selectedRangeArr[i];
selectedCount+=range.maxIndex-range.minIndex+1;
}return selectedCount;
};
qx.Proto.isSelectedIndex=function(index){for(var i=0;i<this._selectedRangeArr.length;i++){var range=this._selectedRangeArr[i];
if(index>=range.minIndex&&index<=range.maxIndex){return true;
}}return false;
};
qx.Proto.getSelectedRanges=function(){var retVal=[];
for(var i=0;i<this._selectedRangeArr.length;i++){retVal.push({minIndex:this._selectedRangeArr[i].minIndex,maxIndex:this._selectedRangeArr[i].maxIndex});
}return retVal;
};
qx.Proto.iterateSelection=function(iterator,object){for(var i=0;i<this._selectedRangeArr.length;i++){for(var j=this._selectedRangeArr[i].minIndex;j<=this._selectedRangeArr[i].maxIndex;j++){iterator.call(object,j);
}}};
qx.Proto.setSelectionInterval=function(fromIndex,toIndex){var SelectionModel=qx.ui.table.SelectionModel;
switch(this.getSelectionMode()){case SelectionModel.NO_SELECTION:return;
case SelectionModel.SINGLE_SELECTION:fromIndex=toIndex;
break;
}this._clearSelection();
this._addSelectionInterval(fromIndex,toIndex);
this._fireChangeSelection();
};
qx.Proto.addSelectionInterval=function(fromIndex,toIndex){var SelectionModel=qx.ui.table.SelectionModel;
switch(this.getSelectionMode()){case SelectionModel.NO_SELECTION:return;
case SelectionModel.MULTIPLE_INTERVAL_SELECTION:this._addSelectionInterval(fromIndex,toIndex);
this._fireChangeSelection();
break;
default:this.setSelectionInterval(fromIndex,toIndex);
break;
}};
qx.Proto.removeSelectionInterval=function(fromIndex,toIndex){this._anchorSelectionIndex=fromIndex;
this._leadSelectionIndex=toIndex;
var minIndex=Math.min(fromIndex,toIndex);
var maxIndex=Math.max(fromIndex,toIndex);
for(var i=0;i<this._selectedRangeArr.length;i++){var range=this._selectedRangeArr[i];
if(range.minIndex>maxIndex){break;
}else if(range.maxIndex>=minIndex){var minIsIn=(range.minIndex>=minIndex)&&(range.minIndex<=maxIndex);
var maxIsIn=(range.maxIndex>=minIndex)&&(range.maxIndex<=maxIndex);
if(minIsIn&&maxIsIn){this._selectedRangeArr.splice(i,1);
i--;
}else if(minIsIn){range.minIndex=maxIndex+1;
}else if(maxIsIn){range.maxIndex=minIndex-1;
}else{var newRange={minIndex:maxIndex+1,maxIndex:range.maxIndex};
this._selectedRangeArr.splice(i+1,0,newRange);
range.maxIndex=minIndex-1;
break;
}}}this._fireChangeSelection();
};
qx.Proto._clearSelection=function(){this._selectedRangeArr=[];
this._anchorSelectionIndex=-1;
this._leadSelectionIndex=-1;
};
qx.Proto._addSelectionInterval=function(fromIndex,toIndex){this._anchorSelectionIndex=fromIndex;
this._leadSelectionIndex=toIndex;
var minIndex=Math.min(fromIndex,toIndex);
var maxIndex=Math.max(fromIndex,toIndex);
var newRangeIndex=0;
for(;newRangeIndex<this._selectedRangeArr.length;newRangeIndex++){var range=this._selectedRangeArr[newRangeIndex];
if(range.minIndex>minIndex){break;
}}this._selectedRangeArr.splice(newRangeIndex,0,{minIndex:minIndex,maxIndex:maxIndex});
var lastRange=this._selectedRangeArr[0];
for(var i=1;i<this._selectedRangeArr.length;i++){var range=this._selectedRangeArr[i];
if(lastRange.maxIndex+1>=range.minIndex){lastRange.maxIndex=Math.max(lastRange.maxIndex,range.maxIndex);
this._selectedRangeArr.splice(i,1);
i--;
}else{lastRange=range;
}}};
qx.Proto._dumpRanges=function(){var text=$[1359];
for(var i=0;i<this._selectedRangeArr.length;i++){var range=this._selectedRangeArr[i];
text+=$[796]+range.minIndex+$[1006]+range.maxIndex+$[190];
}this.debug(text);
};
qx.Proto._fireChangeSelection=function(){if(this.hasBatchMode()){this._hadChangeEventInBatchMode=true;
}else if(this.hasEventListeners($[145])){this.dispatchEvent(new qx.event.type.Event($[145]),true);
}};




/* ID: qx.ui.table.TableModel */
qx.OO.defineClass($[706],qx.core.Target,function(){qx.core.Target.call(this);
});
qx.Proto.getRowCount=function(){throw new Error("getRowCount is abstract");
};
qx.Proto.getRowData=function(rowIndex){return null;
};
qx.Proto.getColumnCount=function(){throw new Error("getColumnCount is abstract");
};
qx.Proto.getColumnId=function(columnIndex){throw new Error("getColumnId is abstract");
};
qx.Proto.getColumnIndexById=function(columnId){throw new Error("getColumnIndexById is abstract");
};
qx.Proto.getColumnName=function(columnIndex){throw new Error("getColumnName is abstract");
};
qx.Proto.isColumnEditable=function(columnIndex){return false;
};
qx.Proto.isColumnSortable=function(columnIndex){return false;
};
qx.Proto.sortByColumn=function(columnIndex,ascending){};
qx.Proto.getSortColumnIndex=function(){return -1;
};
qx.Proto.isSortAscending=function(){return true;
};
qx.Proto.prefetchRows=function(firstRowIndex,lastRowIndex){};
qx.Proto.getValue=function(columnIndex,rowIndex){throw new Error("getValue is abstract");
};
qx.Proto.getValueById=function(columnId,rowIndex){return this.getValue(this.getColumnIndexById(columnId),rowIndex);
};
qx.Proto.setValue=function(columnIndex,rowIndex,value){throw new Error("setValue is abstract");
};
qx.Proto.setValueById=function(columnId,rowIndex,value){return this.setValue(this.getColumnIndexById(columnId),rowIndex,value);
};
qx.Clazz.EVENT_TYPE_DATA_CHANGED="dataChanged";
qx.Clazz.EVENT_TYPE_META_DATA_CHANGED="metaDataChanged";




/* ID: qx.ui.table.DataCellRenderer */
qx.OO.defineClass($[1258],qx.core.Object,function(){qx.core.Object.call(this);
});
qx.Proto.createDataCellHtml=function(cellInfo){throw new Error("createDataCellHtml is abstract");
};
qx.Proto.updateDataCellElement=function(cellInfo,cellElement){throw new Error("updateDataCellElement is abstract");
};
qx.Proto.createDataCellHtml_array_join=function(cellInfo,htmlArr){throw new Error("createDataCellHtml_array_join is abstract");
};




/* ID: qx.ui.table.AbstractDataCellRenderer */
qx.OO.defineClass($[1211],qx.ui.table.DataCellRenderer,function(){qx.ui.table.DataCellRenderer.call(this);
});
qx.Proto.createDataCellHtml=function(cellInfo){var AbstractDataCellRenderer=qx.ui.table.AbstractDataCellRenderer;
return AbstractDataCellRenderer.MAIN_DIV_START+this._getCellStyle(cellInfo)+AbstractDataCellRenderer.MAIN_DIV_START_END+this._getContentHtml(cellInfo)+AbstractDataCellRenderer.MAIN_DIV_END;
};
qx.Proto.updateDataCellElement=function(cellInfo,cellElement){cellElement.innerHTML=this._getContentHtml(cellInfo);
};
qx.Proto._getCellStyle=function(cellInfo){return cellInfo.style+qx.ui.table.AbstractDataCellRenderer.MAIN_DIV_STYLE;
};
qx.Proto._getContentHtml=function(cellInfo){return cellInfo.value;
};
qx.Proto.createDataCellHtml_array_join=function(cellInfo,htmlArr){var AbstractDataCellRenderer=qx.ui.table.AbstractDataCellRenderer;
if(qx.ui.table.TablePane.USE_TABLE){htmlArr.push(AbstractDataCellRenderer.TABLE_TD);
htmlArr.push(cellInfo.styleHeight);
htmlArr.push($[21]);
}else{htmlArr.push(AbstractDataCellRenderer.ARRAY_JOIN_MAIN_DIV_LEFT);
htmlArr.push(cellInfo.styleLeft);
htmlArr.push(AbstractDataCellRenderer.ARRAY_JOIN_MAIN_DIV_WIDTH);
htmlArr.push(cellInfo.styleWidth);
htmlArr.push(AbstractDataCellRenderer.ARRAY_JOIN_MAIN_DIV_HEIGHT);
htmlArr.push(cellInfo.styleHeight);
htmlArr.push($[21]);
}this._createCellStyle_array_join(cellInfo,htmlArr);
htmlArr.push(AbstractDataCellRenderer.ARRAY_JOIN_MAIN_DIV_START_END);
this._createContentHtml_array_join(cellInfo,htmlArr);
if(qx.ui.table.TablePane.USE_TABLE){htmlArr.push(AbstractDataCellRenderer.TABLE_TD_END);
}else{htmlArr.push(AbstractDataCellRenderer.ARRAY_JOIN_MAIN_DIV_END);
}};
qx.Proto._createCellStyle_array_join=function(cellInfo,htmlArr){htmlArr.push(qx.ui.table.AbstractDataCellRenderer.MAIN_DIV_STYLE);
};
qx.Proto._createContentHtml_array_join=function(cellInfo,htmlArr){htmlArr.push(cellInfo.value);
};
qx.Clazz.MAIN_DIV_START='<div style="';
qx.Clazz.MAIN_DIV_START_END='">';
qx.Clazz.MAIN_DIV_END='</div>';
qx.Clazz.MAIN_DIV_STYLE=';overflow:hidden;white-space:nowrap;border-right:1px solid #eeeeee;border-bottom:1px solid #eeeeee;padding-left:2px;padding-right:2px;cursor:default'+(qx.core.Client.getInstance().isMshtml()?'':';-moz-user-select:none;');
qx.Clazz.ARRAY_JOIN_MAIN_DIV_LEFT='<div style="position:absolute;left:';
qx.Clazz.ARRAY_JOIN_MAIN_DIV_WIDTH='px;top:0px;width:';
qx.Clazz.ARRAY_JOIN_MAIN_DIV_HEIGHT='px;height:';
qx.Clazz.ARRAY_JOIN_MAIN_DIV_START_END='">';
qx.Clazz.ARRAY_JOIN_MAIN_DIV_END='</div>';
qx.Clazz.TABLE_TD='<td style="height:';
qx.Clazz.TABLE_TD_END='</td>';




/* ID: qx.ui.table.TablePane */
qx.OO.defineClass($[1458],qx.ui.basic.Terminator,function(paneScroller){qx.ui.basic.Terminator.call(this);
this._paneScroller=paneScroller;
this._lastColCount=0;
this._lastRowCount=0;
});
qx.OO.addProperty({name:$[2088],type:$[2],defaultValue:0});
qx.OO.addProperty({name:$[2273],type:$[2],defaultValue:0});
qx.Proto._modifyFirstVisibleRow=function(propValue,propOldValue,propData){this._updateContent();
return true;
};
qx.Proto._modifyVisibleRowCount=function(propValue,propOldValue,propData){this._updateContent();
return true;
};
qx.Proto._afterAppear=function(){qx.ui.basic.Terminator.prototype._afterAppear.call(this);
if(this._updateWantedWhileInvisible){this._updateContent();
this._updateWantedWhileInvisible=false;
}};
qx.Proto.getPaneScroller=function(){return this._paneScroller;
};
qx.Proto.getTable=function(){return this._paneScroller.getTable();
};
qx.Proto.setFocusedCell=function(col,row,massUpdate){if(col!=this._focusedCol||row!=this._focusedRow){var oldCol=this._focusedCol;
var oldRow=this._focusedRow;
this._focusedCol=col;
this._focusedRow=row;
if(row!=oldRow&&!massUpdate){this._updateContent(false,oldRow,true);
this._updateContent(false,row,true);
}}};
qx.Proto._onSelectionChanged=function(evt){this._updateContent(false,null,true);
};
qx.Proto._onFocusChanged=function(evt){this._updateContent(false,null,true);
};
qx.Proto._onColWidthChanged=function(evt){this._updateContent(true);
};
qx.Proto._onColOrderChanged=function(evt){this._updateContent(true);
};
qx.Proto._onPaneModelChanged=function(evt){this._updateContent(true);
};
qx.Proto._onTableModelDataChanged=function(evt){var data=evt.getData?evt.getData():null;
var firstRow=this.getFirstVisibleRow();
var rowCount=this.getVisibleRowCount();
if(data==null||data.lastRow==-1||data.lastRow>=firstRow&&data.firstRow<firstRow+rowCount){this._updateContent();
}};
qx.Proto._onTableModelMetaDataChanged=function(evt){this._updateContent();
};
qx.Proto._updateContent=function(completeUpdate,onlyRow,onlySelectionOrFocusChanged){if(!this.isSeeable()){this._updateWantedWhileInvisible=true;
return;
}
if(qx.ui.table.TablePane.USE_ARRAY_JOIN){this._updateContent_array_join(completeUpdate,onlyRow,onlySelectionOrFocusChanged);
}else{this._updateContent_orig(completeUpdate,onlyRow,onlySelectionOrFocusChanged);
}};
qx.Proto._updateContent_array_join=function(completeUpdate,onlyRow,onlySelectionOrFocusChanged){var TablePane=qx.ui.table.TablePane;
var table=this.getTable();
var selectionModel=table.getSelectionModel();
var tableModel=table.getTableModel();
var columnModel=table.getTableColumnModel();
var paneModel=this.getPaneScroller().getTablePaneModel();
var rowRenderer=table.getDataRowRenderer();
var colCount=paneModel.getColumnCount();
var rowHeight=table.getRowHeight();
var firstRow=this.getFirstVisibleRow();
var rowCount=this.getVisibleRowCount();
var modelRowCount=tableModel.getRowCount();
if(firstRow+rowCount>modelRowCount){rowCount=Math.max(0,modelRowCount-firstRow);
}var cellInfo={table:table};
cellInfo.styleHeight=rowHeight;
var htmlArr=[];
var rowWidth=paneModel.getTotalWidth();
if(TablePane.USE_TABLE){htmlArr.push($[855]);
htmlArr.push(qx.ui.table.TablePane.CONTENT_ROW_FONT_FAMILY_TEST);
htmlArr.push($[972]);
htmlArr.push(qx.ui.table.TablePane.CONTENT_ROW_FONT_SIZE_TEST);
htmlArr.push($[346]);
htmlArr.push(rowWidth);
htmlArr.push($[2007]);
for(var x=0;x<colCount;x++){var col=paneModel.getColumnAtX(x);
htmlArr.push($[1255]);
htmlArr.push(columnModel.getColumnWidth(col));
htmlArr.push($[1374]);
}htmlArr.push($[2367]);
}tableModel.prefetchRows(firstRow,firstRow+rowCount-1);
for(var y=0;y<rowCount;y++){var row=firstRow+y;
cellInfo.row=row;
cellInfo.selected=selectionModel.isSelectedIndex(row);
cellInfo.focusedRow=(this._focusedRow==row);
cellInfo.rowData=tableModel.getRowData(row);
if(TablePane.USE_TABLE){htmlArr.push($[1231]);
htmlArr.push(rowHeight);
}else{htmlArr.push($[1791]);
htmlArr.push(y*rowHeight);
htmlArr.push($[895]);
htmlArr.push(rowWidth);
htmlArr.push($[1486]);
htmlArr.push(rowHeight);
htmlArr.push($[203]);
}rowRenderer._createRowStyle_array_join(cellInfo,htmlArr);
htmlArr.push($[1062]);
var left=0;
for(var x=0;x<colCount;x++){var col=paneModel.getColumnAtX(x);
cellInfo.xPos=x;
cellInfo.col=col;
cellInfo.editable=tableModel.isColumnEditable(col);
cellInfo.focusedCol=(this._focusedCol==col);
cellInfo.value=tableModel.getValue(col,row);
var cellWidth=columnModel.getColumnWidth(col);
cellInfo.styleLeft=left;
cellInfo.styleWidth=cellWidth;
var cellRenderer=columnModel.getDataCellRenderer(col);
cellRenderer.createDataCellHtml_array_join(cellInfo,htmlArr);
left+=cellWidth;
}
if(TablePane.USE_TABLE){htmlArr.push($[1010]);
}else{htmlArr.push($[524]);
}}
if(TablePane.USE_TABLE){htmlArr.push($[1858]);
}var elem=this.getElement();
elem.innerHTML=htmlArr.join($[1]);
this.setHeight(rowCount*rowHeight);
this._lastColCount=colCount;
this._lastRowCount=rowCount;
};
qx.Proto._updateContent_orig=function(completeUpdate,onlyRow,onlySelectionOrFocusChanged){var TablePane=qx.ui.table.TablePane;
var table=this.getTable();
var alwaysUpdateCells=table.getAlwaysUpdateCells();
var selectionModel=table.getSelectionModel();
var tableModel=table.getTableModel();
var columnModel=table.getTableColumnModel();
var paneModel=this.getPaneScroller().getTablePaneModel();
var rowRenderer=table.getDataRowRenderer();
var colCount=paneModel.getColumnCount();
var rowHeight=table.getRowHeight();
var firstRow=this.getFirstVisibleRow();
var rowCount=this.getVisibleRowCount();
var modelRowCount=tableModel.getRowCount();
if(firstRow+rowCount>modelRowCount){rowCount=Math.max(0,modelRowCount-firstRow);
}if(completeUpdate||this._lastRowCount>rowCount){var firstRowToRemove=completeUpdate?0:rowCount;
this._cleanUpRows(firstRowToRemove);
}
if(TablePane.USE_TABLE){throw new Error("Combination of USE_TABLE==true and USE_ARRAY_JOIN==false is not yet implemented");
}var elem=this.getElement();
var childNodes=elem.childNodes;
var cellInfo={table:table};
tableModel.prefetchRows(firstRow,firstRow+rowCount-1);
for(var y=0;y<rowCount;y++){var row=firstRow+y;
if((onlyRow!=null)&&(row!=onlyRow)){continue;
}cellInfo.row=row;
cellInfo.selected=selectionModel.isSelectedIndex(row);
cellInfo.focusedRow=(this._focusedRow==row);
cellInfo.rowData=tableModel.getRowData(row);
var rowElem;
var recyleRowElem;
if(y<childNodes.length){rowElem=childNodes[y];
recyleRowElem=true;
}else{var rowElem=document.createElement($[50]);
rowElem.style.position=$[91];
rowElem.style.left=$[165];
rowElem.style.top=(y*rowHeight)+$[21];
rowElem.style.height=rowHeight+$[21];
elem.appendChild(rowElem);
recyleRowElem=false;
}rowRenderer.updateDataRowElement(cellInfo,rowElem);
if(alwaysUpdateCells||!recyleRowElem||!onlySelectionOrFocusChanged){var html=$[1];
var left=0;
for(var x=0;x<colCount;x++){var col=paneModel.getColumnAtX(x);
cellInfo.xPos=x;
cellInfo.col=col;
cellInfo.editable=tableModel.isColumnEditable(col);
cellInfo.focusedCol=(this._focusedCol==col);
cellInfo.value=tableModel.getValue(col,row);
var width=columnModel.getColumnWidth(col);
cellInfo.style=$[1340]+left+$[2128]+width+$[1857]+rowHeight+$[21];
var cellRenderer=columnModel.getDataCellRenderer(col);
if(recyleRowElem){var cellElem=rowElem.childNodes[x];
cellRenderer.updateDataCellElement(cellInfo,cellElem);
}else{html+=cellRenderer.createDataCellHtml(cellInfo);
}left+=width;
}
if(!recyleRowElem){rowElem.style.width=left+$[21];
rowElem.innerHTML=html;
}}}this.setHeight(rowCount*rowHeight);
this._lastColCount=colCount;
this._lastRowCount=rowCount;
};
qx.Proto._cleanUpRows=function(firstRowToRemove){var elem=this.getElement();
if(elem){var childNodes=this.getElement().childNodes;
var paneModel=this.getPaneScroller().getTablePaneModel();
var colCount=paneModel.getColumnCount();
for(var y=childNodes.length-1;y>=firstRowToRemove;y--){elem.removeChild(childNodes[y]);
}}};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}this._cleanUpRows(0);
this._paneScroller=null;
return qx.ui.basic.Terminator.prototype.dispose.call(this);
};
qx.Clazz.USE_ARRAY_JOIN=false;
qx.Clazz.USE_TABLE=false;
qx.Clazz.CONTENT_ROW_FONT_FAMILY_TEST="'Segoe UI', Corbel, Calibri, Tahoma, 'Lucida Sans Unicode', sans-serif";
qx.Clazz.CONTENT_ROW_FONT_SIZE_TEST="11px";




/* ID: qx.locale.Number */
qx.OO.defineClass($[1168]);
qx.Clazz.getDecimalSeparator=function(locale){return new qx.locale.LocalizedString($[2193],[],locale);
};
qx.Clazz.getGroupSeparator=function(locale){return new qx.locale.LocalizedString($[1013],[],locale);
};
qx.Clazz.getPercentFormat=function(locale){return new qx.locale.LocalizedString($[1432],[],locale);
};




/* ID: qx.util.format.NumberFormat */
qx.OO.defineClass($[1035],qx.util.format.Format,function(locale){qx.util.format.Format.call(this);
this._locale=locale;
});
qx.OO.addProperty({name:$[2424],type:$[2],defaultValue:0,allowNull:false});
qx.OO.addProperty({name:$[1038],type:$[2],defaultValue:null});
qx.OO.addProperty({name:$[1387],type:$[2],defaultValue:0,allowNull:false});
qx.OO.addProperty({name:$[1329],type:$[2],defaultValue:null});
qx.OO.addProperty({name:$[2331],type:$[3],defaultValue:true,allowNull:false});
qx.OO.addProperty({name:$[1247],type:$[0],defaultValue:$[1],allowNull:false});
qx.OO.addProperty({name:$[848],type:$[0],defaultValue:$[1],allowNull:false});
qx.Proto.format=function(num){var NumberFormat=qx.util.format.NumberFormat;
var negative=(num<0);
if(negative){num=-num;
}
if(this.getMaximumFractionDigits()!=null){var mover=Math.pow(10,this.getMaximumFractionDigits());
num=Math.round(num*mover)/mover;
}var integerDigits=String(Math.floor(num)).length;
var numStr=$[1]+num;
var integerStr=numStr.substring(0,integerDigits);
while(integerStr.length<this.getMinimumIntegerDigits()){integerStr=$[36]+integerStr;
}
if(this.getMaximumIntegerDigits()!=null&&integerStr.length>this.getMaximumIntegerDigits()){integerStr=integerStr.substring(integerStr.length-this.getMaximumIntegerDigits());
}var fractionStr=numStr.substring(integerDigits+1);
while(fractionStr.length<this.getMinimumFractionDigits()){fractionStr+=$[36];
}
if(this.getMaximumFractionDigits()!=null&&fractionStr.length>this.getMaximumFractionDigits()){fractionStr=fractionStr.substring(0,this.getMaximumFractionDigits());
}if(this.getGroupingUsed()){var origIntegerStr=integerStr;
integerStr=$[1];
var groupPos;
for(groupPos=origIntegerStr.length;groupPos>3;groupPos-=3){integerStr=$[1]+qx.locale.Number.getGroupSeparator(this._locale)+origIntegerStr.substring(groupPos-3,groupPos)+integerStr;
}integerStr=origIntegerStr.substring(0,groupPos)+integerStr;
}var prefix=this.getPrefix()?this.getPrefix():$[1];
var postfix=this.getPostfix()?this.getPostfix():$[1];
var str=prefix+(negative?$[57]:$[1])+integerStr;
if(fractionStr.length>0){str+=$[1]+qx.locale.Number.getDecimalSeparator(this._locale)+fractionStr;
}str+=postfix;
return str;
};
qx.Proto.parse=function(str){var NumberFormat=qx.util.format.NumberFormat;
var groupSepEsc=qx.lang.String.escapeRegexpChars(qx.locale.Number.getGroupSeparator(this._locale)+$[1]);
var decimalSepEsc=qx.lang.String.escapeRegexpChars(qx.locale.Number.getDecimalSeparator(this._locale)+$[1]);
var regex=new RegExp(qx.lang.String.escapeRegexpChars(this.getPrefix())+$[1875]+groupSepEsc+$[898]+$[724]+decimalSepEsc+$[2396]+qx.lang.String.escapeRegexpChars(this.getPostfix()));
var hit=regex.exec(str);
if(hit==null){throw new Error("Number string '"+str+"' does not match the number format");
}var negative=(hit[1]==$[57]);
var integerStr=hit[2];
var fractionStr=hit[3];
integerStr=integerStr.replace(new RegExp(groupSepEsc),$[1]);
var asStr=(negative?$[57]:$[1])+integerStr;
if(fractionStr!=null&&fractionStr.length!=0){fractionStr=fractionStr.replace(new RegExp(decimalSepEsc),$[1]);
asStr+=$[53]+fractionStr;
}return parseFloat(asStr);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;
qx.Clazz.getIntegerInstance=function(){var NumberFormat=qx.util.format.NumberFormat;
if(NumberFormat._integerInstance==null){NumberFormat._integerInstance=new NumberFormat();
NumberFormat._integerInstance.setMaximumFractionDigits(0);
}return NumberFormat._integerInstance;
};




/* ID: qx.ui.table.DefaultDataCellRenderer */
qx.OO.defineClass($[1952],qx.ui.table.AbstractDataCellRenderer,function(){qx.ui.table.AbstractDataCellRenderer.call(this);
});
qx.OO.addProperty({name:$[2306],type:$[3],defaultValue:true,allowNull:false});
qx.Proto._getCellStyle=function(cellInfo){var style=qx.ui.table.AbstractDataCellRenderer.prototype._getCellStyle(cellInfo);
var stylesToApply=this._getStyleFlags(cellInfo);
if(stylesToApply&qx.ui.table.DefaultDataCellRenderer.STYLEFLAG_ALIGN_RIGHT){style+=$[683];
}
if(stylesToApply&qx.ui.table.DefaultDataCellRenderer.STYLEFLAG_BOLD){style+=$[590];
}
if(stylesToApply&qx.ui.table.DefaultDataCellRenderer.STYLEFLAG_ITALIC){style+=$[757];
}return style;
};
qx.Proto._getStyleFlags=function(cellInfo){if(this.getUseAutoAlign()){if(typeof cellInfo.value==$[2]){return qx.ui.table.DefaultDataCellRenderer.STYLEFLAG_ALIGN_RIGHT;
}}};
qx.Proto._getContentHtml=function(cellInfo){return qx.html.String.escape(this._formatValue(cellInfo));
};
qx.Proto.updateDataCellElement=function(cellInfo,cellElement){var clazz=qx.ui.table.DefaultDataCellRenderer;
var style=cellElement.style;
var stylesToApply=this._getStyleFlags(cellInfo);
if(stylesToApply&clazz.STYLEFLAG_ALIGN_RIGHT){style.textAlign=$[10];
}else{style.textAlign=$[1];
}
if(stylesToApply&clazz.STYLEFLAG_BOLD){style.fontWeight=$[283];
}else{style.fontWeight=$[1];
}
if(stylesToApply&clazz.STYLEFLAG_ITALIC){style.fontStyle=$[1338];
}else{style.fontStyle=$[1];
}var textNode=cellElement.firstChild;
if(textNode!=null){textNode.nodeValue=this._formatValue(cellInfo);
}else{cellElement.innerHTML=qx.html.String.escape(this._formatValue(cellInfo));
}};
qx.Proto._formatValue=function(cellInfo){var value=cellInfo.value;
if(value==null){return $[1];
}else if(typeof value==$[2]){return qx.ui.table.DefaultDataCellRenderer._numberFormat.format(value);
}else if(value instanceof Date){return qx.util.format.DateFormat.getDateInstance().format(value);
}else{return value;
}};
qx.Proto._createCellStyle_array_join=function(cellInfo,htmlArr){qx.ui.table.AbstractDataCellRenderer.prototype._createCellStyle_array_join(cellInfo,htmlArr);
var stylesToApply=this._getStyleFlags(cellInfo);
if(stylesToApply&qx.ui.table.DefaultDataCellRenderer.STYLEFLAG_ALIGN_RIGHT){htmlArr.push($[683]);
}
if(stylesToApply&qx.ui.table.DefaultDataCellRenderer.STYLEFLAG_BOLD){htmlArr.push($[590]);
}
if(stylesToApply&qx.ui.table.DefaultDataCellRenderer.STYLEFLAG_ITALIC){htmlArr.push($[757]);
}};
qx.Proto._createContentHtml_array_join=function(cellInfo,htmlArr){htmlArr.push(qx.html.String.escape(this._formatValue(cellInfo)));
};
qx.Clazz._numberFormat=new qx.util.format.NumberFormat();
qx.Clazz._numberFormat.setMaximumFractionDigits(2);
qx.Clazz.STYLEFLAG_ALIGN_RIGHT=1;
qx.Clazz.STYLEFLAG_BOLD=2;
qx.Clazz.STYLEFLAG_ITALIC=4;




/* ID: qx.locale.Date */
qx.OO.defineClass($[1723]);
qx.Clazz.getAmMarker=function(locale){return new qx.locale.LocalizedString($[1499],[],locale);
};
qx.Clazz.getPmMarker=function(locale){return new qx.locale.LocalizedString($[2169],[],locale);
};
qx.Clazz.getDayNames=function(length,locale){if(length!=$[182]&&length!=$[218]&&length!=$[180]){throw new Error('format must be one of "abbreviated", "narrow", "wide"');
}var days=[$[474],$[576],$[765],$[690],$[737],$[559],$[622]];
var names=[];
for(var i=0;i<days.length;i++){var key=$[505]+length+$[95]+days[i];
names.push(new qx.locale.LocalizedString(key,[],locale));
}return names;
};
qx.Clazz.getDayName=function(length,day,locale){if(length!=$[182]&&length!=$[218]&&length!=$[180]){throw new Error('format must be one of "abbreviated", "narrow", "wide"');
}var days=[$[474],$[576],$[765],$[690],$[737],$[559],$[622]];
var key=$[505]+length+$[95]+days[day];
return new qx.locale.LocalizedString(key,[],locale);
};
qx.Clazz.getMonthNames=function(length,locale){if(length!=$[182]&&length!=$[218]&&length!=$[180]){throw new Error('format must be one of "abbreviated", "narrow", "wide"');
}var names=[];
for(var i=0;i<12;i++){var key=$[546]+length+$[95]+(i+1);
names.push(new qx.locale.LocalizedString(key,[],locale));
}return names;
};
qx.Clazz.getMonthName=function(length,month,locale){if(length!=$[182]&&length!=$[218]&&length!=$[180]){throw new Error('format must be one of "abbreviated", "narrow", "wide"');
}var key=$[546]+length+$[95]+(month+1);
return new qx.locale.LocalizedString(key,[],locale);
};
qx.Clazz.getDateFormat=function(size,locale){if(size!=$[120]&&size!=$[252]&&size!=$[235]&&size!=$[313]){throw new Error('format must be one of "short", "medium", "long", "full"');
}var key=$[2022]+size;
return new qx.locale.LocalizedString(key,[],locale);
};
qx.Clazz.getDateTimeFormat=function(canonical,fallback,locale){var key=$[2103]+canonical;
var localizedFormat=qx.locale.Manager.getInstance().translate(key,[],locale);
if(localizedFormat==key){localizedFormat=fallback;
}return localizedFormat;
};
qx.Clazz.getTimeFormat=function(size,locale){if(size!=$[120]&&size!=$[252]&&size!=$[235]&&size!=$[313]){throw new Error('format must be one of "short", "medium", "long", "full"');
}
switch(size){case $[120]:case $[252]:return qx.locale.Date.getDateTimeFormat($[2085],$[794]);
case $[235]:return qx.locale.Date.getDateTimeFormat($[377],$[275]);
case $[313]:return qx.locale.Date.getDateTimeFormat($[1837],$[1914]);
default:throw new Error("This case should never happen.");
}};
qx.Clazz.getWeekStart=function(locale){var weekStart={"MV":5,"AE":6,"AF":6,"BH":6,"DJ":6,"DZ":6,"EG":6,"ER":6,"ET":6,"IQ":6,"IR":6,"JO":6,"KE":6,"KW":6,"LB":6,"LY":6,"MA":6,"OM":6,"QA":6,"SA":6,"SD":6,"SO":6,"TN":6,"YE":6,"AS":0,"AU":0,"AZ":0,"BW":0,"CA":0,"CN":0,"FO":0,"GE":0,"GL":0,"GU":0,"HK":0,"IE":0,"IL":0,"IS":0,"JM":0,"JP":0,"KG":0,"KR":0,"LA":0,"MH":0,"MN":0,"MO":0,"MP":0,"MT":0,"NZ":0,"PH":0,"PK":0,"SG":0,"TH":0,"TT":0,"TW":0,"UM":0,"US":0,"UZ":0,"VI":0,"ZA":0,"ZW":0,"ET":0,"MW":0,"NG":0,"TJ":0};
var territory=qx.locale.Date._getTerritory(locale);
return weekStart[territory]!=null?weekStart[territory]:1;
};
qx.Clazz.getWeekendStart=function(locale){var weekendStart={"EG":5,"IL":5,"SY":5,"IN":0,"AE":4,"BH":4,"DZ":4,"IQ":4,"JO":4,"KW":4,"LB":4,"LY":4,"MA":4,"OM":4,"QA":4,"SA":4,"SD":4,"TN":4,"YE":4};
var territory=qx.locale.Date._getTerritory(locale);
return weekendStart[territory]!=null?weekendStart[territory]:6;
};
qx.Clazz.getWeekendEnd=function(locale){var weekendEnd={"AE":5,"BH":5,"DZ":5,"IQ":5,"JO":5,"KW":5,"LB":5,"LY":5,"MA":5,"OM":5,"QA":5,"SA":5,"SD":5,"TN":5,"YE":5,"AF":5,"IR":5,"EG":6,"IL":6,"SY":6};
var territory=qx.locale.Date._getTerritory(locale);
return weekendEnd[territory]!=null?weekendEnd[territory]:0;
};
qx.Clazz.isWeekend=function(day,locale){var weekendStart=qx.locale.Date.getWeekendStart(locale);
var weekendEnd=qx.locale.Date.getWeekendEnd(locale);
if(weekendEnd>weekendStart){return ((day>=weekendStart)&&(day<=weekendEnd));
}else{return ((day>=weekendStart)||(day<=weekendEnd));
}};
qx.Clazz._getTerritory=function(locale){if(locale){var territory=locale.split($[95])[1]||locale;
}else{territory=qx.locale.Manager.getInstance().getTerritory()||qx.locale.Manager.getInstance().getLanguage();
}return territory.toUpperCase();
};




/* ID: qx.util.format.DateFormat */
qx.OO.defineClass($[1246],qx.util.format.Format,function(format,locale){qx.util.format.Format.call(this);
if(format!=null){this._format=format.toString();
}else{this._format=qx.locale.Date.getDateFormat($[235],locale)+$[44]+qx.locale.Date.getDateTimeFormat($[377],$[275],locale);
}this._locale=locale;
});
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._formatTree=null;
qx.util.format.Format.prototype.dispose.call(this);
};
qx.Proto._fillNumber=function(number,minSize){var str=$[1]+number;
while(str.length<minSize){str=$[36]+str;
}return str;
};
qx.Proto._getDayInYear=function(date){var helpDate=new Date(date.getTime());
var day=helpDate.getDate();
while(helpDate.getMonth()!=0){helpDate.setDate(-1);
day+=helpDate.getDate()+1;
}return day;
};
qx.Proto._thursdayOfSameWeek=function(date){return new Date(date.getTime()+(3-((date.getDay()+6)%7))*86400000);
};
qx.Proto._getWeekInYear=function(date){var thursdayDate=this._thursdayOfSameWeek(date);
var weekYear=thursdayDate.getFullYear();
var thursdayWeek1=this._thursdayOfSameWeek(new Date(weekYear,0,4));
return Math.floor(1.5+(thursdayDate.getTime()-thursdayWeek1.getTime())/86400000/7);
};
qx.Proto.format=function(date){var DateFormat=qx.util.format.DateFormat;
var locale=this._locale;
var fullYear=date.getFullYear();
var month=date.getMonth();
var dayOfMonth=date.getDate();
var dayOfWeek=date.getDay();
var hours=date.getHours();
var minutes=date.getMinutes();
var seconds=date.getSeconds();
var ms=date.getMilliseconds();
var timezone=date.getTimezoneOffset()/60;
this._initFormatTree();
var output=$[1];
for(var i=0;i<this._formatTree.length;i++){var currAtom=this._formatTree[i];
if(currAtom.type==$[286]){output+=currAtom.text;
}else{var wildcardChar=currAtom.character;
var wildcardSize=currAtom.size;
var replacement=$[166];
switch(wildcardChar){case $[924]:if(wildcardSize==2){replacement=this._fillNumber(fullYear%100,2);
}else if(wildcardSize==4){replacement=fullYear;
}break;
case $[1083]:replacement=this._fillNumber(this._getDayInYear(date),wildcardSize);
break;
case $[1509]:replacement=this._fillNumber(dayOfMonth,wildcardSize);
break;
case $[1426]:replacement=this._fillNumber(this._getWeekInYear(date),wildcardSize);
break;
case $[1832]:if(wildcardSize==2){replacement=qx.locale.Date.getDayName($[218],dayOfWeek,locale);
}else if(wildcardSize==3){replacement=qx.locale.Date.getDayName($[182],dayOfWeek,locale);
}else if(wildcardSize==4){replacement=qx.locale.Date.getDayName($[180],dayOfWeek,locale);
}break;
case $[1109]:if(wildcardSize==1||wildcardSize==2){replacement=this._fillNumber(month+1,wildcardSize);
}else if(wildcardSize==3){replacement=qx.locale.Date.getMonthName($[182],month,locale);
}else if(wildcardSize==4){replacement=qx.locale.Date.getMonthName($[180],month,locale);
}break;
case $[686]:replacement=(hours<12)?qx.locale.Date.getAmMarker(locale):qx.locale.Date.getPmMarker(locale);
break;
case $[1680]:replacement=this._fillNumber(hours,wildcardSize);
break;
case $[992]:replacement=this._fillNumber((hours==0)?24:hours,wildcardSize);
break;
case $[1801]:replacement=this._fillNumber(hours%12,wildcardSize);
break;
case $[1267]:replacement=this._fillNumber(((hours%12)==0)?12:(hours%12),wildcardSize);
break;
case $[2328]:replacement=this._fillNumber(minutes,wildcardSize);
break;
case $[1878]:replacement=this._fillNumber(seconds,wildcardSize);
break;
case $[2294]:replacement=this._fillNumber(ms,wildcardSize);
break;
case $[704]:if(wildcardSize==1){replacement=$[828]+((timezone<0)?$[57]:$[236])+this._fillNumber(timezone)+$[1204];
}else if(wildcardSize==2){replacement=DateFormat.MEDIUM_TIMEZONE_NAMES[timezone];
}else if(wildcardSize==3){replacement=DateFormat.FULL_TIMEZONE_NAMES[timezone];
}break;
case $[659]:replacement=((timezone<0)?$[57]:$[236])+this._fillNumber(timezone,2)+$[1332];
}output+=replacement;
}}return output;
};
qx.Proto.parse=function(dateStr){this._initParseFeed();
var hit=this._parseFeed.regex.exec(dateStr);
if(hit==null){throw new Error("Date string '"+dateStr+"' does not match the date format: "+this._format);
}var dateValues={year:1970,month:0,day:1,hour:0,ispm:false,min:0,sec:0,ms:0};
var currGroup=1;
for(var i=0;i<this._parseFeed.usedRules.length;i++){var rule=this._parseFeed.usedRules[i];
var value=hit[currGroup];
if(rule.field!=null){dateValues[rule.field]=parseInt(value,10);
}else{rule.manipulator(dateValues,value);
}currGroup+=(rule.groups==null)?1:rule.groups;
}var date=new Date(dateValues.year,dateValues.month,dateValues.day,(dateValues.ispm)?(dateValues.hour+12):dateValues.hour,dateValues.min,dateValues.sec,dateValues.ms);
if(dateValues.month!=date.getMonth()||dateValues.year!=date.getFullYear()){throw new Error("Error parsing date '"+dateStr+"': the value for day or month is too large");
}return date;
};
qx.Proto._initFormatTree=function(){if(this._formatTree!=null){return;
}this._formatTree=[];
var currWildcardChar;
var currWildcardSize=0;
var currLiteral=$[1];
var format=this._format;
var state=$[48];
var i=0;
while(i<format.length){var currChar=format.charAt(i);
switch(state){case $[657]:if(currChar==$[103]){if(i+1>=format.length){i++;
break;
}var lookAhead=format.charAt(i+1);
if(lookAhead==$[103]){currLiteral+=currChar;
i++;
}else{i++;
state=$[1908];
}}else{currLiteral+=currChar;
i++;
}break;
case $[265]:if(currChar==currWildcardChar){currWildcardSize++;
i++;
}else{this._formatTree.push({type:$[265],character:currWildcardChar,size:currWildcardSize});
currWildcardChar=null;
currWildcardSize=0;
state=$[48];
}break;
default:if((currChar>=$[686]&&currChar<=$[704])||(currChar>=$[2285]&&currChar<=$[659])){currWildcardChar=currChar;
state=$[265];
}else if(currChar==$[103]){if(i+1>=format.length){currLiteral+=currChar;
i++;
break;
}var lookAhead=format.charAt(i+1);
if(lookAhead==$[103]){currLiteral+=currChar;
i++;
}i++;
state=$[657];
}else{state=$[48];
}
if(state!=$[48]){if(currLiteral.length>0){this._formatTree.push({type:$[286],text:currLiteral});
currLiteral=$[1];
}}else{currLiteral+=currChar;
i++;
}break;
}}if(currWildcardChar!=null){this._formatTree.push({type:$[265],character:currWildcardChar,size:currWildcardSize});
}else if(currLiteral.length>0){this._formatTree.push({type:$[286],text:currLiteral});
}};
qx.Proto._initParseFeed=function(){if(this._parseFeed!=null){return ;
}var DateFormat=qx.util.format.DateFormat;
var format=this._format;
this._initParseRules();
this._initFormatTree();
var usedRules=[];
var pattern=$[1580];
for(var atomIdx=0;atomIdx<this._formatTree.length;atomIdx++){var currAtom=this._formatTree[atomIdx];
if(currAtom.type==$[286]){pattern+=qx.lang.String.escapeRegexpChars(currAtom.text);
}else{var wildcardChar=currAtom.character;
var wildcardSize=currAtom.size;
var wildcardRule;
for(var ruleIdx=0;ruleIdx<DateFormat._parseRules.length;ruleIdx++){var rule=DateFormat._parseRules[ruleIdx];
if(wildcardChar==rule.pattern.charAt(0)&&wildcardSize==rule.pattern.length){wildcardRule=rule;
break;
}}if(wildcardRule==null){var wildcardStr=$[1];
for(var i=0;i<wildcardSize;i++){wildcardStr+=wildcardChar;
}throw new Error("Malformed date format: "+format+". Wildcard "+wildcardStr+" is not supported");
}else{usedRules.push(wildcardRule);
pattern+=wildcardRule.regex;
}}}pattern+=$[1115];
var regex;
try{regex=new RegExp(pattern);
}catch(exc){throw new Error("Malformed date format: "+format);
}this._parseFeed={regex:regex,"usedRules":usedRules,pattern:pattern};
};
qx.Proto._initParseRules=function(){var DateFormat=qx.util.format.DateFormat;
if(DateFormat._parseRules!=null){return ;
}DateFormat._parseRules=[];
var yearManipulator=function(dateValues,value){value=parseInt(value,10);
if(value<DateFormat.ASSUME_YEAR_2000_THRESHOLD){value+=2000;
}else if(value<100){value+=1900;
}dateValues.year=value;
};
var monthManipulator=function(dateValues,value){dateValues.month=parseInt(value,10)-1;
};
var ampmManipulator=function(dateValues,value){dateValues.ispm=(value==DateFormat.PM_MARKER);
};
var noZeroHourManipulator=function(dateValues,value){dateValues.hour=parseInt(value,10)%24;
};
var noZeroAmPmHourManipulator=function(dateValues,value){dateValues.hour=parseInt(value,10)%12;
};
DateFormat._parseRules.push({pattern:$[1627],regex:$[930],groups:2,manipulator:yearManipulator});
DateFormat._parseRules.push({pattern:$[1098],regex:$[2156],manipulator:yearManipulator});
DateFormat._parseRules.push({pattern:$[291],regex:$[68],manipulator:monthManipulator});
DateFormat._parseRules.push({pattern:$[1602],regex:$[68],manipulator:monthManipulator});
DateFormat._parseRules.push({pattern:$[2271],regex:$[68],field:$[654]});
DateFormat._parseRules.push({pattern:$[695],regex:$[68],field:$[654]});
DateFormat._parseRules.push({pattern:$[242],regex:$[149]+DateFormat.AM_MARKER+$[1402]+DateFormat.PM_MARKER+$[82],manipulator:ampmManipulator});
DateFormat._parseRules.push({pattern:$[2406],regex:$[68],field:$[257]});
DateFormat._parseRules.push({pattern:$[2064],regex:$[68],field:$[257]});
DateFormat._parseRules.push({pattern:$[998],regex:$[68],manipulator:noZeroHourManipulator});
DateFormat._parseRules.push({pattern:$[1520],regex:$[68],manipulator:noZeroHourManipulator});
DateFormat._parseRules.push({pattern:$[2288],regex:$[68],field:$[257]});
DateFormat._parseRules.push({pattern:$[1954],regex:$[68],field:$[257]});
DateFormat._parseRules.push({pattern:$[1088],regex:$[68],manipulator:noZeroAmPmHourManipulator});
DateFormat._parseRules.push({pattern:$[1633],regex:$[68],manipulator:noZeroAmPmHourManipulator});
DateFormat._parseRules.push({pattern:$[1934],regex:$[68],field:$[428]});
DateFormat._parseRules.push({pattern:$[1287],regex:$[68],field:$[428]});
DateFormat._parseRules.push({pattern:$[736],regex:$[68],field:$[649]});
DateFormat._parseRules.push({pattern:$[327],regex:$[68],field:$[649]});
DateFormat._parseRules.push({pattern:$[1118],regex:$[411],field:$[200]});
DateFormat._parseRules.push({pattern:$[1782],regex:$[411],field:$[200]});
DateFormat._parseRules.push({pattern:$[264],regex:$[411],field:$[200]});
};
qx.Clazz.getDateTimeInstance=function(){var DateFormat=qx.util.format.DateFormat;
var format=qx.locale.Date.getDateFormat($[235])+$[44]+qx.locale.Date.getDateTimeFormat($[377],$[275]);
if(DateFormat._dateInstance==null||DateFormat._format!=format){DateFormat._dateTimeInstance=new DateFormat();
}return DateFormat._dateTimeInstance;
};
qx.Clazz.getDateInstance=function(){var DateFormat=qx.util.format.DateFormat;
var format=qx.locale.Date.getDateFormat($[120])+$[1];
if(DateFormat._dateInstance==null||DateFormat._format!=format){DateFormat._dateInstance=new DateFormat(format);
}return DateFormat._dateInstance;
};
qx.Clazz.ASSUME_YEAR_2000_THRESHOLD=30;
qx.Clazz.LOGGING_DATE_TIME_FORMAT="yyyy-MM-dd HH:mm:ss";
qx.Clazz.AM_MARKER="am";
qx.Clazz.PM_MARKER="pm";
qx.Clazz.MEDIUM_TIMEZONE_NAMES=["GMT"];
qx.Clazz.FULL_TIMEZONE_NAMES=["Greenwich Mean Time"];




/* ID: qx.ui.table.CellEditorFactory */
qx.OO.defineClass($[2370],qx.core.Object,function(){qx.core.Object.call(this);
});
qx.Proto.createCellEditor=function(cellInfo){throw new Error("createCellEditor is abstract");
};
qx.Proto.getCellEditorValue=function(cellEditor){throw new Error("getCellEditorValue is abstract");
};




/* ID: qx.ui.table.TextFieldCellEditorFactory */
qx.OO.defineClass($[1616],qx.ui.table.CellEditorFactory,function(){qx.ui.table.CellEditorFactory.call(this);
});
qx.Proto.createCellEditor=function(cellInfo){var cellEditor=new qx.ui.form.TextField;
cellEditor.setAppearance($[860]);
cellEditor.originalValue=cellInfo.value;
cellEditor.setValue($[1]+cellInfo.value);
cellEditor.addEventListener($[80],function(){this.selectAll();
});
return cellEditor;
};
qx.Proto.getCellEditorValue=function(cellEditor){var value=cellEditor.getElement().value;
if(typeof cellEditor.originalValue==$[2]){value=parseFloat(value);
}return value;
};




/* ID: qx.ui.table.TableColumnModel */
qx.OO.defineClass($[555],qx.core.Target,function(){qx.core.Target.call(this);
});
qx.Proto.init=function(colCount){this._columnDataArr=[];
var width=qx.ui.table.TableColumnModel.DEFAULT_WIDTH;
var headerRenderer=qx.ui.table.TableColumnModel.DEFAULT_HEADER_RENDERER;
var dataRenderer=qx.ui.table.TableColumnModel.DEFAULT_DATA_RENDERER;
var editorFactory=qx.ui.table.TableColumnModel.DEFAULT_EDITOR_FACTORY;
this._overallColumnArr=[];
this._visibleColumnArr=[];
for(var col=0;col<colCount;col++){this._columnDataArr[col]={width:width,headerRenderer:headerRenderer,dataRenderer:dataRenderer,editorFactory:editorFactory};
this._overallColumnArr[col]=col;
this._visibleColumnArr[col]=col;
}this._colToXPosMap=null;
};
qx.Proto.setColumnWidth=function(col,width){var oldWidth=this._columnDataArr[col].width;
if(oldWidth!=width){this._columnDataArr[col].width=width;
if(this.hasEventListeners($[179])){var data={col:col,newWidth:width,oldWidth:oldWidth};
this.dispatchEvent(new qx.event.type.DataEvent($[179],data),true);
}}};
qx.Proto.getColumnWidth=function(col){return this._columnDataArr[col].width;
};
qx.Proto.setHeaderCellRenderer=function(col,renderer){this._columnDataArr[col].headerRenderer=renderer;
};
qx.Proto.getHeaderCellRenderer=function(col){return this._columnDataArr[col].headerRenderer;
};
qx.Proto.setDataCellRenderer=function(col,renderer){this._columnDataArr[col].dataRenderer=renderer;
};
qx.Proto.getDataCellRenderer=function(col){return this._columnDataArr[col].dataRenderer;
};
qx.Proto.setCellEditorFactory=function(col,factory){this._columnDataArr[col].editorFactory=factory;
};
qx.Proto.getCellEditorFactory=function(col){return this._columnDataArr[col].editorFactory;
};
qx.Proto._getColToXPosMap=function(){if(this._colToXPosMap==null){this._colToXPosMap={};
for(var overX=0;overX<this._overallColumnArr.length;overX++){var col=this._overallColumnArr[overX];
this._colToXPosMap[col]={overX:overX};
}
for(var visX=0;visX<this._visibleColumnArr.length;visX++){var col=this._visibleColumnArr[visX];
this._colToXPosMap[col].visX=visX;
}}return this._colToXPosMap;
};
qx.Proto.getVisibleColumnCount=function(){return this._visibleColumnArr.length;
};
qx.Proto.getVisibleColumnAtX=function(visXPos){return this._visibleColumnArr[visXPos];
};
qx.Proto.getVisibleX=function(col){return this._getColToXPosMap()[col].visX;
};
qx.Proto.getOverallColumnCount=function(){return this._overallColumnArr.length;
};
qx.Proto.getOverallColumnAtX=function(overXPos){return this._overallColumnArr[overXPos];
};
qx.Proto.getOverallX=function(col){return this._getColToXPosMap()[col].overX;
};
qx.Proto.isColumnVisible=function(col){return (this._getColToXPosMap()[col].visX!=null);
};
qx.Proto.setColumnVisible=function(col,visible){if(visible!=this.isColumnVisible(col)){if(visible){var colToXPosMap=this._getColToXPosMap();
var overX=colToXPosMap[col].overX;
if(overX==null){throw new Error("Showing column failed: "+col+". The column is not added to this TablePaneModel.");
}var nextVisX;
for(var x=overX+1;x<this._overallColumnArr.length;x++){var currCol=this._overallColumnArr[x];
var currVisX=colToXPosMap[currCol].visX;
if(currVisX!=null){nextVisX=currVisX;
break;
}}if(nextVisX==null){nextVisX=this._visibleColumnArr.length;
}this._visibleColumnArr.splice(nextVisX,0,col);
}else{var visX=this.getVisibleX(col);
this._visibleColumnArr.splice(visX,1);
}this._colToXPosMap=null;
if(!this._internalChange){if(this.hasEventListeners($[441])){var data={col:col,visible:visible};
this.dispatchEvent(new qx.event.type.DataEvent($[441],data),true);
}
if(this.hasEventListeners($[178])){var data={col:col,visible:visible};
this.dispatchEvent(new qx.event.type.DataEvent($[178],data),true);
}}}};
qx.Proto.moveColumn=function(fromOverXPos,toOverXPos){this._internalChange=true;
var col=this._overallColumnArr[fromOverXPos];
var visible=this.isColumnVisible(col);
if(visible){this.setColumnVisible(col,false);
}this._overallColumnArr.splice(fromOverXPos,1);
this._overallColumnArr.splice(toOverXPos,0,col);
this._colToXPosMap=null;
if(visible){this.setColumnVisible(col,true);
}this._internalChange=false;
if(this.hasEventListeners($[228])){var data={col:col,fromOverXPos:fromOverXPos,toOverXPos:toOverXPos};
this.dispatchEvent(new qx.event.type.DataEvent($[228],data),true);
}};
qx.Clazz.DEFAULT_WIDTH=100;
qx.Clazz.DEFAULT_HEADER_RENDERER=new qx.ui.table.DefaultHeaderCellRenderer;
qx.Clazz.DEFAULT_DATA_RENDERER=new qx.ui.table.DefaultDataCellRenderer;
qx.Clazz.DEFAULT_EDITOR_FACTORY=new qx.ui.table.TextFieldCellEditorFactory;




/* ID: qx.ui.table.SelectionManager */
qx.OO.defineClass($[983],qx.core.Object,function(){qx.core.Object.call(this);
});
qx.OO.addProperty({name:$[722],type:$[4],instance:$[486]});
qx.Proto.handleMouseDown=function(index,evt){if(evt.isLeftButtonPressed()){var selectionModel=this.getSelectionModel();
if(!selectionModel.isSelectedIndex(index)){this._handleSelectEvent(index,evt);
this._lastMouseDownHandled=true;
}else{this._lastMouseDownHandled=false;
}}else if(evt.isRightButtonPressed()&&evt.getModifiers()==0){var selectionModel=this.getSelectionModel();
if(!selectionModel.isSelectedIndex(index)){selectionModel.setSelectionInterval(index,index);
}}};
qx.Proto.handleMouseUp=function(index,evt){if(evt.isLeftButtonPressed()&&!this._lastMouseDownHandled){this._handleSelectEvent(index,evt);
}};
qx.Proto.handleClick=function(index,evt){};
qx.Proto.handleSelectKeyDown=function(index,evt){this._handleSelectEvent(index,evt);
};
qx.Proto.handleMoveKeyDown=function(index,evt){var selectionModel=this.getSelectionModel();
switch(evt.getModifiers()){case 0:selectionModel.setSelectionInterval(index,index);
break;
case qx.event.type.DomEvent.SHIFT_MASK:var anchor=selectionModel.getAnchorSelectionIndex();
if(anchor==-1){selectionModel.setSelectionInterval(index,index);
}else{selectionModel.setSelectionInterval(anchor,index);
}break;
}};
qx.Proto._handleSelectEvent=function(index,evt){var selectionModel=this.getSelectionModel();
if(evt.isShiftPressed()){var leadIndex=selectionModel.getLeadSelectionIndex();
if(index!=leadIndex||selectionModel.isSelectionEmpty()){var anchorIndex=selectionModel.getAnchorSelectionIndex();
if(anchorIndex==-1){anchorIndex=index;
}
if(evt.isCtrlOrCommandPressed()){selectionModel.addSelectionInterval(anchorIndex,index);
}else{selectionModel.setSelectionInterval(anchorIndex,index);
}}}else if(evt.isCtrlOrCommandPressed()){if(selectionModel.isSelectedIndex(index)){selectionModel.removeSelectionInterval(index,index);
}else{selectionModel.addSelectionInterval(index,index);
}}else{selectionModel.setSelectionInterval(index,index);
}};




/* ID: qx.ui.table.TablePaneScroller */
qx.OO.defineClass($[1116],qx.ui.layout.VerticalBoxLayout,function(table){qx.ui.layout.VerticalBoxLayout.call(this);
this._table=table;
this._verScrollBar=new qx.ui.core.ScrollBar(false);
this._horScrollBar=new qx.ui.core.ScrollBar(true);
var scrollBarWidth=this._verScrollBar.getPreferredBoxWidth();
this._verScrollBar.setWidth($[5]);
this._horScrollBar.setHeight($[5]);
this._horScrollBar.setPaddingRight(scrollBarWidth);
this._horScrollBar.addEventListener($[258],this._onScrollX,this);
this._verScrollBar.addEventListener($[258],this._onScrollY,this);
this._header=this.getTable().getNewTablePaneHeader()(this);
this._header.set({width:$[5],height:$[5]});
this._headerClipper=new qx.ui.layout.CanvasLayout;
this._headerClipper.setDimension($[37],$[5]);
this._headerClipper.setOverflow($[26]);
this._headerClipper.add(this._header);
this._spacer=new qx.ui.basic.Terminator;
this._spacer.setWidth(scrollBarWidth);
this._top=new qx.ui.layout.HorizontalBoxLayout;
this._top.setHeight($[5]);
this._top.add(this._headerClipper,this._spacer);
this._tablePane=this.getTable().getNewTablePane()(this);
this._tablePane.set({width:$[5],height:$[5]});
this._focusIndicator=new qx.ui.layout.HorizontalBoxLayout;
this._focusIndicator.setAppearance($[2457]);
this._focusIndicator.hide();
var dummyContent=new qx.ui.basic.Terminator;
dummyContent.setWidth(0);
this._focusIndicator.add(dummyContent);
this._paneClipper=new qx.ui.layout.CanvasLayout;
this._paneClipper.setWidth($[37]);
this._paneClipper.setOverflow($[26]);
this._paneClipper.add(this._tablePane,this._focusIndicator);
this._paneClipper.addEventListener($[62],this._onmousewheel,this);
var scrollerBody=new qx.ui.layout.HorizontalBoxLayout;
scrollerBody.setHeight($[37]);
scrollerBody.add(this._paneClipper,this._verScrollBar);
this.add(this._top,scrollerBody,this._horScrollBar);
this.addEventListener($[18],this._onmousemove,this);
this.addEventListener($[6],this._onmousedown,this);
this.addEventListener($[7],this._onmouseup,this);
this.addEventListener($[27],this._onclick,this);
this.addEventListener($[46],this._ondblclick,this);
this.addEventListener($[47],this._onmouseout,this);
});
qx.OO.addProperty({name:$[1872],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1430],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1491],type:$[4],instance:$[634]});
qx.OO.addProperty({name:$[139],type:$[2],allowNull:false,defaultValue:0});
qx.OO.addProperty({name:$[112],type:$[2],allowNull:false,defaultValue:0});
qx.OO.addProperty({name:$[436],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[536],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1189],type:$[3],defaultValue:false});
qx.Proto._modifyHorizontalScrollBarVisible=function(propValue,propOldValue,propData){if(propValue){this._horScrollBar.setHeight($[5]);
}else{this._horScrollBar.setHeight(0);
}this._horScrollBar.setVisibility(propValue);
qx.ui.core.Widget.flushGlobalQueues();
this._updateContent();
return true;
};
qx.Proto._modifyVerticalScrollBarVisible=function(propValue,propOldValue,propData){if(propValue){this._verScrollBar.setWidth($[5]);
}else{this._verScrollBar.setWidth(0);
}this._verScrollBar.setVisibility(propValue);
var scrollBarWidth=propValue?this._verScrollBar.getPreferredBoxWidth():0;
this._horScrollBar.setPaddingRight(scrollBarWidth);
this._spacer.setWidth(scrollBarWidth);
return true;
};
qx.Proto._modifyTablePaneModel=function(propValue,propOldValue,propData){if(propOldValue!=null){propOldValue.removeEventListener($[390],this._onPaneModelChanged,this);
}propValue.addEventListener($[390],this._onPaneModelChanged,this);
return true;
};
qx.Proto._modifyScrollX=function(propValue,propOldValue,propData){this._horScrollBar.setValue(propValue);
return true;
};
qx.Proto._modifyScrollY=function(propValue,propOldValue,propData){this._verScrollBar.setValue(propValue);
return true;
};
qx.Proto.getTable=function(){return this._table;
};
qx.Proto._onColVisibilityChanged=function(evt){this._updateHorScrollBarMaximum();
this._updateFocusIndicator();
};
qx.Proto._onColWidthChanged=function(evt){this._header._onColWidthChanged(evt);
this._tablePane._onColWidthChanged(evt);
var data=evt.getData();
var paneModel=this.getTablePaneModel();
var x=paneModel.getX(data.col);
if(x!=-1){this._updateHorScrollBarMaximum();
this._updateFocusIndicator();
}};
qx.Proto._onColOrderChanged=function(evt){this._header._onColOrderChanged(evt);
this._tablePane._onColOrderChanged(evt);
this._updateHorScrollBarMaximum();
};
qx.Proto._onTableModelDataChanged=function(evt){this._tablePane._onTableModelDataChanged(evt);
var rowCount=this.getTable().getTableModel().getRowCount();
if(rowCount!=this._lastRowCount){this._lastRowCount=rowCount;
this._updateVerScrollBarMaximum();
if(this.getFocusedRow()>=rowCount){if(rowCount==0){this.setFocusedCell(null,null);
}else{this.setFocusedCell(this.getFocusedColumn(),rowCount-1);
}}}};
qx.Proto._onSelectionChanged=function(evt){this._tablePane._onSelectionChanged(evt);
};
qx.Proto._onFocusChanged=function(evt){this._focusIndicator.setState($[1264],this.getTable().getFocused());
this._tablePane._onFocusChanged(evt);
};
qx.Proto._onTableModelMetaDataChanged=function(evt){this._header._onTableModelMetaDataChanged(evt);
this._tablePane._onTableModelMetaDataChanged(evt);
};
qx.Proto._onPaneModelChanged=function(evt){this._header._onPaneModelChanged(evt);
this._tablePane._onPaneModelChanged(evt);
};
qx.Proto._updateHorScrollBarMaximum=function(){this._horScrollBar.setMaximum(this.getTablePaneModel().getTotalWidth());
};
qx.Proto._updateVerScrollBarMaximum=function(){var rowCount=this.getTable().getTableModel().getRowCount();
var rowHeight=this.getTable().getRowHeight();
if(this.getTable().getKeepFirstVisibleRowComplete()){this._verScrollBar.setMaximum((rowCount+1)*rowHeight);
}else{this._verScrollBar.setMaximum(rowCount*rowHeight);
}};
qx.Proto._onKeepFirstVisibleRowCompleteChanged=function(){this._updateVerScrollBarMaximum();
this._updateContent();
};
qx.Proto._changeInnerHeight=function(newValue,oldValue){this._postponedUpdateContent();
return qx.ui.layout.VerticalBoxLayout.prototype._changeInnerHeight.call(this,newValue,oldValue);
};
qx.Proto._afterAppear=function(){qx.ui.layout.VerticalBoxLayout.prototype._afterAppear.call(this);
var self=this;
this.getElement().onselectstart=qx.lang.Function.returnFalse;
this._updateContent();
this._header._updateContent();
this._updateHorScrollBarMaximum();
this._updateVerScrollBarMaximum();
};
qx.Proto._onScrollX=function(evt){this._header.setLeft(-evt.getData());
this._paneClipper.setScrollLeft(evt.getData());
this.setScrollX(evt.getData());
};
qx.Proto._onScrollY=function(evt){this._postponedUpdateContent();
this.setScrollY(evt.getData());
};
qx.Proto._onmousewheel=function(evt){var table=this.getTable();
if(!table.getEnabled()){return;
}this._verScrollBar.setValue(this._verScrollBar.getValue()-evt.getWheelDelta()*table.getRowHeight());
if(this._lastMousePageX&&this.getFocusCellOnMouseMove()){this._focusCellAtPagePos(this._lastMousePageX,this._lastMousePageY);
}};
qx.Proto._onmousemove=function(evt){var table=this.getTable();
if(!table.getEnabled()){return;
}var tableModel=table.getTableModel();
var columnModel=table.getTableColumnModel();
var useResizeCursor=false;
var mouseOverColumn=null;
var pageX=evt.getPageX();
var pageY=evt.getPageY();
this._lastMousePageX=pageX;
this._lastMousePageY=pageY;
if(this._resizeColumn!=null){var minColumnWidth=qx.ui.table.TablePaneScroller.MIN_COLUMN_WIDTH;
var newWidth=Math.max(minColumnWidth,this._lastResizeWidth+pageX-this._lastResizeMousePageX);
if(this.getLiveResize()){columnModel.setColumnWidth(this._resizeColumn,newWidth);
}else{this._header.setColumnWidth(this._resizeColumn,newWidth);
var paneModel=this.getTablePaneModel();
this._showResizeLine(paneModel.getColumnLeft(this._resizeColumn)+newWidth);
}useResizeCursor=true;
this._lastResizeMousePageX+=newWidth-this._lastResizeWidth;
this._lastResizeWidth=newWidth;
}else if(this._moveColumn!=null){var clickTolerance=qx.ui.table.TablePaneScroller.CLICK_TOLERANCE;
if(this._header.isShowingColumnMoveFeedback()||pageX>this._lastMoveMousePageX+clickTolerance||pageX<this._lastMoveMousePageX-clickTolerance){this._lastMoveColPos+=pageX-this._lastMoveMousePageX;
this._header.showColumnMoveFeedback(this._moveColumn,this._lastMoveColPos);
var targetScroller=this._table.getTablePaneScrollerAtPageX(pageX);
if(this._lastMoveTargetScroller&&this._lastMoveTargetScroller!=targetScroller){this._lastMoveTargetScroller.hideColumnMoveFeedback();
}
if(targetScroller!=null){this._lastMoveTargetX=targetScroller.showColumnMoveFeedback(pageX);
}else{this._lastMoveTargetX=null;
}this._lastMoveTargetScroller=targetScroller;
this._lastMoveMousePageX=pageX;
}}else{var row=this._getRowForPagePos(pageX,pageY);
if(row==-1){var resizeCol=this._getResizeColumnForPageX(pageX);
if(resizeCol!=-1){useResizeCursor=true;
}else{var col=this._getColumnForPageX(pageX);
if(col!=null&&tableModel.isColumnSortable(col)){mouseOverColumn=col;
}}}else if(row!=null&&this._getColumnForPageX(pageX)!=null){if(this.getFocusCellOnMouseMove()){this._focusCellAtPagePos(pageX,pageY);
}}}this.getTopLevelWidget().setGlobalCursor(useResizeCursor?qx.ui.table.TablePaneScroller.CURSOR_RESIZE_HORIZONTAL:null);
this._header.setMouseOverColumn(mouseOverColumn);
};
qx.Proto._onmousedown=function(evt){var table=this.getTable();
if(!table.getEnabled()){return;
}var tableModel=table.getTableModel();
var columnModel=table.getTableColumnModel();
var pageX=evt.getPageX();
var pageY=evt.getPageY();
var row=this._getRowForPagePos(pageX,pageY);
if(row==-1){var resizeCol=this._getResizeColumnForPageX(pageX);
if(resizeCol!=-1){this._resizeColumn=resizeCol;
this._lastResizeMousePageX=pageX;
this._lastResizeWidth=columnModel.getColumnWidth(this._resizeColumn);
this.setCapture(true);
}else{var col=this._getColumnForPageX(pageX);
if(col!=null){this._moveColumn=col;
this._lastMoveMousePageX=pageX;
this._lastMoveColPos=this.getTablePaneModel().getColumnLeft(col);
this.setCapture(true);
}}}else if(row!=null&&this._getColumnForPageX(pageX)!=null){var selectBeforeFocus=this.getSelectBeforeFocus();
if(selectBeforeFocus){table._getSelectionManager().handleMouseDown(row,evt);
}if(!this.getFocusCellOnMouseMove()){this._focusCellAtPagePos(pageX,pageY);
}
if(!selectBeforeFocus){table._getSelectionManager().handleMouseDown(row,evt);
}}};
qx.Proto._onmouseup=function(evt){var table=this.getTable();
if(!table.getEnabled()){return;
}var columnModel=table.getTableColumnModel();
var paneModel=this.getTablePaneModel();
if(this._resizeColumn!=null){if(!this.getLiveResize()){this._hideResizeLine();
columnModel.setColumnWidth(this._resizeColumn,this._lastResizeWidth);
}this._resizeColumn=null;
this.setCapture(false);
this.getTopLevelWidget().setGlobalCursor(null);
}else if(this._moveColumn!=null){this._header.hideColumnMoveFeedback();
if(this._lastMoveTargetScroller){this._lastMoveTargetScroller.hideColumnMoveFeedback();
}
if(this._lastMoveTargetX!=null){var fromVisXPos=paneModel.getFirstColumnX()+paneModel.getX(this._moveColumn);
var toVisXPos=this._lastMoveTargetX;
if(toVisXPos!=fromVisXPos&&toVisXPos!=fromVisXPos+1){var fromCol=columnModel.getVisibleColumnAtX(fromVisXPos);
var toCol=columnModel.getVisibleColumnAtX(toVisXPos);
var fromOverXPos=columnModel.getOverallX(fromCol);
var toOverXPos=(toCol!=null)?columnModel.getOverallX(toCol):columnModel.getOverallColumnCount();
if(toOverXPos>fromOverXPos){toOverXPos--;
}columnModel.moveColumn(fromOverXPos,toOverXPos);
}}this._moveColumn=null;
this._lastMoveTargetX=null;
this.setCapture(false);
}else{var row=this._getRowForPagePos(evt.getPageX(),evt.getPageY());
if(row!=-1&&row!=null&&this._getColumnForPageX(evt.getPageX())!=null){table._getSelectionManager().handleMouseUp(row,evt);
}}};
qx.Proto._onclick=function(evt){var table=this.getTable();
if(!table.getEnabled()){return;
}var tableModel=table.getTableModel();
var pageX=evt.getPageX();
var pageY=evt.getPageY();
var row=this._getRowForPagePos(pageX,pageY);
if(row==-1){var resizeCol=this._getResizeColumnForPageX(pageX);
if(resizeCol==-1){var col=this._getColumnForPageX(pageX);
if(col!=null&&tableModel.isColumnSortable(col)){var sortCol=tableModel.getSortColumnIndex();
var ascending=(col!=sortCol)?true:!tableModel.isSortAscending();
tableModel.sortByColumn(col,ascending);
table.getSelectionModel().clearSelection();
}}}else if(row!=null&&this._getColumnForPageX(evt.getPageX())!=null){table._getSelectionManager().handleClick(row,evt);
}};
qx.Proto._ondblclick=function(evt){if(!this.isEditing()){this._focusCellAtPagePos(evt.getPageX(),evt.getPageY());
this.startEditing();
}};
qx.Proto._onmouseout=function(evt){var table=this.getTable();
if(!table.getEnabled()){return;
}if(this._resizeColumn==null){this.getTopLevelWidget().setGlobalCursor(null);
}this._header.setMouseOverColumn(null);
};
qx.Proto._showResizeLine=function(x){var resizeLine=this._resizeLine;
if(resizeLine==null){resizeLine=new qx.ui.basic.Terminator;
resizeLine.setBackgroundColor($[368]);
resizeLine.setWidth(3);
this._paneClipper.add(resizeLine);
qx.ui.core.Widget.flushGlobalQueues();
this._resizeLine=resizeLine;
}resizeLine._applyRuntimeLeft(x-2);
resizeLine._applyRuntimeHeight(this._paneClipper.getBoxHeight()+this._paneClipper.getScrollTop());
this._resizeLine.removeStyleProperty($[136]);
};
qx.Proto._hideResizeLine=function(){this._resizeLine.setStyleProperty($[136],$[26]);
};
qx.Proto.showColumnMoveFeedback=function(pageX){var paneModel=this.getTablePaneModel();
var columnModel=this.getTable().getTableColumnModel();
var paneLeftX=qx.html.Location.getClientBoxLeft(this._tablePane.getElement());
var colCount=paneModel.getColumnCount();
var targetXPos=0;
var targetX=0;
var currX=paneLeftX;
for(var xPos=0;xPos<colCount;xPos++){var col=paneModel.getColumnAtX(xPos);
var colWidth=columnModel.getColumnWidth(col);
if(pageX<currX+colWidth/2){break;
}currX+=colWidth;
targetXPos=xPos+1;
targetX=currX-paneLeftX;
}var clipperLeftX=qx.html.Location.getClientBoxLeft(this._paneClipper.getElement());
var clipperWidth=this._paneClipper.getBoxWidth();
var scrollX=clipperLeftX-paneLeftX;
targetX=qx.lang.Number.limit(targetX,scrollX+2,scrollX+clipperWidth-1);
this._showResizeLine(targetX);
return paneModel.getFirstColumnX()+targetXPos;
};
qx.Proto.hideColumnMoveFeedback=function(){this._hideResizeLine();
};
qx.Proto._focusCellAtPagePos=function(pageX,pageY){var row=this._getRowForPagePos(pageX,pageY);
if(row!=-1&&row!=null){var col=this._getColumnForPageX(pageX);
if(col!=null){this._table.setFocusedCell(col,row);
}}};
qx.Proto.setFocusedCell=function(col,row){if(!this.isEditing()){this._tablePane.setFocusedCell(col,row,this._updateContentPlanned);
this._focusedCol=col;
this._focusedRow=row;
if(!this._updateContentPlanned){this._updateFocusIndicator();
}}};
qx.Proto.getFocusedColumn=function(){return this._focusedCol;
};
qx.Proto.getFocusedRow=function(){return this._focusedRow;
};
qx.Proto.scrollCellVisible=function(col,row){var paneModel=this.getTablePaneModel();
var xPos=paneModel.getX(col);
if(xPos!=-1){var columnModel=this.getTable().getTableColumnModel();
var colLeft=paneModel.getColumnLeft(col);
var colWidth=columnModel.getColumnWidth(col);
var rowHeight=this.getTable().getRowHeight();
var rowTop=row*rowHeight;
var scrollX=this.getScrollX();
var scrollY=this.getScrollY();
var viewWidth=this._paneClipper.getBoxWidth();
var viewHeight=this._paneClipper.getBoxHeight();
var minScrollX=Math.min(colLeft,colLeft+colWidth-viewWidth);
var maxScrollX=colLeft;
this.setScrollX(Math.max(minScrollX,Math.min(maxScrollX,scrollX)));
var minScrollY=rowTop+rowHeight-viewHeight;
if(this.getTable().getKeepFirstVisibleRowComplete()){minScrollY+=rowHeight-1;
}var maxScrollY=rowTop;
this.setScrollY(Math.max(minScrollY,Math.min(maxScrollY,scrollY)));
}};
qx.Proto.isEditing=function(){return this._cellEditor!=null;
};
qx.Proto.startEditing=function(){var tableModel=this.getTable().getTableModel();
var col=this._focusedCol;
if(!this.isEditing()&&(col!=null)&&tableModel.isColumnEditable(col)){var row=this._focusedRow;
var xPos=this.getTablePaneModel().getX(col);
var value=tableModel.getValue(col,row);
this._cellEditorFactory=this.getTable().getTableColumnModel().getCellEditorFactory(col);
var cellInfo={col:col,row:row,xPos:xPos,value:value};
this._cellEditor=this._cellEditorFactory.createCellEditor(cellInfo);
this._cellEditor.set({width:$[39],height:$[39]});
this._focusIndicator.add(this._cellEditor);
this._focusIndicator.addState($[731]);
this._cellEditor.addEventListener($[393],this._onCellEditorFocusChanged,this);
var editor=this._cellEditor;
var self=this;
window.setTimeout(function(){if(self.getDisposed()){return;
}editor.focus();
},0);
return true;
}return false;
};
qx.Proto.stopEditing=function(){this.flushEditor();
this.cancelEditing();
};
qx.Proto.flushEditor=function(){if(this.isEditing()){var value=this._cellEditorFactory.getCellEditorValue(this._cellEditor);
this.getTable().getTableModel().setValue(this._focusedCol,this._focusedRow,value);
this._table.focus();
}};
qx.Proto.cancelEditing=function(){if(this.isEditing()){this._focusIndicator.remove(this._cellEditor);
this._focusIndicator.removeState($[731]);
this._cellEditor.dispose();
this._cellEditor.removeEventListener($[393],this._onCellEditorFocusChanged,this);
this._cellEditor=null;
this._cellEditorFactory=null;
}};
qx.Proto._onCellEditorFocusChanged=function(evt){if(!this._cellEditor.getFocused()){this.stopEditing();
}};
qx.Proto._getColumnForPageX=function(pageX){var headerLeftX=qx.html.Location.getClientBoxLeft(this._header.getElement());
var columnModel=this.getTable().getTableColumnModel();
var paneModel=this.getTablePaneModel();
var colCount=paneModel.getColumnCount();
var currX=headerLeftX;
for(var x=0;x<colCount;x++){var col=paneModel.getColumnAtX(x);
var colWidth=columnModel.getColumnWidth(col);
currX+=colWidth;
if(pageX<currX){return col;
}}return null;
};
qx.Proto._getResizeColumnForPageX=function(pageX){var headerLeftX=qx.html.Location.getClientBoxLeft(this._header.getElement());
var columnModel=this.getTable().getTableColumnModel();
var paneModel=this.getTablePaneModel();
var colCount=paneModel.getColumnCount();
var currX=headerLeftX;
var regionRadius=qx.ui.table.TablePaneScroller.RESIZE_REGION_RADIUS;
for(var x=0;x<colCount;x++){var col=paneModel.getColumnAtX(x);
var colWidth=columnModel.getColumnWidth(col);
currX+=colWidth;
if(pageX>=(currX-regionRadius)&&pageX<=(currX+regionRadius)){return col;
}}return -1;
};
qx.Proto._getRowForPagePos=function(pageX,pageY){var paneClipperElem=this._paneClipper.getElement();
var paneClipperLeftX=qx.html.Location.getClientBoxLeft(paneClipperElem);
var paneClipperRightX=qx.html.Location.getClientBoxRight(paneClipperElem);
if(pageX<paneClipperLeftX||pageX>paneClipperRightX){return null;
}var paneClipperTopY=qx.html.Location.getClientBoxTop(paneClipperElem);
var paneClipperBottomY=qx.html.Location.getClientBoxBottom(paneClipperElem);
if(pageY>=paneClipperTopY&&pageY<=paneClipperBottomY){var rowHeight=this.getTable().getRowHeight();
var scrollY=this._verScrollBar.getValue();
if(this.getTable().getKeepFirstVisibleRowComplete()){scrollY=Math.floor(scrollY/rowHeight)*rowHeight;
}var tableY=scrollY+pageY-paneClipperTopY;
var row=Math.floor(tableY/rowHeight);
var rowCount=this.getTable().getTableModel().getRowCount();
return (row<rowCount)?row:null;
}var headerElem=this._headerClipper.getElement();
if(pageY>=qx.html.Location.getClientBoxTop(headerElem)&&pageY<=qx.html.Location.getClientBoxBottom(headerElem)&&pageX<=qx.html.Location.getClientBoxRight(headerElem)){return -1;
}return null;
};
qx.Proto.setTopRightWidget=function(widget){var oldWidget=this._topRightWidget;
if(oldWidget!=null){this._top.remove(oldWidget);
}
if(widget!=null){this._top.remove(this._spacer);
this._top.add(widget);
}else if(oldWidget!=null){this._top.add(this._spacer);
}this._topRightWidget=widget;
};
qx.Proto.getHeader=function(){return this._header;
};
qx.Proto.getTablePane=function(){return this._tablePane;
};
qx.Proto.getNeededScrollBars=function(forceHorizontal,preventVertical){var barWidth=this._verScrollBar.getPreferredBoxWidth();
var viewWidth=this._paneClipper.getInnerWidth();
if(this.getVerticalScrollBarVisible()){viewWidth+=barWidth;
}var viewHeight=this._paneClipper.getInnerHeight();
if(this.getHorizontalScrollBarVisible()){viewHeight+=barWidth;
}var paneWidth=this.getTablePaneModel().getTotalWidth();
var paneHeight=this.getTable().getRowHeight()*this.getTable().getTableModel().getRowCount();
var horNeeded=false;
var verNeeded=false;
if(paneWidth>viewWidth){horNeeded=true;
if(paneHeight>viewHeight-barWidth){verNeeded=true;
}}else if(paneHeight>viewHeight){verNeeded=true;
if(!preventVertical&&(paneWidth>viewWidth-barWidth)){horNeeded=true;
}}var horBar=qx.ui.table.TablePaneScroller.HORIZONTAL_SCROLLBAR;
var verBar=qx.ui.table.TablePaneScroller.VERTICAL_SCROLLBAR;
return ((forceHorizontal||horNeeded)?horBar:0)|((preventVertical||!verNeeded)?0:verBar);
};
qx.Proto._postponedUpdateContent=function(){if(!this._updateContentPlanned){var self=this;
window.setTimeout(function(){if(self.getDisposed()){return;
}self._updateContent();
self._updateContentPlanned=false;
qx.ui.core.Widget.flushGlobalQueues();
},0);
this._updateContentPlanned=true;
}};
qx.Proto._updateContent=function(){var paneHeight=this._paneClipper.getInnerHeight();
var scrollX=this._horScrollBar.getValue();
var scrollY=this._verScrollBar.getValue();
var rowHeight=this.getTable().getRowHeight();
var firstRow=Math.floor(scrollY/rowHeight);
var oldFirstRow=this._tablePane.getFirstVisibleRow();
this._tablePane.setFirstVisibleRow(firstRow);
var rowCount=Math.ceil(paneHeight/rowHeight);
var paneOffset=0;
if(!this.getTable().getKeepFirstVisibleRowComplete()){rowCount++;
paneOffset=scrollY%rowHeight;
}this._tablePane.setVisibleRowCount(rowCount);
if(firstRow!=oldFirstRow){this._updateFocusIndicator();
}this._header.setLeft(-scrollX);
this._paneClipper.setScrollLeft(scrollX);
this._paneClipper.setScrollTop(paneOffset);
};
qx.Proto._updateFocusIndicator=function(){var table=this.getTable();
if(!table.getEnabled()){return;
}
if(this._focusedCol==null){this._focusIndicator.hide();
}else{var xPos=this.getTablePaneModel().getX(this._focusedCol);
if(xPos==-1){this._focusIndicator.hide();
}else{var columnModel=table.getTableColumnModel();
var paneModel=this.getTablePaneModel();
var firstRow=this._tablePane.getFirstVisibleRow();
var rowHeight=table.getRowHeight();
this._focusIndicator.setHeight(rowHeight+3);
this._focusIndicator.setWidth(columnModel.getColumnWidth(this._focusedCol)+3);
this._focusIndicator.setTop((this._focusedRow-firstRow)*rowHeight-2);
this._focusIndicator.setLeft(paneModel.getColumnLeft(this._focusedCol)-2);
this._focusIndicator.show();
qx.ui.core.Widget.flushGlobalQueues();
}}};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this.getElement()!=null){this.getElement().onselectstart=null;
}this._verScrollBar.dispose();
this._horScrollBar.dispose();
this._header.dispose();
this._headerClipper.dispose();
this._spacer.dispose();
this._top.dispose();
this._tablePane.dispose();
this._paneClipper.dispose();
if(this._resizeLine!=null){this._resizeLine.dispose();
}this.removeEventListener($[18],this._onmousemove,this);
this.removeEventListener($[6],this._onmousedown,this);
this.removeEventListener($[7],this._onmouseup,this);
this.removeEventListener($[27],this._onclick,this);
this.removeEventListener($[46],this._ondblclick,this);
this.removeEventListener($[47],this._onmouseout,this);
var tablePaneModel=this.getTablePaneModel();
if(tablePaneModel!=null){tablePaneModel.removeEventListener($[390],this._onPaneModelChanged,this);
}return qx.ui.layout.VerticalBoxLayout.prototype.dispose.call(this);
};
qx.Clazz.MIN_COLUMN_WIDTH=10;
qx.Clazz.RESIZE_REGION_RADIUS=5;
qx.Clazz.CLICK_TOLERANCE=5;
qx.Clazz.HORIZONTAL_SCROLLBAR=1;
qx.Clazz.VERTICAL_SCROLLBAR=2;
qx.Clazz.CURSOR_RESIZE_HORIZONTAL=(qx.core.Client.getInstance().isGecko()&&(qx.core.Client.getInstance().getMajor()>1||qx.core.Client.getInstance().getMinor()>=8))?"ew-resize":"e-resize";




/* ID: qx.ui.core.ScrollBar */
qx.OO.defineClass($[1769],qx.ui.layout.BoxLayout,function(horizontal){qx.ui.layout.BoxLayout.call(this,horizontal?$[29]:$[20]);
this._horizontal=(horizontal==true);
this._scrollBar=new qx.ui.layout.CanvasLayout;
if(qx.core.Client.getInstance().isGecko()){this._scrollBar.setStyleProperty($[93],$[1]);
}this._scrollBar.setOverflow(horizontal?$[139]:$[112]);
this._scrollBar.enableInlineEvent($[66]);
this._scrollBar.addEventListener($[66],this._onscroll,this);
this._scrollContent=new qx.ui.basic.Terminator;
if(qx.core.Client.getInstance().isGecko()){this._scrollContent.setStyleProperty($[93],$[1]);
}this._scrollBar.add(this._scrollContent);
if(this._horizontal){this._scrollContent.setHeight(5);
this._scrollBar.setWidth($[39]);
this._scrollBar.setHeight(this._getScrollBarWidth());
if(qx.core.Client.getInstance().isMshtml()){this.setHeight(this._getScrollBarWidth());
this.setOverflow($[26]);
this._scrollBar.setHeight(this._getScrollBarWidth()+1);
this._scrollBar.setTop(-1);
}}else{this._scrollContent.setWidth(5);
this._scrollBar.setHeight($[39]);
this._scrollBar.setWidth(this._getScrollBarWidth());
if(qx.core.Client.getInstance().isMshtml()){this.setWidth(this._getScrollBarWidth());
this.setOverflow($[26]);
this._scrollBar.setWidth(this._getScrollBarWidth()+1);
this._scrollBar.setLeft(-1);
}}this.add(this._scrollBar);
this.setMaximum(0);
});
qx.OO.addProperty({name:$[104],type:$[2],defaultValue:0,allowNull:false});
qx.OO.addProperty({name:$[1618],type:$[2],allowNull:false});
qx.OO.addProperty({name:$[1521],type:$[3],defaultValue:false,allowNull:false});
qx.Proto._checkValue=function(propValue,propData){var innerSize=!this.getElement()?0:(this._horizontal?this.getInnerWidth():this.getInnerHeight());
return Math.max(0,Math.min(this.getMaximum()-innerSize,propValue));
};
qx.Proto._modifyValue=function(propValue,propOldValue,propData){if(!this._internalValueChange&&this._isCreated){this._positionKnob(propValue);
}return true;
};
qx.Proto._modifyMaximum=function(propValue,propOldValue,propData){if(this._horizontal){this._scrollContent.setWidth(propValue);
}else{this._scrollContent.setHeight(propValue);
}this.setValue(this._checkValue(this.getValue()));
return true;
};
qx.Proto._modifyVisibility=function(propValue,propOldValue,propData){if(!propValue){this._positionKnob(0);
}else{this._positionKnob(this.getValue());
}return qx.ui.layout.BoxLayout.prototype._modifyVisibility.call(this,propValue,propOldValue,propData);
};
qx.Proto._computePreferredInnerWidth=function(){return this._horizontal?0:this._getScrollBarWidth();
};
qx.Proto._computePreferredInnerHeight=function(){return this._horizontal?this._getScrollBarWidth():0;
};
qx.Proto._getScrollBarWidth=function(){if(qx.ui.core.ScrollBar._scrollBarWidth==null){var dummy=document.createElement($[50]);
dummy.style.width=$[338];
dummy.style.height=$[338];
dummy.style.overflow=$[66];
dummy.style.visibility=$[26];
document.body.appendChild(dummy);
qx.ui.core.ScrollBar._scrollBarWidth=dummy.offsetWidth-dummy.clientWidth;
document.body.removeChild(dummy);
}return qx.ui.core.ScrollBar._scrollBarWidth;
};
qx.Proto._onscroll=function(evt){var value=this._horizontal?this._scrollBar.getScrollLeft():this._scrollBar.getScrollTop();
if(this.getMergeEvents()){this._lastScrollEventValue=value;
window.clearTimeout(this._setValueTimerId);
var self=this;
this._setValueTimerId=window.setTimeout(function(){self._internalValueChange=true;
self.setValue(self._lastScrollEventValue);
self._internalValueChange=false;
qx.ui.core.Widget.flushGlobalQueues();
},qx.ui.core.ScrollBar.EVENT_DELAY);
}else{this._internalValueChange=true;
this.setValue(value);
this._internalValueChange=false;
qx.ui.core.Widget.flushGlobalQueues();
}};
qx.Proto._positionKnob=function(value){if(this._horizontal){this._scrollBar.setScrollLeft(value);
}else{this._scrollBar.setScrollTop(value);
}};
qx.Proto._afterAppear=function(){qx.ui.layout.BoxLayout.prototype._afterAppear.call(this);
this._positionKnob(this.getValue());
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._scrollContent=null;
this._scrollBar=null;
this._paneScroller=null;
return qx.ui.layout.BoxLayout.prototype.dispose.call(this);
};
qx.Clazz.EVENT_DELAY=250;




/* ID: qx.ui.table.TablePaneModel */
qx.OO.defineClass($[634],qx.core.Target,function(tableColumnModel){qx.core.Target.call(this);
tableColumnModel.addEventListener($[441],this._onColVisibilityChanged,this);
this._tableColumnModel=tableColumnModel;
});
qx.OO.addProperty({name:$[1909],type:$[2],defaultValue:0});
qx.OO.addProperty({name:$[1646],type:$[2],defaultValue:-1});
qx.Proto._modifyFirstColumnX=function(propValue,propOldValue,propData){this._columnCount=null;
this.createDispatchEvent(qx.ui.table.TablePaneModel.EVENT_TYPE_MODEL_CHANGED);
return true;
};
qx.Proto._modifyMaxColumnCount=function(propValue,propOldValue,propData){this._columnCount=null;
this.createDispatchEvent(qx.ui.table.TablePaneModel.EVENT_TYPE_MODEL_CHANGED);
return true;
};
qx.Proto._onColVisibilityChanged=function(evt){this._columnCount=null;
this.createDispatchEvent(qx.ui.table.TablePaneModel.EVENT_TYPE_MODEL_CHANGED);
};
qx.Proto.getColumnCount=function(){if(this._columnCount==null){var firstX=this.getFirstColumnX();
var maxColCount=this.getMaxColumnCount();
var totalColCount=this._tableColumnModel.getVisibleColumnCount();
if(maxColCount==-1||(firstX+maxColCount)>totalColCount){this._columnCount=totalColCount-firstX;
}else{this._columnCount=maxColCount;
}}return this._columnCount;
};
qx.Proto.getColumnAtX=function(xPos){var firstX=this.getFirstColumnX();
return this._tableColumnModel.getVisibleColumnAtX(firstX+xPos);
};
qx.Proto.getX=function(col){var firstX=this.getFirstColumnX();
var maxColCount=this.getMaxColumnCount();
var x=this._tableColumnModel.getVisibleX(col)-firstX;
if(x>=0&&(maxColCount==-1||x<maxColCount)){return x;
}else{return -1;
}};
qx.Proto.getColumnLeft=function(col){var left=0;
var colCount=this.getColumnCount();
for(var x=0;x<colCount;x++){var currCol=this.getColumnAtX(x);
if(currCol==col){return left;
}left+=this._tableColumnModel.getColumnWidth(currCol);
}return -1;
};
qx.Proto.getTotalWidth=function(){var totalWidth=0;
var colCount=this.getColumnCount();
for(var x=0;x<colCount;x++){var col=this.getColumnAtX(x);
totalWidth+=this._tableColumnModel.getColumnWidth(col);
}return totalWidth;
};
qx.Clazz.EVENT_TYPE_MODEL_CHANGED="modelChanged";




/* ID: qx.ui.menu.Menu */
qx.OO.defineClass($[308],qx.ui.popup.Popup,function(){qx.ui.popup.Popup.call(this);
var l=this._layout=new qx.ui.menu.Layout;
this.add(l);
this._openTimer=new qx.client.Timer(this.getOpenInterval());
this._openTimer.addEventListener($[54],this._onopentimer,this);
this._closeTimer=new qx.client.Timer(this.getCloseInterval());
this._closeTimer.addEventListener($[54],this._onclosetimer,this);
this.addEventListener($[40],this._onmouseover);
this.addEventListener($[18],this._onmouseover);
this.addEventListener($[47],this._onmouseout);
this.addEventListener($[13],this._onkeydown);
this.addEventListener($[14],this._onkeypress);
this.remapChildrenHandlingTo(this._layout);
});
qx.Proto._remappingChildTable=[$[563],$[267],$[612],$[701],$[498],$[321],$[678],$[507],$[244],$[2265],$[1187],$[2368],$[1490]];
qx.Proto._isFocusRoot=false;
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[229]});
qx.OO.addProperty({name:$[869],type:$[2],defaultValue:4});
qx.OO.addProperty({name:$[827],type:$[2],defaultValue:10});
qx.OO.addProperty({name:$[2262],type:$[2],defaultValue:8});
qx.OO.addProperty({name:$[2045],type:$[2],defaultValue:20});
qx.OO.addProperty({name:$[2074],type:$[2],defaultValue:8});
qx.OO.addProperty({name:$[1230],type:$[4]});
qx.OO.addProperty({name:$[2432],type:$[4]});
qx.OO.addProperty({name:$[356],type:$[4]});
qx.OO.addProperty({name:$[1312],type:$[4]});
qx.OO.addProperty({name:$[1167],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1376],type:$[2],defaultValue:250});
qx.OO.addProperty({name:$[1263],type:$[2],defaultValue:250});
qx.OO.addProperty({name:$[2384],type:$[2],defaultValue:-3});
qx.OO.addProperty({name:$[2222],type:$[2],defaultValue:-2});
qx.OO.addProperty({name:$[2287],type:$[3],defaultValue:true});
qx.Proto.getLayout=function(){return this._layout;
};
qx.Proto.isSubElement=function(vElement,vButtonsOnly){if((vElement.getParent()===this._layout)||((!vButtonsOnly)&&(vElement===this))){return true;
}
for(var a=this._layout.getChildren(),l=a.length,i=0;i<l;i++){if(a[i].getMenu&&a[i].getMenu()&&a[i].getMenu().isSubElement(vElement,vButtonsOnly)){return true;
}}return false;
};
qx.Proto._beforeAppear=function(){qx.ui.layout.CanvasLayout.prototype._beforeAppear.call(this);
qx.manager.object.MenuManager.getInstance().add(this);
this.bringToFront();
this._makeActive();
};
qx.Proto._beforeDisappear=function(){qx.ui.layout.CanvasLayout.prototype._beforeDisappear.call(this);
qx.manager.object.MenuManager.getInstance().remove(this);
this._makeInactive();
this.setHoverItem(null);
this.setOpenItem(null);
var vOpener=this.getOpener();
if(vOpener){vOpener.removeState($[19]);
}};
qx.Proto._modifyHoverItem=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.removeState($[58]);
}
if(propValue){propValue.addState($[58]);
}return true;
};
qx.Proto._modifyOpenItem=function(propValue,propOldValue,propData){var vMakeActive=false;
if(propOldValue){var vOldSub=propOldValue.getMenu();
if(vOldSub){vOldSub.setParentMenu(null);
vOldSub.setOpener(null);
vOldSub.hide();
}}
if(propValue){var vSub=propValue.getMenu();
if(vSub){vSub.setOpener(propValue);
vSub.setParentMenu(this);
var pl=propValue.getElement();
var el=this.getElement();
vSub.setTop(qx.html.Location.getPageBoxTop(pl)+this.getSubMenuVerticalOffset());
vSub.setLeft(qx.html.Location.getPageBoxLeft(el)+qx.html.Dimension.getBoxWidth(el)+this.getSubMenuHorizontalOffset());
vSub.show();
qx.ui.core.Widget.flushGlobalQueues();
}}return true;
};
qx.OO.addCachedProperty({name:$[1901]});
qx.OO.addCachedProperty({name:$[1846]});
qx.OO.addCachedProperty({name:$[2416]});
qx.OO.addCachedProperty({name:$[1307]});
qx.OO.addCachedProperty({name:$[906]});
qx.OO.addCachedProperty({name:$[1638]});
qx.OO.addCachedProperty({name:$[566],defaultValue:0});
qx.OO.addCachedProperty({name:$[2081]});
qx.OO.addCachedProperty({name:$[1389]});
qx.OO.addCachedProperty({name:$[800]});
qx.OO.addCachedProperty({name:$[1136]});
qx.Proto._computeMaxIconWidth=function(){var ch=this.getLayout().getChildren(),chl=ch.length,chc,m=0;
for(var i=0;i<chl;i++){chc=ch[i];
if(chc.hasIcon()){m=Math.max(m,16);
}}return m;
};
qx.Proto._computeMaxLabelWidth=function(){var ch=this.getLayout().getChildren(),chl=ch.length,chc,m=0;
for(var i=0;i<chl;i++){chc=ch[i];
if(chc.hasLabel()){m=Math.max(m,chc.getLabelObject().getPreferredBoxWidth());
}}return m;
};
qx.Proto._computeMaxLabelWidthIncShortcut=function(){var ch=this.getLayout().getChildren(),chl=ch.length,chc,m=0;
for(var i=0;i<chl;i++){chc=ch[i];
if(chc.hasLabel()&&chc.hasShortcut()){m=Math.max(m,chc.getLabelObject().getPreferredBoxWidth());
}}return m;
};
qx.Proto._computeMaxShortcutWidth=function(){var ch=this.getLayout().getChildren(),chl=ch.length,chc,m=0;
for(var i=0;i<chl;i++){chc=ch[i];
if(chc.hasShortcut()){m=Math.max(m,chc.getShortcutObject().getPreferredBoxWidth());
}}return m;
};
qx.Proto._computeMaxArrowWidth=function(){var ch=this.getLayout().getChildren(),chl=ch.length,chc,m=0;
for(var i=0;i<chl;i++){chc=ch[i];
if(chc.hasMenu()){m=Math.max(m,4);
}}return m;
};
qx.Proto._computeMaxContentWidth=function(){var vSum;
var lw=this.getMaxLabelWidth();
var sw=this.getMaxShortcutWidth();
if(this.getIndentShortcuts()){var vTemp=sw+this.getMaxLabelWidthIncShortcut();
if(sw>0){vTemp+=this.getLabelShortcutGap();
}vSum=Math.max(lw,vTemp);
}else{vSum=lw+sw;
if(lw>0&&sw>0){vSum+=this.getLabelShortcutGap();
}}return vSum;
};
qx.Proto._computeIconPosition=function(){return 0;
};
qx.Proto._computeLabelPosition=function(){var v=this.getMaxIconWidth();
return v>0?v+this.getIconContentGap():this.getContentNonIconPadding();
};
qx.Proto._computeShortcutPosition=function(){return this.getLabelPosition()+this.getMaxContentWidth()-this.getMaxShortcutWidth();
};
qx.Proto._computeArrowPosition=function(){var v=this.getMaxContentWidth();
return this.getLabelPosition()+(v>0?v+this.getContentArrowGap():v);
};
qx.Proto._invalidateMaxIconWidth=function(){this._cachedMaxIconWidth=null;
this._invalidateLabelPosition();
this._invalidateMenuButtonNeededWidth();
};
qx.Proto._invalidateMaxLabelWidth=function(){this._cachedMaxLabelWidth=null;
this._invalidateShortcutPosition();
this._invalidateMaxLabelWidthIncShortcut();
this._invalidateMaxContentWidth();
this._invalidateMenuButtonNeededWidth();
};
qx.Proto._invalidateMaxShortcutWidth=function(){this._cachedMaxShortcutWidth=null;
this._invalidateArrowPosition();
this._invalidateMaxContentWidth();
this._invalidateMenuButtonNeededWidth();
};
qx.Proto._invalidateMaxLabelWidth=function(){this._cachedMaxArrowWidth=null;
this._invalidateMenuButtonNeededWidth();
};
qx.Proto._invalidateLabelPosition=function(){this._cachedLabelPosition=null;
this._invalidateShortcutPosition();
};
qx.Proto._invalidateShortcutPosition=function(){this._cachedShortcutPosition=null;
this._invalidateArrowPosition();
};
qx.Proto._computeMenuButtonNeededWidth=function(){var vSum=0;
var vMaxIcon=this.getMaxIconWidth();
var vMaxContent=this.getMaxContentWidth();
var vMaxArrow=this.getMaxArrowWidth();
if(vMaxIcon>0){vSum+=vMaxIcon;
}else{vSum+=this.getContentNonIconPadding();
}
if(vMaxContent>0){if(vMaxIcon>0){vSum+=this.getIconContentGap();
}vSum+=vMaxContent;
}
if(vMaxArrow>0){if(vMaxIcon>0||vMaxContent>0){vSum+=this.getContentArrowGap();
}vSum+=vMaxArrow;
}else{vSum+=this.getContentNonArrowPadding();
}return vSum;
};
qx.Proto._onmouseover=function(e){var vParent=this.getParentMenu();
if(vParent){vParent._closeTimer.stop();
var vOpener=this.getOpener();
if(vOpener){vParent.setHoverItem(vOpener);
}}var t=e.getTarget();
if(t==this){this._openTimer.stop();
this._closeTimer.start();
this.setHoverItem(null);
return;
}var vOpen=this.getOpenItem();
if(vOpen){this.setHoverItem(t);
this._openTimer.stop();
if(t.hasMenu()){if(this.getFastReopen()){this.setOpenItem(t);
this._closeTimer.stop();
}else{this._openTimer.start();
}}else{this._closeTimer.start();
}}else{this.setHoverItem(t);
this._openTimer.stop();
if(t.hasMenu()){this._openTimer.start();
}}};
qx.Proto._onmouseout=function(e){this._openTimer.stop();
var t=e.getTarget();
if(t!=this&&t.hasMenu()){this._closeTimer.start();
}this.setHoverItem(null);
};
qx.Proto._onopentimer=function(e){this._openTimer.stop();
var vHover=this.getHoverItem();
if(vHover&&vHover.hasMenu()){this.setOpenItem(vHover);
}};
qx.Proto._onclosetimer=function(e){this._closeTimer.stop();
this.setOpenItem(null);
};
qx.Proto._onkeydown=function(e){if(e.getKeyIdentifier()==$[45]){this._onkeydown_enter(e);
}e.preventDefault();
};
qx.Proto._onkeypress=function(e){switch(e.getKeyIdentifier()){case $[73]:this._onkeypress_up(e);
break;
case $[71]:this._onkeypress_down(e);
break;
case $[55]:this._onkeypress_left(e);
break;
case $[56]:this._onkeypress_right(e);
break;
default:return;
}e.preventDefault();
};
qx.Proto._onkeypress_up=function(e){var vHover=this.getHoverItem();
var vPrev=vHover?vHover.isFirstChild()?this.getLastActiveChild():vHover.getPreviousActiveSibling([qx.ui.menu.Separator]):this.getLastActiveChild();
this.setHoverItem(vPrev);
};
qx.Proto._onkeypress_down=function(e){var vHover=this.getHoverItem();
var vNext=vHover?vHover.isLastChild()?this.getFirstActiveChild():vHover.getNextActiveSibling([qx.ui.menu.Separator]):this.getFirstActiveChild();
this.setHoverItem(vNext);
};
qx.Proto._onkeypress_left=function(e){var vOpener=this.getOpener();
if(vOpener instanceof qx.ui.menu.Button){var vOpenerParent=this.getOpener().getParentMenu();
vOpenerParent.setOpenItem(null);
vOpenerParent.setHoverItem(vOpener);
vOpenerParent._makeActive();
}else if(vOpener instanceof qx.ui.toolbar.MenuButton){var vToolBar=vOpener.getParentToolBar();
this.getFocusRoot().setActiveChild(vToolBar);
vToolBar._onkeypress(e);
}};
qx.Proto._onkeypress_right=function(e){var vHover=this.getHoverItem();
if(vHover){var vMenu=vHover.getMenu();
if(vMenu){this.setOpenItem(vHover);
vMenu.setHoverItem(vMenu.getFirstActiveChild());
return;
}}else if(!this.getOpenItem()){var vFirst=this.getLayout().getFirstActiveChild();
if(vFirst){vFirst.hasMenu()?this.setOpenItem(vFirst):this.setHoverItem(vFirst);
}}var vOpener=this.getOpener();
if(vOpener instanceof qx.ui.toolbar.MenuButton){var vToolBar=vOpener.getParentToolBar();
this.getFocusRoot().setActiveChild(vToolBar);
vToolBar._onkeypress(e);
}else if(vOpener instanceof qx.ui.menu.Button&&vHover){var vOpenerParent=vOpener.getParentMenu();
while(vOpenerParent&&vOpenerParent instanceof qx.ui.menu.Menu){vOpener=vOpenerParent.getOpener();
if(vOpener instanceof qx.ui.menu.Button){vOpenerParent=vOpener.getParentMenu();
}else{if(vOpener){vOpenerParent=vOpener.getParent();
}break;
}}
if(vOpenerParent instanceof qx.ui.toolbar.Part){vOpenerParent=vOpenerParent.getParent();
}
if(vOpenerParent instanceof qx.ui.toolbar.ToolBar){this.getFocusRoot().setActiveChild(vOpenerParent);
vOpenerParent._onkeypress(e);
}}};
qx.Proto._onkeydown_enter=function(e){var vHover=this.getHoverItem();
if(vHover){vHover.execute();
}qx.manager.object.MenuManager.getInstance().update();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this._layout){this._layout.dispose();
this._layout=null;
}
if(this._openTimer){this._openTimer.dispose();
this._openTimer=null;
}
if(this._closeTimer){this._closeTimer.dispose();
this._closeTimer=null;
}this.removeEventListener($[40],this._onmouseover);
this.removeEventListener($[18],this._onmouseover);
this.removeEventListener($[47],this._onmouseout);
this.removeEventListener($[13],this._onkeydown);
this.removeEventListener($[14],this._onkeypress);
return qx.ui.popup.Popup.prototype.dispose.call(this);
};




/* ID: qx.manager.object.MenuManager */
qx.OO.defineClass($[191],qx.manager.object.ObjectManager,function(){qx.manager.object.ObjectManager.call(this);
});
qx.Proto.update=function(vTarget,vEventName){var vMenu,vHashCode;
var vAll=this.getAll();
for(vHashCode in vAll){vMenu=vAll[vHashCode];
if(!vMenu.getAutoHide()){continue;
}
if(vTarget&&vTarget.getMenu&&vTarget.getMenu()){continue;
}if(!vTarget){vMenu.hide();
continue;
}var isMouseDown=vEventName==$[6];
var isMouseUp=vEventName==$[7];
if(vMenu.getOpener()!==
vTarget&&
(vTarget&&
(!vMenu.isSubElement(vTarget)&&isMouseDown)||
(vMenu.isSubElement(vTarget,true)&&isMouseUp)||(!isMouseDown&&!isMouseUp))){vMenu.hide();
continue;
}}};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.ui.menu.Separator */
qx.OO.defineClass($[910],qx.ui.layout.CanvasLayout,function(){qx.ui.layout.CanvasLayout.call(this);
this.setStyleProperty($[90],$[36]);
this.setStyleProperty($[128],$[36]);
this._line=new qx.ui.basic.Terminator;
this._line.setAnonymous(true);
this._line.setAppearance($[1972]);
this.add(this._line);
this.addEventListener($[6],this._onmousedown);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1931]});
qx.Proto.hasIcon=qx.lang.Function.returnFalse;
qx.Proto.hasLabel=qx.lang.Function.returnFalse;
qx.Proto.hasShortcut=qx.lang.Function.returnFalse;
qx.Proto.hasMenu=qx.lang.Function.returnFalse;
qx.Proto._onmousedown=function(e){e.stopPropagation();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._line){this._line.dispose();
this._line=null;
}return qx.ui.layout.CanvasLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.menu.Button */
qx.OO.defineClass($[1976],qx.ui.layout.HorizontalBoxLayout,function(vLabel,vIcon,vCommand,vMenu){qx.ui.layout.HorizontalBoxLayout.call(this);
var io=this._iconObject=new qx.ui.basic.Image;
io.setWidth(16);
io.setAnonymous(true);
var lo=this._labelObject=new qx.ui.basic.Label;
lo.setAnonymous(true);
lo.setSelectable(false);
var so=this._shortcutObject=new qx.ui.basic.Label;
so.setAnonymous(true);
so.setSelectable(false);
var ao=this._arrowObject=new qx.ui.basic.Image($[1539]);
ao.setAnonymous(true);
if(vLabel!=null){this.setLabel(vLabel);
}
if(vIcon!=null){this.setIcon(vIcon);
}
if(vCommand!=null){this.setCommand(vCommand);
qx.locale.Manager.getInstance().addEventListener($[212],function(e){this._modifyCommand(vCommand,vCommand);
},this);
}
if(vMenu!=null){this.setMenu(vMenu);
}this.addEventListener($[7],this._onmouseup);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[220]});
qx.OO.addProperty({name:$[94],type:$[0]});
qx.OO.addProperty({name:$[109]});
qx.OO.addProperty({name:$[229],type:$[4]});
qx.Proto._hasIcon=false;
qx.Proto._hasLabel=false;
qx.Proto._hasShortcut=false;
qx.Proto._hasMenu=false;
qx.Proto.hasIcon=function(){return this._hasIcon;
};
qx.Proto.hasLabel=function(){return this._hasLabel;
};
qx.Proto.hasShortcut=function(){return this._hasShortcut;
};
qx.Proto.hasMenu=function(){return this._hasMenu;
};
qx.Proto.getIconObject=function(){return this._iconObject;
};
qx.Proto.getLabelObject=function(){return this._labelObject;
};
qx.Proto.getShortcutObject=function(){return this._shortcutObject;
};
qx.Proto.getArrowObject=function(){return this._arrowObject;
};
qx.Proto.getParentMenu=function(){var vParent=this.getParent();
if(vParent){vParent=vParent.getParent();
if(vParent&&vParent instanceof qx.ui.menu.Menu){return vParent;
}}return null;
};
qx.Proto._createLayoutImpl=function(){return new qx.renderer.layout.MenuButtonLayoutImpl(this);
};
qx.Proto._modifyEnabled=function(propValue,propOldValue,propData){if(this._iconObject){this._iconObject.setEnabled(propValue);
}
if(this._labelObject){this._labelObject.setEnabled(propValue);
}
if(this._shortcutObject){this._shortcutObject.setEnabled(propValue);
}return qx.ui.layout.HorizontalBoxLayout.prototype._modifyEnabled.call(this,propValue,propOldValue,propData);
};
qx.Proto._modifyIcon=function(propValue,propOldValue,propData){this._iconObject.setSource(propValue);
if(qx.util.Validation.isValidString(propValue)){this._hasIcon=true;
if(qx.util.Validation.isInvalidString(propOldValue)){this.addAtBegin(this._iconObject);
}}else{this._hasIcon=false;
this.remove(this._iconObject);
}return true;
};
qx.Proto._modifyLabel=function(propValue,propOldValue,propData){this._labelObject.setHtml(propValue);
if((typeof propValue==$[0]&&propValue!=$[1])||propValue instanceof qx.locale.LocalizedString){this._hasLabel=true;
if(!((typeof propOldValue==$[0]&&propOldValue!=$[1])||propOldValue instanceof qx.locale.LocalizedString)){this.addAt(this._labelObject,this.getFirstChild()==this._iconObject?1:0);
}}else{this._hasLabel=false;
this.remove(this._labelObject);
}return true;
};
qx.Proto._modifyCommand=function(propValue,propOldValue,propData){var vHtml=propValue?propValue.toString():$[1];
this._shortcutObject.setHtml(vHtml);
if(qx.util.Validation.isValidString(vHtml)){this._hasShortcut=true;
var vOldHtml=propOldValue?propOldValue.getShortcut():$[1];
if(qx.util.Validation.isInvalidString(vOldHtml)){if(this.getLastChild()==this._arrowObject){this.addBefore(this._shortcutObject,this._arrowObject);
}else{this.addAtEnd(this._shortcutObject);
}}}else{this._hasShortcut=false;
this.remove(this._shortcutObject);
}return true;
};
qx.Proto._modifyMenu=function(propValue,propOldValue,propData){if(propValue){this._hasMenu=true;
if(qx.util.Validation.isInvalidObject(propOldValue)){this.addAtEnd(this._arrowObject);
}}else{this._hasMenu=false;
this.remove(this._arrowObject);
}return true;
};
qx.Proto._onmouseup=function(e){this.execute();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}if(this._iconObject){this._iconObject.dispose();
this._iconObject=null;
}
if(this._labelObject){this._labelObject.dispose();
this._labelObject=null;
}
if(this._shortcutObject){this._shortcutObject.dispose();
this._shortcutObject=null;
}
if(this._arrowObject){this._arrowObject.dispose();
this._arrowObject=null;
}this.removeEventListener($[7],this._onmouseup);
return qx.ui.layout.HorizontalBoxLayout.prototype.dispose.call(this);
};




/* ID: qx.renderer.layout.MenuButtonLayoutImpl */
qx.OO.defineClass($[1205],qx.renderer.layout.HorizontalBoxLayoutImpl,function(vWidget){qx.renderer.layout.HorizontalBoxLayoutImpl.call(this,vWidget);
this.setEnableFlexSupport(false);
});
qx.Proto.computeChildrenNeededWidth=function(){var vWidget=this.getWidget();
var vMenu=vWidget.getParent().getParent();
return vMenu.getMenuButtonNeededWidth();
};
qx.Proto.updateSelfOnChildOuterWidthChange=function(vChild){var vWidget=this.getWidget();
var vMenu=vWidget.getParent().getParent();
switch(vChild){case vWidget._iconObject:vMenu._invalidateMaxIconWidth();
break;
case vWidget._labelObject:vMenu._invalidateMaxLabelWidth();
break;
case vWidget._shortcutObject:vMenu._invalidateMaxShortcutWidth();
break;
case vWidget._arrowObject:vMenu._invalidateMaxArrowWidth();
break;
}return qx.renderer.layout.HorizontalBoxLayoutImpl.prototype.updateSelfOnChildOuterWidthChange.call(this,vChild);
};
qx.Proto.layoutChild_locationX=function(vChild,vJobs){var vWidget=this.getWidget();
var vMenu=vWidget.getParent().getParent();
var vPos=null;
switch(vChild){case vWidget._iconObject:vPos=vMenu.getIconPosition();
break;
case vWidget._labelObject:vPos=vMenu.getLabelPosition();
break;
case vWidget._shortcutObject:vPos=vMenu.getShortcutPosition();
break;
case vWidget._arrowObject:vPos=vMenu.getArrowPosition();
break;
}
if(vPos!=null){vPos+=vWidget.getPaddingLeft();
vChild._applyRuntimeLeft(vPos);
}};




/* ID: qx.ui.toolbar.MenuButton */
qx.OO.defineClass($[1636],qx.ui.toolbar.Button,function(vText,vMenu,vIcon,vIconWidth,vIconHeight,vFlash){qx.ui.toolbar.Button.call(this,vText,vIcon,vIconWidth,vIconHeight,vFlash);
if(vMenu!=null){this.setMenu(vMenu);
}});
qx.OO.addProperty({name:$[229],type:$[4],instance:$[308]});
qx.OO.addProperty({name:$[1404],type:$[0],allowNull:false,possibleValues:[$[539],$[352]],defaultValue:$[352]});
qx.Proto.getParentToolBar=function(){var vParent=this.getParent();
if(vParent instanceof qx.ui.toolbar.Part){vParent=vParent.getParent();
}return vParent instanceof qx.ui.toolbar.ToolBar?vParent:null;
};
qx.Proto._showMenu=function(vFromKeyEvent){var vMenu=this.getMenu();
if(vMenu){var vMenuParent=vMenu.getParent();
var vMenuParentElement=vMenuParent.getElement();
var vButtonElement=this.getElement();
var vButtonHeight=qx.html.Dimension.getBoxHeight(vButtonElement);
var vMenuParentLeft=qx.html.Location.getPageBoxLeft(vMenuParentElement);
var vButtonLeft=qx.html.Location.getPageBoxLeft(vButtonElement);
vMenu.setLeft(vButtonLeft-vMenuParentLeft);
switch(this.getDirection()){case $[539]:var vBodyHeight=qx.html.Dimension.getInnerHeight(document.body);
var vMenuParentBottom=qx.html.Location.getPageBoxBottom(vMenuParentElement);
var vButtonBottom=qx.html.Location.getPageBoxBottom(vButtonElement);
vMenu.setBottom(vButtonHeight+(vBodyHeight-vButtonBottom)-(vBodyHeight-vMenuParentBottom));
vMenu.setTop(null);
break;
case $[352]:var vButtonTop=qx.html.Location.getPageBoxTop(vButtonElement);
vMenu.setTop(vButtonTop+vButtonHeight);
vMenu.setBottom(null);
break;
}this.addState($[19]);
if(vFromKeyEvent){vMenu.setHoverItem(vMenu.getFirstActiveChild());
}vMenu.show();
}};
qx.Proto._hideMenu=function(){var vMenu=this.getMenu();
if(vMenu){vMenu.hide();
}};
qx.Proto._modifyMenu=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.setOpener(null);
propOldValue.removeEventListener($[80],this._onmenuappear,this);
propOldValue.removeEventListener($[226],this._onmenudisappear,this);
}
if(propValue){propValue.setOpener(this);
propValue.addEventListener($[80],this._onmenuappear,this);
propValue.addEventListener($[226],this._onmenudisappear,this);
}return true;
};
qx.Proto._onmousedown=function(e){if(e.getTarget()!=this||!e.isLeftButtonPressed()){return;
}this.hasState($[19])?this._hideMenu():this._showMenu();
};
qx.Proto._onmouseup=function(e){};
qx.Proto._onmouseout=function(e){if(e.getTarget()!=this){return;
}this.removeState($[58]);
};
qx.Proto._onmouseover=function(e){var vToolBar=this.getParentToolBar();
if(vToolBar){var vMenu=this.getMenu();
switch(vToolBar.getOpenMenu()){case null:case vMenu:break;
default:qx.manager.object.MenuManager.getInstance().update();
this._showMenu();
}}return qx.ui.toolbar.Button.prototype._onmouseover.call(this,e);
};
qx.Proto._onmenuappear=function(e){var vToolBar=this.getParentToolBar();
if(!vToolBar){return;
}var vMenu=this.getMenu();
vToolBar.setOpenMenu(vMenu);
};
qx.Proto._onmenudisappear=function(e){var vToolBar=this.getParentToolBar();
if(!vToolBar){return;
}var vMenu=this.getMenu();
if(vToolBar.getOpenMenu()==vMenu){vToolBar.setOpenMenu(null);
}};




/* ID: qx.ui.toolbar.ToolBar */
qx.OO.defineClass($[1683],qx.ui.layout.HorizontalBoxLayout,function(){qx.ui.layout.HorizontalBoxLayout.call(this);
this.addEventListener($[14],this._onkeypress);
});
qx.OO.addProperty({name:$[1648],type:$[4],instance:$[308]});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[421]});
qx.Proto.getAllButtons=function(){var vChildren=this.getChildren();
var vLength=vChildren.length;
var vDeepChildren=[];
var vCurrent;
for(var i=0;i<vLength;i++){vCurrent=vChildren[i];
if(vCurrent instanceof qx.ui.toolbar.MenuButton){vDeepChildren.push(vCurrent);
}else if(vCurrent instanceof qx.ui.toolbar.Part){vDeepChildren=vDeepChildren.concat(vCurrent.getChildren());
}}return vDeepChildren;
};
qx.Proto._onkeypress=function(e){switch(e.getKeyIdentifier()){case $[55]:return this._onkeypress_left();
case $[56]:return this._onkeypress_right();
}};
qx.Proto._onkeypress_left=function(){var vMenu=this.getOpenMenu();
if(!vMenu){return;
}var vOpener=vMenu.getOpener();
if(!vOpener){return;
}var vChildren=this.getAllButtons();
var vChildrenLength=vChildren.length;
var vIndex=vChildren.indexOf(vOpener);
var vCurrent;
var vPrevButton=null;
for(var i=vIndex-1;i>=0;i--){vCurrent=vChildren[i];
if(vCurrent instanceof qx.ui.toolbar.MenuButton&&vCurrent.getEnabled()){vPrevButton=vCurrent;
break;
}}if(!vPrevButton){for(var i=vChildrenLength-1;i>vIndex;i--){vCurrent=vChildren[i];
if(vCurrent instanceof qx.ui.toolbar.MenuButton&&vCurrent.getEnabled()){vPrevButton=vCurrent;
break;
}}}
if(vPrevButton){qx.manager.object.MenuManager.getInstance().update();
vPrevButton._showMenu(true);
}};
qx.Proto._onkeypress_right=function(){var vMenu=this.getOpenMenu();
if(!vMenu){return;
}var vOpener=vMenu.getOpener();
if(!vOpener){return;
}var vChildren=this.getAllButtons();
var vChildrenLength=vChildren.length;
var vIndex=vChildren.indexOf(vOpener);
var vCurrent;
var vNextButton=null;
for(var i=vIndex+1;i<vChildrenLength;i++){vCurrent=vChildren[i];
if(vCurrent instanceof qx.ui.toolbar.MenuButton&&vCurrent.getEnabled()){vNextButton=vCurrent;
break;
}}if(!vNextButton){for(var i=0;i<vIndex;i++){vCurrent=vChildren[i];
if(vCurrent instanceof qx.ui.toolbar.MenuButton&&vCurrent.getEnabled()){vNextButton=vCurrent;
break;
}}}
if(vNextButton){qx.manager.object.MenuManager.getInstance().update();
vNextButton._showMenu(true);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[14],this._onkeypress);
return qx.ui.layout.HorizontalBoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.menu.CheckBox */
qx.OO.defineClass($[818],qx.ui.menu.Button,function(vLabel,vCommand,vChecked){qx.ui.menu.Button.call(this,vLabel,$[59],vCommand);
if(vChecked!=null){this.setChecked(vChecked);
}qx.manager.object.ImageManager.getInstance().preload($[591]);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1181]});
qx.OO.addProperty({name:$[97],type:$[0]});
qx.OO.addProperty({name:$[104],type:$[0]});
qx.OO.addProperty({name:$[81],type:$[3],defaultValue:false,getAlias:$[240]});
qx.Proto._modifyChecked=function(propValue,propOldValue,propData){propValue?this.addState($[81]):this.removeState($[81]);
this.getIconObject().setSource(propValue?$[591]:$[59]);
return true;
};
qx.Proto.execute=function(){this.setChecked(!this.getChecked());
qx.ui.menu.Button.prototype.execute.call(this);
};




/* ID: qx.ui.form.ComboBoxEx */
qx.OO.defineClass($[758],qx.ui.layout.HorizontalBoxLayout,function(){qx.ui.layout.HorizontalBoxLayout.call(this);
var p=this._popup=new qx.ui.popup.Popup;
p.setAppearance($[2108]);
this._createList([this.tr($[1016]),this.tr($[1048])]);
var f=this._field=new qx.ui.form.TextField;
f.setAppearance($[1345]);
f.addEventListener($[87],this._oninput,this);
this.add(f);
this.setEditable(false);
var b=this._button=new qx.ui.basic.Atom(null,$[481]);
b.set({appearance:$[553],tabIndex:-1});
this.add(b);
this.setTabIndex(1);
this.addEventListener($[6],this._onmousedown);
this.addEventListener($[7],this._onmouseup);
this.addEventListener($[62],this._onmousewheel);
this.addEventListener($[46],function(){if(this.getAllowSearch()){this.openSearchDialog();
}});
this.addEventListener($[13],this._onkeydown);
this.addEventListener($[14],this._onkeypress);
this.addEventListener($[387],this._testClosePopup);
this._popup.addEventListener($[80],this._onpopupappear,this);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1372]});
qx.OO.addProperty({name:$[516],type:$[3],getAlias:$[733]});
qx.OO.addProperty({name:$[104],type:$[0]});
qx.OO.addProperty({name:$[751],type:$[2],defaultValue:10});
qx.OO.addProperty({name:$[2378],type:$[3],getAlias:$[1408],defaultValue:false});
qx.OO.addProperty({name:$[2318],type:$[0],defaultValue:$[425],possibleValues:[$[425],$[305]]});
qx.OO.addProperty({name:$[2015],type:$[0],defaultValue:$[1664]});
qx.OO.addProperty({name:$[2319],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[904],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[2196],type:$[2],defaultValue:10});
qx.Proto.getPopup=function(){return this._popup;
};
qx.Proto.getList=function(){return this._list;
};
qx.Proto.getField=function(){return this._field;
};
qx.Proto.getButton=function(){return this._button;
};
qx.Proto._getComboSetting=function(key){return qx.Settings.getValueOfClass($[758],key);
};
qx.Proto.getSelectedRow=function(){var ind=this.getSelectedIndex();
return ind<0?null:this._model.getData()[ind];
};
qx.Proto._createList=function(columns){this._model=new qx.ui.table.SimpleTableModel;
this._model.setColumns(columns);
var l=this._list=new qx.ui.table.Table(this._model);
l.setFocusedCell=function(){};
l.setAppearance($[2009]);
l.forceKeepFirstVisibleRowComplete(false);
var selMan=l._getSelectionManager();
var oldHandle=selMan.handleMouseUp,me=this;
selMan.handleMouseUp=function(vItem,e){oldHandle.apply(selMan,arguments);
if(e.isLeftButtonPressed()){me._testClosePopup();
}};
this._modifyIdColumnVisible(this.getIdColumnVisible());
this._manager=l.getSelectionModel();
this._manager.addEventListener($[587],this._onChangeSelection,this);
this._manager.removeSelectionInterval=function(){};
this._manager.setSelectionMode(qx.ui.table.SelectionModel.SINGLE_SELECTION);
this._popup.add(l);
delete this._calcDimensions;
};
qx.Proto.setColumnHeaders=function(columns){if(!this._list||columns.length!=this._model.getColumnCount()){if(this._list){var data=this._model.getData();
this._list.setParent(null);
this._list.dispose();
this._list=null;
}this._createList(columns);
if(data&&data.length){this._model.setData(data);
}}else{this._model.setColumns(columns);
this._list.getTableColumnModel().init(columns.length);
delete this._calcDimensions;
}this._modifyIdColumnVisible(this.getIdColumnVisible());
};
qx.Proto.getColumnHeaders=function(propVal){var cols=[];
cols.length=this._model.getColumnCount();
for(var col=0;col<cols.length;col++){cols[col]=this._model.getColumnName(col);
}return cols;
};
qx.Proto.setSelection=function(data,newValue){delete this._calcDimensions;
this._model.setData(data);
if(!this.getEditable()){if(newValue!=null&&newValue!=this.getValue()){this.setValue(newValue);
}else{this._modifyValue(this.getValue());
}}};
qx.Proto.getSelection=function(){return this._model.getData();
};
qx.Proto.setSelectedIndex=function(index){var items=this.getSelection().length;
if(items>=0){if(index<0&&!this.getEditable()&&this.getEnsureSomethingSelected()){index=0;
}
if(index>=0){index=qx.lang.Number.limit(index,0,items-1);
this._manager.setSelectionInterval(index,index);
if(this._popup.isSeeable()){this._list.scrollCellVisible(0,index);
}}else{this._manager.clearSelection();
}}return true;
};
qx.Proto.getSelectedIndex=function(){var index=this._manager.getAnchorSelectionIndex();
return this._manager.isSelectedIndex(index)?index:-1;
};
qx.Proto._modifyShowOnTextField=function(propVal){if(!this.getEditable()){this.setSelectedIndex(this.getSelectedIndex());
delete this._calcDimensions;
}return true;
};
qx.Proto._modifyMaxVisibleRows=function(){delete this._calcDimensions;
return true;
};
qx.Proto._checkIdDescriptionSeparator=function(propVal){return String(propVal).replace(/ /g,$[2037]);
};
qx.Proto._modifyIdDescriptionSeparator=function(propVal){if(!this.getEditable()&&this.getShowOnTextField()==$[305]){this.setSelectedIndex(this.getSelectedIndex());
delete this._calcDimensions;
}return true;
};
qx.Proto._modifyIdColumnVisible=function(propVal){this._list.getTableColumnModel().setColumnVisible(0,propVal);
delete this._calcDimensions;
return true;
};
qx.Proto._modifyEditable=function(propValue){var f=this._field;
f.setReadOnly(!propValue);
f.setCursor(propValue?null:$[48]);
f.setSelectable(propValue);
return true;
};
qx.Proto._modifyValue=function(propValue){this._fromValue=true;
var values=this._model.getData();
var i=-1;
if(propValue!=null){for(var i=0;i<values.length;i++){if(propValue==values[i][0]){break;
}}
if(i==values.length){i=-1;
}}
if(this.getEditable()){this._field.setValue(propValue);
}if(!this._fromSelected){this.setSelectedIndex(i);
}delete this._fromValue;
return true;
};
qx.Proto._modifyEnabled=function(propValue){if(this._button){this._button.setEnabled(propValue);
}
if(this._field){this._field.setEnabled(propValue);
}return qx.ui.layout.HorizontalBoxLayout.prototype._modifyEnabled.apply(this,arguments);
};
qx.Proto._oldSelected=null;
qx.Proto._openPopup=function(){if(this.isSearchInProgress()){return;
}var p=this._popup;
p.setAutoHide(false);
var el=this.getElement();
if(!p.isCreated()){this.createDispatchEvent($[778]);
}
if(!this.getSelection().length){return;
}p.positionRelativeTo(el,1,qx.html.Dimension.getBoxHeight(el));
this._calculateDimensions();
p.setParent(this.getTopLevelWidget());
p.auto();
p.show();
this._oldSelected=this.getSelectedIndex();
window.setInterval(function(){p.setAutoHide(true);
},0);
};
qx.Proto._closePopup=function(){this._popup.hide();
};
qx.Proto._testClosePopup=function(){if(this._popup.isSeeable()){this._closePopup();
}};
qx.Proto._togglePopup=function(){this._popup.isSeeable()?this._closePopup():this._openPopup();
};
qx.Proto.sizeTextFieldToContent=function(){this._calculateDimensions();
this._field.setWidth(this._neededTextFieldWidth);
};
qx.Proto._calculateDimensions=function(){if(this._calcDimensions){return ;
}var data=this.getSelection();
var cols=this.getColumnHeaders(),nCols=cols.length;
var columnWidths=[];
this._neededTextFieldWidth=0;
columnWidths.length=cols.length;
for(var col=0;col<cols.length;col++){columnWidths[col]=0;
}var withDescript=this.getShowOnTextField()==$[305];
for(var row=0,rows=Math.min(data.length,50);row<rows;row++){var r=data[row],wi0,wi1;
for(col=0;col<nCols;col++){var wi=this._getTextWidth(r[col]);
if(col==0){wi0=wi;
}else if(col==1){wi1=wi;
}columnWidths[col]=Math.max(wi,columnWidths[col]);
}this._neededTextFieldWidth=Math.max(this._neededTextFieldWidth,wi1+(withDescript?wi0:0));
}
if(this.getShowOnTextField()==$[305]){this._neededTextFieldWidth+=this._getTextWidth(this.getIdDescriptionSeparator());
}this._neededTextFieldWidth+=8;
var maxRows=this.getMaxVisibleRows(),width=data.length>maxRows?(new qx.ui.core.ScrollBar)._getScrollBarWidth():0,colModel=this._list.getTableColumnModel(),countVisible=0;
for(col=0;col<nCols;col++){if(colModel.isColumnVisible(col)){countVisible++;
}}var hasHeaders=countVisible>1;
this._list.getPaneScroller(0).getHeader().setHeight(hasHeaders?$[468]:1);
for(col=0;col<nCols;col++){if(colModel.isColumnVisible(col)){var w=columnWidths[col];
if(hasHeaders){w=Math.max(w,this._getTextWidth(cols[col]));
}w+=8;
this._list.setColumnWidth(col,w);
width+=w;
}}this._list.set({width:width,height:this._list.getRowHeight()*Math.min(maxRows,(hasHeaders?1:0)+data.length)+2+(hasHeaders?2:0)});
this._calcDimensions=true;
};
qx.Proto._getTextWidth=function(text){var lab=new qx.ui.basic.Label(text);
var res=lab.getPreferredBoxWidth();
lab.dispose();
return res;
};
qx.Proto.isSearchInProgress=function(){return !this._popup.contains(this._list);
};
qx.Proto._search=function(startIndex,txt,caseSens){if(txt==null||!txt.length){return;
}var row=startIndex,nCols=this._model.getColumnCount(),nRows=this.getSelection().length,data=this._model.getData();
if(!caseSens){txt=txt.toLowerCase();
}var colModel=this._list.getTableColumnModel();
while(true){var dataRow=data[row];
if(dataRow){for(var col=0;col<nCols;col++){if(colModel.isColumnVisible(col)){var txtCol=dataRow[col];
if(!caseSens){txtCol=txtCol.toLowerCase();
}
if(txtCol.indexOf(txt)>=0){this._manager.setSelectionInterval(row,row);
this._list.scrollCellVisible(1,row);
return;
}}}}row=(row+1)%nRows;
if(row==startIndex){break;
}}};
qx.Proto.openSearchDialog=function(){var sel=this.getSelection();
if(!sel||!sel.length||this.isSearchInProgress()){return;
}this._testClosePopup();
var me=this,oldSelectedIndex=this.getSelectedIndex(),startIndex=oldSelectedIndex;
function search(){me._search(startIndex,searchField.getComputedValue(),checkCase.isChecked());
}var searchField=new qx.ui.form.TextField;
searchField.set({minWidth:this._field.getWidth(),width:$[397]});
searchField.addEventListener($[87],function(){search();
});
var checkCase=new qx.ui.form.CheckBox(this.tr($[1736]));
checkCase.set({horizontalAlign:$[547],marginBottom:4});
var vbox=new qx.ui.layout.VerticalBoxLayout;
vbox.set({spacing:6,horizontalChildrenAlign:$[547],height:$[397]});
vbox.auto();
vbox.add(searchField,checkCase);
this._calculateDimensions();
var border=qx.renderer.border.BorderPresets.getInstance().inset;
var newListSettings={height:border.getTopWidth()+this._list.getHeight()+border.getBottomWidth(),width:border.getLeftWidth()+this._list.getWidth()+border.getRightWidth(),border:border,parent:vbox};
var oldListSettings={};
for(var prop in newListSettings){oldListSettings[prop]=this._list[qx.OO.getter[prop]]();
}this._list.set(newListSettings);
var butNext=new qx.ui.form.Button($[233],$[611]);
butNext.set({toolTip:new qx.ui.popup.ToolTip(this.tr($[1928]))});
butNext.addEventListener($[38],function(){startIndex=(this.getSelectedIndex()+1)%sel.length;
search();
},this);
var butOk=new qx.ui.form.Button($[233],$[957]);
butOk.addEventListener($[222],function(){oldSelectedIndex=null;
win.close();
},this);
var butCancel=new qx.ui.form.Button($[233],$[1245]);
butCancel.addEventListener($[222],function(){win.close();
},this);
var butBox=new qx.ui.layout.VerticalBoxLayout;
butBox.auto();
butBox.set({spacing:10});
butBox.add(butNext,butOk,butCancel);
var hbox=new qx.ui.layout.BoxLayout;
hbox.auto();
hbox.setPadding(10);
hbox.set({spacing:8,minHeight:$[468],height:$[397]});
hbox.add(vbox,butBox);
var win=new qx.ui.window.Window(this.tr($[1166]),$[611]);
win.add(hbox);
win.positionRelativeTo(this);
win.set({autoHide:true,allowMaximize:false,showMaximize:false,allowMinimize:false,showMinimize:false});
win.addEventListener($[80],function(){searchField.focus();
});
win.addEventListener($[226],function(){if(oldSelectedIndex!=null){this.setSelectedIndex(oldSelectedIndex);
}this._list.set(oldListSettings);
this.focus();
},this);
win.addEventListener($[13],function(e){switch(e.getKeyIdentifier()){case $[45]:butOk.createDispatchEvent($[222]);
break;
case $[96]:butCancel.createDispatchEvent($[222]);
break;
case $[254]:butNext.createDispatchEvent($[222]);
break;
default:return;
}e.preventDefault();
},this);
win.auto();
win.addToDocument();
win.open();
};
qx.Proto._onChangeSelection=function(e){this._fromSelected=true;
if(!this._fromInput){var index=this.getSelectedIndex();
if(index>=0){var row=this._model.getData()[index];
}
if(row||!this.getEditable()){this.setValue(row&&row[0]);
}if(!this.getEditable()){var val=$[1];
if(row){val=this.getShowOnTextField()==$[425]?row[1]:(row[0]!=null&&row[0]!=$[233]?row[0]+this.getIdDescriptionSeparator()+row[1]:row[1]);
}this._field.setValue(val);
}}delete this._fromSelected;
};
qx.Proto._onpopupappear=function(e){var index=this.getSelectedIndex();
if(index>=0){this._list.scrollCellVisible(0,index);
}};
qx.Proto._oninput=function(e){this._fromInput=true;
this.setValue(this._field.getComputedValue());
delete this._fromInput;
};
qx.Proto._onmousedown=function(e){switch(e.getTarget()){case this._field:if(this.getEditable()){break;
}case this._button:this._button.addState($[19]);
this._togglePopup();
this.setCapture(true);
break;
}};
qx.Proto._onmouseup=function(e){switch(e.getTarget()){case this._field:if(this.getEditable()){break;
}default:this._button.removeState($[19]);
break;
}this.setCapture(false);
};
qx.Proto._onmousewheel=function(e){if(!this._popup.isSeeable()){this.setSelectedIndex(Math.max(0,this.getSelectedIndex()+(e.getWheelDelta()<0?-1:1)));
}};
qx.Proto._onkeydown=function(e){var vVisible=this._popup.isSeeable();
switch(e.getKeyIdentifier()){case $[45]:if(vVisible){this._closePopup();
this.setFocused(true);
}else{this._openPopup();
}break;
case $[96]:if(vVisible){this.setSelectedIndex(this._oldSelected);
this._closePopup();
this.setFocused(true);
}break;
case $[130]:this.setSelectedIndex(0);
break;
case $[144]:var items=this.getSelection().length;
if(items){this.setSelectedIndex(items-1);
}break;
case $[71]:if(e.isAltPressed()){this._togglePopup();
}break;
case $[254]:if(this.getAllowSearch()){this.openSearchDialog();
}break;
case $[458]:if(e.isCtrlPressed()){if(this.getAllowSearch()){this.openSearchDialog();
}break;
}return;
default:if(vVisible){this._list.dispatchEvent(e);
}return;
}e.preventDefault();
};
qx.Proto._onkeypress=function(e){var vVisible=this._popup.isSeeable();
switch(e.getKeyIdentifier()){case $[73]:this.setSelectedIndex(Math.max(0,this.getSelectedIndex()-1));
break;
case $[71]:this.setSelectedIndex(Math.max(0,this.getSelectedIndex()+1));
break;
case $[75]:this.setSelectedIndex(Math.max(0,this.getSelectedIndex()-this.getPagingInterval()));
break;
case $[88]:this.setSelectedIndex(this.getSelectedIndex()+this.getPagingInterval());
break;
default:if(vVisible){this._list.dispatchEvent(e);
}return;
}e.preventDefault();
if(!this.isEditable()&&this._list.isSeeable()){this._list.dispatchEvent(e);
}};
qx.Proto._visualizeBlur=function(){if(qx.core.Client.getInstance().isMshtml()){if(this.getEnableElementFocus()&&!this.getFocusRoot().getFocusedChild()){try{if(this.getEditable()){this.getField().getElement().blur();
}else{this.getElement().blur();
}}catch(ex){}}}else{if(this.getEnableElementFocus()){try{if(this.getEditable()){this.getField().getElement().blur();
}else if(!this.getFocusRoot().getFocusedChild()){this.getElement().blur();
}}catch(ex){}}}this.removeState($[159]);
return true;
};
qx.Proto._visualizeFocus=function(){if(!qx.event.handler.FocusHandler.mouseFocus&&this.getEnableElementFocus()){try{if(this.getEditable()){this.getField().getElement().focus();
this.getField()._ontabfocus();
}else{this.getElement().focus();
}}catch(ex){}}this.addState($[159]);
return true;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[6],this._onmousedown);
this.removeEventListener($[7],this._onmouseup);
this.removeEventListener($[62],this._onmousewheel);
this.removeEventListener($[13],this._onkeydown);
this.removeEventListener($[14],this._onkeypress);
this._model=null;
if(this._manager){this._manager.removeEventListener($[587],this._onChangeSelection);
this._manager=null;
}
if(this._list){this._list.dispose();
this._list=null;
}
if(this._popup){this._popup.removeEventListener($[80],this._onpopupappear,this);
this._popup.dispose();
this._popup=null;
}
if(this._field){if(this.getEditable()){this._field.removeEventListener($[87],this._oninput,this);
}this._field.dispose();
this._field=null;
}
if(this._button){this._button.dispose();
this._button=null;
}return qx.ui.layout.HorizontalBoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.table.AbstractTableModel */
qx.OO.defineClass($[2005],qx.ui.table.TableModel,function(){qx.ui.table.TableModel.call(this);
this._columnIdArr=[];
this._columnNameArr=[];
this._columnIndexMap={};
});
qx.Proto.getColumnCount=function(){return this._columnIdArr.length;
};
qx.Proto.getColumnIndexById=function(columnId){return this._columnIndexMap[columnId];
};
qx.Proto.getColumnId=function(columnIndex){return this._columnIdArr[columnIndex];
};
qx.Proto.getColumnName=function(columnIndex){return this._columnNameArr[columnIndex];
};
qx.Proto.setColumnIds=function(columnIdArr){this._columnIdArr=columnIdArr;
this._columnIndexMap={};
for(var i=0;i<columnIdArr.length;i++){this._columnIndexMap[columnIdArr[i]]=i;
}this._columnNameArr=new Array(columnIdArr.length);
if(!this._internalChange){this.createDispatchEvent(qx.ui.table.TableModel.EVENT_TYPE_META_DATA_CHANGED);
}};
qx.Proto.setColumnNamesByIndex=function(columnNameArr){if(this._columnIdArr.length!=columnNameArr.length){throw new Error("this._columnIdArr and columnNameArr have different length: "+this._columnIdArr.length+" != "+columnNameArr.length);
}this._columnNameArr=columnNameArr;
this.createDispatchEvent(qx.ui.table.TableModel.EVENT_TYPE_META_DATA_CHANGED);
};
qx.Proto.setColumnNamesById=function(columnNameMap){this._columnNameArr=new Array(this._columnIdArr.length);
for(var i=0;i<this._columnIdArr.length;++i){this._columnNameArr[i]=columnNameMap[this._columnIdArr[i]];
}};
qx.Proto.setColumns=function(columnNameArr,columnIdArr){if(columnIdArr==null){columnIdArr=columnNameArr;
}
if(columnIdArr.length!=columnNameArr.length){throw new Error("columnIdArr and columnNameArr have different length: "+columnIdArr.length+" != "+columnNameArr.length);
}this._internalChange=true;
this.setColumnIds(columnIdArr);
this._internalChange=false;
this.setColumnNamesByIndex(columnNameArr);
};




/* ID: qx.ui.table.SimpleTableModel */
qx.OO.defineClass($[1240],qx.ui.table.AbstractTableModel,function(){qx.ui.table.AbstractTableModel.call(this);
this._rowArr=[];
this._sortColumnIndex=-1;
this._sortAscending;
this._editableColArr=null;
});
qx.Proto.getRowData=function(rowIndex){return this._rowArr[rowIndex];
};
qx.Proto.getRowDataAsMap=function(rowIndex){var columnArr=this._rowArr[rowIndex];
var map={};
for(var col=0;col<this.getColumnCount();col++){map[this.getColumnId(col)]=columnArr[col];
}return map;
};
qx.Proto.setEditable=function(editable){this._editableColArr=[];
for(var col=0;col<this.getColumnCount();col++){this._editableColArr[col]=editable;
}this.createDispatchEvent(qx.ui.table.TableModel.EVENT_TYPE_META_DATA_CHANGED);
};
qx.Proto.setColumnEditable=function(columnIndex,editable){if(editable!=this.isColumnEditable(columnIndex)){if(this._editableColArr==null){this._editableColArr=[];
}this._editableColArr[columnIndex]=editable;
this.createDispatchEvent(qx.ui.table.TableModel.EVENT_TYPE_META_DATA_CHANGED);
}};
qx.Proto.isColumnEditable=function(columnIndex){return this._editableColArr?(this._editableColArr[columnIndex]==true):false;
};
qx.Proto.isColumnSortable=function(columnIndex){return true;
};
qx.Proto.sortByColumn=function(columnIndex,ascending){var comperator;
if(ascending){comperator=function(row1,row2){var obj1=row1[columnIndex];
var obj2=row2[columnIndex];
return (obj1>obj2)?1:((obj1==obj2)?0:-1);
};
}else{comperator=function(row1,row2){var obj1=row1[columnIndex];
var obj2=row2[columnIndex];
return (obj1<obj2)?1:((obj1==obj2)?0:-1);
};
}this._rowArr.sort(comperator);
this._sortColumnIndex=columnIndex;
this._sortAscending=ascending;
this.createDispatchEvent(qx.ui.table.TableModel.EVENT_TYPE_META_DATA_CHANGED);
};
qx.Proto._clearSorting=function(){if(this._sortColumnIndex!=-1){this._sortColumnIndex=-1;
this._sortAscending=true;
this.createDispatchEvent(qx.ui.table.TableModel.EVENT_TYPE_META_DATA_CHANGED);
}};
qx.Proto.getSortColumnIndex=function(){return this._sortColumnIndex;
};
qx.Proto.isSortAscending=function(){return this._sortAscending;
};
qx.Proto.getRowCount=function(){return this._rowArr.length;
};
qx.Proto.getValue=function(columnIndex,rowIndex){if(rowIndex<0||rowIndex>=this._rowArr.length){throw new Error("this._rowArr out of bounds: "+rowIndex+" (0.."+this._rowArr.length+")");
}return this._rowArr[rowIndex][columnIndex];
};
qx.Proto.setValue=function(columnIndex,rowIndex,value){if(this._rowArr[rowIndex][columnIndex]!=value){this._rowArr[rowIndex][columnIndex]=value;
if(this.hasEventListeners(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED)){var data={firstRow:rowIndex,lastRow:rowIndex,firstColumn:columnIndex,lastColumn:columnIndex};
this.dispatchEvent(new qx.event.type.DataEvent(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,data),true);
}
if(columnIndex==this._sortColumnIndex){this._clearSorting();
}}};
qx.Proto.setData=function(rowArr){this._rowArr=rowArr;
if(this.hasEventListeners(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED)){this.createDispatchEvent(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED);
}this._clearSorting();
};
qx.Proto.getData=function(){return this._rowArr;
};
qx.Proto.setDataAsMapArray=function(mapArr){this.setData(this._mapArray2RowArr(mapArr));
};
qx.Proto.addRows=function(rowArr,startIndex){if(startIndex==null){startIndex=this._rowArr.length;
}rowArr.splice(0,0,startIndex,0);
Array.prototype.splice.apply(this._rowArr,rowArr);
if(this.hasEventListeners(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED)){var data={firstRow:startIndex,lastRow:this._rowArr.length-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.dispatchEvent(new qx.event.type.DataEvent(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,data),true);
}this._clearSorting();
};
qx.Proto.addRowsAsMapArray=function(mapArr,startIndex){this.addRows(this._mapArray2RowArr(mapArr),startIndex);
};
qx.Proto.removeRows=function(startIndex,howMany){this._rowArr.splice(startIndex,howMany);
if(this.hasEventListeners(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED)){var data={firstRow:startIndex,lastRow:this._rowArr.length-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.dispatchEvent(new qx.event.type.DataEvent(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,data),true);
}this._clearSorting();
};
qx.Proto._mapArray2RowArr=function(mapArr){var rowCount=mapArr.length;
var columnCount=this.getColumnCount();
var dataArr=new Array(rowCount);
var columnArr;
var j;
for(var i=0;i<rowCount;++i){columnArr=new Array(columnCount);
for(var j=0;j<columnCount;++j){columnArr[j]=mapArr[i][this.getColumnId(j)];
}dataArr[i]=columnArr;
}return dataArr;
};




/* ID: qx.ui.form.CheckBox */
qx.OO.defineClass($[2401],qx.ui.basic.Atom,function(vText,vValue,vName,vChecked){qx.ui.basic.Atom.call(this,vText);
this.setTabIndex(1);
this.setPadding(2,3);
this._createIcon();
if(vValue!=null){this.setValue(vValue);
}
if(vName!=null){this.setName(vName);
}
if(vChecked!=null){this.setChecked(vChecked);
}else{this.setChecked(false);
}this.addEventListener($[27],this._onclick);
this.addEventListener($[13],this._onkeydown);
this.addEventListener($[76],this._onkeyup);
});
qx.OO.removeProperty({name:$[94]});
qx.OO.removeProperty({name:$[790]});
qx.OO.addProperty({name:$[97],type:$[0]});
qx.OO.addProperty({name:$[104],type:$[0]});
qx.OO.addProperty({name:$[81],type:$[3],getAlias:$[240]});
qx.Proto.INPUT_TYPE="checkbox";
qx.Proto._createIcon=function(){var i=this._iconObject=new qx.ui.form.InputCheckSymbol;
i.setType(this.INPUT_TYPE);
i.setChecked(this.isChecked());
i.setEnabled(this.isEnabled());
i.setAnonymous(true);
this.addAtBegin(i);
};
qx.Proto._modifyChecked=function(propValue,propOldValue,propData){if(this._iconObject){this._iconObject.setChecked(propValue);
}return true;
};
qx.Proto._modifyEnabled=function(propValue,propOldValue,propData){if(this._iconObject){this._iconObject.setEnabled(propValue);
}return qx.ui.basic.Atom.prototype._modifyEnabled.call(this,propValue,propOldValue,propData);
};
qx.Proto._handleIcon=function(){switch(this.getShow()){case qx.ui.basic.Atom.SHOW_ICON:case qx.ui.basic.Atom.SHOW_BOTH:this._iconIsVisible=true;
break;
default:this._iconIsVisible=false;
}
if(this._iconIsVisible){this._iconObject?this._iconObject.setDisplay(true):this._createIcon();
}else if(this._iconObject){this._iconObject.setDisplay(false);
}};
qx.Proto._onclick=function(e){this.toggleChecked();
};
qx.Proto._onkeydown=function(e){if(e.getKeyIdentifier()==$[45]&&!e.isAltPressed()){this.toggleChecked();
}};
qx.Proto._onkeyup=function(e){if(e.getKeyIdentifier()==$[85]){this.toggleChecked();
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[27],this._onclick);
this.removeEventListener($[13],this._onkeydown);
this.removeEventListener($[76],this._onkeyup);
return qx.ui.basic.Atom.prototype.dispose.call(this);
};




/* ID: qx.ui.form.InputCheckSymbol */
qx.OO.defineClass($[1210],qx.ui.basic.Terminator,function(){qx.ui.basic.Terminator.call(this);
this.setTagName($[87]);
this.setSelectable(false);
if(qx.core.Client.getInstance().isMshtml()){this.setWidth(13);
this.setHeight(13);
}else if(qx.core.Client.getInstance().isGecko()){this.setMargin(0);
}this.forceTabIndex(1);
this.setTabIndex(-1);
this.setChecked(false);
});
qx.OO.addProperty({name:$[97],type:$[0],impl:$[199]});
qx.OO.addProperty({name:$[104],impl:$[199]});
qx.OO.addProperty({name:$[217],impl:$[199]});
qx.OO.addProperty({name:$[81],type:$[3],impl:$[199],getAlias:$[240]});
qx.Proto._modifyApply=function(propValue,propOldValue,propData){return this.setHtmlProperty(propData.name,propValue);
};
qx.Proto.getPreferredBoxWidth=function(){return 13;
};
qx.Proto.getPreferredBoxHeight=function(){return 13;
};
qx.Proto.getBoxWidth=qx.Proto.getPreferredBoxWidth;
qx.Proto.getBoxHeight=qx.Proto.getPreferredBoxHeight;
qx.Proto.getInnerWidth=qx.Proto.getPreferredBoxWidth;
qx.Proto.getInnerHeight=qx.Proto.getPreferredBoxHeight;
if(qx.core.Client.getInstance().isMshtml()){qx.Proto._afterAppear=function(){qx.ui.basic.Terminator.prototype._afterAppear.call(this);
var vElement=this.getElement();
vElement.checked=this.getChecked();
if(!this.getEnabled()){vElement.disabled=true;
}};
}qx.Proto._modifyEnabled=function(propValue,propOldValue,propData){propValue?this.removeHtmlAttribute($[134]):this.setHtmlAttribute($[134],$[134]);
return qx.ui.basic.Terminator.prototype._modifyEnabled.call(this,propValue,propOldValue,propData);
};




/* ID: qx.ui.popup.PopupAtom */
qx.OO.defineClass($[2323],qx.ui.popup.Popup,function(vLabel,vIcon){qx.ui.popup.Popup.call(this);
this._atom=new qx.ui.basic.Atom(vLabel,vIcon);
this._atom.setParent(this);
});
qx.Proto._isFocusRoot=false;
qx.Proto.getAtom=function(){return this._atom;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this._atom){this._atom.dispose();
this._atom=null;
}return qx.ui.popup.Popup.prototype.dispose.call(this);
};




/* ID: qx.ui.popup.ToolTip */
qx.OO.defineClass($[319],qx.ui.popup.PopupAtom,function(vLabel,vIcon){qx.ui.popup.PopupAtom.call(this,vLabel,vIcon);
this.setStyleProperty($[129],$[1778]);
this._showTimer=new qx.client.Timer(this.getShowInterval());
this._showTimer.addEventListener($[54],this._onshowtimer,this);
this._hideTimer=new qx.client.Timer(this.getHideInterval());
this._hideTimer.addEventListener($[54],this._onhidetimer,this);
this.addEventListener($[40],this._onmouseover);
this.addEventListener($[47],this._onmouseover);
});
qx.Proto._minZIndex=1e7;
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1412]});
qx.OO.addProperty({name:$[2216],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1131],type:$[2],defaultValue:1});
qx.OO.addProperty({name:$[1364],type:$[2],defaultValue:20});
qx.OO.addProperty({name:$[1502],type:$[2],defaultValue:1000});
qx.OO.addProperty({name:$[2080],type:$[2],defaultValue:4000});
qx.OO.addProperty({name:$[2405],type:$[4],instance:$[167]});
qx.Proto._modifyHideInterval=function(propValue,propOldValue,propData){this._hideTimer.setInterval(propValue);
return true;
};
qx.Proto._modifyShowInterval=function(propValue,propOldValue,propData){this._showTimer.setInterval(propValue);
return true;
};
qx.Proto._modifyBoundToWidget=function(propValue,propOldValue,propData){if(propValue){this.setParent(propValue.getTopLevelWidget());
}else if(propOldValue){this.setParent(null);
}return true;
};
qx.Proto._beforeAppear=function(){qx.ui.popup.PopupAtom.prototype._beforeAppear.call(this);
this._stopShowTimer();
this._startHideTimer();
};
qx.Proto._afterAppear=function(){if(this.getRestrictToPageOnOpen()){var doc=qx.ui.core.ClientDocument.getInstance();
var docWidth=doc.getClientWidth();
var docHeight=doc.getClientHeight();
var restrictToPageLeft=parseInt(qx.Settings.getValueOfClass($[119],$[384]));
var restrictToPageRight=parseInt(qx.Settings.getValueOfClass($[119],$[471]));
var restrictToPageTop=parseInt(qx.Settings.getValueOfClass($[119],$[444]));
var restrictToPageBottom=parseInt(qx.Settings.getValueOfClass($[119],$[402]));
var left=(this._wantedLeft==null)?this.getLeft():this._wantedLeft;
var top=this.getTop();
var width=this.getBoxWidth();
var height=this.getBoxHeight();
var mouseX=qx.event.type.MouseEvent.getPageX();
var mouseY=qx.event.type.MouseEvent.getPageY();
var oldLeft=this.getLeft();
var oldTop=top;
if(left+width>docWidth-restrictToPageRight){left=docWidth-restrictToPageRight-width;
}
if(top+height>docHeight-restrictToPageBottom){top=docHeight-restrictToPageBottom-height;
}
if(left<restrictToPageLeft){left=restrictToPageLeft;
}
if(top<restrictToPageTop){top=restrictToPageTop;
}if(left<=mouseX&&mouseX<=left+width&&top<=mouseY&&mouseY<=top+height){var deltaYdown=mouseY-top;
var deltaYup=deltaYdown-height;
var deltaXright=mouseX-left;
var deltaXleft=deltaXright-width;
var violationUp=Math.max(0,restrictToPageTop-(top+deltaYup));
var violationDown=Math.max(0,top+height+deltaYdown-(docHeight-restrictToPageBottom));
var violationLeft=Math.max(0,restrictToPageLeft-(left+deltaXleft));
var violationRight=Math.max(0,left+width+deltaXright-(docWidth-restrictToPageRight));
var possibleMovements=[[0,deltaYup,violationUp],[0,deltaYdown,violationDown],[deltaXleft,0,violationLeft],[deltaXright,0,violationRight]];
possibleMovements.sort(function(a,b){return a[2]-b[2]||(Math.abs(a[0])+Math.abs(a[1]))-(Math.abs(b[0])+Math.abs(b[1]));
});
var minimalNonClippingMovement=possibleMovements[0];
left=left+minimalNonClippingMovement[0];
top=top+minimalNonClippingMovement[1];
}
if(left!=oldLeft||top!=oldTop){var self=this;
window.setTimeout(function(){self.setLeft(left);
self.setTop(top);
},0);
}}};
qx.Proto._beforeDisappear=function(){qx.ui.popup.PopupAtom.prototype._beforeDisappear.call(this);
this._stopHideTimer();
};
qx.Proto._startShowTimer=function(){if(!this._showTimer.getEnabled()){this._showTimer.start();
}};
qx.Proto._startHideTimer=function(){if(!this._hideTimer.getEnabled()){this._hideTimer.start();
}};
qx.Proto._stopShowTimer=function(){if(this._showTimer.getEnabled()){this._showTimer.stop();
}};
qx.Proto._stopHideTimer=function(){if(this._hideTimer.getEnabled()){this._hideTimer.stop();
}};
qx.Proto._onmouseover=function(e){if(this.getHideOnHover()){this.hide();
}};
qx.Proto._onshowtimer=function(e){this.setLeft(qx.event.type.MouseEvent.getPageX()+this.getMousePointerOffsetX());
this.setTop(qx.event.type.MouseEvent.getPageY()+this.getMousePointerOffsetY());
this.show();
qx.ui.core.Widget.flushGlobalQueues();
return true;
};
qx.Proto._onhidetimer=function(e){return this.hide();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[40],this._onmouseover);
this.removeEventListener($[47],this._onmouseover);
if(this._showTimer){this._showTimer.removeEventListener($[54],this._onshowtimer,this);
this._showTimer.dispose();
this._showTimer=null;
}
if(this._hideTimer){this._hideTimer.removeEventListener($[54],this._onhidetimer,this);
this._hideTimer.dispose();
this._hideTimer=null;
}return qx.ui.popup.PopupAtom.prototype.dispose.call(this);
};




/* ID: qx.manager.object.ToolTipManager */
qx.OO.defineClass($[135],qx.manager.object.ObjectManager,function(){qx.manager.object.ObjectManager.call(this);
});
qx.OO.addProperty({name:$[1212],type:$[4],instance:$[319]});
qx.Proto._modifyCurrentToolTip=function(propValue,propOldValue,propData){if(propOldValue&&propOldValue.contains(propValue)){return;
}if(propOldValue){propOldValue.hide();
propOldValue._stopShowTimer();
propOldValue._stopHideTimer();
}if(propValue){propValue._startShowTimer();
}return true;
};
qx.Proto.handleMouseOver=function(e){var vTarget=e.getTarget();
var vToolTip;
if(!(vTarget instanceof qx.ui.core.Widget)&&vTarget.nodeType==1){vTarget=qx.event.handler.EventHandler.getTargetObject(vTarget);
}while(vTarget!=null&&!(vToolTip=vTarget.getToolTip())){vTarget=vTarget.getParent();
}if(vToolTip!=null){vToolTip.setBoundToWidget(vTarget);
}this.setCurrentToolTip(vToolTip);
};
qx.Proto.handleMouseOut=function(e){var vTarget=e.getTarget();
var vRelatedTarget=e.getRelatedTarget();
var vToolTip=this.getCurrentToolTip();
if(vToolTip&&(vRelatedTarget==vToolTip||vToolTip.contains(vRelatedTarget))){return;
}if(vRelatedTarget&&vTarget&&vTarget.contains(vRelatedTarget)){return;
}if(vToolTip&&!vRelatedTarget){this.setCurrentToolTip(null);
}};
qx.Proto.handleFocus=function(e){var vTarget=e.getTarget();
var vToolTip=vTarget.getToolTip();
if(vToolTip!=null){vToolTip.setBoundToWidget(vTarget);
this.setCurrentToolTip(vToolTip);
}};
qx.Proto.handleBlur=function(e){var vTarget=e.getTarget();
if(!vTarget){return;
}var vToolTip=this.getCurrentToolTip();
if(vToolTip&&vToolTip==vTarget.getToolTip()){this.setCurrentToolTip(null);
}};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.ui.window.Window */
qx.OO.defineClass($[728],qx.ui.popup.Popup,function(vCaption,vIcon,vWindowManager){qx.ui.popup.Popup.call(this);
this.setMinWidth($[5]);
this.setMinHeight($[5]);
this.setAutoHide(false);
this.setWindowManager(vWindowManager||qx.ui.window.Window.getDefaultWindowManager());
var f=this._frame=new qx.ui.basic.Terminator;
f.setAppearance($[1327]);
var l=this._layout=new qx.ui.layout.VerticalBoxLayout;
l.setEdge(0);
this.add(l);
var cb=this._captionBar=new qx.ui.layout.HorizontalBoxLayout;
cb.setAppearance($[1410]);
l.add(cb);
if(vIcon!=null){var ci=this._captionIcon=new qx.ui.basic.Image(vIcon);
ci.setAppearance($[1534]);
cb.add(ci);
}var ct=this._captionTitle=new qx.ui.basic.Label(vCaption);
ct.setAppearance($[2267]);
ct.setSelectable(false);
cb.add(ct);
var cf=this._captionFlex=new qx.ui.basic.HorizontalSpacer;
cb.add(cf);
var bm=this._minimizeButton=new qx.ui.form.Button(null,$[1452]);
bm.setAppearance($[2121]);
bm.setTabIndex(-1);
bm.addEventListener($[38],this._onminimizebuttonclick,this);
bm.addEventListener($[6],this._onbuttonmousedown,this);
cb.add(bm);
var br=this._restoreButton=new qx.ui.form.Button(null,$[1273]);
br.setAppearance($[1202]);
br.setTabIndex(-1);
br.addEventListener($[38],this._onrestorebuttonclick,this);
br.addEventListener($[6],this._onbuttonmousedown,this);
var bx=this._maximizeButton=new qx.ui.form.Button(null,$[1085]);
bx.setAppearance($[1690]);
bx.setTabIndex(-1);
bx.addEventListener($[38],this._onmaximizebuttonclick,this);
bx.addEventListener($[6],this._onbuttonmousedown,this);
cb.add(bx);
var bc=this._closeButton=new qx.ui.form.Button(null,$[1565]);
bc.setAppearance($[2028]);
bc.setTabIndex(-1);
bc.addEventListener($[38],this._onclosebuttonclick,this);
bc.addEventListener($[6],this._onbuttonmousedown,this);
cb.add(bc);
var p=this._pane=new qx.ui.layout.CanvasLayout;
p.setHeight($[37]);
p.setOverflow($[26]);
l.add(p);
var sb=this._statusBar=new qx.ui.layout.HorizontalBoxLayout;
sb.setAppearance($[1342]);
var st=this._statusText=new qx.ui.basic.Label($[380]);
st.setAppearance($[1956]);
st.setSelectable(false);
sb.add(st);
this.setCaption(vCaption);
this.setIcon(vIcon);
this.addEventListener($[6],this._onwindowmousedown,this);
this.addEventListener($[7],this._onwindowmouseup,this);
this.addEventListener($[18],this._onwindowmousemove,this);
this.addEventListener($[27],this._onwindowclick,this);
cb.addEventListener($[6],this._oncaptionmousedown,this);
cb.addEventListener($[7],this._oncaptionmouseup,this);
cb.addEventListener($[18],this._oncaptionmousemove,this);
cb.addEventListener($[46],this._oncaptiondblblick,this);
this.remapChildrenHandlingTo(this._pane);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[131]});
qx.OO.addProperty({name:$[981],type:$[4]});
qx.OO.addProperty({name:$[225],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[337],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[504],type:$[0],defaultValue:null,possibleValues:[$[266],$[105]],allowNull:true});
qx.OO.addProperty({name:$[356],type:$[4]});
qx.OO.addProperty({name:$[1733]});
qx.OO.addProperty({name:$[94],type:$[0]});
qx.OO.addProperty({name:$[299],type:$[0],defaultValue:$[380]});
qx.OO.addProperty({name:$[1357],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[2109],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[831],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[528],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1851],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1467],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[851],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[2054],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1054],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[465],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1984],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[434],type:$[0],defaultValue:$[63],possibleValues:[$[142],$[219],$[63],$[98]]});
qx.OO.addProperty({name:$[821],type:$[0],defaultValue:$[142],possibleValues:[$[142],$[63],$[98]]});
qx.ui.window.Window.getDefaultWindowManager=function(){if(!qx.ui.window.Window._defaultWindowManager){qx.ui.window.Window._defaultWindowManager=new qx.manager.object.WindowManager;
}return qx.ui.window.Window._defaultWindowManager;
};
qx.Proto.getPane=function(){return this._pane;
};
qx.Proto.getCaptionBar=function(){return this._captionBar;
};
qx.Proto.getStatusBar=function(){return this._statusBar;
};
qx.Proto.close=function(){this.hide();
};
qx.Proto.open=function(vOpener){if(vOpener!=null){this.setOpener(vOpener);
}
if(this.getCentered()){this.centerToBrowser();
}this.show();
};
qx.Proto.focus=function(){this.setActive(true);
};
qx.Proto.blur=function(){this.setActive(false);
};
qx.Proto.maximize=function(){this.setMode($[105]);
};
qx.Proto.minimize=function(){this.setMode($[266]);
};
qx.Proto.restore=function(){this.setMode(null);
};
qx.Proto._beforeAppear=function(){qx.ui.layout.CanvasLayout.prototype._beforeAppear.call(this);
qx.manager.object.PopupManager.getInstance().update();
qx.event.handler.EventHandler.getInstance().setFocusRoot(this);
this.getWindowManager().add(this);
this._makeActive();
};
qx.Proto._beforeDisappear=function(){qx.ui.layout.CanvasLayout.prototype._beforeDisappear.call(this);
var vFocusRoot=qx.event.handler.EventHandler.getInstance().getFocusRoot();
if(vFocusRoot==this||this.contains(vFocusRoot)){qx.event.handler.EventHandler.getInstance().setFocusRoot(null);
}var vWidget=qx.event.handler.EventHandler.getInstance().getCaptureWidget();
if(vWidget&&this.contains(vWidget)){vWidget.setCapture(false);
}this.getWindowManager().remove(this);
this._makeInactive();
};
qx.Proto._minZIndex=1e5;
qx.Proto._sendTo=function(){var vAll=qx.lang.Object.getValues(this.getWindowManager().getAll()).sort(qx.util.Compare.byZIndex);
var vLength=vAll.length;
var vIndex=this._minZIndex;
for(var i=0;i<vLength;i++){vAll[i].setZIndex(vIndex++);
}};
qx.Proto._modifyActive=function(propValue,propOldValue,propData){if(propOldValue){if(this.getFocused()){this.setFocused(false);
}
if(this.getWindowManager().getActiveWindow()==this){this.getWindowManager().setActiveWindow(null);
}this.removeState($[225]);
this._captionBar.removeState($[225]);
}else{if(!this.getFocusedChild()){this.setFocused(true);
}this.getWindowManager().setActiveWindow(this);
this.bringToFront();
this.addState($[225]);
this._captionBar.addState($[225]);
}return true;
};
qx.Proto._modifyModal=function(propValue,propOldValue,propData){if(this._initialLayoutDone&&this.getVisibility()&&this.getDisplay()){var vTop=this.getTopLevelWidget();
propValue?vTop.block(this):vTop.release(this);
}return true;
};
qx.Proto._modifyAllowClose=function(propValue,propOldValue,propData){return this._closeButtonManager();
};
qx.Proto._modifyAllowMaximize=function(propValue,propOldValue,propData){return this._maximizeButtonManager();
};
qx.Proto._modifyAllowMinimize=function(propValue,propOldValue,propData){return this._minimizeButtonManager();
};
qx.Proto._modifyMode=function(propValue,propOldValue,propData){switch(propValue){case $[266]:this._minimize();
break;
case $[105]:this._maximize();
break;
default:switch(propOldValue){case $[105]:this._restoreFromMaximized();
break;
case $[266]:this._restoreFromMinimized();
break;
}}return true;
};
qx.Proto._modifyShowCaption=function(propValue,propOldValue,propData){if(propValue){this._captionBar.addAt(this._captionTitle,this.getShowIcon()?1:0);
}else{this._captionBar.remove(this._captionTitle);
}return true;
};
qx.Proto._modifyShowIcon=function(propValue,propOldValue,propData){if(propValue){this._captionBar.addAtBegin(this._captionIcon);
}else{this._captionBar.remove(this._captionIcon);
}return true;
};
qx.Proto._modifyShowStatusbar=function(propValue,propOldValue,propData){if(propValue){this._layout.addAtEnd(this._statusBar);
}else{this._layout.remove(this._statusBar);
}return true;
};
qx.Proto._modifyShowClose=function(propValue,propOldValue,propData){if(propValue){this._captionBar.addAtEnd(this._closeButton);
}else{this._captionBar.remove(this._closeButton);
}return true;
};
qx.Proto._modifyShowMaximize=function(propValue,propOldValue,propData){if(propValue){var t=this.getMode()==$[105]?this._restoreButton:this._maximizeButton;
if(this.getShowMinimize()){this._captionBar.addAfter(t,this._minimizeButton);
}else{this._captionBar.addAfter(t,this._captionFlex);
}}else{this._captionBar.remove(this._maximizeButton);
this._captionBar.remove(this._restoreButton);
}return true;
};
qx.Proto._modifyShowMinimize=function(propValue,propOldValue,propData){if(propValue){this._captionBar.addAfter(this._minimizeButton,this._captionFlex);
}else{this._captionBar.remove(this._minimizeButton);
}return true;
};
qx.Proto._minimizeButtonManager=function(){this._minimizeButton.setEnabled(this.getAllowMinimize());
return true;
};
qx.Proto._closeButtonManager=function(){this._closeButton.setEnabled(this.getAllowClose());
return true;
};
qx.Proto._maximizeButtonManager=function(){var b=this.getAllowMaximize()&&this.getResizeable()&&this._computedMaxWidthTypeNull&&this._computedMaxHeightTypeNull;
this._maximizeButton.setEnabled(b);
this._restoreButton.setEnabled(b);
return true;
};
qx.Proto._modifyStatus=function(propValue,propOldValue,propData){this._statusText.setHtml(propValue);
return true;
};
qx.Proto._modifyMaxWidth=function(propValue,propOldValue,propData){return this._maximizeButtonManager();
};
qx.Proto._modifyMaxHeight=function(propValue,propOldValue,propData){return this._maximizeButtonManager();
};
qx.Proto._modifyResizeable=function(propValue,propOldValue,propData){return this._maximizeButtonManager();
};
qx.Proto._modifyCaption=function(propValue,propOldValue,propData){this._captionTitle.setHtml(propValue);
return true;
};
qx.Proto._minimize=function(){this.blur();
this.hide();
};
qx.Proto._restoreFromMaximized=function(){this.setLeft(this._previousLeft?this._previousLeft:null);
this.setWidth(this._previousWidth?this._previousWidth:null);
this.setRight(this._previousRight?this._previousRight:null);
this.setTop(this._previousTop?this._previousTop:null);
this.setHeight(this._previousHeight?this._previousHeight:null);
this.setBottom(this._previousBottom?this._previousBottom:null);
this.removeState($[105]);
if(this.getShowMaximize()){var cb=this._captionBar;
var v=cb.indexOf(this._restoreButton);
cb.remove(this._restoreButton);
cb.addAt(this._maximizeButton,v);
}this.focus();
};
qx.Proto._restoreFromMinimized=function(){if(this.hasState($[105])){this.setMode($[105]);
}this.show();
this.focus();
};
qx.Proto._maximize=function(){if(this.hasState($[105])){return;
}this._previousLeft=this.getLeft();
this._previousWidth=this.getWidth();
this._previousRight=this.getRight();
this._previousTop=this.getTop();
this._previousHeight=this.getHeight();
this._previousBottom=this.getBottom();
this.setWidth(null);
this.setLeft(0);
this.setRight(0);
this.setHeight(null);
this.setTop(0);
this.setBottom(0);
this.addState($[105]);
if(this.getShowMaximize()){var cb=this._captionBar;
var v=cb.indexOf(this._maximizeButton);
cb.remove(this._maximizeButton);
cb.addAt(this._restoreButton,v);
}this.focus();
};
qx.Proto._onwindowmousedown=function(e){this.focus();
if(this._resizeNorth||this._resizeSouth||this._resizeWest||this._resizeEast){this.setCapture(true);
this.getTopLevelWidget().setGlobalCursor(this.getCursor());
var el=this.getElement();
var pa=this.getParent();
var pl=pa.getElement();
var l=qx.html.Location.getPageAreaLeft(pl);
var t=qx.html.Location.getPageAreaTop(pl);
var r=qx.html.Location.getPageAreaRight(pl);
var b=qx.html.Location.getPageAreaBottom(pl);
switch(this.getResizeMethod()){case $[98]:this.setOpacity(0.5);
break;
case $[63]:var f=this._frame;
if(f.getParent()!=this.getParent()){f.setParent(this.getParent());
qx.ui.core.Widget.flushGlobalQueues();
}f._applyRuntimeLeft(qx.html.Location.getPageBoxLeft(el)-l);
f._applyRuntimeTop(qx.html.Location.getPageBoxTop(el)-t);
f._applyRuntimeWidth(qx.html.Dimension.getBoxWidth(el));
f._applyRuntimeHeight(qx.html.Dimension.getBoxHeight(el));
f.setZIndex(this.getZIndex()+1);
break;
}var s=this._resizeSession={};
if(this._resizeWest){s.boxWidth=qx.html.Dimension.getBoxWidth(el);
s.boxRight=qx.html.Location.getPageBoxRight(el);
}
if(this._resizeWest||this._resizeEast){s.boxLeft=qx.html.Location.getPageBoxLeft(el);
s.parentAreaOffsetLeft=l;
s.parentAreaOffsetRight=r;
s.minWidth=this.getMinWidthValue();
s.maxWidth=this.getMaxWidthValue();
}
if(this._resizeNorth){s.boxHeight=qx.html.Dimension.getBoxHeight(el);
s.boxBottom=qx.html.Location.getPageBoxBottom(el);
}
if(this._resizeNorth||this._resizeSouth){s.boxTop=qx.html.Location.getPageBoxTop(el);
s.parentAreaOffsetTop=t;
s.parentAreaOffsetBottom=b;
s.minHeight=this.getMinHeightValue();
s.maxHeight=this.getMaxHeightValue();
}}else{delete this._resizeSession;
}e.stopPropagation();
};
qx.Proto._onwindowmouseup=function(e){var s=this._resizeSession;
if(s){this.setCapture(false);
this.getTopLevelWidget().setGlobalCursor(null);
switch(this.getResizeMethod()){case $[63]:var o=this._frame;
if(!(o&&o.getParent())){break;
}case $[219]:if(s.lastLeft!=null){this.setLeft(s.lastLeft);
}
if(s.lastTop!=null){this.setTop(s.lastTop);
}
if(s.lastWidth!=null){this.setWidth(s.lastWidth);
}
if(s.lastHeight!=null){this.setHeight(s.lastHeight);
}
if(this.getResizeMethod()==$[63]){this._frame.setParent(null);
}break;
case $[98]:this.setOpacity(null);
break;
}delete this._resizeNorth;
delete this._resizeEast;
delete this._resizeSouth;
delete this._resizeWest;
delete this._resizeSession;
}e.stopPropagation();
};
qx.Proto._near=function(p,e){return e>(p-5)&&e<(p+5);
};
qx.Proto._onwindowmousemove=function(e){if(!this.getResizeable()||this.getMode()!=null){return;
}var s=this._resizeSession;
if(s){if(this._resizeWest){s.lastWidth=qx.lang.Number.limit(s.boxWidth+s.boxLeft-Math.max(e.getPageX(),s.parentAreaOffsetLeft),s.minWidth,s.maxWidth);
s.lastLeft=s.boxRight-s.lastWidth-s.parentAreaOffsetLeft;
}else if(this._resizeEast){s.lastWidth=qx.lang.Number.limit(Math.min(e.getPageX(),s.parentAreaOffsetRight)-s.boxLeft,s.minWidth,s.maxWidth);
}
if(this._resizeNorth){s.lastHeight=qx.lang.Number.limit(s.boxHeight+s.boxTop-Math.max(e.getPageY(),s.parentAreaOffsetTop),s.minHeight,s.maxHeight);
s.lastTop=s.boxBottom-s.lastHeight-s.parentAreaOffsetTop;
}else if(this._resizeSouth){s.lastHeight=qx.lang.Number.limit(Math.min(e.getPageY(),s.parentAreaOffsetBottom)-s.boxTop,s.minHeight,s.maxHeight);
}
switch(this.getResizeMethod()){case $[142]:case $[98]:if(this._resizeWest||this._resizeEast){this.setWidth(s.lastWidth);
if(this._resizeWest){this.setLeft(s.lastLeft);
}}
if(this._resizeNorth||this._resizeSouth){this.setHeight(s.lastHeight);
if(this._resizeNorth){this.setTop(s.lastTop);
}}break;
default:var o=this.getResizeMethod()==$[63]?this._frame:this;
if(this._resizeWest||this._resizeEast){o._applyRuntimeWidth(s.lastWidth);
if(this._resizeWest){o._applyRuntimeLeft(s.lastLeft);
}}
if(this._resizeNorth||this._resizeSouth){o._applyRuntimeHeight(s.lastHeight);
if(this._resizeNorth){o._applyRuntimeTop(s.lastTop);
}}}}else{var resizeMode=$[1];
var el=this.getElement();
this._resizeNorth=this._resizeSouth=this._resizeWest=this._resizeEast=false;
if(this._near(qx.html.Location.getPageBoxTop(el),e.getPageY())){resizeMode=$[510];
this._resizeNorth=true;
}else if(this._near(qx.html.Location.getPageBoxBottom(el),e.getPageY())){resizeMode=$[327];
this._resizeSouth=true;
}
if(this._near(qx.html.Location.getPageBoxLeft(el),e.getPageX())){resizeMode+=$[715];
this._resizeWest=true;
}else if(this._near(qx.html.Location.getPageBoxRight(el),e.getPageX())){resizeMode+=$[448];
this._resizeEast=true;
}
if(this._resizeNorth||this._resizeSouth||this._resizeWest||this._resizeEast){this.setCursor(resizeMode+$[729]);
}else{this.setCursor(null);
}}e.stopPropagation();
e.preventDefault();
};
qx.Proto._onwindowclick=function(e){e.stopPropagation();
};
qx.Proto._onbuttonmousedown=function(e){e.stopPropagation();
};
qx.Proto._onminimizebuttonclick=function(e){this.minimize();
this._minimizeButton.removeState($[19]);
this._minimizeButton.removeState($[51]);
this._minimizeButton.removeState($[58]);
e.stopPropagation();
};
qx.Proto._onrestorebuttonclick=function(e){this.restore();
this._restoreButton.removeState($[19]);
this._restoreButton.removeState($[51]);
this._restoreButton.removeState($[58]);
e.stopPropagation();
};
qx.Proto._onmaximizebuttonclick=function(e){this.maximize();
this._maximizeButton.removeState($[19]);
this._maximizeButton.removeState($[51]);
this._maximizeButton.removeState($[58]);
e.stopPropagation();
};
qx.Proto._onclosebuttonclick=function(e){this.close();
this._closeButton.removeState($[19]);
this._closeButton.removeState($[51]);
this._closeButton.removeState($[58]);
e.stopPropagation();
};
qx.Proto._oncaptionmousedown=function(e){if(!e.isLeftButtonPressed()||!this.getMoveable()||this.getMode()!=null){return;
}this._captionBar.setCapture(true);
var el=this.getElement();
var pa=this.getParent();
var pl=pa.getElement();
var l=qx.html.Location.getPageAreaLeft(pl);
var t=qx.html.Location.getPageAreaTop(pl);
var r=qx.html.Location.getPageAreaRight(pl);
var b=qx.html.Location.getPageAreaBottom(pl);
this._dragSession={offsetX:e.getPageX()-qx.html.Location.getPageBoxLeft(el)+l,offsetY:e.getPageY()-qx.html.Location.getPageBoxTop(el)+t,parentAvailableAreaLeft:l+5,parentAvailableAreaTop:t+5,parentAvailableAreaRight:r-5,parentAvailableAreaBottom:b-5};
switch(this.getMoveMethod()){case $[98]:this.setOpacity(0.5);
break;
case $[63]:var f=this._frame;
if(f.getParent()!=this.getParent()){f.setParent(this.getParent());
qx.ui.core.Widget.flushGlobalQueues();
}f._applyRuntimeLeft(qx.html.Location.getPageBoxLeft(el)-l);
f._applyRuntimeTop(qx.html.Location.getPageBoxTop(el)-t);
f._applyRuntimeWidth(qx.html.Dimension.getBoxWidth(el));
f._applyRuntimeHeight(qx.html.Dimension.getBoxHeight(el));
f.setZIndex(this.getZIndex()+1);
break;
}};
qx.Proto._oncaptionmouseup=function(e){var s=this._dragSession;
if(!s){return;
}this._captionBar.setCapture(false);
if(s.lastX!=null){this.setLeft(s.lastX);
}
if(s.lastY!=null){this.setTop(s.lastY);
}switch(this.getMoveMethod()){case $[98]:this.setOpacity(null);
break;
case $[63]:this._frame.setParent(null);
break;
}delete this._dragSession;
};
qx.Proto._oncaptionmousemove=function(e){var s=this._dragSession;
if(!s||!this._captionBar.getCapture()){return;
}if(!qx.lang.Number.isBetweenRange(e.getPageX(),s.parentAvailableAreaLeft,s.parentAvailableAreaRight)||!qx.lang.Number.isBetweenRange(e.getPageY(),s.parentAvailableAreaTop,s.parentAvailableAreaBottom)){return;
}var o=this.getMoveMethod()==$[63]?this._frame:this;
o._applyRuntimeLeft(s.lastX=e.getPageX()-s.offsetX);
o._applyRuntimeTop(s.lastY=e.getPageY()-s.offsetY);
};
qx.Proto._oncaptiondblblick=function(){if(!this._maximizeButton.getEnabled()){return;
}return this.getMode()==$[105]?this.restore():this.maximize();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._layout){this._layout.dispose();
this._layout=null;
}
if(this._frame){this._frame.dispose();
this._frame=null;
}
if(this._captionBar){this._captionBar.dispose();
this._captionBar=null;
}
if(this._captionIcon){this._captionIcon.dispose();
this._captionIcon=null;
}
if(this._captionTitle){this._captionTitle.dispose();
this._captionTitle=null;
}
if(this._captionFlex){this._captionFlex.dispose();
this._captionFlex=null;
}
if(this._closeButton){this._closeButton.dispose();
this._closeButton=null;
}
if(this._minimizeButton){this._minimizeButton.dispose();
this._minimizeButton=null;
}
if(this._maximizeButton){this._maximizeButton.dispose();
this._maximizeButton=null;
}
if(this._restoreButton){this._restoreButton.dispose();
this._restoreButton=null;
}
if(this._pane){this._pane.dispose();
this._pane=null;
}
if(this._statusBar){this._statusBar.dispose();
this._statusBar=null;
}
if(this._statusText){this._statusText.dispose();
this._statusText=null;
}return qx.ui.popup.Popup.prototype.dispose.call(this);
};




/* ID: qx.ui.basic.HorizontalSpacer */
qx.OO.defineClass($[2450],qx.ui.basic.Terminator,function(){qx.ui.basic.Terminator.call(this);
this.setWidth($[37]);
});




/* ID: qx.manager.object.WindowManager */
qx.OO.defineClass($[1002],qx.manager.object.ObjectManager,function(){qx.manager.object.ObjectManager.call(this);
});
qx.OO.addProperty({name:$[1751],type:$[4]});
qx.Proto._modifyActiveWindow=function(propValue,propOldValue,propData){qx.manager.object.PopupManager.getInstance().update();
if(propOldValue){propOldValue.setActive(false);
}
if(propValue){propValue.setActive(true);
}
if(propOldValue&&propOldValue.getModal()){propOldValue.getTopLevelWidget().release(propOldValue);
}
if(propValue&&propValue.getModal()){propValue.getTopLevelWidget().block(propValue);
}return true;
};
qx.Proto.update=function(oTarget){var vWindow,vHashCode;
var vAll=this.getAll();
for(var vHashCode in vAll){vWindow=vAll[vHashCode];
if(!vWindow.getAutoHide()){continue;
}vWindow.hide();
}};
qx.Proto.compareWindows=function(w1,w2){switch(w1.getWindowManager().getActiveWindow()){case w1:return 1;
case w2:return -1;
}return w1.getZIndex()-w2.getZIndex();
};
qx.Proto.add=function(vWindow){qx.manager.object.ObjectManager.prototype.add.call(this,vWindow);
this.setActiveWindow(vWindow);
};
qx.Proto.remove=function(vWindow){qx.manager.object.ObjectManager.prototype.remove.call(this,vWindow);
if(this.getActiveWindow()==vWindow){var a=[];
for(var i in this._objects){a.push(this._objects[i]);
}var l=a.length;
if(l==0){this.setActiveWindow(null);
}else if(l==1){this.setActiveWindow(a[0]);
}else if(l>1){a.sort(this.compareWindows);
this.setActiveWindow(a[l-1]);
}}};




/* ID: qx.theme.color.WindowsClassic */
qx.OO.defineClass($[1540],qx.renderer.theme.ColorTheme,function(){qx.renderer.theme.ColorTheme.call(this,$[1316]);
});
qx.Proto._colors=qx.lang.Object.carefullyMergeWith({activeborder:[212,208,200],activecaption:[10,36,106],appworkspace:[128,128,128],background:[58,110,165],buttonface:[212,208,200],buttonhighlight:[255,255,255],buttonshadow:[128,128,128],buttontext:[0,0,0],captiontext:[255,255,255],graytext:[128,128,128],highlight:[10,36,106],highlighttext:[255,255,255],inactiveborder:[212,208,200],inactivecaption:[128,128,128],inactivecaptiontext:[212,208,200],infobackground:[255,255,225],infotext:[0,0,0],menu:[212,208,200],menutext:[0,0,0],scrollbar:[212,208,200],threeddarkshadow:[64,64,64],threedface:[212,208,200],threedhighlight:[255,255,255],threedlightshadow:[212,208,200],threedshadow:[128,128,128],window:[255,255,255],windowframe:[0,0,0],windowtext:[0,0,0]},qx.Super.prototype._colors);
qx.Clazz.getInstance=qx.lang.Function.returnInstance;
qx.manager.object.ColorManager.getInstance().registerColorTheme(qx.Clazz);




/* ID: qx.ui.table.CheckBoxCellEditorFactory */
qx.OO.defineClass($[1962],qx.ui.table.CellEditorFactory,function(){qx.ui.table.CellEditorFactory.call(this);
});
qx.Proto.createCellEditor=function(cellInfo){var editor=new qx.ui.form.CheckBox;
editor.setChecked(cellInfo.value);
return editor;
};
qx.Proto.getCellEditorValue=function(cellEditor){return cellEditor.getChecked();
};




/* ID: qx.xml.Namespace */
qx.OO.defineClass($[2014],{SVG:"http://www.w3.org/2000/svg",SMIL:"http://www.w3.org/2001/SMIL20/",MML:"http://www.w3.org/1998/Math/MathML",CML:"http://www.xml-cml.org",XLINK:"http://www.w3.org/1999/xlink",XHTML:"http://www.w3.org/1999/xhtml",XUL:"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul",XBL:"http://www.mozilla.org/xbl",FO:"http://www.w3.org/1999/XSL/Format",XSL:"http://www.w3.org/1999/XSL/Transform",XSLT:"http://www.w3.org/1999/XSL/Transform",XI:"http://www.w3.org/2001/XInclude",XFORMS:"http://www.w3.org/2002/01/xforms",SAXON:"http://icl.com/saxon",XALAN:"http://xml.apache.org/xslt",XSD:"http://www.w3.org/2001/XMLSchema",DT:"http://www.w3.org/2001/XMLSchema-datatypes",XSI:"http://www.w3.org/2001/XMLSchema-instance",RDF:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",RDFS:"http://www.w3.org/2000/01/rdf-schema#",RSS1:"http://purl.org/rss/1.0/modules/content/",DC:"http://purl.org/dc/elements/1.1/",DCQ:"http://purl.org/dc/qualifiers/1.0",SOAPENV:"http://schemas.xmlsoap.org/soap/envelope/",WSDL:"http://schemas.xmlsoap.org/wsdl/",ADOBESVGEXTENSIONS:"http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"});




/* ID: qx.ui.embed.NodeEmbed */
qx.OO.defineClass($[1407],qx.ui.basic.Terminator,function(vId){qx.ui.basic.Terminator.call(this);
if(vId!=null){this.setSourceNodeId(vId);
}});
qx.OO.addProperty({name:$[1341],type:$[0]});
qx.Proto._createElementImpl=function(){var vNode=document.getElementById(this.getSourceNodeId());
if(!vNode){throw new Error("Could not find source node with ID: "+this.getSourceNodeId());
}vNode.style.display=$[1];
return this.setElement(vNode);
};




/* ID: qx.ui.treevirtual.SelectionManager */
qx.OO.defineClass($[1826],qx.ui.table.SelectionManager,function(table){qx.ui.table.SelectionManager.call(this);
this._table=table;
});
qx.Proto.handleMoveKeyDown=function(index,evt){var selectionModel=this.getSelectionModel();
switch(evt.getModifiers()){case 0:break;
case qx.event.type.DomEvent.SHIFT_MASK:var anchor=selectionModel.getAnchorSelectionIndex();
if(anchor==-1){selectionModel.setSelectionInterval(index,index);
}else{selectionModel.setSelectionInterval(anchor,index);
}break;
}};
qx.Proto._handleSelectEvent=function(index,evt){function handleOpenCloseClick(table,index,evt){var node=table.getTableModel().getValue(table.getFocusedColumn(),table.getFocusedRow());
if(!node){return false;
}if(evt instanceof qx.event.type.MouseEvent){var tcm=table.getTableColumnModel();
var columnPositions=tcm._getColToXPosMap();
var treeCol=table.getTableModel().getTreeColumn();
var left=qx.html.Location.getClientBoxLeft(table.getElement());
for(i=0;i<columnPositions[treeCol].visX;i++){left+=tcm.getColumnWidth(columnPositions[i].visX);
}var x=evt.getClientX();
var latitude=2;
var buttonPos=left+(node.level-1)*19+2;
if(x>=buttonPos-latitude&&x<=buttonPos+19+latitude){table.toggleOpened(node);
return table.openCloseClickSelectsRow()?false:true;
}else{return false;
}}else{var identifier=evt.getKeyIdentifier();
switch(identifier){case $[85]:return false;
case $[45]:if(!node.bHideOpenClose){table.toggleOpened(node);
}return table.openCloseClickSelectsRow()?false:true;
default:return true;
}}}var bNoSelect=handleOpenCloseClick(this._table,index,evt);
if(!bNoSelect){var Sm=qx.ui.table.SelectionManager;
Sm.prototype._handleSelectEvent.call(this,index,evt);
}};




/* ID: qx.util.Debug */
qx.OO.defineClass($[1489]);
qx.Clazz.debugObject=function(obj,initialMessage,maxLevel,appender){logger=new qx.log.Logger($[2244],qx.log.Logger.ROOT_LOGGER);
if(!maxLevel){maxLevel=10;
}if(appender){logger.removeAllAppenders();
logger.addAppender(appender);
}var message=$[1];
var displayObj=function(obj,level,maxLevel){var indentStr=$[1];
for(var i=0;i<level;i++){indentStr+=$[279];
}if(level>maxLevel){message+=indentStr+$[2371];
return;
}if(typeof (obj)!=$[4]){message+=indentStr+obj+$[69];
return;
}for(var prop in obj){if(typeof (obj[prop])==$[4]){if(obj[prop] instanceof Array){message+=indentStr+prop+$[79]+$[619]+$[69];
}else{message+=indentStr+prop+$[79]+$[2296]+$[69];
}displayObj(obj[prop],level+1,maxLevel);
}else{message+=indentStr+prop+$[79]+obj[prop]+$[69];
}}};
if(initialMessage){message+=initialMessage+$[69];
}message+=$[688];
try{displayObj(obj,0,maxLevel);
}catch(ex){message+=$[1501]+ex+$[1117];
}message+=$[688];
logger.debug(message);
};




/* ID: qx.theme.color.WindowsLunaGreen */
qx.OO.defineClass($[2082],qx.renderer.theme.ColorTheme,function(){qx.renderer.theme.ColorTheme.call(this,$[1811]);
});
qx.Proto._colors=qx.lang.Object.carefullyMergeWith({activeborder:[212,208,200],activecaption:[139,161,105],appworkspace:[128,128,128],background:[157,172,189],buttonface:[236,233,216],buttonhighlight:[255,255,255],buttonshadow:[172,168,153],buttontext:[0,0,0],captiontext:[255,255,255],graytext:[172,168,153],highlight:[147,160,112],highlighttext:[255,255,255],inactiveborder:[212,208,200],inactivecaption:[212,214,186],inactivecaptiontext:[255,255,255],infobackground:[255,255,225],infotext:[0,0,0],menu:[255,255,255],menutext:[0,0,0],scrollbar:[212,208,200],threeddarkshadow:[113,111,100],threedface:[236,233,216],threedhighlight:[255,255,255],threedlightshadow:[241,239,226],threedshadow:[172,168,153],window:[255,255,255],windowframe:[0,0,0],windowtext:[0,0,0]},qx.Super.prototype._colors);
qx.Clazz.getInstance=qx.lang.Function.returnInstance;
qx.manager.object.ColorManager.getInstance().registerColorTheme(qx.Clazz);




/* ID: qx.ui.form.PasswordField */
qx.OO.defineClass($[1671],qx.ui.form.TextField,function(vText){qx.ui.form.TextField.call(this,vText);
this.setHtmlProperty($[217],$[295]);
});




/* ID: qx.ui.splitpane.SplitPane */
qx.OO.defineClass($[897],qx.ui.layout.CanvasLayout,function(orientation,firstSize,secondSize){qx.ui.layout.CanvasLayout.call(this);
var box=this._box=new qx.ui.layout.BoxLayout;
box.setEdge(0);
this.add(box);
this._slider=new qx.ui.layout.CanvasLayout;
this._slider.setAppearance($[1331]);
this._slider.setStyleProperty($[90],$[165]);
this._slider.setStyleProperty($[128],$[165]);
this._slider.hide();
this._slider._pane=this;
this.add(this._slider);
this._splitter=new qx.ui.layout.CanvasLayout;
this._splitter.setStyleProperty($[90],$[165]);
this._splitter.setStyleProperty($[128],$[165]);
this._splitter.setAppearance($[1764]);
this._splitter._pane=this;
this._slider._applyRuntimeLeft=this._splitter._applyRuntimeLeft=this._applyRuntimeLeftWrapper;
this._slider._applyRuntimeTop=this._splitter._applyRuntimeTop=this._applyRuntimeTopWrapper;
this._knob=new qx.ui.basic.Image;
this._knob.setAppearance($[1225]);
this._knob.setVisibility(false);
this.add(this._knob);
this._firstArea=new qx.ui.layout.CanvasLayout;
this._secondArea=new qx.ui.layout.CanvasLayout;
box.add(this._firstArea,this._splitter,this._secondArea);
this.setFirstSize(firstSize||$[37]);
this.setSecondSize(secondSize||$[37]);
this.setOrientation(orientation||$[29]);
});
qx.OO.changeProperty({name:$[8],defaultValue:$[2177]});
qx.OO.addProperty({name:$[1802],type:$[3],allowNull:false,defaultValue:false});
qx.OO.addProperty({name:$[436],type:$[3],allowNull:false,defaultValue:false,getAlias:$[1783]});
qx.OO.addProperty({name:$[703],type:$[0],possibleValues:[$[29],$[20]]});
qx.OO.addProperty({name:$[2234]});
qx.OO.addProperty({name:$[1405]});
qx.OO.addProperty({name:$[1698],defaultValue:4});
qx.Proto.addLeft=function(){var c=this.getFirstArea();
return c.add.apply(c,arguments);
};
qx.Proto.addTop=function(){var c=this.getFirstArea();
return c.add.apply(c,arguments);
};
qx.Proto.addRight=function(){var c=this.getSecondArea();
return c.add.apply(c,arguments);
};
qx.Proto.addBottom=function(){var c=this.getSecondArea();
return c.add.apply(c,arguments);
};
qx.Proto.getSplitter=function(){return this._splitter;
};
qx.Proto.getKnob=function(){return this._knob;
};
qx.Proto.getLeftArea=function(){return this.getFirstArea();
};
qx.Proto.getTopArea=function(){return this.getFirstArea();
};
qx.Proto.getRightArea=function(){return this.getSecondArea();
};
qx.Proto.getBottomArea=function(){return this.getSecondArea();
};
qx.Proto.getFirstArea=function(){return this._firstArea;
};
qx.Proto.getSecondArea=function(){return this._secondArea;
};
qx.Proto._modifyShowKnob=function(propValue,propOldValue,propData){this._knob.setVisibility(propValue);
return true;
};
qx.Proto._modifyOrientation=function(propValue,propOldValue,propData){this._box.setOrientation(propValue);
switch(propOldValue){case $[29]:this._splitter.removeEventListener($[6],this._onSplitterMouseDownX,this);
this._splitter.removeEventListener($[18],this._onSplitterMouseMoveX,this);
this._splitter.removeEventListener($[7],this._onSplitterMouseUpX,this);
this._knob.removeEventListener($[6],this._onSplitterMouseDownX,this);
this._knob.removeEventListener($[18],this._onSplitterMouseMoveX,this);
this._knob.removeEventListener($[7],this._onSplitterMouseUpX,this);
this._splitter.removeState($[29]);
this._knob.removeState($[29]);
this._firstArea.setWidth(null);
this._secondArea.setWidth(null);
this._splitter.setWidth(null);
break;
case $[20]:this._splitter.removeEventListener($[6],this._onSplitterMouseDownY,this);
this._splitter.removeEventListener($[18],this._onSplitterMouseMoveY,this);
this._splitter.removeEventListener($[7],this._onSplitterMouseUpY,this);
this._knob.removeEventListener($[6],this._onSplitterMouseDownY,this);
this._knob.removeEventListener($[18],this._onSplitterMouseMoveY,this);
this._knob.removeEventListener($[7],this._onSplitterMouseUpY,this);
this._splitter.removeState($[20]);
this._knob.removeState($[20]);
this._firstArea.setHeight(null);
this._secondArea.setHeight(null);
this._splitter.setHeight(null);
break;
}
switch(propValue){case $[29]:this._splitter.addEventListener($[18],this._onSplitterMouseMoveX,this);
this._splitter.addEventListener($[6],this._onSplitterMouseDownX,this);
this._splitter.addEventListener($[7],this._onSplitterMouseUpX,this);
this._knob.addEventListener($[18],this._onSplitterMouseMoveX,this);
this._knob.addEventListener($[6],this._onSplitterMouseDownX,this);
this._knob.addEventListener($[7],this._onSplitterMouseUpX,this);
this._splitter.addState($[29]);
this._knob.addState($[29]);
this._knob.setSource($[1076]);
break;
case $[20]:this._splitter.addEventListener($[6],this._onSplitterMouseDownY,this);
this._splitter.addEventListener($[18],this._onSplitterMouseMoveY,this);
this._splitter.addEventListener($[7],this._onSplitterMouseUpY,this);
this._knob.addEventListener($[6],this._onSplitterMouseDownY,this);
this._knob.addEventListener($[18],this._onSplitterMouseMoveY,this);
this._knob.addEventListener($[7],this._onSplitterMouseUpY,this);
this._splitter.addState($[20]);
this._knob.addState($[20]);
this._knob.setSource($[1757]);
break;
}this._syncFirstSize();
this._syncSecondSize();
this._syncSplitterSize();
return true;
};
qx.Proto._modifyFirstSize=function(propValue,propOldValue,propData){this._syncFirstSize();
return true;
};
qx.Proto._modifySecondSize=function(propValue,propOldValue,propData){this._syncSecondSize();
return true;
};
qx.Proto._modifySplitterSize=function(propValue,propOldValue,propData){this._syncSplitterSize();
return true;
};
qx.Proto._syncFirstSize=function(){switch(this.getOrientation()){case $[29]:this._firstArea.setWidth(this.getFirstSize());
break;
case $[20]:this._firstArea.setHeight(this.getFirstSize());
break;
}};
qx.Proto._syncSecondSize=function(){switch(this.getOrientation()){case $[29]:this._secondArea.setWidth(this.getSecondSize());
break;
case $[20]:this._secondArea.setHeight(this.getSecondSize());
break;
}};
qx.Proto._syncSplitterSize=function(){switch(this.getOrientation()){case $[29]:this._splitter.setWidth(this.getSplitterSize());
break;
case $[20]:this._splitter.setHeight(this.getSplitterSize());
break;
}};
qx.Proto._onSplitterMouseDownX=function(e){if(!e.isLeftButtonPressed()){return;
}this._commonMouseDown();
this.getTopLevelWidget().setGlobalCursor($[336]);
this._slider.addState($[195]);
this._knob.addState($[195]);
this._dragMin=qx.html.Location.getPageInnerLeft(this._box.getElement());
this._dragMax=this._dragMin+this._box.getInnerWidth()-this._splitter.getBoxWidth();
this._dragOffset=e.getPageX()-qx.html.Location.getPageBoxLeft(this._splitter.getElement());
};
qx.Proto._onSplitterMouseDownY=function(e){if(!e.isLeftButtonPressed()){return;
}this._commonMouseDown();
this.getTopLevelWidget().setGlobalCursor($[353]);
this._slider.addState($[195]);
this._knob.addState($[195]);
this._dragMin=qx.html.Location.getPageInnerTop(this._box.getElement());
this._dragMax=this._dragMin+this._box.getInnerHeight()-this._splitter.getBoxHeight();
this._dragOffset=e.getPageY()-qx.html.Location.getPageBoxTop(this._splitter.getElement());
};
qx.Proto._commonMouseDown=function(){this._splitter.setCapture(true);
if(!this.isLiveResize()){this._slider.setLeft(this._splitter.getOffsetLeft());
this._slider.setTop(this._splitter.getOffsetTop());
this._slider.setWidth(this._splitter.getBoxWidth());
this._slider.setHeight(this._splitter.getBoxHeight());
this._slider.show();
}};
qx.Proto._onSplitterMouseMoveX=function(e){if(!this._splitter.getCapture()){return;
}this.isLiveResize()?this._syncX(e):this._slider._applyRuntimeLeft(this._normalizeX(e));
e.preventDefault();
};
qx.Proto._onSplitterMouseMoveY=function(e){if(!this._splitter.getCapture()){return;
}this.isLiveResize()?this._syncY(e):this._slider._applyRuntimeTop(this._normalizeY(e));
e.preventDefault();
};
qx.Proto._onSplitterMouseUpX=function(e){if(!this._splitter.getCapture()){return;
}
if(!this.isLiveResize()){this._syncX(e);
}this._commonMouseUp();
};
qx.Proto._onSplitterMouseUpY=function(e){if(!this._splitter.getCapture()){return;
}
if(!this.isLiveResize()){this._syncY(e);
}this._commonMouseUp();
};
qx.Proto._commonMouseUp=function(){this._slider.hide();
this._splitter.setCapture(false);
this.getTopLevelWidget().setGlobalCursor(null);
this._slider.removeState($[195]);
this._knob.removeState($[195]);
};
qx.Proto._syncX=function(e){var first=this._normalizeX(e);
var second=this._box.getInnerWidth()-this._splitter.getBoxWidth()-first;
this._syncCommon(first,second);
};
qx.Proto._syncY=function(e){var first=this._normalizeY(e);
var second=this._box.getInnerHeight()-this._splitter.getBoxHeight()-first;
this._syncCommon(first,second);
};
qx.Proto._syncCommon=function(first,second){this.setFirstSize(first+$[168]);
this.setSecondSize(second+$[168]);
};
qx.Proto._normalizeX=function(e){return qx.lang.Number.limit(e.getPageX()-this._dragOffset,this._dragMin,this._dragMax)-this._dragMin;
};
qx.Proto._normalizeY=function(e){return qx.lang.Number.limit(e.getPageY()-this._dragOffset,this._dragMin,this._dragMax)-this._dragMin;
};
qx.Proto._applyRuntimeLeftWrapper=function(v){if(this._pane.getOrientation()==$[29]){this._pane._knob._applyRuntimeLeft(v);
}return this.constructor.prototype._applyRuntimeLeft.call(this,v);
};
qx.Proto._applyRuntimeTopWrapper=function(v){if(this._pane.getOrientation()==$[20]){this._pane._knob._applyRuntimeTop(v);
}return this.constructor.prototype._applyRuntimeTop.call(this,v);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._firstArea){this._firstArea.dispose();
this._firstArea=null;
}
if(this._secondArea){this._secondArea.dispose();
this._secondArea=null;
}
if(this._splitter){this._splitter.removeEventListener($[6],this._onSplitterMouseDownX,this);
this._splitter.removeEventListener($[7],this._onSplitterMouseMoveX,this);
this._splitter.removeEventListener($[18],this._onSplitterMouseUpX,this);
this._splitter.removeEventListener($[6],this._onSplitterMouseDownY,this);
this._splitter.removeEventListener($[7],this._onSplitterMouseMoveY,this);
this._splitter.removeEventListener($[18],this._onSplitterMouseUpY,this);
this._splitter.dispose();
this._splitter._pane=null;
this._splitter=null;
}
if(this._slider){this._slider.dispose();
this._slider._pane=null;
this._slider=null;
}
if(this._knob){this._knob.removeEventListener($[6],this._onSplitterMouseDownX,this);
this._knob.removeEventListener($[7],this._onSplitterMouseMoveX,this);
this._knob.removeEventListener($[18],this._onSplitterMouseUpX,this);
this._knob.removeEventListener($[6],this._onSplitterMouseDownY,this);
this._knob.removeEventListener($[7],this._onSplitterMouseMoveY,this);
this._knob.removeEventListener($[18],this._onSplitterMouseUpY,this);
this._knob.dispose();
this._knob=null;
}return qx.ui.layout.BoxLayout.prototype.dispose.call(this);
};




/* ID: qx.renderer.layout.DockLayoutImpl */
qx.OO.defineClass($[2297],qx.renderer.layout.LayoutImpl,function(vWidget){qx.renderer.layout.LayoutImpl.call(this,vWidget);
});
qx.renderer.layout.DockLayoutImpl.METHOD_LOCATION="layoutChild_location_";
qx.renderer.layout.DockLayoutImpl._childRanking={vertical:function(c){return c.getVerticalAlign()?1e6:c.getHorizontalAlign()?2e6:3e6;
},horizontal:function(c){return c.getHorizontalAlign()?1e6:c.getVerticalAlign()?2e6:3e6;
},ordered:function(c){return c.getHorizontalAlign()||c.getVerticalAlign()?1e6:2e6;
}};
qx.renderer.layout.DockLayoutImpl._childCheck={common:function(vChild){if(!(vChild._computedLeftTypeNull&&vChild._computedRightTypeNull&&vChild._computedTopTypeNull&&vChild._computedBottomTypeNull)){throw new Error("qx.renderer.layout.DockLayoutImpl: It is not allowed to define any location values for children: "+vChild+"!");
}},horizontal:function(vChild){if(!(vChild._computedMinHeightTypeNull&&vChild._computedHeightTypeNull&&vChild._computedMaxHeightTypeNull)){throw new Error("qx.renderer.layout.DockLayoutImpl: It is not allowed to define any vertical dimension for 'horizontal' placed children: "+vChild+"!");
}},vertical:function(vChild){if(!(vChild._computedMinWidthTypeNull&&vChild._computedWidthTypeNull&&vChild._computedMaxWidthTypeNull)){throw new Error("qx.renderer.layout.DockLayoutImpl: It is not allowed to define any horizontal dimension for 'vertical' placed children: "+vChild+"!");
}},"default":function(vChild){qx.renderer.layout.DockLayoutImpl._childCheck.horizontal(vChild);
qx.renderer.layout.DockLayoutImpl._childCheck.vertical(vChild);
}};
qx.Proto.computeChildBoxWidth=function(vChild){if(this.getChildAlignMode(vChild)==$[29]){return vChild.getWidthValue()||vChild._computeBoxWidthFallback();
}return this.getWidget().getInnerWidth()-this._lastLeft-this._lastRight;
};
qx.Proto.computeChildBoxHeight=function(vChild){if(this.getChildAlignMode(vChild)==$[20]){return vChild.getHeightValue()||vChild._computeBoxHeightFallback();
}return this.getWidget().getInnerHeight()-this._lastTop-this._lastBottom;
};
qx.Proto.updateChildOnInnerWidthChange=function(vChild){vChild._recomputePercentX();
vChild.addToLayoutChanges($[77]);
return true;
};
qx.Proto.updateChildOnInnerHeightChange=function(vChild){vChild._recomputePercentY();
vChild.addToLayoutChanges($[77]);
return true;
};
qx.Proto.updateSelfOnJobQueueFlush=qx.lang.Function.returnFalse;
qx.Proto.updateChildrenOnJobQueueFlush=function(vQueue){if(vQueue.mode||vQueue.addChild||vQueue.removeChild){this.getWidget()._addChildrenToLayoutQueue($[77]);
}};
qx.Proto.flushChildrenQueue=function(vChildrenQueue){var vWidget=this.getWidget(),vChildren=vWidget.getVisibleChildren(),vChildrenLength=vChildren.length,vMode=vWidget.getMode();
this._lastLeft=this._lastRight=this._lastTop=this._lastBottom=0;
var vRankImpl=qx.renderer.layout.DockLayoutImpl._childRanking[vMode];
var vOrderedChildren=qx.lang.Array.copy(vChildren).sort(function(c1,c2){return (vRankImpl(c1)+vChildren.indexOf(c1))-(vRankImpl(c2)+vChildren.indexOf(c2));
});
for(var i=0;i<vChildrenLength;i++){vWidget._layoutChild(vOrderedChildren[i]);
}};
qx.Proto.getChildAlign=function(vChild){return vChild.getVerticalAlign()||vChild.getHorizontalAlign()||$[48];
};
qx.Proto.getChildAlignMode=function(vChild){return vChild.getVerticalAlign()?$[20]:vChild.getHorizontalAlign()?$[29]:$[48];
};
qx.Proto.layoutChild=function(vChild,vJobs){qx.renderer.layout.DockLayoutImpl._childCheck.common(vChild);
qx.renderer.layout.DockLayoutImpl._childCheck[this.getChildAlignMode(vChild)](vChild);
this.layoutChild_sizeX_essentialWrapper(vChild,vJobs);
this.layoutChild_sizeY_essentialWrapper(vChild,vJobs);
this.layoutChild_sizeLimitX(vChild,vJobs);
this.layoutChild_sizeLimitY(vChild,vJobs);
this[qx.renderer.layout.DockLayoutImpl.METHOD_LOCATION+this.getChildAlign(vChild)](vChild,vJobs);
};
qx.Proto.layoutChild_location_top=function(vChild,vJobs){vChild._applyRuntimeTop(this._lastTop);
vChild._applyRuntimeLeft(this._lastLeft);
this.layoutChild_location_horizontal(vChild);
this._lastTop+=vChild.getBoxHeight();
};
qx.Proto.layoutChild_location_left=function(vChild,vJobs){vChild._applyRuntimeLeft(this._lastLeft);
vChild._applyRuntimeTop(this._lastTop);
this.layoutChild_location_vertical(vChild);
this._lastLeft+=vChild.getBoxWidth();
};
if(qx.core.Client.getInstance().isMshtml()||qx.core.Client.getInstance().isOpera()){qx.Proto._applyComputedWidth=function(vChild){vChild._recomputeBoxWidth();
vChild._recomputeOuterWidth();
vChild._recomputeInnerWidth();
vChild._applyRuntimeWidth(vChild.getBoxWidth());
};
qx.Proto._applyComputedHeight=function(vChild){vChild._recomputeBoxHeight();
vChild._recomputeOuterHeight();
vChild._recomputeInnerHeight();
vChild._applyRuntimeHeight(vChild.getBoxHeight());
};
qx.Proto.layoutChild_sizeX=function(vChild,vJobs){if(vJobs.initial||vJobs.width||vJobs.minWidth||vJobs.maxWidth){vChild._computedWidthTypeNull&&vChild._computedMinWidthTypeNull&&vChild._computedMaxWidthTypeNull?vChild._resetRuntimeWidth():vChild._applyRuntimeWidth(vChild.getBoxWidth());
}};
qx.Proto.layoutChild_sizeY=function(vChild,vJobs){if(vJobs.initial||vJobs.height||vJobs.minHeight||vJobs.maxHeight){vChild._computedHeightTypeNull&&vChild._computedMinHeightTypeNull&&vChild._computedMaxHeightTypeNull?vChild._resetRuntimeHeight():vChild._applyRuntimeHeight(vChild.getBoxHeight());
}};
qx.Proto.layoutChild_location_horizontal=function(vChild){this._applyComputedWidth(vChild);
};
qx.Proto.layoutChild_location_vertical=function(vChild){this._applyComputedHeight(vChild);
};
qx.Proto.layoutChild_location_right=function(vChild,vJobs){vChild._applyRuntimeLeft(this.getWidget().getInnerWidth()-this._lastRight-vChild.getBoxWidth());
vChild._applyRuntimeTop(this._lastTop);
this.layoutChild_location_vertical(vChild);
this._lastRight+=vChild.getBoxWidth();
};
qx.Proto.layoutChild_location_bottom=function(vChild,vJobs){vChild._applyRuntimeTop(this.getWidget().getInnerHeight()-this._lastBottom-vChild.getBoxHeight());
vChild._applyRuntimeLeft(this._lastLeft);
this.layoutChild_location_horizontal(vChild);
this._lastBottom+=vChild.getBoxHeight();
};
qx.Proto.layoutChild_location_default=function(vChild,vJobs){var vWidget=this.getWidget();
vChild._resetRuntimeRight();
vChild._resetRuntimeBottom();
vChild._applyRuntimeTop(this._lastTop);
vChild._applyRuntimeLeft(this._lastLeft);
this._applyComputedWidth(vChild);
this._applyComputedHeight(vChild);
};
}else{qx.Proto._applyComputedWidth=function(vChild){vChild._recomputeBoxWidth();
vChild._recomputeOuterWidth();
vChild._recomputeInnerWidth();
};
qx.Proto._applyComputedHeight=function(vChild){vChild._recomputeBoxHeight();
vChild._recomputeOuterHeight();
vChild._recomputeInnerHeight();
};
qx.Proto.layoutChild_sizeX=function(vChild,vJobs){if(vJobs.initial||vJobs.width){vChild._computedWidthTypeNull?vChild._resetRuntimeWidth():vChild._applyRuntimeWidth(vChild.getWidthValue());
}};
qx.Proto.layoutChild_sizeY=function(vChild,vJobs){if(vJobs.initial||vJobs.height){vChild._computedHeightTypeNull?vChild._resetRuntimeHeight():vChild._applyRuntimeHeight(vChild.getHeightValue());
}};
qx.Proto.layoutChild_location_horizontal=function(vChild){this._applyComputedWidth(vChild);
vChild._applyRuntimeRight(this._lastRight);
};
qx.Proto.layoutChild_location_vertical=function(vChild){this._applyComputedHeight(vChild);
vChild._applyRuntimeBottom(this._lastBottom);
};
qx.Proto.layoutChild_location_right=function(vChild,vJobs){vChild._applyRuntimeRight(this._lastRight);
vChild._applyRuntimeTop(this._lastTop);
this.layoutChild_location_vertical(vChild);
this._lastRight+=vChild.getBoxWidth();
};
qx.Proto.layoutChild_location_bottom=function(vChild,vJobs){vChild._applyRuntimeBottom(this._lastBottom);
vChild._applyRuntimeLeft(this._lastLeft);
this.layoutChild_location_horizontal(vChild);
this._lastBottom+=vChild.getBoxHeight();
};
qx.Proto.layoutChild_location_default=function(vChild,vJobs){vChild._resetRuntimeWidth();
vChild._resetRuntimeHeight();
vChild._applyRuntimeTop(this._lastTop);
vChild._applyRuntimeRight(this._lastRight);
vChild._applyRuntimeBottom(this._lastBottom);
vChild._applyRuntimeLeft(this._lastLeft);
this._applyComputedWidth(vChild);
this._applyComputedHeight(vChild);
};
}



/* ID: qx.event.type.DragEvent */
qx.OO.defineClass($[2437],qx.event.type.MouseEvent,function(vType,vMouseEvent,vTarget,vRelatedTarget){this._mouseEvent=vMouseEvent;
var vOriginalTarget=null;
switch(vType){case $[208]:case $[177]:vOriginalTarget=vMouseEvent.getOriginalTarget();
}qx.event.type.MouseEvent.call(this,vType,vMouseEvent.getDomEvent(),vTarget.getElement(),vTarget,vOriginalTarget,vRelatedTarget);
});
qx.Proto.getMouseEvent=function(){return this._mouseEvent;
};
qx.Proto.startDrag=function(){if(this.getType()!=$[208]){throw new Error("qx.event.type.DragEvent startDrag can only be called during the dragstart event: "+this.getType());
}this.stopPropagation();
qx.event.handler.DragAndDropHandler.getInstance().startDrag();
};
qx.Proto.addData=function(sType,oData){qx.event.handler.DragAndDropHandler.getInstance().addData(sType,oData);
};
qx.Proto.getData=function(sType){return qx.event.handler.DragAndDropHandler.getInstance().getData(sType);
};
qx.Proto.clearData=function(){qx.event.handler.DragAndDropHandler.getInstance().clearData();
};
qx.Proto.getDropDataTypes=function(){return qx.event.handler.DragAndDropHandler.getInstance().getDropDataTypes();
};
qx.Proto.addAction=function(sAction){qx.event.handler.DragAndDropHandler.getInstance().addAction(sAction);
};
qx.Proto.removeAction=function(sAction){qx.event.handler.DragAndDropHandler.getInstance().removeAction(sAction);
};
qx.Proto.getAction=function(){return qx.event.handler.DragAndDropHandler.getInstance().getCurrentAction();
};
qx.Proto.clearActions=function(){qx.event.handler.DragAndDropHandler.getInstance().clearActions();
};
qx.Proto.setFeedbackWidget=function(widget,deltaX,deltaY,autoDisposeWidget){qx.event.handler.DragAndDropHandler.getInstance().setFeedbackWidget(widget,deltaX,deltaY,autoDisposeWidget);
};
qx.Proto.setCursorPosition=function(deltaX,deltaY){qx.event.handler.DragAndDropHandler.getInstance().setCursorPosition(deltaX,deltaY);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._mouseEvent=null;
return qx.event.type.MouseEvent.prototype.dispose.call(this);
};




/* ID: qx.event.handler.DragAndDropHandler */
qx.OO.defineClass($[309],qx.manager.object.ObjectManager,function(){qx.core.Target.call(this);
this._data={};
this._actions={};
this._cursors={};
var vCursor;
for(var vAction in this._actionNames){vCursor=this._cursors[vAction]=new qx.ui.basic.Image(this._cursorPath+vAction+$[53]+this._cursorFormat);
vCursor.setZIndex(1e8);
}});
qx.OO.addProperty({name:$[1337],type:$[4]});
qx.OO.addProperty({name:$[1299],type:$[4]});
qx.OO.addProperty({name:$[198],type:$[4]});
qx.OO.addProperty({name:$[2203],type:$[0]});
qx.OO.addProperty({name:$[1564],type:$[2],defaultValue:5,allowNull:false});
qx.OO.addProperty({name:$[1449],type:$[2],defaultValue:15,allowNull:false});
qx.Proto._actionNames={move:$[1895],copy:$[2453],alias:$[2302],nodrop:$[2068]};
qx.Proto._cursorPath=$[1852];
qx.Proto._cursorFormat=$[454];
qx.Proto._lastDestinationEvent=null;
qx.Proto._modifyDestinationWidget=function(propValue,propOldValue,propData){if(propValue){propValue.dispatchEvent(new qx.event.type.DragEvent($[419],this._lastDestinationEvent,propValue,this.getSourceWidget()));
this._lastDestinationEvent=null;
}return true;
};
qx.Proto.addData=function(vMimeType,vData){this._data[vMimeType]=vData;
};
qx.Proto.getData=function(vMimeType){return this._data[vMimeType];
};
qx.Proto.clearData=function(){this._data={};
};
qx.Proto.getDropDataTypes=function(){var vDestination=this.getDestinationWidget();
var vDropTypes=[];
if(!vDestination){return vDropTypes;
}var vDropDataTypes=vDestination.getDropDataTypes();
for(var i=0,l=vDropDataTypes.length;i<l;i++){if(vDropDataTypes[i] in this._data){vDropTypes.push(vDropDataTypes[i]);
}}return vDropTypes;
};
qx.Proto.startDrag=function(){if(!this._dragCache){throw new Error("Invalid usage of startDrag. Missing dragInfo!");
}this._dragCache.dragHandlerActive=true;
this.setSourceWidget(this._dragCache.sourceWidget);
if(this._feedbackWidget){this._feedbackWidget.setVisibility(false);
var doc=qx.ui.core.ClientDocument.getInstance();
doc.add(this._feedbackWidget);
}};
qx.Proto._fireUserEvents=function(fromWidget,toWidget,e){if(fromWidget&&fromWidget!=toWidget&&fromWidget.hasEventListeners($[490])){fromWidget.dispatchEvent(new qx.event.type.DragEvent($[490],e,fromWidget,toWidget),true);
}
if(toWidget){if(fromWidget!=toWidget&&toWidget.hasEventListeners($[177])){toWidget.dispatchEvent(new qx.event.type.DragEvent($[177],e,toWidget,fromWidget),true);
}
if(toWidget.hasEventListeners($[750])){toWidget.dispatchEvent(new qx.event.type.DragEvent($[750],e,toWidget,null),true);
}}};
qx.Proto.handleMouseEvent=function(e){switch(e.getType()){case $[6]:return this._handleMouseDown(e);
case $[7]:return this._handleMouseUp(e);
case $[18]:return this._handleMouseMove(e);
}};
qx.Proto._handleMouseDown=function(e){if(e.getDefaultPrevented()||!e.isLeftButtonPressed()){return;
}this._dragCache={startScreenX:e.getScreenX(),startScreenY:e.getScreenY(),pageX:e.getPageX(),pageY:e.getPageY(),sourceWidget:e.getTarget(),sourceTopLevel:e.getTarget().getTopLevelWidget(),dragHandlerActive:false,hasFiredDragStart:false};
};
qx.Proto._handleMouseMove=function(e){if(!this._dragCache){return;
}if(this._dragCache.dragHandlerActive){this._dragCache.pageX=e.getPageX();
this._dragCache.pageY=e.getPageY();
var currentDropTarget=this.getDropTarget(e);
this.setCurrentAction(currentDropTarget?this._evalNewAction(e.isShiftPressed(),e.isCtrlPressed(),e.isAltPressed()):null);
this._fireUserEvents(this._dragCache.currentDropWidget,currentDropTarget,e);
this._dragCache.currentDropWidget=currentDropTarget;
this._renderCursor();
this._renderFeedbackWidget();
}else if(!this._dragCache.hasFiredDragStart){if(Math.abs(e.getScreenX()-this._dragCache.startScreenX)>5||Math.abs(e.getScreenY()-this._dragCache.startScreenY)>5){this._dragCache.sourceWidget.dispatchEvent(new qx.event.type.DragEvent($[208],e,this._dragCache.sourceWidget),true);
this._dragCache.hasFiredDragStart=true;
if(this._dragCache.dragHandlerActive){this._fireUserEvents(this._dragCache.currentDropWidget,this._dragCache.sourceWidget,e);
this._dragCache.currentDropWidget=this._dragCache.sourceWidget;
qx.ui.core.ClientDocument.getInstance().setCapture(true);
}}}};
qx.Proto._handleMouseUp=function(e){if(!this._dragCache){return;
}
if(this._dragCache.dragHandlerActive){this._endDrag(this.getDropTarget(e),e);
}else{this._dragCache=null;
}};
qx.Proto.handleKeyEvent=function(e){if(!this._dragCache){return;
}
switch(e.getType()){case $[13]:this._handleKeyDown(e);
return;
case $[76]:this._handleKeyUp(e);
return;
}};
qx.Proto._handleKeyDown=function(e){if(e.getKeyIdentifier()==$[96]){this.cancelDrag(e);
}else if(this.getCurrentAction()!=null){switch(e.getKeyIdentifier()){case $[171]:case $[153]:case $[164]:this.setAction(this._evalNewAction(e.isShiftPressed(),e.isCtrlPressed(),e.isAltPressed()));
this._renderCursor();
e.preventDefault();
}}};
qx.Proto._handleKeyUp=function(e){var bShiftPressed=e.getKeyIdentifier()==$[171];
var bCtrlPressed=e.getKeyIdentifier()==$[153];
var bAltPressed=e.getKeyIdentifier()==$[164];
if(bShiftPressed||bCtrlPressed||bAltPressed){if(this.getCurrentAction()!=null){this.setAction(this._evalNewAction(!bShiftPressed&&e.isShiftPressed(),!bCtrlPressed&&e.isCtrlPressed(),!bAltPressed&&e.isAltPressed()));
this._renderCursor();
e.preventDefault();
}}};
qx.Proto.cancelDrag=function(e){if(!this._dragCache){return;
}
if(this._dragCache.dragHandlerActive){this._endDrag(null,e);
}else{this._dragCache=null;
}};
qx.Proto.globalCancelDrag=function(){if(this._dragCache&&this._dragCache.dragHandlerActive){this._endDragCore();
}};
qx.Proto._endDrag=function(currentDestinationWidget,e){if(currentDestinationWidget){this._lastDestinationEvent=e;
this.setDestinationWidget(currentDestinationWidget);
}this.getSourceWidget().dispatchEvent(new qx.event.type.DragEvent($[707],e,this.getSourceWidget(),currentDestinationWidget),true);
this._fireUserEvents(this._dragCache&&this._dragCache.currentDropWidget,null,e);
this._endDragCore();
};
qx.Proto._endDragCore=function(){if(this._feedbackWidget){var doc=qx.ui.core.ClientDocument.getInstance();
doc.remove(this._feedbackWidget);
if(this._feedbackAutoDispose){this._feedbackWidget.dispose();
}this._feedbackWidget=null;
}var oldCursor=this.getCursor();
if(oldCursor){oldCursor._style.display=$[33];
this.forceCursor(null);
}this._cursorDeltaX=null;
this._cursorDeltaY=null;
if(this._dragCache){this._dragCache.currentDropWidget=null;
this._dragCache=null;
}qx.ui.core.ClientDocument.getInstance().setCapture(false);
this.clearData();
this.clearActions();
this.setSourceWidget(null);
this.setDestinationWidget(null);
};
qx.Proto.setCursorPosition=function(deltaX,deltaY){this._cursorDeltaX=deltaX;
this._cursorDeltaY=deltaY;
};
qx.Proto._renderCursor=function(){var vNewCursor;
var vOldCursor=this.getCursor();
switch(this.getCurrentAction()){case this._actionNames.move:vNewCursor=this._cursors.move;
break;
case this._actionNames.copy:vNewCursor=this._cursors.copy;
break;
case this._actionNames.alias:vNewCursor=this._cursors.alias;
break;
default:vNewCursor=this._cursors.nodrop;
}if(vNewCursor!=vOldCursor&&vOldCursor!=null){vOldCursor._style.display=$[33];
}if(!vNewCursor._initialLayoutDone){qx.ui.core.ClientDocument.getInstance().add(vNewCursor);
qx.ui.core.Widget.flushGlobalQueues();
}vNewCursor._applyRuntimeLeft(this._dragCache.pageX+((this._cursorDeltaX!=null)?this._cursorDeltaX:this.getDefaultCursorDeltaX()));
vNewCursor._applyRuntimeTop(this._dragCache.pageY+((this._cursorDeltaY!=null)?this._cursorDeltaY:this.getDefaultCursorDeltaY()));
if(vNewCursor!=vOldCursor){vNewCursor._style.display=$[1];
}this.forceCursor(vNewCursor);
};
qx.Proto.supportsDrop=function(vWidget){var vTypes=vWidget.getDropDataTypes();
if(!vTypes){return false;
}
for(var i=0;i<vTypes.length;i++){if(vTypes[i] in this._data){return true;
}}return false;
};
if(qx.core.Client.getInstance().isGecko()){qx.Proto.getDropTarget=function(e){var vCurrent=e.getTarget();
if(vCurrent==this._dragCache.sourceWidget){vCurrent=this._dragCache.sourceTopLevel.getWidgetFromPoint(e.getPageX(),e.getPageY());
}else{vCurrent=qx.event.handler.EventHandler.getTargetObject(null,vCurrent);
}
while(vCurrent!=null&&vCurrent!=this._dragCache.sourceWidget){if(!vCurrent.supportsDrop(this._dragCache)){return null;
}
if(this.supportsDrop(vCurrent)){return vCurrent;
}vCurrent=vCurrent.getParent();
}return null;
};
}else{qx.Proto.getDropTarget=function(e){var vCurrent=e.getTarget();
while(vCurrent!=null){if(!vCurrent.supportsDrop(this._dragCache)){return null;
}
if(this.supportsDrop(vCurrent)){return vCurrent;
}vCurrent=vCurrent.getParent();
}return null;
};
}qx.Proto.addAction=function(vAction,vForce){this._actions[vAction]=true;
if(vForce||this.getCurrentAction()==null){this.setCurrentAction(vAction);
}};
qx.Proto.clearActions=function(){this._actions={};
this.setCurrentAction(null);
};
qx.Proto.removeAction=function(vAction){delete this._actions[vAction];
if(this.getCurrentAction()==vAction){this.setCurrentAction(null);
}};
qx.Proto.setAction=function(vAction){if(vAction!=null&&!(vAction in this._actions)){this.addAction(vAction,true);
}else{this.setCurrentAction(vAction);
}};
qx.Proto._evalNewAction=function(vKeyShift,vKeyCtrl,vKeyAlt){if(vKeyShift&&vKeyCtrl&&this._actionNames.alias in this._actions){return this._actionNames.alias;
}else if(vKeyShift&&vKeyAlt&&this._actionNames.copy in this._actions){return this._actionNames.copy;
}else if(vKeyShift&&this._actionNames.move in this._actions){return this._actionNames.move;
}else if(vKeyAlt&&this._actionNames.alias in this._actions){return this._actionNames.alias;
}else if(vKeyCtrl&&this._actionNames.copy in this._actions){return this._actionNames.copy;
}else{for(var vAction in this._actions){return vAction;
}}return null;
};
qx.Proto.setFeedbackWidget=function(widget,deltaX,deltaY,autoDisposeWidget){this._feedbackWidget=widget;
this._feedbackDeltaX=(deltaX!=null)?deltaX:10;
this._feedbackDeltaY=(deltaY!=null)?deltaY:10;
this._feedbackAutoDispose=autoDisposeWidget?true:false;
};
qx.Proto._renderFeedbackWidget=function(){if(this._feedbackWidget){this._feedbackWidget.setVisibility(true);
this._feedbackWidget._applyRuntimeLeft(this._dragCache.pageX+this._feedbackDeltaX);
this._feedbackWidget._applyRuntimeTop(this._dragCache.pageY+this._feedbackDeltaY);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}if(this._dragCache){this._dragCache.currentDropWidget=null;
this._dragCache=null;
}this._data=null;
this._actions=null;
this._actionNames=null;
this._lastDestinationEvent=null;
if(this._cursors){if(this._cursors.move){this._cursors.move.dispose();
delete this._cursors.move;
}
if(this._cursors.copy){this._cursors.copy.dispose();
delete this._cursors.copy;
}
if(this._cursors.alias){this._cursors.alias.dispose();
delete this._cursors.alias;
}
if(this._cursors.nodrop){this._cursors.nodrop.dispose();
delete this._cursors.nodrop;
}this._cursors=null;
}return qx.manager.object.ObjectManager.prototype.dispose.call(this);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.html.ElementFromPoint */
qx.OO.defineClass($[1396]);
qx.html.ElementFromPoint.getElementFromPoint=function(x,y){return qx.html.ElementFromPoint.getElementFromPointHandler(document.body,x,y);
};
qx.html.ElementFromPoint.getElementFromPointHandler=function(node,x,y,recursive){var ch=node.childNodes;
var chl=ch.length-1;
if(chl<0){return null;
}var chc,subres,ret;
do{chc=ch[chl];
ret=qx.html.ElementFromPoint.getElementFromPointChecker(chc,x,y);
if(ret){if(typeof recursive===$[3]&&recursive==false){return chc;
}else{subres=qx.html.ElementFromPoint.getElementFromPointHandler(chc,x-ret[0]-qx.html.Style.getBorderLeft(chc),y-ret[2]-qx.html.Style.getBorderTop(chc));
return subres?subres:chc;
}}}while(chl--);
return null;
};
qx.html.ElementFromPoint.getElementFromPointChecker=function(chc,x,y){var xstart,ystart,xstop,ystop;
if(chc.nodeType!=1){return false;
}xstart=qx.html.Offset.getLeft(chc);
if(x>xstart){ystart=qx.html.Offset.getTop(chc);
if(y>ystart){xstop=xstart+chc.offsetWidth;
if(x<xstop){ystop=ystart+chc.offsetHeight;
if(y<ystop){return [xstart,xstop,ystart,ystop];
}}}}return false;
};
qx.html.ElementFromPoint.getElementAbsolutePointChecker=function(chc,x,y){var xstart,ystart,xstop,ystop;
if(!chc||chc.nodeType!=1){return false;
}xstart=qx.html.Location.getPageBoxLeft(chc);
if(x>xstart){ystart=qx.html.Location.getPageBoxTop(chc);
if(y>ystart){xstop=xstart+chc.offsetWidth;
if(x<xstop){ystop=ystart+chc.offsetHeight;
if(y<ystop){return [xstart,xstop,ystart,ystop];
}}}}return false;
};




/* ID: qx.ui.listview.Header */
qx.OO.defineClass($[2033],qx.ui.layout.HorizontalBoxLayout,function(vColumns){qx.ui.layout.HorizontalBoxLayout.call(this);
this.setPaddingRight(qx.ui.core.Widget.SCROLLBAR_SIZE);
this._columns=vColumns;
var vHeadCell,vHeadSeparator;
for(var vCol in vColumns){vHeadCell=new qx.ui.listview.HeaderCell(vColumns[vCol],vCol);
vHeadSeparator=new qx.ui.listview.HeaderSeparator;
this.add(vHeadCell,vHeadSeparator);
if(vColumns[vCol].align){vHeadCell.setHorizontalChildrenAlign(vColumns[vCol].align);
if(vColumns[vCol].align==$[10]){vHeadCell.setReverseChildrenOrder(true);
}}vColumns[vCol].contentClass=qx.OO.classes[$[1545]+qx.lang.String.toFirstUp(vColumns[vCol].type||$[249])];
vColumns[vCol].headerCell=vHeadCell;
}this.addEventListener($[18],this._onmousemove);
this.addEventListener($[6],this._onmousedown);
this.addEventListener($[7],this._onmouseup);
this.addEventListener($[47],this._onmouseout);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[871]});
qx.Proto._syncColumnWidth=function(vWidth){var vChildren=this.getChildren();
var vColumn=Math.ceil(vChildren.indexOf(this._resizeCell)/2);
this.getParent().getPane().setColumnWidth(vColumn,vWidth);
};
qx.Proto._syncResizeLine=function(){qx.ui.core.Widget.flushGlobalQueues();
var vParent=this.getParent();
var vLine=vParent.getResizeLine();
var vLeft=qx.html.Location.getPageBoxLeft(this._resizeSeparator.getElement())-qx.html.Location.getPageInnerLeft(this.getElement());
var vTop=qx.html.Dimension.getBoxHeight(vParent.getHeader().getElement());
var vHeight=qx.html.Dimension.getBoxHeight(vParent.getElement())-vTop;
vLine._applyRuntimeTop(vTop);
vLine._applyRuntimeHeight(vHeight);
vLine._applyRuntimeLeft(vLeft);
vLine.removeStyleProperty($[136]);
};
qx.Proto._mshtml=qx.core.Client.getInstance().isMshtml();
qx.Proto._onmousemove=function(e){if(!this.getParent().getResizable()){return;
}
if(this._resizingActive){if(this._mshtml){if((new Date).valueOf()-this._last<50){return;
}this._last=(new Date).valueOf();
}var vNewLeft=e.getPageX();
var vSizeDiff=vNewLeft-this._resizeStart;
var vCell=this._resizeCell;
vCell.setWidth(Math.max(4,vCell.getWidth()+vSizeDiff));
this._resizeStart=vNewLeft;
if(this.getParent().getLiveResize()){this._syncColumnWidth(vCell._computeBoxWidth());
}else{this._syncResizeLine();
}}else{var vTarget=e.getTarget();
var vEventPos=e.getPageX();
var vTargetPosLeft=qx.html.Location.getPageBoxLeft(vTarget.getElement());
var vTargetPosRight=vTargetPosLeft+qx.html.Dimension.getBoxWidth(vTarget.getElement());
var vResizeCursor=false;
var vResizeSeparator=null;
if(vTarget instanceof qx.ui.listview.HeaderSeparator){vResizeCursor=true;
vResizeSeparator=vTarget;
}else if((vEventPos-vTargetPosLeft)<=10){if(!vTarget.isFirstChild()){vResizeCursor=true;
vResizeSeparator=vTarget.getPreviousSibling();
}}else if((vTargetPosRight-vEventPos)<=10){vResizeCursor=true;
vResizeSeparator=vTarget.getNextSibling();
}
if(!(vResizeSeparator instanceof qx.ui.listview.HeaderSeparator)){vResizeSeparator=vTarget=vResizeCursor=null;
}else if(vResizeSeparator){var vResizeCell=vResizeSeparator.getPreviousSibling();
if(vResizeCell&&(vResizeCell._computedWidthTypePercent||vResizeCell._config.resizable==false)){vResizeSeparator=vTarget=vResizeCursor=null;
}}this.getTopLevelWidget().setGlobalCursor(vResizeCursor?$[978]:null);
this._resizeSeparator=vResizeSeparator;
this._resizeTarget=vTarget;
}};
qx.Proto._onmousedown=function(e){if(!this._resizeSeparator){return;
}this._resizingActive=true;
this._resizeStart=e.getPageX();
this._resizeCell=this._resizeSeparator.getPreviousSibling();
if(!this.getParent().getLiveResize()){this._syncResizeLine();
}this.setCapture(true);
};
qx.Proto._onmouseup=function(e){if(!this._resizingActive){return;
}this._syncColumnWidth(this._resizeCell.getBoxWidth());
this.setCapture(false);
this.getTopLevelWidget().setGlobalCursor(null);
this._resizeTarget.removeState($[58]);
this.getParent().getResizeLine().setStyleProperty($[136],$[26]);
this._cleanupResizing();
};
qx.Proto._onmouseout=function(e){if(!this.getCapture()){this.getTopLevelWidget().setGlobalCursor(null);
}};
qx.Proto._cleanupResizing=function(){delete this._resizingActive;
delete this._resizeSeparator;
delete this._resizeTarget;
delete this._resizeStart;
delete this._resizeCell;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._cleanupResizing();
this.removeEventListener($[18],this._onmousemove);
this.removeEventListener($[6],this._onmousedown);
this.removeEventListener($[7],this._onmouseup);
this.removeEventListener($[47],this._onmouseout);
this._columns=null;
return qx.ui.layout.HorizontalBoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.listview.HeaderCell */
qx.OO.defineClass($[1523],qx.ui.basic.Atom,function(vConfig,vId){qx.ui.basic.Atom.call(this,vConfig.label,vConfig.icon,vConfig.iconWidth,vConfig.iconHeight,vConfig.flash);
this.setStyleProperty($[671],$[340]);
this._config=vConfig;
this._id=vId;
this.setWidth(typeof vConfig.width===$[41]?$[5]:vConfig.width);
if(vConfig.minWidth!=null){this.setMinWidth(vConfig.minWidth);
}
if(vConfig.maxWidth!=null){this.setMaxWidth(vConfig.maxWidth);
}this.getLayoutImpl().setEnableFlexSupport(true);
this._spacer=new qx.ui.basic.HorizontalSpacer;
this._arrowup=new qx.ui.basic.Image($[1077]);
this._arrowup.setVerticalAlign($[34]);
this._arrowup.setDisplay(false);
this._arrowdown=new qx.ui.basic.Image($[481]);
this._arrowdown.setVerticalAlign($[34]);
this._arrowdown.setDisplay(false);
this.add(this._spacer,this._arrowup,this._arrowdown);
this.addEventListener($[7],this._onmouseup);
this.addEventListener($[40],this._onmouseover);
this.addEventListener($[47],this._onmouseout);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1961]});
qx.OO.addProperty({name:$[1071],type:$[0],allowNull:true,possibleValues:[$[1795],$[1056]]});
qx.Clazz.C_SORT_ASCENDING="ascending";
qx.Clazz.C_SORT_DESCENDING="descending";
qx.Proto.getView=function(){return this.getParent().getParent();
};
qx.Proto.getNextSortOrder=function(){var vCurrentSortOrder=this.getSortOrder();
switch(vCurrentSortOrder){case qx.ui.listview.HeaderCell.C_SORT_ASCENDING:return qx.ui.listview.HeaderCell.C_SORT_DESCENDING;
default:return qx.ui.listview.HeaderCell.C_SORT_ASCENDING;
}};
qx.Proto.updateSort=function(){var vListView=this.getView();
var vData=vListView.getData();
var vFieldId=this._id;
var vSortProp=this._config.sortProp||$[249];
var vSortMethod=this._config.sortMethod||qx.util.Compare.byString;
vData.sort(function(a,b){return vSortMethod(a[vFieldId][vSortProp],b[vFieldId][vSortProp]);
});
if(this.getSortOrder()==qx.ui.listview.HeaderCell.C_SORT_DESCENDING){vData.reverse();
}};
qx.Proto._modifySortOrder=function(propValue,propOldValue,propData){var vListView=this.getView();
switch(propValue){case qx.ui.listview.HeaderCell.C_SORT_ASCENDING:this._arrowup.setDisplay(true);
this._arrowdown.setDisplay(false);
vListView.setSortBy(this._id);
break;
case qx.ui.listview.HeaderCell.C_SORT_DESCENDING:this._arrowup.setDisplay(false);
this._arrowdown.setDisplay(true);
vListView.setSortBy(this._id);
break;
default:this._arrowup.setDisplay(false);
this._arrowdown.setDisplay(false);
if(vListView.getSortBy()==this._id){vListView.setSortBy(null);
}}
if(propValue){this.updateSort();
vListView.update();
}return true;
};
qx.Proto._onmouseover=function(e){this.addState($[58]);
};
qx.Proto._onmouseout=function(e){this.removeState($[58]);
};
qx.Proto._onmouseup=function(e){if(!this._config.sortable||this.getParent()._resizeSeparator){return;
}this.setSortOrder(this.getNextSortOrder());
e.stopPropagation();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}delete this._config;
if(this._spacer){this._spacer.dispose();
this._spacer=null;
}
if(this._arrowup){this._arrowup.dispose();
this._arrowup=null;
}
if(this._arrowdown){this._arrowdown.dispose();
this._arrowdown=null;
}this.removeEventListener($[7],this._onmouseup);
this.removeEventListener($[40],this._onmouseover);
this.removeEventListener($[47],this._onmouseout);
return qx.ui.basic.Atom.prototype.dispose.call(this);
};




/* ID: qx.ui.listview.HeaderSeparator */
qx.OO.defineClass($[1836],qx.ui.basic.Terminator,function(){qx.ui.basic.Terminator.call(this);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1380]});




/* ID: qx.locale.Key */
qx.OO.defineClass($[1033]);
qx.Clazz.getKeyName=function(size,keyIdentifier,locale){if(size!=$[120]&&size!=$[313]){throw new Error('format must be one of: "short", "full"');
}var key=$[2291]+size+$[95]+keyIdentifier;
var localizedKey=new qx.locale.LocalizedString(key,[],locale);
if(localizedKey==key){return qx.locale.Key._keyNames[key]||keyIdentifier;
}else{return localizedKey;
}};
(function(){var keyNames={};
var Manager=qx.locale.Manager;
keyNames[Manager.marktr($[1256])]=$[315];
keyNames[Manager.marktr($[1692])]=$[223];
keyNames[Manager.marktr($[1356])]=$[85];
keyNames[Manager.marktr($[2115])]=$[45];
keyNames[Manager.marktr($[2446])]=$[171];
keyNames[Manager.marktr($[2449])]=$[947];
keyNames[Manager.marktr($[1839])]=$[164];
keyNames[Manager.marktr($[1377])]=$[1898];
keyNames[Manager.marktr($[2157])]=$[289];
keyNames[Manager.marktr($[2154])]=$[1862];
keyNames[Manager.marktr($[990])]=$[55];
keyNames[Manager.marktr($[1584])]=$[73];
keyNames[Manager.marktr($[1000])]=$[56];
keyNames[Manager.marktr($[1673])]=$[71];
keyNames[Manager.marktr($[2375])]=$[1979];
keyNames[Manager.marktr($[1610])]=$[1153];
keyNames[Manager.marktr($[1082])]=$[144];
keyNames[Manager.marktr($[1568])]=$[130];
keyNames[Manager.marktr($[921])]=$[1180];
keyNames[Manager.marktr($[1106])]=$[1433];
keyNames[Manager.marktr($[985])]=$[1442];
keyNames[Manager.marktr($[2086])]=$[893];
keyNames[Manager.marktr($[1311])]=$[369];
keyNames[Manager.marktr($[2377])]=$[330];
keyNames[Manager.marktr($[2162])]=$[422];
keyNames[Manager.marktr($[2161])]=$[408];
keyNames[Manager.marktr($[2419])]=$[315];
keyNames[Manager.marktr($[1615])]=$[1134];
keyNames[Manager.marktr($[1233])]=$[85];
keyNames[Manager.marktr($[1544])]=$[45];
keyNames[Manager.marktr($[1922])]=$[171];
keyNames[Manager.marktr($[1132])]=$[153];
keyNames[Manager.marktr($[1151])]=$[164];
keyNames[Manager.marktr($[2380])]=$[615];
keyNames[Manager.marktr($[915])]=$[289];
keyNames[Manager.marktr($[1464])]=$[96];
keyNames[Manager.marktr($[2240])]=$[55];
keyNames[Manager.marktr($[1096])]=$[73];
keyNames[Manager.marktr($[1346])]=$[56];
keyNames[Manager.marktr($[1144])]=$[71];
keyNames[Manager.marktr($[2026])]=$[75];
keyNames[Manager.marktr($[1457])]=$[88];
keyNames[Manager.marktr($[1932])]=$[144];
keyNames[Manager.marktr($[2191])]=$[130];
keyNames[Manager.marktr($[1761])]=$[245];
keyNames[Manager.marktr($[1825])]=$[234];
keyNames[Manager.marktr($[1927])]=$[155];
keyNames[Manager.marktr($[1099])]=$[311];
keyNames[Manager.marktr($[1398])]=$[369];
keyNames[Manager.marktr($[2020])]=$[330];
keyNames[Manager.marktr($[1090])]=$[422];
keyNames[Manager.marktr($[1286])]=$[408];
qx.Clazz._keyNames=keyNames;
})();




/* ID: qx.client.Command */
qx.OO.defineClass($[710],qx.core.Target,function(vShortcut,vKeyCode){qx.core.Target.call(this);
this._modifier={};
this._key=null;
if(vShortcut!=null){this.setShortcut(vShortcut);
}
if(vKeyCode!=null){this.warn($[1718]);
this.setKeyCode(vKeyCode);
}if(this._modifier.Alt&&this._key&&this._key.length==1){if((this._key>=$[121]&&this._key<=$[451])||(this._key>=$[36]&&this._key<=$[157])){this.warn($[1929]);
}}qx.event.handler.EventHandler.getInstance().addCommand(this);
});
qx.OO.addProperty({name:$[1759],type:$[0]});
qx.OO.addProperty({name:$[602],type:$[2]});
qx.OO.addProperty({name:$[598],type:$[0]});
qx.Proto.execute=function(vTarget){if(this.hasEventListeners($[38])){var event=new qx.event.type.DataEvent($[38],vTarget);
this.dispatchEvent(event,true);
}return false;
};
qx.Proto._modifyShortcut=function(propValue,propOldValue,propData){if(propValue){this._modifier={};
this._key=null;
var a=propValue.split(/[-+\s]+/);
var al=a.length;
for(var i=0;i<al;i++){var identifier=this._oldKeyNameToKeyIdentifier(a[i]);
switch(identifier){case $[153]:case $[171]:case $[289]:case $[164]:this._modifier[identifier]=true;
break;
case $[255]:var msg=$[2338]+a[i];
this.error(msg);
throw msg;
default:if(this._key){var msg=$[2147];
this.error(msg);
throw msg;
}this._key=identifier;
}}}return true;
};
qx.Proto._matchesKeyEvent=function(e){var key=this._key||this.getKeyIdentifier();
if(!key&&!this.getKeyCode()){return ;
}if((this._modifier.Shift&&!e.isShiftPressed())||
(this._modifier.Control&&!e.isCtrlPressed())||
(this._modifier.Alt&&!e.isAltPressed())){return false;
}
if(key){if(key==e.getKeyIdentifier()){return true;
}}else{if(this.getKeyCode()==e.getKeyCode()){return true;
}}return false;
};
qx.Proto._oldKeyNameToKeyIdentifierMap={esc:$[96],ctrl:$[153],print:$[311],del:$[234],pageup:$[75],pagedown:$[88],numlock:$[155],numpad_0:$[36],numpad_1:$[298],numpad_2:$[403],numpad_3:$[420],numpad_4:$[374],numpad_5:$[388],numpad_6:$[354],numpad_7:$[365],numpad_8:$[367],numpad_9:$[157],numpad_divide:$[127],numpad_multiply:$[168],numpad_minus:$[57],numpad_plus:$[236]};
qx.Proto._oldKeyNameToKeyIdentifier=function(keyName){var keyHandler=qx.event.handler.KeyEventHandler.getInstance();
var keyIdentifier=$[255];
if(keyHandler.isValidKeyIdentifier(keyName)){return keyName;
}
if(keyName.length==1&&keyName>=$[242]&&keyName<=$[1693]){return keyName.toUpperCase();
}keyName=keyName.toLowerCase();
if(!qx.event.type.KeyEvent.keys[keyName]){return $[255];
}var keyIdentifier=this._oldKeyNameToKeyIdentifierMap[keyName];
if(keyIdentifier){return keyIdentifier;
}else{return qx.lang.String.toFirstUp(keyName);
}};
qx.Proto.toString=function(){var vKeyCode=this.getKeyCode();
var key=this._key||this.getKeyIdentifier();
var vString=[];
for(var modifier in this._modifier){vString.push(qx.locale.Key.getKeyName($[120],modifier));
}
if(key){vString.push(qx.locale.Key.getKeyName($[120],key));
}if(vKeyCode!=null){var vTemp=qx.event.type.KeyEvent.codes[vKeyCode];
vString.push(vTemp?qx.lang.String.toFirstUp(vTemp):String(vKeyCode));
}return vString.join($[57]);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._shortcutParts=null;
var vMgr=qx.event.handler.EventHandler.getInstance();
if(vMgr){vMgr.removeCommand(this);
}return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.xml.String */
qx.OO.defineClass($[1186]);
qx.Clazz.escape=function(str){return qx.dom.String.escapeEntities(str,qx.xml.Entity.FROM_CHARCODE);
};
qx.Clazz.unescape=function(str){return qx.dom.String.unescapeEntities(str,qx.xml.Entity.TO_CHARCODE);
};




/* ID: qx.xml.Entity */
qx.OO.defineClass($[802]);
qx.Clazz.TO_CHARCODE={"quot":34,"amp":38,"lt":60,"gt":62,"apos":39};
qx.Clazz.FROM_CHARCODE=qx.lang.Object.invert(qx.Clazz.TO_CHARCODE);




/* ID: qx.ui.layout.GridLayout */
qx.OO.defineClass($[1926],qx.ui.core.Parent,function(){qx.ui.core.Parent.call(this);
this._columnData=[];
this._rowData=[];
this._spans=[];
});
qx.OO.addProperty({name:$[741],type:$[2],defaultValue:0,addToQueueRuntime:true,impl:$[193]});
qx.OO.addProperty({name:$[677],type:$[2],defaultValue:0,addToQueueRuntime:true,impl:$[193]});
qx.OO.addProperty({name:$[460],type:$[0],defaultValue:$[11],possibleValues:[$[11],$[74],$[10]],addToQueueRuntime:true});
qx.OO.addProperty({name:$[383],type:$[0],defaultValue:$[12],possibleValues:[$[12],$[34],$[16]],addToQueueRuntime:true});
qx.OO.addProperty({name:$[1915],type:$[2]});
qx.OO.addProperty({name:$[1094],type:$[2]});
qx.OO.addProperty({name:$[1746],type:$[2]});
qx.OO.addProperty({name:$[1635],type:$[2]});
qx.Proto._createLayoutImpl=function(){return new qx.renderer.layout.GridLayoutImpl(this);
};
qx.Proto.add=function(vChild,vCol,vRow){vChild._col=vCol;
vChild._row=vRow;
if(this.isFillCell(vCol,vRow)){throw new Error("Could not insert child "+vChild+" into a fill cell: "+vCol+"x"+vRow);
}qx.ui.core.Parent.prototype.add.call(this,vChild);
};
qx.Proto._modifyLayout=function(propValue,propOldValue,propData){this._invalidatePreferredInnerDimensions();
return true;
};
qx.Proto._syncDataFields=function(vData,vOldLength,vNewLength){if(vNewLength>vOldLength){for(var i=vOldLength;i<vNewLength;i++){vData[i]={};
}}else if(vOldLength>vNewLength){vData.splice(vNewLength,vOldLength-vNewLength);
}};
qx.Proto._columnCount=0;
qx.Proto.setColumnCount=function(vCount){this._columnCount=vCount;
this._syncColumnDataFields();
};
qx.Proto.getColumnCount=function(){return this._columnCount;
};
qx.Proto.addColumn=function(){this._columnCount++;
this._syncColumnDataFields();
};
qx.Proto.removeColumn=function(){if(this._columnCount>0){this._columnCount--;
this._syncColumnDataFields();
}};
qx.Proto._syncColumnDataFields=function(){var vData=this._columnData;
var vOldLength=vData.length;
var vNewLength=this._columnCount;
this._syncDataFields(vData,vOldLength,vNewLength);
};
qx.Proto._rowCount=0;
qx.Proto.setRowCount=function(vCount){this._rowCount=vCount;
this._syncRowDataFields();
};
qx.Proto.getRowCount=function(){return this._rowCount;
};
qx.Proto.addRow=function(){this._rowCount++;
this._syncRowDataFields();
};
qx.Proto.removeRow=function(){if(this._rowCount>0){this._rowCount--;
this._syncRowDataFields();
}};
qx.Proto._syncRowDataFields=function(){var vData=this._rowData;
var vOldLength=vData.length;
var vNewLength=this._rowCount;
this._syncDataFields(vData,vOldLength,vNewLength);
};
qx.Proto._getColumnProperty=function(vColumnIndex,vProperty){try{return this._columnData[vColumnIndex][vProperty]||null;
}catch(ex){this.error("Error while getting column property ("+vColumnIndex+"|"+vProperty+")",ex);
return null;
}};
qx.Proto._setupColumnProperty=function(vColumnIndex,vProperty,vValue){this._columnData[vColumnIndex][vProperty]=vValue;
this._invalidateColumnLayout();
};
qx.Proto._removeColumnProperty=function(vColumnIndex,vProperty,vValue){delete this._columnData[vColumnIndex][vProperty];
this._invalidateColumnLayout();
};
qx.Proto._invalidateColumnLayout=function(){if(!this._initialLayoutDone||!this._isDisplayable){return;
}this.forEachVisibleChild(function(){this.addToQueue($[42]);
});
};
qx.Proto._getRowProperty=function(vRowIndex,vProperty){try{return this._rowData[vRowIndex][vProperty]||null;
}catch(ex){this.error("Error while getting row property ("+vRowIndex+"|"+vProperty+")",ex);
return null;
}};
qx.Proto._setupRowProperty=function(vRowIndex,vProperty,vValue){this._rowData[vRowIndex][vProperty]=vValue;
this._invalidateRowLayout();
};
qx.Proto._removeRowProperty=function(vRowIndex,vProperty,vValue){delete this._rowData[vRowIndex][vProperty];
this._invalidateRowLayout();
};
qx.Proto._invalidateRowLayout=function(){if(!this._initialLayoutDone||!this._isDisplayable){return;
}this.forEachVisibleChild(function(){this.addToQueue($[43]);
});
};
qx.Proto.setColumnWidth=function(vIndex,vValue){this._setupColumnProperty(vIndex,$[1703],vValue);
var vType=qx.ui.core.Parent.prototype._evalUnitsPixelPercentAutoFlex(vValue);
this._setupColumnProperty(vIndex,$[427],vType);
var vParsed,vComputed;
switch(vType){case qx.ui.core.Widget.TYPE_PIXEL:vParsed=vComputed=Math.round(vValue);
break;
case qx.ui.core.Widget.TYPE_PERCENT:case qx.ui.core.Widget.TYPE_FLEX:vParsed=parseFloat(vValue);
vComputed=null;
break;
case qx.ui.core.Widget.TYPE_AUTO:vParsed=vComputed=null;
break;
default:vParsed=vComputed=null;
}this._setupColumnProperty(vIndex,$[596],vParsed);
this._setupColumnProperty(vIndex,$[209],vComputed);
};
qx.Proto.setRowHeight=function(vIndex,vValue){this._setupRowProperty(vIndex,$[2379],vValue);
var vType=qx.ui.core.Widget.prototype._evalUnitsPixelPercentAutoFlex(vValue);
this._setupRowProperty(vIndex,$[469],vType);
var vParsed,vComputed;
switch(vType){case qx.ui.core.Widget.TYPE_PIXEL:vParsed=vComputed=Math.round(vValue);
break;
case qx.ui.core.Widget.TYPE_PERCENT:case qx.ui.core.Widget.TYPE_FLEX:vParsed=parseFloat(vValue);
vComputed=null;
break;
case qx.ui.core.Widget.TYPE_AUTO:vParsed=vComputed=null;
break;
default:vParsed=vComputed=null;
}this._setupRowProperty(vIndex,$[712],vParsed);
this._setupRowProperty(vIndex,$[211],vComputed);
};
qx.Proto.getColumnBoxWidth=function(vIndex){var vComputed=this._getColumnProperty(vIndex,$[209]);
if(vComputed!=null){return vComputed;
}var vType=this._getColumnProperty(vIndex,$[427]);
var vParsed=this._getColumnProperty(vIndex,$[596]);
var vComputed=null;
switch(vType){case qx.ui.core.Widget.TYPE_PIXEL:vComputed=Math.max(0,vParsed);
break;
case qx.ui.core.Widget.TYPE_PERCENT:vComputed=this.getInnerWidth()*Math.max(0,vParsed)*0.01;
break;
case qx.ui.core.Widget.TYPE_AUTO:vComputed=null;
break;
case qx.ui.core.Widget.TYPE_FLEX:vComputed=null;
break;
}this._setupColumnProperty(vIndex,$[209],vComputed);
return vComputed;
};
qx.Proto.getRowBoxHeight=function(vIndex){var vComputed=this._getRowProperty(vIndex,$[211]);
if(vComputed!=null){return vComputed;
}var vType=this._getRowProperty(vIndex,$[469]);
var vParsed=this._getRowProperty(vIndex,$[712]);
var vComputed=null;
switch(vType){case qx.ui.core.Widget.TYPE_PIXEL:vComputed=Math.max(0,vParsed);
break;
case qx.ui.core.Widget.TYPE_PERCENT:vComputed=this.getInnerHeight()*Math.max(0,vParsed)*0.01;
break;
case qx.ui.core.Widget.TYPE_AUTO:vComputed=null;
break;
case qx.ui.core.Widget.TYPE_FLEX:vComputed=null;
break;
}this._setupRowProperty(vIndex,$[211],vComputed);
return vComputed;
};
qx.Proto.getComputedCellPaddingLeft=function(vCol,vRow){return this.getColumnPaddingLeft(vCol)||this.getRowPaddingLeft(vRow)||this.getCellPaddingLeft()||0;
};
qx.Proto.getComputedCellPaddingRight=function(vCol,vRow){return this.getColumnPaddingRight(vCol)||this.getRowPaddingRight(vRow)||this.getCellPaddingRight()||0;
};
qx.Proto.getComputedCellPaddingTop=function(vCol,vRow){return this.getRowPaddingTop(vRow)||this.getColumnPaddingTop(vCol)||this.getCellPaddingTop()||0;
};
qx.Proto.getComputedCellPaddingBottom=function(vCol,vRow){return this.getRowPaddingBottom(vRow)||this.getColumnPaddingBottom(vCol)||this.getCellPaddingBottom()||0;
};
qx.Proto.getColumnInnerWidth=function(vCol,vRow){return this.getColumnBoxWidth(vCol)-this.getComputedCellPaddingLeft(vCol,vRow)-this.getComputedCellPaddingRight(vCol,vRow);
};
qx.Proto.getRowInnerHeight=function(vCol,vRow){return this.getRowBoxHeight(vRow)-this.getComputedCellPaddingTop(vCol,vRow)-this.getComputedCellPaddingBottom(vCol,vRow);
};
qx.Proto.setColumnHorizontalAlignment=function(vIndex,vValue){this._setupColumnProperty(vIndex,$[307],vValue);
};
qx.Proto.setColumnVerticalAlignment=function(vIndex,vValue){this._setupColumnProperty(vIndex,$[323],vValue);
};
qx.Proto.setRowHorizontalAlignment=function(vIndex,vValue){this._setupRowProperty(vIndex,$[307],vValue);
};
qx.Proto.setRowVerticalAlignment=function(vIndex,vValue){this._setupRowProperty(vIndex,$[323],vValue);
};
qx.Proto.getColumnHorizontalAlignment=function(vIndex){return this._getColumnProperty(vIndex,$[307]);
};
qx.Proto.getColumnVerticalAlignment=function(vIndex){return this._getColumnProperty(vIndex,$[323]);
};
qx.Proto.getRowHorizontalAlignment=function(vIndex){return this._getRowProperty(vIndex,$[307]);
};
qx.Proto.getRowVerticalAlignment=function(vIndex){return this._getRowProperty(vIndex,$[323]);
};
qx.Proto.setColumnPaddingTop=function(vIndex,vValue){this._setupColumnProperty(vIndex,$[154],vValue);
};
qx.Proto.setColumnPaddingRight=function(vIndex,vValue){this._setupColumnProperty(vIndex,$[160],vValue);
};
qx.Proto.setColumnPaddingBottom=function(vIndex,vValue){this._setupColumnProperty(vIndex,$[162],vValue);
};
qx.Proto.setColumnPaddingLeft=function(vIndex,vValue){this._setupColumnProperty(vIndex,$[151],vValue);
};
qx.Proto.setRowPaddingTop=function(vIndex,vValue){this._setupRowProperty(vIndex,$[154],vValue);
};
qx.Proto.setRowPaddingRight=function(vIndex,vValue){this._setupRowProperty(vIndex,$[160],vValue);
};
qx.Proto.setRowPaddingBottom=function(vIndex,vValue){this._setupRowProperty(vIndex,$[162],vValue);
};
qx.Proto.setRowPaddingLeft=function(vIndex,vValue){this._setupRowProperty(vIndex,$[151],vValue);
};
qx.Proto.getColumnPaddingTop=function(vIndex){return this._getColumnProperty(vIndex,$[154]);
};
qx.Proto.getColumnPaddingRight=function(vIndex){return this._getColumnProperty(vIndex,$[160]);
};
qx.Proto.getColumnPaddingBottom=function(vIndex){return this._getColumnProperty(vIndex,$[162]);
};
qx.Proto.getColumnPaddingLeft=function(vIndex){return this._getColumnProperty(vIndex,$[151]);
};
qx.Proto.getRowPaddingTop=function(vIndex){return this._getRowProperty(vIndex,$[154]);
};
qx.Proto.getRowPaddingRight=function(vIndex){return this._getRowProperty(vIndex,$[160]);
};
qx.Proto.getRowPaddingBottom=function(vIndex){return this._getRowProperty(vIndex,$[162]);
};
qx.Proto.getRowPaddingLeft=function(vIndex){return this._getRowProperty(vIndex,$[151]);
};
qx.Proto._changeInnerWidth=function(vNew,vOld){for(var i=0,l=this.getColumnCount();i<l;i++){if(this._getColumnProperty(i,$[427])==qx.ui.core.Widget.TYPE_PERCENT){this._setupColumnProperty(i,$[209],null);
}}qx.ui.core.Parent.prototype._changeInnerWidth.call(this,vNew,vOld);
};
qx.Proto._changeInnerHeight=function(vNew,vOld){for(var i=0,l=this.getRowCount();i<l;i++){if(this._getRowProperty(i,$[469])==qx.ui.core.Widget.TYPE_PERCENT){this._setupRowProperty(i,$[211],null);
}}qx.ui.core.Parent.prototype._changeInnerHeight.call(this,vNew,vOld);
};
qx.Proto.getInnerWidthForChild=function(vChild){return this._getColumnProperty(vChild._col,$[209]);
};
qx.Proto.getInnerHeightForChild=function(vChild){return this._getRowProperty(vChild._row,$[211]);
};
qx.Proto.mergeCells=function(vStartCol,vStartRow,vColLength,vRowLength){var vSpans=this._spans;
var vLength=vSpans.length;
var vEndCol=vStartCol+vColLength-1;
var vEndRow=vStartRow+vRowLength-1;
if(this._collidesWithSpans(vStartCol,vStartRow,vEndCol,vEndRow)){this.debug("Span collision detected!");
return false;
}vSpans.push({startCol:vStartCol,startRow:vStartRow,endCol:vEndCol,endRow:vEndRow,colLength:vColLength,rowLength:vRowLength});
return true;
};
qx.Proto.hasSpans=function(){return this._spans.length>0;
};
qx.Proto.getSpanEntry=function(vCol,vRow){for(var i=0,s=this._spans,l=s.length,c;i<l;i++){c=s[i];
if(vCol>=c.startCol&&vCol<=c.endCol&&vRow>=c.startRow&&vRow<=c.endRow){return c;
}}return null;
};
qx.Proto.isSpanStart=function(vCol,vRow){for(var i=0,s=this._spans,l=s.length,c;i<l;i++){c=s[i];
if(c.startCol==vCol&&c.startRow==vRow){return true;
}}return false;
};
qx.Proto.isSpanCell=function(vCol,vRow){for(var i=0,s=this._spans,l=s.length,c;i<l;i++){c=s[i];
if(vCol>=c.startCol&&vCol<=c.endCol&&vRow>=c.startRow&&vRow<=c.endRow){return true;
}}return false;
};
qx.Proto.isFillCell=function(vCol,vRow){for(var i=0,s=this._spans,l=s.length,c;i<l;i++){c=s[i];
if(vCol>=c.startCol&&vCol<=c.endCol&&vRow>=c.startRow&&vRow<=c.endRow&&(vCol>c.startCol||vRow>c.startRow)){return true;
}}return false;
};
qx.Proto._collidesWithSpans=function(vStartCol,vStartRow,vEndCol,vEndRow){for(var i=0,s=this._spans,l=s.length,c;i<l;i++){c=s[i];
if(vEndCol>=c.startCol&&vStartCol<=c.endCol&&vEndRow>=c.startRow&&vStartRow<=c.endRow){return true;
}}return false;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}delete this._columnData;
delete this._rowData;
delete this._spans;
return qx.ui.core.Parent.prototype.dispose.call(this);
};




/* ID: qx.renderer.layout.GridLayoutImpl */
qx.OO.defineClass($[2454],qx.renderer.layout.LayoutImpl,function(vWidget){qx.renderer.layout.LayoutImpl.call(this,vWidget);
});
qx.Proto.computeChildBoxWidth=function(vChild){var vWidget=this.getWidget();
var vColWidth=vWidget.getColumnInnerWidth(vChild._col,vChild._row);
if(vWidget.isSpanStart(vChild._col,vChild._row)){var vEntry=vWidget.getSpanEntry(vChild._col,vChild._row);
for(var i=1;i<vEntry.colLength;i++){vColWidth+=vWidget.getComputedCellPaddingRight(vChild._col+i-1,vChild._row);
vColWidth+=vWidget.getComputedCellPaddingLeft(vChild._col+i,vChild._row);
vColWidth+=vWidget.getHorizontalSpacing();
vColWidth+=vWidget.getColumnInnerWidth(vChild._col+i,vChild._row);
}}return vChild.getAllowStretchX()?vColWidth:Math.min(vChild.getWidthValue(),vColWidth);
};
qx.Proto.computeChildBoxHeight=function(vChild){var vWidget=this.getWidget();
var vRowHeight=vWidget.getRowInnerHeight(vChild._col,vChild._row);
if(vWidget.isSpanStart(vChild._col,vChild._row)){var vEntry=vWidget.getSpanEntry(vChild._col,vChild._row);
for(var i=1;i<vEntry.rowLength;i++){vRowHeight+=vWidget.getComputedCellPaddingBottom(vChild._col,vChild._row+i-1);
vRowHeight+=vWidget.getComputedCellPaddingTop(vChild._col,vChild._row+i);
vRowHeight+=vWidget.getVerticalSpacing();
vRowHeight+=vWidget.getRowInnerHeight(vChild._col,vChild._row+i);
}}return vChild.getAllowStretchY()?vRowHeight:Math.min(vChild.getHeightValue(),vRowHeight);
};
qx.Proto.computeChildrenNeededWidth=function(){var vWidget=this.getWidget();
var vSpacingX=vWidget.getHorizontalSpacing();
var vSum=-vSpacingX;
for(var i=0,l=vWidget.getColumnCount();i<l;i++){vSum+=vWidget.getColumnBoxWidth(i)+vSpacingX;
}return vSum;
};
qx.Proto.computeChildrenNeededHeight=function(){var vWidget=this.getWidget();
var vSpacingY=vWidget.getVerticalSpacing();
var vSum=-vSpacingY;
for(var i=0,l=vWidget.getRowCount();i<l;i++){vSum+=vWidget.getRowBoxHeight(i)+vSpacingY;
}return vSum;
};
qx.Proto.updateChildOnInnerWidthChange=function(vChild){vChild._recomputePercentX();
vChild.addToLayoutChanges($[115]);
return true;
};
qx.Proto.updateChildOnInnerHeightChange=function(vChild){vChild._recomputePercentY();
vChild.addToLayoutChanges($[126]);
return true;
};
qx.Proto.layoutChild=function(vChild,vJobs){var vWidget=this.getWidget();
this.layoutChild_sizeX(vChild,vJobs);
this.layoutChild_sizeY(vChild,vJobs);
this.layoutChild_sizeLimitX(vChild,vJobs);
this.layoutChild_sizeLimitY(vChild,vJobs);
this.layoutChild_marginX(vChild,vJobs);
this.layoutChild_marginY(vChild,vJobs);
this.layoutChild_locationX(vChild,vJobs);
this.layoutChild_locationY(vChild,vJobs);
};
qx.Proto.layoutChild_sizeX=function(vChild,vJobs){vChild._applyRuntimeWidth(vChild.getBoxWidth());
};
qx.Proto.layoutChild_sizeY=function(vChild,vJobs){vChild._applyRuntimeHeight(vChild.getBoxHeight());
};
qx.Proto.layoutChild_locationX=function(vChild,vJobs){var vWidget=this.getWidget();
var vSpacingX=vWidget.getHorizontalSpacing();
var vLocSumX=vWidget.getPaddingLeft()+vWidget.getComputedCellPaddingLeft(vChild._col,vChild._row);
for(var i=0;i<vChild._col;i++){vLocSumX+=vWidget.getColumnBoxWidth(i)+vSpacingX;
}
switch(vChild.getHorizontalAlign()||vWidget.getColumnHorizontalAlignment(vChild._col)||vWidget.getRowHorizontalAlignment(vChild._row)||vWidget.getHorizontalChildrenAlign()){case $[74]:vLocSumX+=Math.round((vWidget.getColumnInnerWidth(vChild._col,vChild._row)-vChild.getBoxWidth())/2);
break;
case $[10]:vLocSumX+=vWidget.getColumnInnerWidth(vChild._col,vChild._row)-vChild.getBoxWidth();
break;
}vChild._applyRuntimeLeft(vLocSumX);
};
qx.Proto.layoutChild_locationY=function(vChild,vJobs){var vWidget=this.getWidget();
var vSpacingY=vWidget.getVerticalSpacing();
var vLocSumY=vWidget.getPaddingTop()+vWidget.getComputedCellPaddingTop(vChild._col,vChild._row);
for(var i=0;i<vChild._row;i++){vLocSumY+=vWidget.getRowBoxHeight(i)+vSpacingY;
}
switch(vChild.getVerticalAlign()||vWidget.getRowVerticalAlignment(vChild._row)||vWidget.getColumnVerticalAlignment(vChild._col)||vWidget.getVerticalChildrenAlign()){case $[34]:vLocSumY+=Math.round((vWidget.getRowInnerHeight(vChild._col,vChild._row)-vChild.getBoxHeight())/2);
break;
case $[16]:vLocSumY+=vWidget.getRowInnerHeight(vChild._col,vChild._row)-vChild.getBoxHeight();
break;
}vChild._applyRuntimeTop(vLocSumY);
};




/* ID: qx.ui.treevirtual.SimpleTreeDataCellRenderer */
qx.OO.defineClass($[2016],qx.ui.table.AbstractDataCellRenderer,function(){qx.ui.table.AbstractDataCellRenderer.call(this);
var Am=qx.manager.object.AliasManager;
this.WIDGET_TREE_URI=Am.getInstance().resolvePath("widget/tree/");
this.STATIC_IMAGE_URI=Am.getInstance().resolvePath("static/image/");
});
qx.OO.addProperty({name:$[176],type:$[3],defaultValue:true,getAlias:$[176]});
qx.OO.addProperty({name:$[2163],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1365],type:$[3],defaultValue:false});
qx.Proto._getCellStyle=function(cellInfo){var node=cellInfo.value;
var html=cellInfo.style+qx.ui.treevirtual.SimpleTreeDataCellRenderer.MAIN_DIV_STYLE+(node.cellStyle?node.cellStyle+$[67]:$[1]);
return html;
};
qx.Proto._getContentHtml=function(cellInfo){var html=$[1];
var node=cellInfo.value;
var imageUrl;
var _this=this;
var Stdcr=qx.ui.treevirtual.SimpleTreeDataCellRenderer;
function addImage(urlAndToolTip){var html=Stdcr.IMG_START;
var Am=qx.manager.object.AliasManager;
if(qx.core.Client.getInstance().isMshtml()&&/\.png$/i.test(urlAndToolTip.url)){html+=this.STATIC_IMAGE_URI+$[328]+$[735]+$[1216]+$[1762]+Am.getInstance().resolvePath(urlAndToolTip.url)+$[169];
}else{var imageUrl=Am.getInstance().resolvePath(urlAndToolTip.url);
html+=imageUrl+$[593];
}
if(urlAndToolTip.imageWidth&&urlAndToolTip.imageHeight){html+=$[346]+urlAndToolTip.imageWidth+$[203]+$[541]+urlAndToolTip.imageHeight+$[203];
}var tooltip=urlAndToolTip.tooltip;
if(tooltip!=null){html+=Stdcr.IMG_TITLE_START+tooltip;
}html+=Stdcr.IMG_END;
return html;
}var bUseTreeLines=this.getUseTreeLines();
var bExcludeFirstLevelTreeLines=this.getExcludeFirstLevelTreeLines();
var bAlwaysShowOpenCloseSymbol=this.getAlwaysShowOpenCloseSymbol();
for(var i=0;i<node.level;i++){imageUrl=this._getIndentSymbol(i,node,bUseTreeLines,bAlwaysShowOpenCloseSymbol,bExcludeFirstLevelTreeLines);
html+=addImage({url:imageUrl,imageWidth:19,imageHeight:16});
}imageUrl=(node.bSelected?node.iconSelected:node.icon);
if(!imageUrl){if(node.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.LEAF){imageUrl=(node.bSelected?$[1804]:$[430]);
}else{imageUrl=(node.bSelected?$[400]:$[349]);
}}html+=addImage({url:imageUrl,imageWidth:16,imageHeight:16});
html+=$[1141]+$[1215]+((node.level*19)+16+2+2)+$[1936]+$[2311]+(node.labelStyle?$[67]+node.labelStyle:$[1])+$[1720]+node.label+$[524];
return html;
};
qx.Proto._getIndentSymbol=function(column,node,bUseTreeLines,bAlwaysShowOpenCloseSymbol,bExcludeFirstLevelTreeLines){if(column==0&&bExcludeFirstLevelTreeLines){bUseTreeLines=false;
}if(column<node.level-1){return (bUseTreeLines&&!node.lastChild[column]?this.WIDGET_TREE_URI+$[1074]:this.STATIC_IMAGE_URI+$[328]);
}var bLastChild=node.lastChild[node.lastChild.length-1];
if(node.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.BRANCH&&!node.bHideOpenClose){var child=null;
for(child in node.children){break;
}if(child!==null||bAlwaysShowOpenCloseSymbol){if(!bUseTreeLines){return (node.bOpened?this.WIDGET_TREE_URI+$[2168]:this.WIDGET_TREE_URI+$[1145]);
}if(column==0&&node.bFirstChild){if(bLastChild){return (node.bOpened?this.WIDGET_TREE_URI+$[1227]:this.WIDGET_TREE_URI+$[1057]);
}else{return (node.bOpened?this.WIDGET_TREE_URI+$[2315]:this.WIDGET_TREE_URI+$[1550]);
}}if(bLastChild){return (node.bOpened?this.WIDGET_TREE_URI+$[1551]:this.WIDGET_TREE_URI+$[1192]);
}return (node.bOpened?this.WIDGET_TREE_URI+$[1306]:this.WIDGET_TREE_URI+$[2411]);
}}if(bUseTreeLines){return (bLastChild?this.WIDGET_TREE_URI+$[2151]:this.WIDGET_TREE_URI+$[1993]);
}return this.STATIC_IMAGE_URI+$[328];
};
qx.Clazz.MAIN_DIV_STYLE=';overflow:hidden;white-space:nowrap;border-right:1px solid #eeeeee;'+'padding-left:2px;padding-right:2px;cursor:default'+(qx.core.Client.getInstance().isMshtml()?'':';-moz-user-select:none;');
qx.Clazz.IMG_START='<img src="';
qx.Clazz.IMG_END='"/>';
qx.Clazz.IMG_TITLE_START='" title="';




/* ID: qx.ui.treevirtual.SimpleTreeDataModel */
qx.OO.defineClass($[2340],qx.ui.table.AbstractTableModel,function(){qx.ui.table.AbstractTableModel.call(this);
this._rowArr=[];
this._nodeArr=[];
this._nodeRowMap=[];
this._treeColumn=0;
this._selections={};
this._nodeArr.push({label:$[996],bOpened:true,children:[]});
});
qx.Proto.setEditable=function(editable){throw new Error("Tree columns can not be made editable");
};
qx.Proto.setColumnEditable=function(columnIndex,editable){throw new Error("Tree columns can not be made editable");
};
qx.Proto.isColumnEditable=function(columnIndex){return false;
};
qx.Proto.isColumnSortable=function(columnIndex){return false;
};
qx.Proto.sortByColumn=function(columnIndex,ascending){throw new Error("Trees can not be sorted by column");
};
qx.Proto.getSortColumnIndex=function(){return -1;
};
qx.Proto.setTreeColumn=function(columnIndex){this._treeColumn=columnIndex;
};
qx.Proto.getTreeColumn=function(){return this._treeColumn;
};
qx.Proto.getRowCount=function(){return this._rowArr.length;
};
qx.Proto.getRowData=function(rowIndex){return this._rowArr[rowIndex];
};
qx.Proto.getValue=function(columnIndex,rowIndex){if(rowIndex<0||rowIndex>=this._rowArr.length){throw new Error("this._rowArr row "+"("+rowIndex+") out of bounds: "+this._rowArr+" (0.."+(this._rowArr.length-1)+")");
b;
}
if(columnIndex<0||columnIndex>=this._rowArr[rowIndex].length){throw new Error("this._rowArr column "+"("+columnIndex+") out of bounds: "+this._rowArr[rowIndex]+" (0.."+(this._rowArr[rowIndex].length-1)+")");
}return this._rowArr[rowIndex][columnIndex];
};
qx.Proto._addNode=function(parentNodeId,label,bOpened,bHideOpenCloseButton,type,icon,iconSelected){var parentNode;
if(parentNodeId){parentNode=this._nodeArr[parentNodeId];
if(!parentNode){throw new Error("Request to add a child to a non-existent parent");
}if(parentNode.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.LEAF){throw new Error("Sorry, a LEAF may not have children.");
}}else{parentNode=this._nodeArr[0];
parentNodeId=0;
}if(type==qx.ui.treevirtual.SimpleTreeDataModel.Type.LEAF){bOpened=false;
bHideOpenClose=false;
}var nodeId=this._nodeArr.length;
var node={type:type,parentNodeId:parentNodeId,label:label,bSelected:false,bOpened:bOpened,bHideOpenClose:bHideOpenCloseButton,icon:icon,iconSelected:iconSelected,children:[],columnData:[]};
this._nodeArr.push(node);
parentNode.children.push(nodeId);
return nodeId;
};
qx.Proto.addBranch=function(parentNodeId,label,bOpened,bHideOpenCloseButton,icon,iconSelected){return this._addNode(parentNodeId,label,bOpened,bHideOpenCloseButton,qx.ui.treevirtual.SimpleTreeDataModel.Type.BRANCH,icon,iconSelected);
};
qx.Proto.addLeaf=function(parentNodeId,label,icon,iconSelected){return this._addNode(parentNodeId,label,false,false,qx.ui.treevirtual.SimpleTreeDataModel.Type.LEAF,icon,iconSelected);
};
qx.Proto.prune=function(nodeId,bSelfAlso){for(var i=this._nodeArr[nodeId].children.length-1;i>=0;i--){this.prune(this._nodeArr[nodeId].children[i],true);
}
if(bSelfAlso){var node=this._nodeArr[nodeId];
qx.lang.Array.remove(this._nodeArr[node.parentNodeId].children,nodeId);
if(this._selections[nodeId]){delete this._selections[nodeId];
}this._nodeArr[nodeId]=null;
}};
qx.Proto.setData=function(nodeArr){var _this=this;
function render(){var inorder=function(nodeId,level){var child=null;
var childNodeId;
var numChildren=_this._nodeArr[nodeId].children.length;
for(var i=0;i<numChildren;i++){childNodeId=_this._nodeArr[nodeId].children[i];
child=_this._nodeArr[childNodeId];
if(child==null){continue;
}child.nodeId=childNodeId;
child.level=level;
child.bFirstChild=(i==0);
child.lastChild=[i==numChildren-1];
var parent=_this._nodeArr[child.parentNodeId];
while(parent.nodeId){var bLast=parent.lastChild[parent.lastChild.length-1];
child.lastChild.unshift(bLast);
parent=_this._nodeArr[parent.parentNodeId];
}if(!child.columnData){child.columnData=[];
}
if(child.columnData.length<_this.getColumnCount()){child.columnData[_this.getColumnCount()-1]=null;
}var rowData=[];
if(child.columnData){for(var j=0;j<child.columnData.length;j++){if(j==_this._treeColumn){rowData.push(child);
}else{rowData.push(child.columnData[j]);
}}}else{rowData.push(child);
}if(child.bSelected){rowData.selected=true;
}_this._nodeRowMap[child.nodeId]=_this._rowArr.length;
_this._rowArr.push(rowData);
if(child.bOpened){inorder(childNodeId,level+1);
}}};
_this._rowArr=[];
_this._nodeRowMap=[];
inorder(0,1);
if(_this.hasEventListeners(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED)){var data={firstRow:0,lastRow:_this._rowArr.length-1,firstColumn:0,lastColumn:_this.getColumnCount()-1};
_this.dispatchEvent(new qx.event.type.DataEvent(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,data),true);
}}
if(nodeArr instanceof Array){for(i=0;i<nodeArr.length;i++){if(nodeArr[i].selected){this._selections[i]=true;
}}this._nodeArr=nodeArr;
}else if(nodeArr!==null&&nodeArr!==undefined){throw new Error("Expected array of node objects or null/undefined; got "+typeof (nodeArr));
}render();
};
qx.Proto.getData=function(){return this._nodeArr;
};
qx.Proto.setColumnData=function(nodeId,columnIndex,data){this._nodeArr[nodeId].columnData[columnIndex]=data;
};
qx.Proto.getColumnData=function(nodeId,columnIndex,data){return this._nodeArr[nodeId].columnData[columnIndex];
};
qx.Proto.setState=function(nodeId,attributes){for(var attribute in attributes){if(attribute==$[2358]){if(attributes[attribute]){this._selections[nodeId]=true;
}else{delete this._selections[nodeId];
}}this._nodeArr[nodeId][attribute]=attributes[attribute];
}};
qx.Proto.getNodeRowMap=function(){return this._nodeRowMap;
};
qx.Proto._clearSelections=function(){for(var selection in this._selections){this._nodeArr[selection].bSelected=false;
}this._selections={};
};
qx.Proto.getSelectedNodes=function(){var nodes=[];
for(var nodeId in this._selections){nodes.push(this._nodeArr[nodeId]);
}return nodes;
};
qx.Clazz.Type={};
qx.Clazz.Type.LEAF=1;
qx.Clazz.Type.BRANCH=2;




/* ID: qx.io.local.CookieApi */
qx.OO.defineClass($[1235],{STR_EXPIRES:"expires",STR_PATH:"path",STR_DOMAIN:"domain",STR_SECURE:"secure",STR_DELDATA:"Thu, 01-Jan-1970 00:00:01 GMT"});
qx.Clazz.get=function(vName){var start=document.cookie.indexOf(vName+$[15]);
var len=start+vName.length+1;
if((!start)&&(vName!=document.cookie.substring(0,vName.length))){return null;
}
if(start==-1){return null;
}var end=document.cookie.indexOf($[67],len);
if(end==-1){end=document.cookie.length;
}return unescape(document.cookie.substring(len,end));
};
qx.Clazz.set=function(vName,vValue,vExpires,vPath,vDomain,vSecure){var today=new Date();
today.setTime(today.getTime());
var vCookie=[vName,$[15],escape(vValue)];
if(vExpires){vCookie.push($[67]);
vCookie.push(qx.io.local.CookieApi.STR_EXPIRES);
vCookie.push($[15]);
vCookie.push(new Date(today.getTime()+(vExpires*1000*60*60*24)).toGMTString());
}
if(vPath){vCookie.push($[67]);
vCookie.push(qx.io.local.CookieApi.STR_PATH);
vCookie.push($[15]);
vCookie.push(vPath);
}
if(vDomain){vCookie.push($[67]);
vCookie.push(qx.io.local.CookieApi.STR_DOMAIN);
vCookie.push($[15]);
vCookie.push(vDomain);
}
if(vSecure){vCookie.push($[67]);
vCookie.push(qx.io.local.CookieApi.STR_SECURE);
}document.cookie=vCookie.join($[1]);
};
qx.Clazz.del=function(vName,vPath,vDomain){if(!qx.io.local.CookieApi.get(vName)){return;
}var vCookie=[vName,$[15]];
if(vPath){vCookie.push($[67]);
vCookie.push(qx.io.local.CookieApi.STR_PATH);
vCookie.push($[15]);
vCookie.push(vPath);
}
if(vDomain){vCookie.push($[67]);
vCookie.push(qx.io.local.CookieApi.STR_DOMAIN);
vCookie.push($[15]);
vCookie.push(vDomain);
}vCookie.push($[67]);
vCookie.push(qx.io.local.CookieApi.STR_EXPIRES);
vCookie.push($[15]);
vCookie.push(qx.io.local.CookieApi.STR_DELDATA);
document.cookie=vCookie.join($[1]);
};




/* ID: qx.ui.pageview.AbstractPage */
qx.OO.defineClass($[1752],qx.ui.layout.CanvasLayout,function(vButton){qx.ui.layout.CanvasLayout.call(this);
if(vButton!=null){this.setButton(vButton);
}});
qx.OO.addProperty({name:$[118],type:$[4]});
qx.OO.changeProperty({name:$[113],type:$[3],defaultValue:false});
qx.Proto._modifyButton=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.setPage(null);
}
if(propValue){propValue.setPage(this);
}return true;
};




/* ID: qx.ui.pageview.buttonview.Page */
qx.OO.defineClass($[2144],qx.ui.pageview.AbstractPage,function(vButton){qx.ui.pageview.AbstractPage.call(this,vButton);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[2051]});




/* ID: qx.util.StringBuilder */
qx.OO.defineClass($[1918],qx.core.Object,function(){qx.core.Object.call(this);
this.init();
this.add.apply(this,arguments);
});
qx.Proto.clear=function(){};
qx.Proto.get=function(){};
qx.Proto.add=function(varargs){};
qx.Proto.init=function(){};
qx.Proto.dispose=function(){};
qx.Proto.toString=function(){};
if(qx.core.Client.getInstance().isMshtml()){qx.Proto.clear=function(){this._array=[];
};
qx.Proto.get=function(){return this._array.join($[1]);
};
qx.Proto.add=function(){this._array.push.apply(this._array,arguments);
};
qx.Proto.init=function(){this._array=[];
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._array=null;
qx.core.Object.prototype.dispose.call(this);
};
}else{qx.Proto.clear=function(){this._string=$[1];
};
qx.Proto.get=function(){return this._string;
};
qx.Proto.add=function(){this._string+=Array.prototype.join.call(arguments,$[1]);
};
qx.Proto.init=function(){this._string=$[1];
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._string=null;
qx.core.Object.prototype.dispose.call(this);
};
}qx.Proto.toString=qx.Proto.get;




/* ID: qx.ui.resizer.Resizer */
qx.OO.defineClass($[2447],qx.ui.layout.CanvasLayout,function(child){qx.ui.layout.CanvasLayout.call(this);
this._frame=new qx.ui.basic.Terminator;
this._frame.setAppearance($[1842]);
this._registerResizeEvents();
this.setAppearance($[1907]);
this.setResizeableWest(false);
this.setResizeableNorth(false);
this.setMinWidth($[5]);
this.setMinHeight($[5]);
this.auto();
if(child){child.setBorder(new qx.renderer.border.Border(0));
this.add(this._child=child);
}});
qx.OO.addProperty({name:$[1444],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1982],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1500],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1991],type:$[3],defaultValue:true});
qx.OO.addPropertyGroup({name:$[465],members:[$[834],$[960],$[2420],$[1375]],mode:$[231]});
qx.OO.addProperty({name:$[434],type:$[0],defaultValue:$[63],possibleValues:[$[142],$[219],$[63],$[98]]});
qx.OO.addProperty({name:$[434],type:$[0],defaultValue:$[63],possibleValues:[$[142],$[219],$[63],$[98]]});
qx.Proto.isResizeable=qx.Proto.getResizeable=function(){return this.getResizeableWest()||this.getResizeableEast()||this.getResizeableNorth()||this.getResizeableSouth();
};
qx.Proto._registerResizeEvents=function(){this.addEventListener($[6],this._onmousedown);
this.addEventListener($[7],this._onmouseup);
this.addEventListener($[18],this._onmousemove);
};
qx.Proto._onmousedown=function(e){if(this._resizeNorth||this._resizeSouth||this._resizeWest||this._resizeEast){this.setCapture(true);
this.getTopLevelWidget().setGlobalCursor(this.getCursor());
var el=this.getElement();
var pa=this.getTopLevelWidget();
var pl=pa.getElement();
var l=qx.html.Location.getPageAreaLeft(pl);
var t=qx.html.Location.getPageAreaTop(pl);
var r=qx.html.Location.getPageAreaRight(pl);
var b=qx.html.Location.getPageAreaBottom(pl);
switch(this.getResizeMethod()){case $[98]:this.setOpacity(0.5);
break;
case $[63]:var f=this._frame;
if(f.getParent()!=pa){f.setParent(pa);
qx.ui.core.Widget.flushGlobalQueues();
}f._applyRuntimeLeft(qx.html.Location.getPageBoxLeft(el)-l);
f._applyRuntimeTop(qx.html.Location.getPageBoxTop(el)-t);
f._applyRuntimeWidth(qx.html.Dimension.getBoxWidth(el));
f._applyRuntimeHeight(qx.html.Dimension.getBoxHeight(el));
f.setZIndex(this.getZIndex()+1);
break;
}var s=this._resizeSession={};
var minRef=this._child;
if(this._resizeWest){s.boxWidth=qx.html.Dimension.getBoxWidth(el);
s.boxRight=qx.html.Location.getPageBoxRight(el);
}
if(this._resizeWest||this._resizeEast){s.boxLeft=qx.html.Location.getPageBoxLeft(el);
s.parentAreaOffsetLeft=l;
s.parentAreaOffsetRight=r;
s.minWidth=minRef.getMinWidthValue();
s.maxWidth=minRef.getMaxWidthValue();
}
if(this._resizeNorth){s.boxHeight=qx.html.Dimension.getBoxHeight(el);
s.boxBottom=qx.html.Location.getPageBoxBottom(el);
}
if(this._resizeNorth||this._resizeSouth){s.boxTop=qx.html.Location.getPageBoxTop(el);
s.parentAreaOffsetTop=t;
s.parentAreaOffsetBottom=b;
s.minHeight=minRef.getMinHeightValue();
s.maxHeight=minRef.getMaxHeightValue();
}}else{delete this._resizeSession;
}e.stopPropagation();
};
qx.Proto._onmouseup=function(e){var s=this._resizeSession;
if(s){this.setCapture(false);
this.getTopLevelWidget().setGlobalCursor(null);
switch(this.getResizeMethod()){case $[63]:var o=this._frame;
if(!(o&&o.getParent())){break;
}case $[219]:if(s.lastLeft!=null){this.setLeft(s.lastLeft);
}
if(s.lastTop!=null){this.setTop(s.lastTop);
}
if(s.lastWidth!=null){var child=this.getChildren()[0];
if(child){child.setWidth(s.lastWidth);
}}
if(s.lastHeight!=null){var child=this.getChildren()[0];
if(child){child.setHeight(s.lastHeight);
}}
if(this.getResizeMethod()==$[63]){this._frame.setParent(null);
}break;
case $[98]:this.setOpacity(null);
break;
}delete this._resizeNorth;
delete this._resizeEast;
delete this._resizeSouth;
delete this._resizeWest;
delete this._resizeSession;
}e.stopPropagation();
};
qx.Proto._near=function(p,e){return e>(p-5)&&e<(p+5);
};
qx.Proto._onmousemove=function(e){var s=this._resizeSession;
if(s){if(this._resizeWest){s.lastWidth=qx.lang.Number.limit(s.boxWidth+s.boxLeft-Math.max(e.getPageX(),s.parentAreaOffsetLeft),s.minWidth,s.maxWidth);
s.lastLeft=s.boxRight-s.lastWidth-s.parentAreaOffsetLeft;
}else if(this._resizeEast){s.lastWidth=qx.lang.Number.limit(Math.min(e.getPageX(),s.parentAreaOffsetRight)-s.boxLeft,s.minWidth,s.maxWidth);
}
if(this._resizeNorth){s.lastHeight=qx.lang.Number.limit(s.boxHeight+s.boxTop-Math.max(e.getPageY(),s.parentAreaOffsetTop),s.minHeight,s.maxHeight);
s.lastTop=s.boxBottom-s.lastHeight-s.parentAreaOffsetTop;
}else if(this._resizeSouth){s.lastHeight=qx.lang.Number.limit(Math.min(e.getPageY(),s.parentAreaOffsetBottom)-s.boxTop,s.minHeight,s.maxHeight);
}
switch(this.getResizeMethod()){case $[142]:case $[98]:if(this._resizeWest||this._resizeEast){this.setWidth(s.lastWidth);
if(this._resizeWest){this.setLeft(s.lastLeft);
}}
if(this._resizeNorth||this._resizeSouth){this.setHeight(s.lastHeight);
if(this._resizeNorth){this.setTop(s.lastTop);
}}break;
default:var o=this.getResizeMethod()==$[63]?this._frame:this;
if(this._resizeWest||this._resizeEast){o._applyRuntimeWidth(s.lastWidth);
if(this._resizeWest){o._applyRuntimeLeft(s.lastLeft);
}}
if(this._resizeNorth||this._resizeSouth){o._applyRuntimeHeight(s.lastHeight);
if(this._resizeNorth){o._applyRuntimeTop(s.lastTop);
}}}}else{var resizeMode=$[1];
var el=this.getElement();
this._resizeNorth=this._resizeSouth=this._resizeWest=this._resizeEast=false;
if(this._near(qx.html.Location.getPageBoxTop(el),e.getPageY())){if(this.getResizeableNorth()){resizeMode=$[510];
this._resizeNorth=true;
}}else if(this._near(qx.html.Location.getPageBoxBottom(el),e.getPageY())){if(this.getResizeableSouth()){resizeMode=$[327];
this._resizeSouth=true;
}}
if(this._near(qx.html.Location.getPageBoxLeft(el),e.getPageX())){if(this.getResizeableWest()){resizeMode+=$[715];
this._resizeWest=true;
}}else if(this._near(qx.html.Location.getPageBoxRight(el),e.getPageX())){if(this.getResizeableEast()){resizeMode+=$[448];
this._resizeEast=true;
}}
if(this._resizeNorth||this._resizeSouth||this._resizeWest||this._resizeEast){this.setCursor(resizeMode+$[729]);
}else{this.setCursor(null);
}}e.stopPropagation();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._frame){this._frame.dispose();
this._frame=null;
}return qx.ui.layout.CanvasLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.basic.Inline */
qx.OO.defineClass($[520],qx.ui.layout.CanvasLayout,function(vId){qx.ui.layout.CanvasLayout.call(this);
this.setStyleProperty($[93],$[1184]);
if(vId!=null){this.setInlineNodeId(vId);
}});
qx.OO.addProperty({name:$[2324],type:$[0]});




/* ID: qx.ui.treefullcontrol.AbstractTreeElement */
qx.OO.defineClass($[1137],qx.ui.layout.BoxLayout,function(treeRowStructure){if(this.classname==qx.ui.treefullcontrol.AbstractTreeElement.ABSTRACT_CLASS){throw new Error("Please omit the usage of qx.ui.treefullcontrol.AbstractTreeElement directly. Choose between qx.ui.treefullcontrol.TreeFolder, qx.ui.treefullcontrol.TreeFolderSimple, qx.ui.treefullcontrol.TreeFile and qx.ui.treefullcontrol.TreeFileSimple instead!");
}
if(treeRowStructure!==qx.ui.treefullcontrol.TreeRowStructure.getInstance()){throw new Error("A qx.ui.treefullcontrol.TreeRowStructure parameter is required.");
}this._indentObject=treeRowStructure._indentObject;
this._iconObject=treeRowStructure._iconObject;
this._labelObject=treeRowStructure._labelObject;
this._indentObject.setAnonymous(true);
this._iconObject.setAnonymous(true);
this._labelObject.setAnonymous(true);
this._labelObject.setSelectable(false);
this._labelObject.setStyleProperty($[128],$[39]);
qx.ui.layout.BoxLayout.call(this,$[29]);
if(qx.util.Validation.isValid(treeRowStructure._label)){this.setLabel(treeRowStructure._label);
}this.setSelectable(false);
this.BASE_URI=qx.manager.object.AliasManager.getInstance().resolvePath("widget/tree/");
for(var i=0;i<treeRowStructure._fields.length;i++){this.add(treeRowStructure._fields[i]);
}if((treeRowStructure._icons.unselected!=null)&&(qx.util.Validation.isValidString(treeRowStructure._icons.unselected))){this.setIcon(treeRowStructure._icons.unselected);
this.setIconSelected(treeRowStructure._icons.unselected);
}
if((treeRowStructure._icons.selected!=null)&&(qx.util.Validation.isValidString(treeRowStructure._icons.selected))){this.setIconSelected(treeRowStructure._icons.selected);
}this._iconObject.setSource(this._evalCurrentIcon());
this._iconObject.setAppearance($[742]);
this._labelObject.setAppearance($[270]);
this.addEventListener($[6],this._onmousedown);
this.addEventListener($[7],this._onmouseup);
});
qx.ui.treefullcontrol.AbstractTreeElement.ABSTRACT_CLASS="qx.ui.treefullcontrol.AbstractTreeElement";
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[326]});
qx.OO.addProperty({name:$[94],type:$[0]});
qx.OO.addProperty({name:$[302],type:$[0]});
qx.OO.addProperty({name:$[109]});
qx.OO.addProperty({name:$[24],type:$[3],defaultValue:false});
qx.Proto._modifyLabel=function(propValue,propOldValue,propData){if(this._labelObject){this._labelObject.setHtml(propValue);
}return true;
};
qx.Proto._modifySelected=function(propValue,propOldValue,propData){if(propValue){this.addState($[24]);
this._labelObject.addState($[24]);
}else{this.removeState($[24]);
this._labelObject.removeState($[24]);
}var vTree=this.getTree();
if(!vTree._fastUpdate||(propOldValue&&vTree._oldItem==this)){this._iconObject.setSource(this._evalCurrentIcon());
if(propValue){this._iconObject.addState($[24]);
}else{this._iconObject.removeState($[24]);
}}var vManager=this.getTree().getManager();
if(propOldValue&&vManager.getSelectedItem()==this){vManager.deselectAll();
}else if(propValue&&vManager.getSelectedItem()!=this){vManager.setSelectedItem(this);
}return true;
};
qx.Proto._evalCurrentIcon=function(){if(this.getSelected()&&this.getIconSelected()){return this.getIconSelected();
}else{return this.getIcon()||$[430];
}};
qx.Proto.getParentFolder=function(){try{return this.getParent().getParent();
}catch(ex){}return null;
};
qx.Proto.getLevel=function(){var vParentFolder=this.getParentFolder();
return vParentFolder?vParentFolder.getLevel()+1:null;
};
qx.Proto.getTree=function(){var vParentFolder=this.getParentFolder();
return vParentFolder?vParentFolder.getTree():null;
};
qx.Proto.getIndentObject=function(){return this._indentObject;
};
qx.Proto.getIconObject=function(){return this._iconObject;
};
qx.Proto.getLabelObject=function(){return this._labelObject;
};
qx.Proto.getHierarchy=function(vArr){if(this._labelObject){vArr.unshift(this._labelObject.getHtml());
}var parent=this.getParentFolder();
if(parent){parent.getHierarchy(vArr);
}return vArr;
};
qx.Proto.addToTreeQueue=function(){var vTree=this.getTree();
if(vTree){vTree.addChildToTreeQueue(this);
}};
qx.Proto.removeFromTreeQueue=function(){var vTree=this.getTree();
if(vTree){vTree.removeChildFromTreeQueue(this);
}};
qx.Proto.addToCustomQueues=function(vHint){this.addToTreeQueue();
qx.ui.layout.BoxLayout.prototype.addToCustomQueues.call(this,vHint);
};
qx.Proto.removeFromCustomQueues=function(vHint){this.removeFromTreeQueue();
qx.ui.layout.BoxLayout.prototype.removeFromCustomQueues.call(this,vHint);
};
qx.Proto._modifyParent=function(propValue,propOldValue,propData){qx.ui.layout.BoxLayout.prototype._modifyParent.call(this,propValue,propOldValue,propData);
if(propOldValue&&!propOldValue.isDisplayable()&&propOldValue.getParent()&&propOldValue.getParent().isDisplayable()){propOldValue.getParent().addToTreeQueue();
}if(propValue&&!propValue.isDisplayable()&&propValue.getParent()&&propValue.getParent().isDisplayable()){propValue.getParent().addToTreeQueue();
}return true;
};
qx.Proto._handleDisplayableCustom=function(vDisplayable,vParent,vHint){qx.ui.layout.BoxLayout.prototype._handleDisplayableCustom.call(this,vDisplayable,vParent,vHint);
if(vHint){var vParentFolder=this.getParentFolder();
var vPreviousParentFolder=this._previousParentFolder;
if(vPreviousParentFolder){if(this._wasLastVisibleChild){vPreviousParentFolder._updateIndent();
}else if(!vPreviousParentFolder.hasContent()){vPreviousParentFolder.addToTreeQueue();
}}
if(vParentFolder&&vParentFolder.isDisplayable()&&vParentFolder._initialLayoutDone){vParentFolder.addToTreeQueue();
}
if(this.isLastVisibleChild()){var vPrev=this.getPreviousVisibleSibling();
if(vPrev&&vPrev instanceof qx.ui.treefullcontrol.AbstractTreeElement){vPrev._updateIndent();
}}
if(vDisplayable){this._updateIndent();
}}};
qx.Proto._onmousedown=function(e){this.getTree().getManager().handleMouseDown(this,e);
e.stopPropagation();
};
qx.Proto._onmouseup=qx.lang.Function.returnTrue;
qx.Proto.flushTree=function(){this._previousParentFolder=this.getParentFolder();
this._wasLastVisibleChild=this.isLastVisibleChild();
var vLevel=this.getLevel();
var vTree=this.getTree();
var vImage;
var vHtml=[];
var vCurrentObject=this;
var vMinLevel=0;
var vMaxLevel=vLevel;
if(vTree.getRootOpenClose()){vMaxLevel=vLevel+1;
}if(vTree.hideNode()){vMinLevel=1;
}
for(var i=vMinLevel;i<vMaxLevel;i++){vImage=vCurrentObject.getIndentSymbol(vTree.getUseTreeLines(),i,vMinLevel,vMaxLevel);
if(vImage){vHtml.push($[544]);
vHtml.push((vMaxLevel-i-1)*19);
vHtml.push($[727]);
vHtml.push(this.BASE_URI);
vHtml.push(vImage);
vHtml.push($[53]);
vHtml.push($[454]);
vHtml.push($[711]);
}vCurrentObject=vCurrentObject.getParentFolder();
}this._indentObject.setHtml(vHtml.join($[1]));
this._indentObject.setWidth((vMaxLevel-vMinLevel)*19);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._indentObject){this._indentObject.dispose();
this._indentObject=null;
}
if(this._iconObject){this._iconObject.dispose();
this._iconObject=null;
}
if(this._labelObject){this._labelObject.dispose();
this._labelObject=null;
}this._previousParentFolder=null;
this.removeEventListener($[6],this._onmousedown);
this.removeEventListener($[7],this._onmouseup);
return qx.ui.layout.BoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.treefullcontrol.TreeRowStructure */
qx.OO.defineClass($[1222],qx.core.Object,function(){qx.core.Object.call(this);
});
qx.Proto.newRow=function(){this._indentObject=new qx.ui.embed.HtmlEmbed;
this._iconObject=new qx.ui.basic.Image;
this._labelObject=new qx.ui.basic.Label;
this._fields=new Array;
this._icons=new Object;
this._fields.push(this._indentObject);
this._indentAdded=false;
this._iconAdded=false;
this._labelAdded=false;
return this;
};
qx.Proto.standard=function(vLabel,vIcon,vIconSelected){this.newRow();
this.addIcon(vIcon,vIconSelected);
this.addLabel(vLabel);
return this;
};
qx.Proto.addIndent=function(){if(!this._indentAdded){this._fields.shift();
this._indentAdded=true;
}else{throw new Error("Indent object added more than once.");
}this._fields.push(this._indentObject);
};
qx.Proto.addIcon=function(vIcon,vIconSelected){if(!this._iconAdded){this._iconAdded=true;
}else{throw new Error("Icon object added more than once.");
}this._icons.unselected=vIcon;
this._icons.selected=vIconSelected;
this._fields.push(this._iconObject);
};
qx.Proto.addLabel=function(vLabel){if(!this._labelAdded){this._labelAdded=true;
}else{throw new Error("Label added more than once.");
}this._label=vLabel;
this._fields.push(this._labelObject);
};
qx.Proto.addObject=function(vObj,vAnonymous){if(typeof vAnonymous==$[3]){vObj.setAnonymous(vAnonymous);
}this._fields.push(vObj);
};
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.ui.treefullcontrol.TreeFolder */
qx.OO.defineClass($[1548],qx.ui.treefullcontrol.AbstractTreeElement,function(treeRowStructure){qx.ui.treefullcontrol.AbstractTreeElement.call(this,treeRowStructure);
this._treeRowStructureFields=treeRowStructure._fields;
this._iconObject.setAppearance($[274]);
this._labelObject.setAppearance($[316]);
this.addEventListener($[46],this._ondblclick);
this.add=this.addToFolder;
this.addBefore=this.addBeforeToFolder;
this.addAfter=this.addAfterToFolder;
this.addAt=this.addAtToFolder;
this.addAtBegin=this.addAtBeginToFolder;
this.addAtEnd=this.addAtEndToFolder;
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[192]});
qx.OO.changeProperty({name:$[94],type:$[0]});
qx.OO.changeProperty({name:$[302],type:$[0]});
qx.OO.addProperty({name:$[464],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[550],type:$[3],defaultValue:false});
qx.Proto.hasContent=function(){return (this._containerObject&&this._containerObject.getChildrenLength()>0);
};
qx.Proto.open=function(){if(this.getOpen()){return;
}
if(this.hasContent()){if(this.getTree().hasEventListeners($[382])){this.getTree().dispatchEvent(new qx.event.type.DataEvent($[382],this),true);
}this.getTopLevelWidget().setGlobalCursor($[501]);
qx.client.Timer.once(this._openCallback,this,0);
}else{if(this.getTree().hasEventListeners($[332])){this.getTree().dispatchEvent(new qx.event.type.DataEvent($[332],this),true);
}this.setOpen(true);
}};
qx.Proto.close=function(){if(this.getTree().hasEventListeners($[331])){this.getTree().dispatchEvent(new qx.event.type.DataEvent($[331],this),true);
}this.setOpen(false);
};
qx.Proto.toggle=function(){this.getOpen()?this.close():this.open();
};
qx.Proto._openCallback=function(){this.setOpen(true);
qx.ui.core.Widget.flushGlobalQueues();
this.getTopLevelWidget().setGlobalCursor(null);
};
qx.Proto._createChildrenStructure=function(){this.setAppearance(this instanceof qx.ui.treefullcontrol.Tree?$[589]:$[755]);
if(!this._horizontalLayout){this.setOrientation($[20]);
this._horizontalLayout=new qx.ui.layout.HorizontalBoxLayout;
this._horizontalLayout.setWidth(null);
this._horizontalLayout.setParent(this);
this._horizontalLayout.setAnonymous(true);
this._horizontalLayout.setAppearance(this instanceof qx.ui.treefullcontrol.Tree?$[668]:$[192]);
for(var i=0;i<this._treeRowStructureFields.length;i++){this._treeRowStructureFields[i].setParent(this._horizontalLayout);
}this._treeRowStructureFields=null;
}
if(!this._containerObject){this._containerObject=new qx.ui.layout.VerticalBoxLayout;
this._containerObject.setWidth(null);
this._containerObject.setAnonymous(true);
this._containerObject.setDisplay(this.getOpen());
this._containerObject.setParent(this);
this.remapChildrenHandlingTo(this._containerObject);
}};
qx.Proto._handleChildMove=function(vChild,vRelationIndex,vRelationChild){if(vChild.isDisplayable()){var vChildren=this._containerObject.getChildren();
var vOldChildIndex=vChildren.indexOf(vChild);
if(vOldChildIndex!=-1){if(vRelationChild){vRelationIndex=vChildren.indexOf(vRelationChild);
}
if(vRelationIndex==vChildren.length-1){vChild._updateIndent();
this._containerObject.getLastVisibleChild()._updateIndent();
}else if(vChild._wasLastVisibleChild){vChild._updateIndent();
var vPreviousSibling=vChild.getPreviousVisibleSibling();
if(vPreviousSibling){vPreviousSibling._updateIndent();
}}}}};
qx.Proto.addToFolder=function(){this._createChildrenStructure();
if(this._containerObject){return this._containerObject.add.apply(this._containerObject,arguments);
}};
qx.Proto.addBeforeToFolder=function(vChild,vBefore){this._createChildrenStructure();
if(this._containerObject){this._handleChildMove(vChild,null,vBefore);
return this._containerObject.addBefore.apply(this._containerObject,arguments);
}};
qx.Proto.addAfterToFolder=function(vChild,vAfter){this._createChildrenStructure();
if(this._containerObject){this._handleChildMove(vChild,null,vAfter);
return this._containerObject.addAfter.apply(this._containerObject,arguments);
}};
qx.Proto.addAtToFolder=function(vChild,vIndex){this._createChildrenStructure();
if(this._containerObject){this._handleChildMove(vChild,vIndex);
return this._containerObject.addAt.apply(this._containerObject,arguments);
}};
qx.Proto.addAtBeginToFolder=function(vChild){return this.addAtToFolder(vChild,0);
};
qx.Proto.addAtEndToFolder=function(vChild){this._createChildrenStructure();
if(this._containerObject){var vLast=this._containerObject.getLastChild();
if(vLast){this._handleChildMove(vChild,null,vLast);
return this._containerObject.addAfter.call(this._containerObject,vChild,vLast);
}else{return this.addAtBeginToFolder(vChild);
}}};
qx.Proto._remappingChildTable=[$[267],$[321],$[244]];
qx.Proto.getContainerObject=function(){return this._containerObject;
};
qx.Proto.getHorizontalLayout=function(){return this._horizontalLayout;
};
qx.Proto.getFirstVisibleChildOfFolder=function(){if(this._containerObject){return this._containerObject.getFirstChild();
}};
qx.Proto.getLastVisibleChildOfFolder=function(){if(this._containerObject){return this._containerObject.getLastChild();
}};
qx.Proto.getItems=function(){var a=[this];
if(this._containerObject){var ch=this._containerObject.getVisibleChildren();
for(var i=0,chl=ch.length;i<chl;i++){a=a.concat(ch[i].getItems());
}}return a;
};
qx.Proto._evalCurrentIcon=function(){if(this.getSelected()){return this.getIconSelected()||$[400];
}else{return this.getIcon()||$[349];
}};
qx.Proto._modifyOpen=function(propValue,propOldValue,propData){if(this.getTree().getExcludeSpecificTreeLines().length>0){this._updateIndent();
}else{this._updateLastColumn();
}
if(this._containerObject){this._containerObject.setDisplay(propValue);
}return true;
};
qx.Proto._modifyAlwaysShowPlusMinusSymbol=function(propValue,propOldValue,propData){var t=this.getTree();
if(t){if(t.getExcludeSpecificTreeLines().length>0){this._updateIndent();
}else{this._updateLastColumn();
}}return true;
};
qx.Proto._updateLastColumn=function(){if(this._indentObject){var vElement=this._indentObject.getElement();
if(vElement&&vElement.firstChild){vElement.firstChild.src=(this.BASE_URI+this.getIndentSymbol(this.getTree().getUseTreeLines(),0,0,0)+$[660]);
}}};
qx.Proto._onmousedown=function(e){var vOriginalTarget=e.getOriginalTarget();
switch(vOriginalTarget){case this._indentObject:if(this._indentObject.getElement().firstChild==e.getDomTarget()){this.getTree().getManager().handleMouseDown(this,e);
this.toggle();
}break;
case this._containerObject:break;
case this:if(this._containerObject){break;
}default:this.getTree().getManager().handleMouseDown(this,e);
}e.stopPropagation();
};
qx.Proto._onmouseup=function(e){var vOriginalTarget=e.getOriginalTarget();
switch(vOriginalTarget){case this._indentObject:case this._containerObject:case this:break;
default:if(!this.getTree().getUseDoubleClick()){this.open();
}}};
qx.Proto._ondblclick=function(e){if(!this.getTree().getUseDoubleClick()){return;
}this.toggle();
e.stopPropagation();
};
qx.Proto.getIndentSymbol=function(vUseTreeLines,vColumn,vFirstColumn,vLastColumn){var vLevel=this.getLevel();
var vExcludeList=this.getTree().getExcludeSpecificTreeLines();
var vExclude=vExcludeList[vLastColumn-vColumn-1];
if(vColumn==vFirstColumn){if(this.hasContent()||this.getAlwaysShowPlusMinusSymbol()){if(!vUseTreeLines){return this.getOpen()?$[350]:$[379];
}if(vLevel==1){var vParentFolder=this.getParentFolder();
if(vParentFolder&&!vParentFolder._horizontalLayout.getVisibility()&&this.isFirstChild()){if(this.isLastChild()||vExclude===true){return this.getOpen()?$[355]:$[333];
}else{return this.getOpen()?$[899]:$[1308];
}}}
if(vExclude===true){return this.getOpen()?$[355]:$[333];
}else if(this.isLastChild()){return this.getOpen()?$[614]:$[665];
}else{return this.getOpen()?$[730]:$[709];
}}else if(vUseTreeLines&&!(vExclude===true)){return this.isLastChild()?$[297]:$[280];
}}else{if(vUseTreeLines&&!this.isLastChild()){if(vExclude===true){return null;
}return $[263];
}return null;
}};
qx.Proto._updateIndent=function(){qx.ui.treefullcontrol.TreeFile.prototype._updateIndent.call(this);
if(!this._containerObject){return;
}var ch=this._containerObject.getVisibleChildren();
for(var i=0,l=ch.length;i<l;i++){ch[i]._updateIndent();
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[46],this._ondblclick);
if(this._horizontalLayout){this._horizontalLayout.dispose();
this._horizontalLayout=null;
}
if(this._containerObject){this._containerObject.dispose();
this._containerObject=null;
}return qx.ui.treefullcontrol.AbstractTreeElement.prototype.dispose.call(this);
};




/* ID: qx.ui.treefullcontrol.Tree */
qx.OO.defineClass($[2133],qx.ui.treefullcontrol.TreeFolder,function(treeRowStructure){qx.ui.treefullcontrol.TreeFolder.call(this,treeRowStructure);
this._manager=new qx.manager.selection.TreeFullControlSelectionManager(this);
this._iconObject.setAppearance($[519]);
this._labelObject.setAppearance($[774]);
this.setOpen(true);
this.addToFolder();
this.addEventListener($[13],this._onkeydown);
this.addEventListener($[14],this._onkeypress);
this.addEventListener($[76],this._onkeyup);
});
qx.OO.addProperty({name:$[294],type:$[3],defaultValue:false,getAlias:$[294]});
qx.OO.addProperty({name:$[176],type:$[3],defaultValue:true,getAlias:$[176]});
qx.OO.addProperty({name:$[775],type:$[4],defaultValue:[]});
qx.OO.addProperty({name:$[766],type:$[3],defaultValue:false,getAlias:$[766]});
qx.OO.addProperty({name:$[1659],type:$[3],defaultValue:true});
qx.Proto.getManager=function(){return this._manager;
};
qx.Proto.getSelectedElement=function(){return this.getManager().getSelectedItems()[0];
};
qx.Proto.addChildToTreeQueue=function(vChild){if(!vChild._isInTreeQueue&&!vChild._isDisplayable){this.debug("Ignoring invisible child: "+vChild);
}
if(!vChild._isInTreeQueue&&vChild._isDisplayable){qx.ui.core.Widget.addToGlobalWidgetQueue(this);
if(!this._treeQueue){this._treeQueue={};
}this._treeQueue[vChild.toHashCode()]=vChild;
vChild._isInTreeQueue=true;
}};
qx.Proto.removeChildFromTreeQueue=function(vChild){if(vChild._isInTreeQueue){if(this._treeQueue){delete this._treeQueue[vChild.toHashCode()];
}delete vChild._isInTreeQueue;
}};
qx.Proto.flushWidgetQueue=function(){this.flushTreeQueue();
};
qx.Proto.flushTreeQueue=function(){if(!qx.lang.Object.isEmpty(this._treeQueue)){for(var vHashCode in this._treeQueue){this._treeQueue[vHashCode].flushTree();
delete this._treeQueue[vHashCode]._isInTreeQueue;
}delete this._treeQueue;
}};
qx.Proto._modifyUseTreeLines=function(propValue,propOldValue,propData){if(this._initialLayoutDone){this._updateIndent();
}return true;
};
qx.Proto._modifyHideNode=function(propValue,propOldValue,propData){if(!propValue){this._horizontalLayout.setHeight(this._horizontalLayout.originalHeight);
this._horizontalLayout.show();
}else{this._horizontalLayout.originalHeight=this._horizontalLayout.getHeight();
this._horizontalLayout.setHeight(0);
this._horizontalLayout.hide();
}
if(this._initialLayoutDone){this._updateIndent();
}return true;
};
qx.Proto._modifyRootOpenClose=function(propValue,propOldValue,propData){if(this._initialLayoutDone){this._updateIndent();
}return true;
};
qx.Proto.getExcludeSpecificTreeLines=function(){var vName=$[775];
var vUpName=qx.lang.String.toFirstUp(vName);
var vStorageField=$[301]+vUpName;
return this[vStorageField].slice(0);
};
qx.Proto._modifyExcludeSpecificTreeLines=function(propValue,propOldValue,propData){if(this._initialLayoutDone){this._updateIndent();
}return true;
};
qx.Proto.getTree=function(){return this;
};
qx.Proto.getParentFolder=function(){return null;
};
qx.Proto.getLevel=function(){return 0;
};
qx.ui.treefullcontrol.Tree.isTreeFolder=function(vObject){return (vObject&&vObject instanceof qx.ui.treefullcontrol.TreeFolder&&!(vObject instanceof qx.ui.treefullcontrol.Tree));
};
qx.ui.treefullcontrol.Tree.isOpenTreeFolder=function(vObject){return (vObject instanceof qx.ui.treefullcontrol.TreeFolder&&vObject.getOpen()&&vObject.hasContent());
};
qx.Proto._onkeydown=function(e){var vManager=this.getManager();
var vSelectedItem=vManager.getSelectedItem();
if(e.getKeyIdentifier()==$[45]){e.preventDefault();
if(qx.ui.treefullcontrol.Tree.isTreeFolder(vSelectedItem)){return vSelectedItem.toggle();
}}};
qx.Proto._onkeypress=function(e){var vManager=this.getManager();
var vSelectedItem=vManager.getSelectedItem();
switch(e.getKeyIdentifier()){case $[55]:e.preventDefault();
if(qx.ui.treefullcontrol.Tree.isTreeFolder(vSelectedItem)){if(!vSelectedItem.getOpen()){var vParent=vSelectedItem.getParentFolder();
if(vParent instanceof qx.ui.treefullcontrol.TreeFolder){if(!(vParent instanceof qx.ui.treefullcontrol.Tree)){vParent.close();
}this.setSelectedElement(vParent);
}}else{return vSelectedItem.close();
}}else if(vSelectedItem instanceof qx.ui.treefullcontrol.TreeFile){var vParent=vSelectedItem.getParentFolder();
if(vParent instanceof qx.ui.treefullcontrol.TreeFolder){if(!(vParent instanceof qx.ui.treefullcontrol.Tree)){vParent.close();
}this.setSelectedElement(vParent);
}}break;
case $[56]:e.preventDefault();
if(qx.ui.treefullcontrol.Tree.isTreeFolder(vSelectedItem)){if(!vSelectedItem.getOpen()){return vSelectedItem.open();
}else if(vSelectedItem.hasContent()){var vFirst=vSelectedItem.getFirstVisibleChildOfFolder();
this.setSelectedElement(vFirst);
if(vFirst instanceof qx.ui.tree.TreeFolder){vFirst.open();
}return;
}}break;
default:if(!this._fastUpdate){this._fastUpdate=true;
this._oldItem=vSelectedItem;
}vManager.handleKeyPress(e);
}};
qx.Proto._onkeyup=function(e){if(this._fastUpdate){var vNewItem=this.getManager().getSelectedItem();
if(!vNewItem){return;
}vNewItem.getIconObject().addState($[24]);
delete this._fastUpdate;
delete this._oldItem;
}};
qx.Proto.getLastTreeChild=function(){var vLast=this;
while(vLast instanceof qx.ui.treefullcontrol.AbstractTreeElement){if(!(vLast instanceof qx.ui.treefullcontrol.TreeFolder)||!vLast.getOpen()){return vLast;
}vLast=vLast.getLastVisibleChildOfFolder();
}return null;
};
qx.Proto.getFirstTreeChild=function(){return this;
};
qx.Proto.setSelectedElement=function(vElement){var vManager=this.getManager();
vManager.setSelectedItem(vElement);
vManager.setLeadItem(vElement);
};
qx.Proto.getHierarchy=function(vArr){if(!this.hideNode()&&this._labelObject){vArr.unshift(this._labelObject.getHtml());
}return vArr;
};
qx.Proto.getIndentSymbol=function(vUseTreeLines,vColumn,vLastColumn){if(vColumn==vLastColumn&&(this.hasContent()||this.getAlwaysShowPlusMinusSymbol())){if(!vUseTreeLines){return this.getOpen()?$[350]:$[379];
}else{return this.getOpen()?$[355]:$[333];
}}else{return null;
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[13],this._onkeydown);
this.removeEventListener($[14],this._onkeypress);
this.removeEventListener($[76],this._onkeyup);
if(this._manager){this._manager.dispose();
this._manager=null;
}delete this._oldItem;
return qx.ui.treefullcontrol.TreeFolder.prototype.dispose.call(this);
};




/* ID: qx.manager.selection.SelectionManager */
qx.OO.defineClass($[1399],qx.core.Target,function(vBoundedWidget){qx.core.Target.call(this);
this._selectedItems=new qx.type.Selection(this);
if(vBoundedWidget!=null){this.setBoundedWidget(vBoundedWidget);
}});
qx.OO.addProperty({name:$[1813],type:$[4]});
qx.OO.addProperty({name:$[335],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[462],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1206],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1053],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1835],type:$[4]});
qx.OO.addProperty({name:$[1125],type:$[4]});
qx.OO.addProperty({name:$[1848],type:$[3],defaultValue:false});
qx.Proto._modifyAnchorItem=function(propValue,propOldValue,propData){if(propOldValue){this.renderItemAnchorState(propOldValue,false);
}
if(propValue){this.renderItemAnchorState(propValue,true);
}return true;
};
qx.Proto._modifyLeadItem=function(propValue,propOldValue,propData){if(propOldValue){this.renderItemLeadState(propOldValue,false);
}
if(propValue){this.renderItemLeadState(propValue,true);
}return true;
};
qx.Proto._getFirst=function(){return this.getBoundedWidget().getFirstVisibleChild();
};
qx.Proto._getLast=function(){return this.getBoundedWidget().getLastVisibleChild();
};
qx.Proto.getFirst=function(){var vItem=this._getFirst();
if(vItem){return vItem.isEnabled()?vItem:this.getNext(vItem);
}};
qx.Proto.getLast=function(){var vItem=this._getLast();
if(vItem){return vItem.isEnabled()?vItem:this.getPrevious(vItem);
}};
qx.Proto.getItems=function(){return this.getBoundedWidget().getChildren();
};
qx.Proto.getNextSibling=function(vItem){return vItem.getNextSibling();
};
qx.Proto.getPreviousSibling=function(vItem){return vItem.getPreviousSibling();
};
qx.Proto.getNext=function(vItem){while(vItem){vItem=this.getNextSibling(vItem);
if(!vItem){break;
}
if(this.getItemEnabled(vItem)){return vItem;
}}return null;
};
qx.Proto.getPrevious=function(vItem){while(vItem){vItem=this.getPreviousSibling(vItem);
if(!vItem){break;
}
if(this.getItemEnabled(vItem)){return vItem;
}}return null;
};
qx.Proto.isBefore=function(vItem1,vItem2){var cs=this.getItems();
return cs.indexOf(vItem1)<cs.indexOf(vItem2);
};
qx.Proto.isEqual=function(vItem1,vItem2){return vItem1==vItem2;
};
qx.Proto.getItemHashCode=function(vItem){return vItem.toHashCode();
};
qx.Proto.scrollItemIntoView=function(vItem,vTopLeft){vItem.scrollIntoView(vTopLeft);
};
qx.Proto.getItemLeft=function(vItem){return vItem.getOffsetLeft();
};
qx.Proto.getItemTop=function(vItem){return vItem.getOffsetTop();
};
qx.Proto.getItemWidth=function(vItem){return vItem.getOffsetWidth();
};
qx.Proto.getItemHeight=function(vItem){return vItem.getOffsetHeight();
};
qx.Proto.getItemEnabled=function(vItem){return vItem.getEnabled();
};
qx.Proto.renderItemSelectionState=function(vItem,vIsSelected){vIsSelected?vItem.addState($[24]):vItem.removeState($[24]);
if(vItem.handleStateChange){vItem.handleStateChange();
}};
qx.Proto.renderItemAnchorState=function(vItem,vIsAnchor){vIsAnchor?vItem.addState($[674]):vItem.removeState($[674]);
if(vItem.handleStateChange!=null){vItem.handleStateChange();
}};
qx.Proto.renderItemLeadState=function(vItem,vIsLead){vIsLead?vItem.addState($[396]):vItem.removeState($[396]);
if(vItem.handleStateChange!=null){vItem.handleStateChange();
}};
qx.Proto.getItemSelected=function(vItem){return this._selectedItems.contains(vItem);
};
qx.Proto.setItemSelected=function(vItem,vSelected){var hc=this.getItemHashCode(vItem);
switch(this.getMultiSelection()){case true:if(!this.getItemEnabled(vItem)){return;
}if(this.getItemSelected(vItem)==vSelected){return;
}this.renderItemSelectionState(vItem,vSelected);
vSelected?this._selectedItems.add(vItem):this._selectedItems.remove(vItem);
this._dispatchChange();
break;
case false:var item0=this.getSelectedItems()[0];
if(vSelected){var old=item0;
if(this.isEqual(vItem,old)){return;
}if(old!=null){this.renderItemSelectionState(old,false);
}this.renderItemSelectionState(vItem,true);
this._selectedItems.removeAll();
this._selectedItems.add(vItem);
this._dispatchChange();
}else{if(!this.isEqual(item0,vItem)){this.renderItemSelectionState(vItem,false);
this._selectedItems.removeAll();
this._dispatchChange();
}}break;
}};
qx.Proto.getSelectedItems=function(){return this._selectedItems.toArray();
};
qx.Proto.getSelectedItem=function(){return this._selectedItems.getFirst();
};
qx.Proto.setSelectedItems=function(vItems){var oldVal=this._getChangeValue();
var oldFireChange=this.getFireChange();
this.setFireChange(false);
this._deselectAll();
var vItem;
var vItemLength=vItems.length;
for(var i=0;i<vItemLength;i++){vItem=vItems[i];
if(!this.getItemEnabled(vItem)){continue;
}this._selectedItems.add(vItem);
this.renderItemSelectionState(vItem,true);
}this.setFireChange(oldFireChange);
if(oldFireChange&&this._hasChanged(oldVal)){this._dispatchChange();
}};
qx.Proto.setSelectedItem=function(vItem){if(!vItem){return;
}
if(!this.getItemEnabled(vItem)){return;
}var oldVal=this._getChangeValue();
var oldFireChange=this.getFireChange();
this.setFireChange(false);
this._deselectAll();
this._selectedItems.add(vItem);
this.renderItemSelectionState(vItem,true);
this.setFireChange(oldFireChange);
if(oldFireChange&&this._hasChanged(oldVal)){this._dispatchChange();
}};
qx.Proto.selectAll=function(){var oldVal=this._getChangeValue();
var oldFireChange=this.getFireChange();
this.setFireChange(false);
this._selectAll();
this.setFireChange(oldFireChange);
if(oldFireChange&&this._hasChanged(oldVal)){this._dispatchChange();
}};
qx.Proto._selectAll=function(){if(!this.getMultiSelection()){return;
}var vItem;
var vItems=this.getItems();
var vItemsLength=vItems.length;
this._selectedItems.removeAll();
for(var i=0;i<vItemsLength;i++){vItem=vItems[i];
if(!this.getItemEnabled(vItem)){continue;
}this._selectedItems.add(vItem);
this.renderItemSelectionState(vItem,true);
}return true;
};
qx.Proto.deselectAll=function(){var oldVal=this._getChangeValue();
var oldFireChange=this.getFireChange();
this.setFireChange(false);
this._deselectAll();
this.setFireChange(oldFireChange);
if(oldFireChange&&this._hasChanged(oldVal))this._dispatchChange();
};
qx.Proto._deselectAll=function(){var items=this._selectedItems.toArray();
for(var i=0;i<items.length;i++){this.renderItemSelectionState(items[i],false);
}this._selectedItems.removeAll();
return true;
};
qx.Proto.selectItemRange=function(vItem1,vItem2){var oldVal=this._getChangeValue();
var oldFireChange=this.getFireChange();
this.setFireChange(false);
this._selectItemRange(vItem1,vItem2,true);
this.setFireChange(oldFireChange);
if(oldFireChange&&this._hasChanged(oldVal)){this._dispatchChange();
}};
qx.Proto._selectItemRange=function(vItem1,vItem2,vDeselect){if(this.isBefore(vItem2,vItem1)){return this._selectItemRange(vItem2,vItem1,vDeselect);
}if(vDeselect){this._deselectAll();
}var vCurrentItem=vItem1;
while(vCurrentItem!=null){if(this.getItemEnabled(vCurrentItem)){this._selectedItems.add(vCurrentItem);
this.renderItemSelectionState(vCurrentItem,true);
}if(this.isEqual(vCurrentItem,vItem2)){break;
}vCurrentItem=this.getNext(vCurrentItem);
}return true;
};
qx.Proto._deselectItemRange=function(vItem1,vItem2){if(this.isBefore(vItem2,vItem1)){return this._deselectItemRange(vItem2,vItem1);
}var vCurrentItem=vItem1;
while(vCurrentItem!=null){this._selectedItems.remove(vCurrentItem);
this.renderItemSelectionState(vCurrentItem,false);
if(this.isEqual(vCurrentItem,vItem2)){break;
}vCurrentItem=this.getNext(vCurrentItem);
}};
qx.Proto._activeDragSession=false;
qx.Proto.handleMouseDown=function(vItem,e){if(!e.isLeftButtonPressed()&&!e.isRightButtonPressed()){return;
}if(e.isRightButtonPressed()&&this.getItemSelected(vItem)){return;
}if(e.isShiftPressed()||this.getDragSelection()||(!this.getItemSelected(vItem)&&!e.isCtrlPressed())){this._onmouseevent(vItem,e);
}else{this.setLeadItem(vItem);
}this._activeDragSession=this.getDragSelection();
if(this._activeDragSession){this.getBoundedWidget().addEventListener($[7],this._ondragup,this);
this.getBoundedWidget().setCapture(true);
}};
qx.Proto._ondragup=function(e){this.getBoundedWidget().removeEventListener($[7],this._ondragup,this);
this.getBoundedWidget().setCapture(false);
this._activeDragSession=false;
};
qx.Proto.handleMouseUp=function(vItem,e){if(!e.isLeftButtonPressed()){return;
}
if(e.isCtrlPressed()||this.getItemSelected(vItem)&&!this._activeDragSession){this._onmouseevent(vItem,e);
}
if(this._activeDragSession){this._activeDragSession=false;
this.getBoundedWidget().setCapture(false);
}};
qx.Proto.handleMouseOver=function(oItem,e){if(!this.getDragSelection()||!this._activeDragSession){return;
}this._onmouseevent(oItem,e,true);
};
qx.Proto.handleClick=function(vItem,e){};
qx.Proto.handleDblClick=function(vItem,e){};
qx.Proto._onmouseevent=function(oItem,e,bOver){if(!this.getItemEnabled(oItem)){return;
}var oldVal=this._getChangeValue();
var oldLead=this.getLeadItem();
var oldFireChange=this.getFireChange();
this.setFireChange(false);
var selectedItems=this.getSelectedItems();
var selectedCount=selectedItems.length;
this.setLeadItem(oItem);
var currentAnchorItem=this.getAnchorItem();
var vCtrlKey=e.isCtrlPressed();
var vShiftKey=e.isShiftPressed();
if(!currentAnchorItem||selectedCount==0||(vCtrlKey&&!vShiftKey&&this.getMultiSelection()&&!this.getDragSelection())){this.setAnchorItem(oItem);
currentAnchorItem=oItem;
}if((!vCtrlKey&&!vShiftKey&&!this._activeDragSession||!this.getMultiSelection())){if(!this.getItemEnabled(oItem)){return;
}this._deselectAll();
this.setAnchorItem(oItem);
if(this._activeDragSession){this.scrollItemIntoView((this.getBoundedWidget().getScrollTop()>(this.getItemTop(oItem)-1)?this.getPrevious(oItem):this.getNext(oItem))||oItem);
}
if(!this.getItemSelected(oItem)){this.renderItemSelectionState(oItem,true);
}this._selectedItems.add(oItem);
this._addToCurrentSelection=true;
}else if(this._activeDragSession&&bOver){if(oldLead){this._deselectItemRange(currentAnchorItem,oldLead);
}if(this.isBefore(currentAnchorItem,oItem)){if(this._addToCurrentSelection){this._selectItemRange(currentAnchorItem,oItem,false);
}else{this._deselectItemRange(currentAnchorItem,oItem);
}}else{if(this._addToCurrentSelection){this._selectItemRange(oItem,currentAnchorItem,false);
}else{this._deselectItemRange(oItem,currentAnchorItem);
}}this.scrollItemIntoView((this.getBoundedWidget().getScrollTop()>(this.getItemTop(oItem)-1)?this.getPrevious(oItem):this.getNext(oItem))||oItem);
}else if(this.getMultiSelection()&&vCtrlKey&&!vShiftKey){if(!this._activeDragSession){this._addToCurrentSelection=!(this.getCanDeselect()&&this.getItemSelected(oItem));
}this.setItemSelected(oItem,this._addToCurrentSelection);
this.setAnchorItem(oItem);
}else if(this.getMultiSelection()&&vCtrlKey&&vShiftKey){if(!this._activeDragSession){this._addToCurrentSelection=!(this.getCanDeselect()&&this.getItemSelected(oItem));
}
if(this._addToCurrentSelection){this._selectItemRange(currentAnchorItem,oItem,false);
}else{this._deselectItemRange(currentAnchorItem,oItem);
}}else if(this.getMultiSelection()&&!vCtrlKey&&vShiftKey){if(this.getCanDeselect()){this._selectItemRange(currentAnchorItem,oItem,true);
}else{if(oldLead){this._deselectItemRange(currentAnchorItem,oldLead);
}this._selectItemRange(currentAnchorItem,oItem,false);
}}this.setFireChange(oldFireChange);
if(oldFireChange&&this._hasChanged(oldVal)){this._dispatchChange();
}};
qx.Proto.handleKeyDown=function(vDomEvent){this.warn($[2278]+$[2434]);
this.handleKeyPress(vDomEvent);
};
qx.Proto.handleKeyPress=function(vDomEvent){var oldVal=this._getChangeValue();
var oldFireChange=this.getFireChange();
this.setFireChange(false);
if(vDomEvent.getKeyIdentifier()==$[121]&&vDomEvent.isCtrlPressed()){if(this.getMultiSelection()){this._selectAll();
this.setLeadItem(this.getFirst());
}}else{var aIndex=this.getAnchorItem();
var itemToSelect=this.getItemToSelect(vDomEvent);
if(itemToSelect&&this.getItemEnabled(itemToSelect)){this.setLeadItem(itemToSelect);
this.scrollItemIntoView(itemToSelect);
vDomEvent.preventDefault();
if(vDomEvent.isShiftPressed()&&this.getMultiSelection()){if(aIndex==null){this.setAnchorItem(itemToSelect);
}this._selectItemRange(this.getAnchorItem(),itemToSelect,true);
}else if(!vDomEvent.isCtrlPressed()){this._deselectAll();
this.renderItemSelectionState(itemToSelect,true);
this._selectedItems.add(itemToSelect);
this.setAnchorItem(itemToSelect);
}else if(vDomEvent.getKeyIdentifier()==$[85]){if(this._selectedItems.contains(itemToSelect)){this.renderItemSelectionState(itemToSelect,false);
this._selectedItems.remove(itemToSelect);
this.setAnchorItem(this._selectedItems.getFirst());
}else{if(!vDomEvent.isCtrlPressed()||!this.getMultiSelection()){this._deselectAll();
}this.renderItemSelectionState(itemToSelect,true);
this._selectedItems.add(itemToSelect);
this.setAnchorItem(itemToSelect);
}}}}this.setFireChange(oldFireChange);
if(oldFireChange&&this._hasChanged(oldVal)){this._dispatchChange();
}};
qx.Proto.getItemToSelect=function(vKeyboardEvent){if(vKeyboardEvent.isAltPressed()){return null;
}switch(vKeyboardEvent.getKeyIdentifier()){case $[130]:return this.getHome(this.getLeadItem());
case $[144]:return this.getEnd(this.getLeadItem());
case $[71]:return this.getDown(this.getLeadItem());
case $[73]:return this.getUp(this.getLeadItem());
case $[55]:return this.getLeft(this.getLeadItem());
case $[56]:return this.getRight(this.getLeadItem());
case $[75]:return this.getPageUp(this.getLeadItem())||this.getHome(this.getLeadItem());
case $[88]:return this.getPageDown(this.getLeadItem())||this.getEnd(this.getLeadItem());
case $[85]:if(vKeyboardEvent.isCtrlPressed()){return this.getLeadItem();
}}return null;
};
qx.Proto._dispatchChange=function(){if(!this.getFireChange()){return;
}
if(this.hasEventListeners($[145])){this.dispatchEvent(new qx.event.type.DataEvent($[145],this.getSelectedItems()),true);
}};
qx.Proto._hasChanged=function(sOldValue){return sOldValue!=this._getChangeValue();
};
qx.Proto._getChangeValue=function(){return this._selectedItems.getChangeValue();
};
qx.Proto.getHome=function(){return this.getFirst();
};
qx.Proto.getEnd=function(){return this.getLast();
};
qx.Proto.getDown=function(vItem){if(!vItem){return this.getFirst();
}return this.getMultiColumnSupport()?(this.getUnder(vItem)||this.getLast()):this.getNext(vItem);
};
qx.Proto.getUp=function(vItem){if(!vItem){return this.getLast();
}return this.getMultiColumnSupport()?(this.getAbove(vItem)||this.getFirst()):this.getPrevious(vItem);
};
qx.Proto.getLeft=function(vItem){if(!this.getMultiColumnSupport()){return null;
}return !vItem?this.getLast():this.getPrevious(vItem);
};
qx.Proto.getRight=function(vItem){if(!this.getMultiColumnSupport()){return null;
}return !vItem?this.getFirst():this.getNext(vItem);
};
qx.Proto.getAbove=function(vItem){throw new Error("getAbove(): Not implemented yet");
};
qx.Proto.getUnder=function(vItem){throw new Error("getUnder(): Not implemented yet");
};
qx.Proto.getPageUp=function(vItem){var vBoundedWidget=this.getBoundedWidget();
var vParentScrollTop=vBoundedWidget.getScrollTop();
var vParentClientHeight=vBoundedWidget.getClientHeight();
var newItem;
var nextItem=this.getLeadItem();
if(!nextItem){nextItem=this.getFirst();
}var tryLoops=0;
while(tryLoops<2){while(nextItem&&(this.getItemTop(nextItem)-this.getItemHeight(nextItem)>=vParentScrollTop)){nextItem=this.getUp(nextItem);
}if(nextItem==null){break;
}if(nextItem!=this.getLeadItem()){this.scrollItemIntoView(nextItem,true);
break;
}vBoundedWidget.setScrollTop(vParentScrollTop-vParentClientHeight-this.getItemHeight(nextItem));
vParentScrollTop=vBoundedWidget.getScrollTop();
tryLoops++;
}return nextItem;
};
qx.Proto.getPageDown=function(vItem){var vBoundedWidget=this.getBoundedWidget();
var vParentScrollTop=vBoundedWidget.getScrollTop();
var vParentClientHeight=vBoundedWidget.getClientHeight();
var newItem;
var nextItem=this.getLeadItem();
if(!nextItem){nextItem=this.getFirst();
}var tryLoops=0;
while(tryLoops<2){while(nextItem&&((this.getItemTop(nextItem)+(2*this.getItemHeight(nextItem)))<=(vParentScrollTop+vParentClientHeight))){nextItem=this.getDown(nextItem);
}if(nextItem==null){break;
}if(nextItem!=this.getLeadItem()){break;
}vBoundedWidget.setScrollTop(vParentScrollTop+vParentClientHeight-2*this.getItemHeight(nextItem));
vParentScrollTop=vBoundedWidget.getScrollTop();
tryLoops++;
}return nextItem;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this._selectedItems){this._selectedItems.dispose();
this._selectedItems=null;
}return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.type.Selection */
qx.OO.defineClass($[1239],qx.core.Object,function(vManager){qx.core.Object.call(this);
this._manager=vManager;
this.removeAll();
});
qx.Proto.add=function(oItem){this._storage[this.getItemHashCode(oItem)]=oItem;
};
qx.Proto.remove=function(oItem){delete this._storage[this.getItemHashCode(oItem)];
};
qx.Proto.removeAll=function(){this._storage={};
};
qx.Proto.contains=function(oItem){return this.getItemHashCode(oItem) in this._storage;
};
qx.Proto.toArray=function(){var res=[];
for(var key in this._storage){res.push(this._storage[key]);
}return res;
};
qx.Proto.getFirst=function(){for(var key in this._storage){return this._storage[key];
}};
qx.Proto.getChangeValue=function(){var sb=[];
for(var hc in this._storage){sb.push(hc);
}sb.sort();
return sb.join($[67]);
};
qx.Proto.getItemHashCode=function(oItem){return this._manager.getItemHashCode(oItem);
};
qx.Proto.isEmpty=function(){return qx.lang.Object.isEmpty(this._storage);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._storage=null;
this._manager=null;
qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.manager.selection.TreeFullControlSelectionManager */
qx.OO.defineClass($[997],qx.manager.selection.SelectionManager,function(vBoundedWidget){qx.manager.selection.SelectionManager.call(this,vBoundedWidget);
});
qx.OO.changeProperty({name:$[335],type:$[3],defaultValue:false});
qx.OO.changeProperty({name:$[462],type:$[3],defaultValue:false});
qx.Proto._getFirst=function(){return qx.lang.Array.getFirst(this.getItems());
};
qx.Proto._getLast=function(){return qx.lang.Array.getLast(this.getItems());
};
qx.Proto.getItems=function(){return this.getBoundedWidget().getItems();
};
qx.Proto.getNext=function(vItem){if(vItem){if(qx.ui.treefullcontrol.Tree.isOpenTreeFolder(vItem)){return vItem.getFirstVisibleChildOfFolder();
}else if(vItem.isLastVisibleChild()){var vCurrent=vItem;
while(vCurrent&&vCurrent.isLastVisibleChild()){vCurrent=vCurrent.getParentFolder();
}
if(vCurrent&&vCurrent instanceof qx.ui.treefullcontrol.AbstractTreeElement&&vCurrent.getNextVisibleSibling()&&vCurrent.getNextVisibleSibling() instanceof qx.ui.treefullcontrol.AbstractTreeElement){return vCurrent.getNextVisibleSibling();
}}else{return vItem.getNextVisibleSibling();
}}else{return this.getBoundedWidget().getFirstTreeChild();
}};
qx.Proto.getPrevious=function(vItem){if(vItem){if(vItem==this.getBoundedWidget()){return;
}else if(vItem.isFirstVisibleChild()){if(vItem.getParentFolder() instanceof qx.ui.treefullcontrol.TreeFolder){return vItem.getParentFolder();
}}else{var vPrev=vItem.getPreviousVisibleSibling();
if(vPrev instanceof qx.ui.treefullcontrol.AbstractTreeElement){while(vPrev instanceof qx.ui.treefullcontrol.AbstractTreeElement){if(qx.ui.treefullcontrol.Tree.isOpenTreeFolder(vPrev)){vPrev=vPrev.getLastVisibleChildOfFolder();
}else{break;
}}}return vPrev;
}}else{return this.getBoundedWidget().getLastTreeChild();
}};
qx.Proto.getItemTop=function(vItem){var vBoundedWidget=this.getBoundedWidget();
var vElement=vItem.getElement();
var vOffset=0;
while(vElement&&vElement.qx_Widget!=vBoundedWidget){vOffset+=vElement.offsetTop;
vElement=vElement.parentNode;
}return vOffset;
};
qx.Proto.getItemHeight=function(vItem){if(vItem instanceof qx.ui.treefullcontrol.TreeFolder&&vItem._horizontalLayout){return vItem._horizontalLayout.getOffsetHeight();
}else{return vItem.getOffsetHeight();
}};
qx.Proto.scrollItemIntoView=function(vItem){if(vItem instanceof qx.ui.treefullcontrol.TreeFolder&&vItem._horizontalLayout){return vItem._horizontalLayout.scrollIntoView();
}else{return vItem.scrollIntoView();
}};
qx.Proto.renderItemSelectionState=function(treeNode,isSelected){if(isSelected&&!treeNode.isSeeable()){var treeFolder=treeNode;
var parentFolders=[];
while(treeFolder){treeFolder=treeFolder.getParentFolder();
parentFolders.push(treeFolder);
}parentFolders.pop();
while(parentFolders.length){parentFolders.pop().open();
}}
if(isSelected){if(treeNode.isCreated()){this.scrollItemIntoView(treeNode);
}else{treeNode.addEventListener($[80],function(e){this.scrollItemIntoView(treeNode);
},this);
}}treeNode.setSelected(isSelected);
};




/* ID: qx.ui.treefullcontrol.TreeFile */
qx.OO.defineClass($[2094],qx.ui.treefullcontrol.AbstractTreeElement,function(treeRowStructure){qx.ui.treefullcontrol.AbstractTreeElement.call(this,treeRowStructure);
});
qx.Proto.getIndentSymbol=function(vUseTreeLines,vColumn,vFirstColumn,vLastColumn){var vLevel=this.getLevel();
var vExcludeList=this.getTree().getExcludeSpecificTreeLines();
var vExclude=vExcludeList[vLastColumn-vColumn-1];
if(vUseTreeLines&&!(vExclude===true)){if(vColumn==vFirstColumn){return this.isLastChild()?$[297]:$[280];
}else{return $[263];
}}return null;
};
qx.Proto._updateIndent=function(){this.addToTreeQueue();
};
qx.Proto.getItems=function(){return [this];
};




/* ID: qx.ui.tree.AbstractTreeElement */
qx.OO.defineClass($[1774],qx.ui.layout.BoxLayout,function(vLabel,vIcon,vIconSelected){if(this.classname==qx.ui.tree.AbstractTreeElement.ABSTRACT_CLASS){throw new Error("Please omit the usage of qx.ui.tree.AbstractTreeElement directly. Choose between qx.ui.tree.TreeFolder and qx.ui.tree.TreeFile instead!");
}this._indentObject=new qx.ui.embed.HtmlEmbed;
this._iconObject=new qx.ui.basic.Image;
this._labelObject=new qx.ui.basic.Label;
this._indentObject.setAnonymous(true);
this._iconObject.setAnonymous(true);
this._labelObject.setAnonymous(true);
this._labelObject.setSelectable(false);
this._labelObject.setStyleProperty($[128],$[39]);
qx.ui.layout.BoxLayout.call(this,$[29]);
this.setLabel(vLabel);
this.setSelectable(false);
this.BASE_URI=qx.manager.object.AliasManager.getInstance().resolvePath("widget/tree/");
this.add(this._indentObject,this._iconObject,this._labelObject);
if(vIcon!=null){this.setIcon(vIcon);
this.setIconSelected(vIcon);
}
if(vIconSelected!=null){this.setIconSelected(vIconSelected);
}this._iconObject.setSource(this._evalCurrentIcon());
this._iconObject.setAppearance($[742]);
this._labelObject.setAppearance($[270]);
this.addEventListener($[6],this._onmousedown);
this.addEventListener($[7],this._onmouseup);
});
qx.ui.tree.AbstractTreeElement.ABSTRACT_CLASS="qx.ui.tree.AbstractTreeElement";
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[326]});
qx.OO.addProperty({name:$[94],type:$[0]});
qx.OO.addProperty({name:$[302],type:$[0]});
qx.OO.addProperty({name:$[109]});
qx.OO.addProperty({name:$[24],type:$[3],defaultValue:false});
qx.Proto._modifyLabel=function(propValue,propOldValue,propData){if(this._labelObject){this._labelObject.setHtml(propValue);
}return true;
};
qx.Proto._modifySelected=function(propValue,propOldValue,propData){propValue?this.addState($[24]):this.removeState($[24]);
propValue?this._labelObject.addState($[24]):this._labelObject.removeState($[24]);
var vTree=this.getTree();
if(!vTree._fastUpdate||(propOldValue&&vTree._oldItem==this)){this._iconObject.setSource(this._evalCurrentIcon());
if(propValue){this._iconObject.addState($[24]);
}else{this._iconObject.removeState($[24]);
}}var vManager=this.getTree().getManager();
if(propOldValue&&vManager.getSelectedItem()==this){vManager.deselectAll();
}else if(propValue&&vManager.getSelectedItem()!=this){vManager.setSelectedItem(this);
}return true;
};
qx.Proto._evalCurrentIcon=function(){if(this.getSelected()&&this.getIconSelected()){return this.getIconSelected();
}else{return this.getIcon()||$[430];
}};
qx.Proto.getParentFolder=function(){try{return this.getParent().getParent();
}catch(ex){}return null;
};
qx.Proto.getLevel=function(){var vParentFolder=this.getParentFolder();
return vParentFolder?vParentFolder.getLevel()+1:null;
};
qx.Proto.getTree=function(){var vParentFolder=this.getParentFolder();
return vParentFolder?vParentFolder.getTree():null;
};
qx.Proto.getIndentObject=function(){return this._indentObject;
};
qx.Proto.getIconObject=function(){return this._iconObject;
};
qx.Proto.getLabelObject=function(){return this._labelObject;
};
qx.Proto.destroy=function(){var manager=this.getTree()?this.getTree().getManager():null;
if(manager){if(manager.getItemSelected(this)){if(manager.getMultiSelection()){manager.setItemSelected(this,false);
}else{manager.deselectAll();
}}if(manager.getLeadItem()==this){manager.setLeadItem(null);
}if(manager.getAnchorItem()==this){manager.setAnchorItem(null);
}}if(this.destroyContent){this.destroyContent();
}this.disconnect();
var parentFolder=this.getParentFolder();
if(parentFolder){parentFolder.remove(this);
}this.dispose();
};
qx.Proto.addToTreeQueue=function(){var vTree=this.getTree();
if(vTree){vTree.addChildToTreeQueue(this);
}};
qx.Proto.removeFromTreeQueue=function(){var vTree=this.getTree();
if(vTree){vTree.removeChildFromTreeQueue(this);
}};
qx.Proto.addToCustomQueues=function(vHint){this.addToTreeQueue();
qx.ui.layout.BoxLayout.prototype.addToCustomQueues.call(this,vHint);
};
qx.Proto.removeFromCustomQueues=function(vHint){this.removeFromTreeQueue();
qx.ui.layout.BoxLayout.prototype.removeFromCustomQueues.call(this,vHint);
};
qx.Proto._modifyParent=function(propValue,propOldValue,propData){qx.ui.layout.BoxLayout.prototype._modifyParent.call(this,propValue,propOldValue,propData);
if(propOldValue&&!propOldValue.isDisplayable()&&propOldValue.getParent()&&propOldValue.getParent().isDisplayable()){propOldValue.getParent().addToTreeQueue();
}if(propValue&&!propValue.isDisplayable()&&propValue.getParent()&&propValue.getParent().isDisplayable()){propValue.getParent().addToTreeQueue();
}return true;
};
qx.Proto._handleDisplayableCustom=function(vDisplayable,vParent,vHint){qx.ui.layout.BoxLayout.prototype._handleDisplayableCustom.call(this,vDisplayable,vParent,vHint);
if(vHint){var vParentFolder=this.getParentFolder();
var vPreviousParentFolder=this._previousParentFolder;
if(vPreviousParentFolder){if(this._wasLastVisibleChild){vPreviousParentFolder._updateIndent();
}else if(!vPreviousParentFolder.hasContent()){vPreviousParentFolder.addToTreeQueue();
}}
if(vParentFolder&&vParentFolder.isDisplayable()&&vParentFolder._initialLayoutDone){vParentFolder.addToTreeQueue();
}
if(this.isLastVisibleChild()){var vPrev=this.getPreviousVisibleSibling();
if(vPrev&&vPrev instanceof qx.ui.tree.AbstractTreeElement){vPrev._updateIndent();
}}
if(vDisplayable){this._updateIndent();
}}};
qx.Proto._onmousedown=function(e){this.getTree().getManager().handleMouseDown(this,e);
e.stopPropagation();
};
qx.Proto._onmouseup=qx.lang.Function.returnTrue;
qx.Proto.flushTree=function(){this._previousParentFolder=this.getParentFolder();
this._wasLastVisibleChild=this.isLastVisibleChild();
var vLevel=this.getLevel();
var vTree=this.getTree();
var vImage;
var vHtml=[];
var vCurrentObject=this;
for(var i=0;i<vLevel;i++){vImage=vCurrentObject.getIndentSymbol(vTree.getUseTreeLines(),i==0);
if(vImage){vHtml.push($[544]);
vHtml.push((vLevel-i-1)*19);
vHtml.push($[727]);
vHtml.push(this.BASE_URI);
vHtml.push(vImage);
vHtml.push($[53]);
vHtml.push($[454]);
vHtml.push($[711]);
}vCurrentObject=vCurrentObject.getParentFolder();
}this._indentObject.setHtml(vHtml.join($[1]));
this._indentObject.setWidth(vLevel*19);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._indentObject){this._indentObject.dispose();
this._indentObject=null;
}
if(this._iconObject){this._iconObject.dispose();
this._iconObject=null;
}
if(this._labelObject){this._labelObject.dispose();
this._labelObject=null;
}this._previousParentFolder=null;
this.removeEventListener($[6],this._onmousedown);
this.removeEventListener($[7],this._onmouseup);
return qx.ui.layout.BoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.tree.TreeFolder */
qx.OO.defineClass($[822],qx.ui.tree.AbstractTreeElement,function(vLabel,vIcon,vIconSelected){qx.ui.tree.AbstractTreeElement.call(this,vLabel,vIcon,vIconSelected);
this._iconObject.setAppearance($[274]);
this._labelObject.setAppearance($[316]);
this.addEventListener($[46],this._ondblclick);
this.add=this.addToFolder;
this.addBefore=this.addBeforeToFolder;
this.addAfter=this.addAfterToFolder;
this.addAt=this.addAtToFolder;
this.addAtBegin=this.addAtBeginToFolder;
this.addAtEnd=this.addAtEndToFolder;
this.remove=this.removeFromFolder;
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[192]});
qx.OO.changeProperty({name:$[94],type:$[0]});
qx.OO.changeProperty({name:$[302],type:$[0]});
qx.OO.addProperty({name:$[464],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[550],type:$[3],defaultValue:false});
qx.Proto.hasContent=function(){return this._containerObject&&this._containerObject.getChildrenLength()>0;
};
qx.Proto.open=function(){if(this.getOpen()){return;
}
if(this.hasContent()&&this.isSeeable()){this.getTopLevelWidget().setGlobalCursor($[501]);
qx.client.Timer.once(this._openCallback,this,0);
}else{this.setOpen(true);
}};
qx.Proto.close=function(){this.setOpen(false);
};
qx.Proto.toggle=function(){this.getOpen()?this.close():this.open();
};
qx.Proto._openCallback=function(){this.setOpen(true);
qx.ui.core.Widget.flushGlobalQueues();
this.getTopLevelWidget().setGlobalCursor(null);
};
qx.Proto._createChildrenStructure=function(){this.setAppearance(this instanceof qx.ui.tree.Tree?$[589]:$[755]);
if(!this._horizontalLayout){this.setOrientation($[20]);
this._horizontalLayout=new qx.ui.layout.HorizontalBoxLayout;
this._horizontalLayout.setWidth(null);
this._horizontalLayout.setParent(this);
this._horizontalLayout.setAnonymous(true);
this._horizontalLayout.setAppearance(this instanceof qx.ui.tree.Tree?$[668]:$[192]);
this._indentObject.setParent(this._horizontalLayout);
this._iconObject.setParent(this._horizontalLayout);
this._labelObject.setParent(this._horizontalLayout);
}
if(!this._containerObject){this._containerObject=new qx.ui.layout.VerticalBoxLayout;
this._containerObject.setWidth(null);
this._containerObject.setAnonymous(true);
this._containerObject.setDisplay(this.getOpen());
this._containerObject.setParent(this);
this.remapChildrenHandlingTo(this._containerObject);
}};
qx.Proto._handleChildMove=function(vChild,vRelationIndex,vRelationChild){if(vChild.isDisplayable()){var vChildren=this._containerObject.getChildren();
var vOldChildIndex=vChildren.indexOf(vChild);
if(vOldChildIndex!=-1){if(vRelationChild){vRelationIndex=vChildren.indexOf(vRelationChild);
}
if(vRelationIndex==vChildren.length-1){vChild._updateIndent();
this._containerObject.getLastVisibleChild()._updateIndent();
}else if(vChild._wasLastVisibleChild){vChild._updateIndent();
var vPreviousSibling=vChild.getPreviousVisibleSibling();
if(vPreviousSibling){vPreviousSibling._updateIndent();
}}}}};
qx.Proto.addToFolder=function(){this._createChildrenStructure();
if(this._containerObject){return this._containerObject.add.apply(this._containerObject,arguments);
}};
qx.Proto.addBeforeToFolder=function(vChild,vBefore){this._createChildrenStructure();
if(this._containerObject){this._handleChildMove(vChild,null,vBefore);
return this._containerObject.addBefore.apply(this._containerObject,arguments);
}};
qx.Proto.addAfterToFolder=function(vChild,vAfter){this._createChildrenStructure();
if(this._containerObject){this._handleChildMove(vChild,null,vAfter);
return this._containerObject.addAfter.apply(this._containerObject,arguments);
}};
qx.Proto.addAtToFolder=function(vChild,vIndex){this._createChildrenStructure();
if(this._containerObject){this._handleChildMove(vChild,vIndex);
return this._containerObject.addAt.apply(this._containerObject,arguments);
}};
qx.Proto.addAtBeginToFolder=function(vChild){return this.addAtToFolder(vChild,0);
};
qx.Proto.addAtEndToFolder=function(vChild){this._createChildrenStructure();
if(this._containerObject){var vLast=this._containerObject.getLastChild();
if(vLast){this._handleChildMove(vChild,null,vLast);
return this._containerObject.addAfter.call(this._containerObject,vChild,vLast);
}else{return this.addAtBeginToFolder(vChild);
}}};
qx.Proto._remappingChildTable=[$[267],$[321],$[244]];
qx.Proto.getContainerObject=function(){return this._containerObject;
};
qx.Proto.getHorizontalLayout=function(){return this._horizontalLayout;
};
qx.Proto.getFirstVisibleChildOfFolder=function(){if(this._containerObject){return this._containerObject.getFirstChild();
}};
qx.Proto.getLastVisibleChildOfFolder=function(){if(this._containerObject){return this._containerObject.getLastChild();
}};
qx.Proto.getItems=function(recursive,invisible){var a=[this];
if(this._containerObject){var ch=invisible==true?this._containerObject.getChildren():this._containerObject.getVisibleChildren();
if(recursive==false){a=a.concat(ch);
}else{for(var i=0,chl=ch.length;i<chl;i++){a=a.concat(ch[i].getItems(recursive,invisible));
}}}return a;
};
qx.Proto.destroyContent=function(){if(!this.hasContent()){return;
}var manager=this.getTree()?this.getTree().getManager():null;
var leadItem;
var anchorItem;
if(manager){leadItem=manager.getLeadItem();
anchorItem=manager.getAnchorItem();
}this._containerObject.setDisplay(true);
var items=this._containerObject.getChildren();
var item;
for(var i=items.length-1;i>=0;--i){item=items[i];
if(item!=this){if(manager){if(leadItem==item){manager.setLeadItem(null);
}if(anchorItem==item){manager.setAnchorItem(null);
}if(manager.getItemSelected(item)){if(manager.getMultiSelection()){manager.setItemSelected(item,false);
}else{manager.deselectAll();
}}if(item.destroyContent){item.destroyContent();
}}item.removeFromTreeQueue();
item.disconnect();
this._containerObject.remove(item);
item.dispose();
delete items[i];
}}};
qx.Proto._evalCurrentIcon=function(){if(this.getSelected()){return this.getIconSelected()||$[400];
}else{return this.getIcon()||$[349];
}};
qx.Proto._modifyOpen=function(propValue,propOldValue,propData){this._updateLastColumn();
if(this._containerObject){this._containerObject.setDisplay(propValue);
}return true;
};
qx.Proto._modifyAlwaysShowPlusMinusSymbol=function(propValue,propOldValue,propData){this._updateLastColumn();
return true;
};
qx.Proto._updateLastColumn=function(){if(this._indentObject){var vElement=this._indentObject.getElement();
if(vElement&&vElement.firstChild){vElement.firstChild.src=this.BASE_URI+this.getIndentSymbol(this.getTree().getUseTreeLines(),true)+$[660];
}}};
qx.Proto._onmousedown=function(e){var vOriginalTarget=e.getOriginalTarget();
switch(vOriginalTarget){case this._indentObject:if(this._indentObject.getElement().firstChild==e.getDomTarget()){this.toggle();
if(!this.getOpen()){if(qx.lang.Array.contains(this.getItems(true,true),this.getTree().getSelectedElement())){this.getTree().getManager().handleMouseDown(this,e);
}}}break;
case this._containerObject:break;
case this:if(this._containerObject){break;
}default:this.getTree().getManager().handleMouseDown(this,e);
}e.stopPropagation();
};
qx.Proto._onmouseup=function(e){var vOriginalTarget=e.getOriginalTarget();
switch(vOriginalTarget){case this._indentObject:case this._containerObject:case this:break;
default:if(!this.getTree().getUseDoubleClick()){this.open();
}}};
qx.Proto._ondblclick=function(e){if(!this.getTree().getUseDoubleClick()){return;
}this.toggle();
e.stopPropagation();
};
qx.Proto.getIndentSymbol=function(vUseTreeLines,vIsLastColumn){if(vIsLastColumn){if(this.hasContent()||this.getAlwaysShowPlusMinusSymbol()){if(!vUseTreeLines){return this.getOpen()?$[350]:$[379];
}else if(this.isLastChild()){return this.getOpen()?$[614]:$[665];
}else{return this.getOpen()?$[730]:$[709];
}}else if(vUseTreeLines){return this.isLastChild()?$[297]:$[280];
}}else{return vUseTreeLines&&!this.isLastChild()?$[263]:null;
}};
qx.Proto._updateIndent=function(){qx.ui.tree.TreeFile.prototype._updateIndent.call(this);
if(!this._containerObject){return;
}var ch=this._containerObject.getVisibleChildren();
for(var i=0,l=ch.length;i<l;i++){ch[i]._updateIndent();
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[46],this._ondblclick);
if(this._horizontalLayout){this._horizontalLayout.dispose();
this._horizontalLayout=null;
}
if(this._containerObject){this._containerObject.dispose();
this._containerObject=null;
}return qx.ui.tree.AbstractTreeElement.prototype.dispose.call(this);
};




/* ID: qx.ui.tree.Tree */
qx.OO.defineClass($[2229],qx.ui.tree.TreeFolder,function(vLabel,vIcon,vIconSelected){qx.ui.tree.TreeFolder.call(this,vLabel,vIcon,vIconSelected);
this._manager=new qx.manager.selection.TreeSelectionManager(this);
this._iconObject.setAppearance($[519]);
this._labelObject.setAppearance($[774]);
this.setOpen(true);
this.addToFolder();
this.addEventListener($[13],this._onkeydown);
this.addEventListener($[14],this._onkeypress);
this.addEventListener($[76],this._onkeyup);
});
qx.OO.addProperty({name:$[294],type:$[3],defaultValue:false,getAlias:$[294]});
qx.OO.addProperty({name:$[176],type:$[3],defaultValue:true,getAlias:$[176]});
qx.Proto.getManager=function(){return this._manager;
};
qx.Proto.getSelectedElement=function(){return this.getManager().getSelectedItem();
};
qx.Proto.addChildToTreeQueue=function(vChild){if(!vChild._isInTreeQueue&&!vChild._isDisplayable){this.debug("Ignoring invisible child: "+vChild);
}
if(!vChild._isInTreeQueue&&vChild._isDisplayable){qx.ui.core.Widget.addToGlobalWidgetQueue(this);
if(!this._treeQueue){this._treeQueue={};
}this._treeQueue[vChild.toHashCode()]=vChild;
vChild._isInTreeQueue=true;
}};
qx.Proto.removeChildFromTreeQueue=function(vChild){if(vChild._isInTreeQueue){if(this._treeQueue){delete this._treeQueue[vChild.toHashCode()];
}delete vChild._isInTreeQueue;
}};
qx.Proto.flushWidgetQueue=function(){this.flushTreeQueue();
};
qx.Proto.flushTreeQueue=function(){if(!qx.lang.Object.isEmpty(this._treeQueue)){for(var vHashCode in this._treeQueue){this._treeQueue[vHashCode].flushTree();
delete this._treeQueue[vHashCode]._isInTreeQueue;
}delete this._treeQueue;
}};
qx.Proto._modifyUseTreeLines=function(propValue,propOldValue,propData){if(this._initialLayoutDone){this._updateIndent();
}return true;
};
qx.Proto.getTree=function(){return this;
};
qx.Proto.getParentFolder=function(){return null;
};
qx.Proto.getLevel=function(){return 0;
};
qx.ui.tree.Tree.isTreeFolder=function(vObject){return vObject&&vObject instanceof qx.ui.tree.TreeFolder&&!(vObject instanceof qx.ui.tree.Tree);
};
qx.ui.tree.Tree.isOpenTreeFolder=function(vObject){return vObject instanceof qx.ui.tree.TreeFolder&&vObject.getOpen()&&vObject.hasContent();
};
qx.Proto._onkeydown=function(e){var vSelectedItem=this.getManager().getSelectedItem();
if(e.getKeyIdentifier()==$[45]){e.preventDefault();
if(qx.ui.tree.Tree.isTreeFolder(vSelectedItem)){return vSelectedItem.toggle();
}}};
qx.Proto._onkeypress=function(e){var vManager=this.getManager();
var vSelectedItem=vManager.getSelectedItem();
switch(e.getKeyIdentifier()){case $[55]:e.preventDefault();
if(qx.ui.tree.Tree.isTreeFolder(vSelectedItem)){if(!vSelectedItem.getOpen()){var vParent=vSelectedItem.getParentFolder();
if(vParent instanceof qx.ui.tree.TreeFolder){if(!(vParent instanceof qx.ui.tree.Tree)){vParent.close();
}this.setSelectedElement(vParent);
}}else{return vSelectedItem.close();
}}else if(vSelectedItem instanceof qx.ui.tree.TreeFile){var vParent=vSelectedItem.getParentFolder();
if(vParent instanceof qx.ui.tree.TreeFolder){if(!(vParent instanceof qx.ui.tree.Tree)){vParent.close();
}this.setSelectedElement(vParent);
}}break;
case $[56]:e.preventDefault();
if(qx.ui.tree.Tree.isTreeFolder(vSelectedItem)){if(!vSelectedItem.getOpen()){return vSelectedItem.open();
}else if(vSelectedItem.hasContent()){var vFirst=vSelectedItem.getFirstVisibleChildOfFolder();
this.setSelectedElement(vFirst);
if(vFirst instanceof qx.ui.tree.TreeFolder){vFirst.open();
}return;
}}break;
default:if(!this._fastUpdate){this._fastUpdate=true;
this._oldItem=vSelectedItem;
}vManager.handleKeyPress(e);
}};
qx.Proto._onkeyup=function(e){if(this._fastUpdate){var vOldItem=this._oldItem;
var vNewItem=this.getManager().getSelectedItem();
vNewItem.getIconObject().addState($[24]);
delete this._fastUpdate;
delete this._oldItem;
}};
qx.Proto.getLastTreeChild=function(){var vLast=this;
while(vLast instanceof qx.ui.tree.AbstractTreeElement){if(!(vLast instanceof qx.ui.tree.TreeFolder)||!vLast.getOpen()){return vLast;
}vLast=vLast.getLastVisibleChildOfFolder();
}return null;
};
qx.Proto.getFirstTreeChild=function(){return this;
};
qx.Proto.setSelectedElement=function(vElement){var vManager=this.getManager();
vManager.setSelectedItem(vElement);
vManager.setLeadItem(vElement);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[13],this._onkeydown);
this.removeEventListener($[14],this._onkeypress);
this.removeEventListener($[76],this._onkeyup);
if(this._manager){this._manager.dispose();
this._manager=null;
}delete this._oldItem;
return qx.ui.tree.TreeFolder.prototype.dispose.call(this);
};




/* ID: qx.manager.selection.TreeSelectionManager */
qx.OO.defineClass($[1152],qx.manager.selection.SelectionManager,function(vBoundedWidget){qx.manager.selection.SelectionManager.call(this,vBoundedWidget);
});
qx.OO.changeProperty({name:$[335],type:$[3],defaultValue:false});
qx.OO.changeProperty({name:$[462],type:$[3],defaultValue:false});
qx.Proto._getFirst=function(){return qx.lang.Array.getFirst(this.getItems());
};
qx.Proto._getLast=function(){return qx.lang.Array.getLast(this.getItems());
};
qx.Proto.getItems=function(){return this.getBoundedWidget().getItems();
};
qx.Proto.getNext=function(vItem){if(vItem){if(qx.ui.tree.Tree.isOpenTreeFolder(vItem)){return vItem.getFirstVisibleChildOfFolder();
}else if(vItem.isLastVisibleChild()){var vCurrent=vItem;
while(vCurrent&&vCurrent.isLastVisibleChild()){vCurrent=vCurrent.getParentFolder();
}
if(vCurrent&&vCurrent instanceof qx.ui.tree.AbstractTreeElement&&vCurrent.getNextVisibleSibling()&&vCurrent.getNextVisibleSibling() instanceof qx.ui.tree.AbstractTreeElement){return vCurrent.getNextVisibleSibling();
}}else{return vItem.getNextVisibleSibling();
}}else{return this.getBoundedWidget().getFirstTreeChild();
}};
qx.Proto.getPrevious=function(vItem){if(vItem){if(vItem==this.getBoundedWidget()){return;
}else if(vItem.isFirstVisibleChild()){if(vItem.getParentFolder() instanceof qx.ui.tree.TreeFolder){return vItem.getParentFolder();
}}else{var vPrev=vItem.getPreviousVisibleSibling();
while(vPrev instanceof qx.ui.tree.AbstractTreeElement){if(qx.ui.tree.Tree.isOpenTreeFolder(vPrev)){vPrev=vPrev.getLastVisibleChildOfFolder();
}else{break;
}}return vPrev;
}}else{return this.getBoundedWidget().getLastTreeChild();
}};
qx.Proto.getItemTop=function(vItem){var vBoundedWidget=this.getBoundedWidget();
var vElement=vItem.getElement();
var vOffset=0;
while(vElement&&vElement.qx_Widget!=vBoundedWidget){vOffset+=vElement.offsetTop;
vElement=vElement.parentNode;
}return vOffset;
};
qx.Proto.getItemHeight=function(vItem){if(vItem instanceof qx.ui.tree.TreeFolder&&vItem._horizontalLayout){return vItem._horizontalLayout.getOffsetHeight();
}else{return vItem.getOffsetHeight();
}};
qx.Proto.scrollItemIntoView=function(vItem){if(vItem instanceof qx.ui.tree.TreeFolder&&vItem._horizontalLayout){return vItem._horizontalLayout.scrollIntoView();
}else{return vItem.scrollIntoView();
}};
qx.Proto.renderItemSelectionState=function(treeNode,isSelected){if(isSelected&&!treeNode.isSeeable()){var treeFolder=treeNode;
var parentFolders=[];
while(treeFolder){treeFolder=treeFolder.getParentFolder();
parentFolders.push(treeFolder);
}parentFolders.pop();
while(parentFolders.length){parentFolders.pop().open();
}}
if(isSelected){if(treeNode.isCreated()){this.scrollItemIntoView(treeNode);
}else{treeNode.addEventListener($[80],function(e){this.scrollItemIntoView(treeNode);
},this);
}}treeNode.setSelected(isSelected);
};




/* ID: qx.ui.tree.TreeFile */
qx.OO.defineClass($[1628],qx.ui.tree.AbstractTreeElement,function(vLabel,vIcon,vIconSelected){qx.ui.tree.AbstractTreeElement.call(this,vLabel,vIcon,vIconSelected);
});
qx.Proto.getIndentSymbol=function(vUseTreeLines,vIsLastColumn){if(vUseTreeLines){if(vIsLastColumn){return this.isLastChild()?$[297]:$[280];
}else{return $[263];
}}return null;
};
qx.Proto._updateIndent=function(){this.addToTreeQueue();
};
qx.Proto.getItems=function(){return [this];
};




/* ID: qx.ui.embed.GalleryList */
qx.OO.defineClass($[849],qx.ui.basic.Terminator,function(galleryList){qx.ui.basic.Terminator.call(this);
this._blank=qx.manager.object.AliasManager.getInstance().resolvePath($[59]);
this._list=galleryList;
this._listSize=galleryList.length;
this._processedImages=0;
this.setOverflow($[5]);
this.setHtmlProperty($[207],$[1075]);
this._manager=new qx.manager.selection.DomSelectionManager(this);
this.addEventListener($[6],this._onmousedown);
this.addEventListener($[7],this._onmouseup);
this.addEventListener($[18],this._onmousemove);
this.addEventListener($[27],this._onclick);
this.addEventListener($[46],this._ondblclick);
this.addEventListener($[14],this._onkeypress);
});
qx.OO.addProperty({name:$[691],type:$[2],defaultValue:60});
qx.OO.addProperty({name:$[743],type:$[2],defaultValue:60});
qx.OO.addProperty({name:$[585],type:$[2],defaultValue:40});
qx.Proto._applyElementData=function(){this.getElement().appendChild(this.createView());
};
qx.Proto.getManager=function(){return this._manager;
};
qx.Proto.update=function(vGalleryList){this._manager.deselectAll();
this._list=vGalleryList;
var el=this.getElement();
el.replaceChild(this.createView(),el.firstChild);
};
qx.Proto.removeAll=function(){this._manager.deselectAll();
this.getElement().innerHTML=$[1];
};
qx.Proto.getPositionById=function(vId){for(var i=0,a=this._list,l=a.length;i<l;i++){if(a[i].id==vId){return i;
}}return -1;
};
qx.Proto.getEntryById=function(vId){return this.getEntryByPosition(this.getPositionById(vId));
};
qx.Proto.getNodeById=function(vId){return this.getNodeByPosition(this.getPositionById(vId));
};
qx.Proto.getEntryByPosition=function(vPosition){return vPosition==-1?null:this._list[vPosition];
};
qx.Proto.getNodeByPosition=function(vPosition){return vPosition==-1?null:this._frame.childNodes[vPosition];
};
qx.Proto.getEntryByNode=function(vNode){return this.getEntryById(vNode.id);
};
qx.Proto._onmousedown=function(e){var vItem=this.getListItemTarget(e.getDomTarget());
if(vItem){this._manager.handleMouseDown(vItem,e);
}};
qx.Proto._onmouseup=function(e){var vItem=this.getListItemTarget(e.getDomTarget());
if(vItem){this._manager.handleMouseUp(vItem,e);
}};
qx.Proto._onmousemove=function(e){if(!qx.OO.isAvailable($[135])){return;
}var vItem=this.getListItemTarget(e.getDomTarget());
if(vItem==this._lastItem){return;
}
if(this._lastItem){var vEventObject=new qx.event.type.MouseEvent($[47],e,false,this._lastItem);
qx.manager.object.ToolTipManager.getInstance().handleMouseOut(vEventObject);
vEventObject.dispose();
}
if(vItem){if(this.hasEventListeners($[310])){this.dispatchEvent(new qx.event.type.DataEvent($[310],vItem),true);
}
if(!this.getToolTip()){return;
}var vEventObject=new qx.event.type.MouseEvent($[47],e,false,vItem);
qx.manager.object.ToolTipManager.getInstance().handleMouseOver(vEventObject);
vEventObject.dispose();
this.setToolTip(null);
}this._lastItem=vItem;
};
qx.Proto._onclick=function(e){var vItem=this.getListItemTarget(e.getDomTarget());
if(vItem){this._manager.handleClick(vItem,e);
}};
qx.Proto._ondblclick=function(e){var vItem=this.getListItemTarget(e.getDomTarget());
if(vItem){this._manager.handleDblClick(vItem,e);
}};
qx.Proto._onkeypress=function(e){this._manager.handleKeyPress(e);
};
qx.Proto.getListItemTarget=function(dt){while(dt.className.indexOf($[253])==-1&&dt.tagName.toLowerCase()!=$[111]){dt=dt.parentNode;
}
if(dt.tagName.toLowerCase()==$[111]){return null;
}return dt;
};
qx.Proto.scrollItemIntoView=function(vItem){this.scrollItemIntoViewX(vItem);
this.scrollItemIntoViewY(vItem);
};
qx.Proto.scrollItemIntoViewX=function(vItem){qx.html.ScrollIntoView.scrollX(vItem);
};
qx.Proto.scrollItemIntoViewY=function(vItem){qx.html.ScrollIntoView.scrollY(vItem);
};
qx.Proto.getItems=function(){return this._frame.childNodes;
};
qx.Proto.getFirstChild=function(){return this._frame.childNodes[0];
};
qx.Proto.getLastChild=function(){return this._frame.childNodes[this._frame.childNodes.length-1];
};
qx.Proto.createView=function(){var s=(new Date).valueOf();
var protoCell=this.createProtoCell(this.getThumbMaxHeight());
var frame=this._frame=document.createElement($[50]);
this._frame.className=$[599];
var cframe,cnode;
for(var i=0,a=this._list,l=a.length,d;i<l;i++){d=a[i];
cframe=protoCell.cloneNode(true);
cframe.id=d.id;
cframe.pos=i;
cnode=cframe.childNodes[0];
cnode.firstChild.nodeValue=d.number;
cnode=cframe.childNodes[1].firstChild;
this.createImageCell(cnode,d);
cnode=cframe.childNodes[2].firstChild;
cnode.firstChild.nodeValue=d.title;
cnode=cframe.childNodes[2].lastChild;
cnode.firstChild.nodeValue=d.comment;
frame.appendChild(cframe);
}return frame;
};
qx.Proto._mshtml=qx.core.Client.getInstance().isMshtml();
qx.Proto.createImageCell=function(inode,d){if(this.hasEventListeners($[284])){inode.onload=qx.ui.embed.GalleryList.imageOnLoad;
inode.onerror=qx.ui.embed.GalleryList.imageOnError;
inode.gallery=this;
}inode.width=d.thumbWidth;
inode.height=d.thumbHeight;
if(this._mshtml){inode.style.filter=$[174]+d.src+$[169];
}else{inode.src=d.src;
}inode.style.marginLeft=inode.style.marginRight=Math.floor((this.getThumbMaxWidth()-d.thumbWidth)/2)+$[21];
inode.style.marginTop=inode.style.marginBottom=Math.floor((this.getThumbMaxHeight()-d.thumbHeight)/2)+$[21];
};
qx.Proto.createProtoCell=function(tHeight){var frame=document.createElement($[50]);
frame.className=$[253];
frame.unselectable=$[72];
frame.style.height=(tHeight+2)+$[21];
var number=document.createElement($[50]);
number.className=$[839];
number.unselectable=$[72];
var ntext=document.createTextNode($[57]);
number.appendChild(ntext);
var imageContainer=document.createElement($[50]);
imageContainer.className=$[1892];
imageContainer.unselectable=$[72];
var image=new Image();
image.src=this._blank;
imageContainer.appendChild(image);
var text=document.createElement($[50]);
text.className=$[1547];
text.unselectable=$[72];
text.style.width=(this.getWidth()-100-this.getThumbMaxWidth())+$[21];
var title=document.createElement($[1254]);
var ttext=document.createTextNode($[57]);
title.appendChild(ttext);
title.unselectable=$[72];
text.appendChild(title);
var comment=document.createElement($[940]);
var ctext=document.createTextNode($[57]);
comment.appendChild(ctext);
comment.unselectable=$[72];
text.appendChild(comment);
frame.appendChild(number);
frame.appendChild(imageContainer);
frame.appendChild(text);
return frame;
};
qx.Proto.imageOnComplete=function(){this._processedImages++;
if(this._processedImages==this._listSize){this.dispatchEvent(new qx.event.type.Event($[284]),true);
}};
qx.ui.embed.GalleryList.imageOnLoad=function(){this.gallery.imageOnComplete();
this.gallery=null;
this.onload=null;
this.onerror=null;
};
qx.ui.embed.GalleryList.imageOnError=function(){this.gallery.imageOnComplete();
this.gallery=null;
this.onload=null;
this.onerror=null;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}this._list=null;
this._frame=null;
if(this._manager){this._manager.dispose();
this._manager=null;
}this.removeEventListener($[6],this._onmousedown);
this.removeEventListener($[7],this._onmouseup);
this.removeEventListener($[18],this._onmousemove);
this.removeEventListener($[27],this._onclick);
this.removeEventListener($[46],this._ondblclick);
this.removeEventListener($[13],this._onkeydown);
return qx.ui.basic.Terminator.prototype.dispose.call(this);
};




/* ID: qx.manager.selection.DomSelectionManager */
qx.OO.defineClass($[1772],qx.manager.selection.SelectionManager,function(vBoundedWidget){qx.manager.selection.SelectionManager.call(this,vBoundedWidget);
this.setDragSelection(false);
this._selectedItems.getItemHashCode=this.getItemHashCode;
});
qx.Proto.getItemEnabled=function(oItem){return true;
};
qx.Proto.getItemClassName=function(vItem){return vItem.className||$[1];
};
qx.Proto.setItemClassName=function(vItem,vClassName){return vItem.className=vClassName;
};
qx.Proto.getItemBaseClassName=function(vItem){var p=vItem.className.split($[44])[0];
return p?p:$[1634];
};
qx.Proto.getNextSibling=function(vItem){return vItem.nextSibling;
};
qx.Proto.getPreviousSibling=function(vItem){return vItem.previousSibling;
};
qx.Proto.getFirst=function(){return this.getItems()[0];
};
qx.Proto.getLast=function(){var vItems=this.getItems();
return vItems[vItems.length-1];
};
qx.Proto.getItemLeft=function(vItem){return vItem.offsetLeft;
};
qx.Proto.getItemTop=function(vItem){return vItem.offsetTop;
};
qx.Proto.getItemWidth=function(vItem){return vItem.offsetWidth;
};
qx.Proto.getItemHeight=function(vItem){return vItem.offsetHeight;
};
qx.Proto.getItemHashCode=function(oItem){if(oItem._hash){return oItem._hash;
}return oItem._hash=qx.core.Object.toHashCode(oItem);
};
qx.Proto.isBefore=function(vItem1,vItem2){var pa=vItem1.parentNode;
for(var i=0,l=pa.childNodes.length;i<l;i++){switch(pa.childNodes[i]){case vItem2:return false;
case vItem1:return true;
}}};
qx.Proto.scrollItemIntoView=function(vItem){this.getBoundedWidget().scrollItemIntoView(vItem);
};
qx.Proto.getItems=function(){return this.getBoundedWidget().getItems();
};
qx.Proto.getAbove=function(vItem){var vParent=vItem.parentNode;
var vFound=false;
var vLeft=vItem.offsetLeft;
var vChild;
for(var i=vParent.childNodes.length-1;i>0;i--){vChild=vParent.childNodes[i];
if(vFound==false){if(vChild==vItem){vFound=true;
}}else{if(vChild.offsetLeft==vLeft){return vChild;
}}}};
qx.Proto.getUnder=function(vItem){var vParent=vItem.parentNode;
var vFound=false;
var vLeft=vItem.offsetLeft;
var vChild;
for(var i=0,l=vParent.childNodes.length;i<l;i++){vChild=vParent.childNodes[i];
if(vFound==false){if(vChild==vItem){vFound=true;
}}else{if(vChild.offsetLeft==vLeft){return vChild;
}}}};
qx.Proto._updateState=function(vItem,vState,vIsState){var c=this.getItemClassName(vItem);
var n=this.getItemBaseClassName(vItem)+$[57]+vState;
this.setItemClassName(vItem,vIsState?qx.lang.String.addListItem(c,n,$[44]):qx.lang.String.removeListItem(c,n,$[44]));
};
qx.Proto.renderItemSelectionState=function(vItem,vIsSelected){this._updateState(vItem,$[807],vIsSelected);
};
qx.Proto.renderItemAnchorState=function(vItem,vIsAnchor){this._updateState(vItem,$[1471],vIsAnchor);
};
qx.Proto.renderItemLeadState=function(vItem,vIsLead){this._updateState(vItem,$[1163],vIsLead);
};




/* ID: qx.ui.component.DateChooser */
qx.OO.defineClass($[1392],qx.ui.layout.BoxLayout,function(date){qx.ui.layout.BoxLayout.call(this);
this.setOrientation($[20]);
var navBar=new qx.ui.layout.BoxLayout;
navBar.set({width:null,height:$[5],spacing:1});
var lastYearBt=new qx.ui.toolbar.Button(null,$[1124]);
var lastMonthBt=new qx.ui.toolbar.Button(null,$[2090]);
var monthYearLabel=new qx.ui.basic.Label;
var nextMonthBt=new qx.ui.toolbar.Button(null,$[1707]);
var nextYearBt=new qx.ui.toolbar.Button(null,$[1317]);
lastYearBt.set({show:$[259],toolTip:new qx.ui.popup.ToolTip(this.tr($[2336])),spacing:0});
lastMonthBt.set({show:$[259],toolTip:new qx.ui.popup.ToolTip(this.tr($[1326]))});
nextMonthBt.set({show:$[259],toolTip:new qx.ui.popup.ToolTip(this.tr($[2290]))});
nextYearBt.set({show:$[259],toolTip:new qx.ui.popup.ToolTip(this.tr($[1587]))});
lastYearBt.setAppearance($[325]);
lastMonthBt.setAppearance($[325]);
nextMonthBt.setAppearance($[325]);
nextYearBt.setAppearance($[325]);
lastYearBt.addEventListener($[27],this._onNavButtonClicked,this);
lastMonthBt.addEventListener($[27],this._onNavButtonClicked,this);
nextMonthBt.addEventListener($[27],this._onNavButtonClicked,this);
nextYearBt.addEventListener($[27],this._onNavButtonClicked,this);
this._lastYearBt=lastYearBt;
this._lastMonthBt=lastMonthBt;
this._nextMonthBt=nextMonthBt;
this._nextYearBt=nextYearBt;
monthYearLabel.setAppearance($[812]);
monthYearLabel.set({width:$[37]});
navBar.add(lastYearBt,lastMonthBt,monthYearLabel,nextMonthBt,nextYearBt);
this._monthYearLabel=monthYearLabel;
navBar.setHtmlAttribute($[268],$[2178]);
var testLabel=new qx.ui.basic.Label;
var testParent=new qx.ui.layout.CanvasLayout;
testParent.add(testLabel);
testLabel.setHtml($[2165]);
testLabel.set({paddingLeft:5,paddingRight:5});
testLabel.setAppearance($[495]);
var cellWidth=testLabel.getBoxWidth();
var cellHeight=testLabel.getBoxHeight();
testLabel.dispose();
testParent.dispose();
var datePane=new qx.ui.layout.GridLayout;
datePane.setAppearance($[1994]);
datePane.set({width:$[39],height:$[5]});
datePane.setColumnCount(8);
datePane.setRowCount(7);
for(var i=0;i<datePane.getColumnCount();i++){datePane.setColumnWidth(i,cellWidth);
}
for(var i=0;i<datePane.getRowCount();i++){datePane.setRowHeight(i,cellHeight);
}var label=new qx.ui.basic.Label;
label.setAppearance($[747]);
label.set({width:$[39],height:$[39]});
label.addState($[1569]);
datePane.add(label,0,0);
this._weekdayLabelArr=[];
for(var i=0;i<7;i++){var label=new qx.ui.basic.Label;
label.setAppearance($[495]);
label.set({width:$[39],height:$[39]});
datePane.add(label,i+1,0);
this._weekdayLabelArr.push(label);
}this._dayLabelArr=[];
this._weekLabelArr=[];
for(var y=0;y<6;y++){var label=new qx.ui.basic.Label;
label.setAppearance($[747]);
label.set({width:$[39],height:$[39]});
datePane.add(label,0,y+1);
this._weekLabelArr.push(label);
for(var x=0;x<7;x++){var label=new qx.ui.basic.Label;
label.setAppearance($[1243]);
label.set({width:$[39],height:$[39]});
label.addEventListener($[6],this._onDayClicked,this);
label.addEventListener($[46],this._onDayDblClicked,this);
datePane.add(label,x+1,y+1);
this._dayLabelArr.push(label);
}}this.setTabIndex(1);
this.addEventListener($[14],this._onkeypress);
var shownDate=(date!=null)?date:new Date();
this.showMonth(shownDate.getMonth(),shownDate.getFullYear());
qx.locale.Manager.getInstance().addEventListener($[212],this._updateDatePane,this);
this.add(navBar);
this.add(datePane);
});
qx.OO.addProperty({name:$[1150],type:$[2],defaultValue:null});
qx.OO.addProperty({name:$[1324],type:$[2],defaultValue:null});
qx.OO.addProperty({name:$[2430],type:$[4],defaultValue:null});
qx.Proto._checkDate=function(propValue,propData){return (propValue==null)?null:new Date(propValue.getTime());
};
qx.Proto._modifyDate=function(propValue,propOldValue,propData){var DateChooser=qx.ui.component.DateChooser;
if((propValue!=null)&&(this.getShownMonth()!=propValue.getMonth()||this.getShownYear()!=propValue.getFullYear())){this.showMonth(propValue.getMonth(),propValue.getFullYear());
}else{var newDay=(propValue==null)?-1:propValue.getDate();
for(var i=0;i<6*7;i++){var dayLabel=this._dayLabelArr[i];
if(dayLabel.hasState($[472])){if(dayLabel.hasState($[24])){dayLabel.removeState($[24]);
}}else{var day=parseInt(dayLabel.getHtml());
if(day==newDay){dayLabel.addState($[24]);
}else if(dayLabel.hasState($[24])){dayLabel.removeState($[24]);
}}}}return true;
};
qx.Proto._onNavButtonClicked=function(evt){var year=this.getShownYear();
var month=this.getShownMonth();
switch(evt.getCurrentTarget()){case this._lastYearBt:year--;
break;
case this._lastMonthBt:month--;
if(month<0){month=11;
year--;
}break;
case this._nextMonthBt:month++;
if(month>=12){month=0;
year++;
}break;
case this._nextYearBt:year++;
break;
}this.showMonth(month,year);
};
qx.Proto._onDayClicked=function(evt){var time=evt.getCurrentTarget().dateTime;
this.setDate(new Date(time));
};
qx.Proto._onDayDblClicked=function(){this.createDispatchDataEvent($[271],this.getDate());
};
qx.Proto._onkeypress=function(evt){var dayIncrement=null;
var monthIncrement=null;
var yearIncrement=null;
if(evt.getModifiers()==0){switch(evt.getKeyIdentifier()){case $[55]:dayIncrement=-1;
break;
case $[56]:dayIncrement=1;
break;
case $[73]:dayIncrement=-7;
break;
case $[71]:dayIncrement=7;
break;
case $[75]:monthIncrement=-1;
break;
case $[88]:monthIncrement=1;
break;
case $[96]:if(this.getDate()!=null){this.setDate(null);
return true;
}break;
case $[45]:case $[85]:if(this.getDate()!=null){this.createDispatchDataEvent($[271],this.getDate());
}return;
}}else if(evt.isShiftPressed()){switch(evt.getKeyIdentifier()){case $[75]:yearIncrement=-1;
break;
case $[88]:yearIncrement=1;
break;
}}
if(dayIncrement!=null||monthIncrement!=null||yearIncrement!=null){var date=this.getDate();
if(date!=null){date=new Date(date.getTime());
}
if(date==null){date=new Date();
}else{if(dayIncrement!=null)date.setDate(date.getDate()+dayIncrement);
if(monthIncrement!=null)date.setMonth(date.getMonth()+monthIncrement);
if(yearIncrement!=null)date.setFullYear(date.getFullYear()+yearIncrement);
}this.setDate(date);
}};
qx.Proto.showMonth=function(month,year){if((month!=null&&month!=this.getShownMonth())||(year!=null&&year!=this.getShownYear())){if(month!=null){this.setShownMonth(month);
}
if(year!=null){this.setShownYear(year);
}this._updateDatePane();
}};
qx.Proto._updateDatePane=function(){var DateChooser=qx.ui.component.DateChooser;
var today=new Date();
var todayYear=today.getFullYear();
var todayMonth=today.getMonth();
var todayDayOfMonth=today.getDate();
var selDate=this.getDate();
var selYear=(selDate==null)?-1:selDate.getFullYear();
var selMonth=(selDate==null)?-1:selDate.getMonth();
var selDayOfMonth=(selDate==null)?-1:selDate.getDate();
var shownMonth=this.getShownMonth();
var shownYear=this.getShownYear();
var startOfWeek=qx.locale.Date.getWeekStart();
var helpDate=new Date(this.getShownYear(),this.getShownMonth(),1);
this._monthYearLabel.setHtml((new qx.util.format.DateFormat(DateChooser.MONTH_YEAR_FORMAT)).format(helpDate));
var firstDayOfWeek=helpDate.getDay();
var firstSundayInMonth=(1+7-firstDayOfWeek)%7;
for(var i=0;i<7;i++){var day=(i+startOfWeek)%7;
var dayLabel=this._weekdayLabelArr[i];
helpDate.setDate(firstSundayInMonth+day);
dayLabel.setHtml(DateChooser.WEEKDAY_FORMAT.format(helpDate));
if(qx.locale.Date.isWeekend(day)){dayLabel.addState($[609]);
}else{dayLabel.removeState($[609]);
}}helpDate=new Date(shownYear,shownMonth,1);
var nrDaysOfLastMonth=(7+firstDayOfWeek-startOfWeek)%7;
helpDate.setDate(helpDate.getDate()-nrDaysOfLastMonth);
for(var week=0;week<6;week++){this._weekLabelArr[week].setHtml(DateChooser.WEEK_FORMAT.format(helpDate));
for(var i=0;i<7;i++){var dayLabel=this._dayLabelArr[week*7+i];
var year=helpDate.getFullYear();
var month=helpDate.getMonth();
var dayOfMonth=helpDate.getDate();
var isSelectedDate=(selYear==year&&selMonth==month&&selDayOfMonth==dayOfMonth);
if(isSelectedDate){dayLabel.addState($[24]);
}else{dayLabel.removeState($[24]);
}
if(month!=shownMonth){dayLabel.addState($[472]);
}else{dayLabel.removeState($[472]);
}var isToday=(year==todayYear&&month==todayMonth&&dayOfMonth==todayDayOfMonth);
if(isToday){dayLabel.addState($[756]);
}else{dayLabel.removeState($[756]);
}dayLabel.setHtml($[1]+dayOfMonth);
dayLabel.dateTime=helpDate.getTime();
helpDate.setDate(helpDate.getDate()+1);
}}};
qx.Clazz.MONTH_YEAR_FORMAT=qx.locale.Date.getDateTimeFormat("yyyyMMMM","MMMM yyyy");
qx.Clazz.WEEKDAY_FORMAT=new qx.util.format.DateFormat("EE");
qx.Clazz.WEEK_FORMAT=new qx.util.format.DateFormat("ww");
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}this._lastYearBt.removeEventListener($[27],this._onNavButtonClicked,this);
this._lastMonthBt.removeEventListener($[27],this._onNavButtonClicked,this);
this._nextMonthBt.removeEventListener($[27],this._onNavButtonClicked,this);
this._nextYearBt.removeEventListener($[27],this._onNavButtonClicked,this);
this._lastYearBt.dispose();
this._lastMonthBt.dispose();
this._nextMonthBt.dispose();
this._nextYearBt.dispose();
this._lastYearBt=null;
this._lastMonthBt=null;
this._nextMonthBt=null;
this._nextYearBt=null;
this._monthYearLabel.dispose();
this._monthYearLabel=null;
for(var i=0;i<this._weekdayLabelArr.length;i++){this._weekdayLabelArr[i].dispose();
}this._weekdayLabelArr=null;
for(var i=0;i<this._dayLabelArr.length;i++){this._dayLabelArr[i].dispose();
this._dayLabelArr[i].removeEventListener($[6],this._onDayClicked,this);
this._dayLabelArr[i].removeEventListener($[46],this._onDayDblClicked,this);
}this._dayLabelArr=null;
for(var i=0;i<this._weekLabelArr.length;i++){this._weekLabelArr[i].dispose();
}this._weekLabelArr=null;
this.removeEventListener($[14],this._onkeypress);
return qx.ui.layout.BoxLayout.prototype.dispose.call(this);
};




/* ID: qx.xml.Element */
qx.OO.defineClass($[2069]);
qx.Clazz.serialize=function(element){};
if(window.XMLSerializer){qx.Clazz.serialize=function(element){var element=qx.xml.Document.isDocument(element)?element.documentElement:element;
return (new XMLSerializer()).serializeToString(element);
};
}else{qx.Clazz.serialize=function(element){var element=qx.xml.Document.isDocument(element)?element.documentElement:element;
return element.xml||element.outerHTML;
};
}qx.Clazz.selectSingleNode=function(element,query){};
if(window.XPathEvaluator){qx.Clazz.selectSingleNode=function(element,query){var xpe=new XPathEvaluator();
return xpe.evaluate(query,element,xpe.createNSResolver(element),XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue;
};
}else if(qx.core.Client.getInstance().isMshtml()||document.selectSingleNode){qx.Clazz.selectSingleNode=function(element,query){return element.selectSingleNode(query);
};
}qx.Clazz.selectNodes=function(element,query){};
if(window.XPathEvaluator){qx.Clazz.selectNodes=function(element,query){var xpe=new XPathEvaluator();
var result=xpe.evaluate(query,element,xpe.createNSResolver(element),XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,null);
var nodes=[];
for(var i=0;i<result.snapshotLength;i++){nodes[i]=result.snapshotItem(i);
}return nodes;
};
}else if(qx.core.Client.getInstance().isMshtml()||document.selectNodes){qx.Clazz.selectNodes=function(element,query){return element.selectNodes(query);
};
}qx.Clazz.getElementsByTagNameNS=function(element,namespaceURI,tagname){};
if(document.getElementsByTagNameNS){qx.Clazz.getElementsByTagNameNS=function(element,namespaceURI,tagname){return element.getElementsByTagNameNS(namespaceURI,tagname);
};
}else if(qx.core.Client.getInstance().isMshtml()){qx.Clazz.getElementsByTagNameNS=function(element,namespaceURI,tagname){var doc=element.ownerDocument||element;
doc.setProperty($[1236],$[951]);
doc.setProperty($[2197],$[1344]+namespaceURI+$[103]);
return qx.xml.Element.selectNodes(element,$[1819]+tagname);
};
}



/* ID: qx.xml.Document */
qx.OO.defineClass($[1973]);
qx.Clazz.create=function(namespaceUri,qualifiedName){};
if(document.implementation&&document.implementation.createDocument){qx.Clazz.create=function(namespaceUri,qualifiedName){return document.implementation.createDocument(namespaceUri||$[1],qualifiedName||$[1],null);
};
}else if(qx.core.Client.getInstance().isMshtml()){qx.Clazz.create=function(namespaceUri,qualifiedName){var vServers=[$[842],$[913],$[874],$[1291],$[1861],$[2463]];
var vObject;
for(var i=0,l=vServers.length;i<l;i++){try{vObject=new ActiveXObject(vServers[i]);
break;
}catch(ex){vObject=null;
}}
if(qualifiedName&&vObject){xmlStr=new qx.util.StringBuilder();
xmlStr.add($[1199]);
xmlStr.add(qualifiedName);
if(namespaceUri){xmlStr.add($[1988]);
xmlStr.add(namespaceUri);
xmlStr.add($[103]);
}xmlStr.add($[1148]);
vObject.loadXML(xmlStr.toString());
}return vObject;
};
}else{throw new Error("This browser does not support xml dom creation.");
}qx.Clazz.fromString=function(str){};
if(window.DOMParser){qx.Clazz.fromString=function(str){var dom=(new DOMParser()).parseFromString(str,$[1880]);
return dom;
};
}else if(qx.core.Client.getInstance().isMshtml()){qx.Clazz.fromString=function(str){var dom=qx.xml.Document.create();
dom.loadXML(str);
return dom;
};
}else{throw new Error("This browser does not support xml dom creation from string.");
}qx.Clazz.isDocument=function(obj){return (obj.nodeType==qx.dom.Node.DOCUMENT);
};




/* ID: qx.ui.treevirtual.TreeVirtual */
qx.OO.defineClass($[1585],qx.ui.table.Table,function(headings){var tableModel=new qx.ui.treevirtual.SimpleTreeDataModel();
if(typeof (headings)==$[0]){headings=[headings];
}tableModel.setColumns(headings);
this.setNewSelectionManager(function(obj){return new qx.ui.treevirtual.SelectionManager(obj);
});
this.setNewTableColumnModel(function(obj){return new qx.ui.table.ResizeTableColumnModel(obj);
});
qx.ui.table.Table.call(this,tableModel);
this.setColumnVisibilityButtonVisible(headings.length>1);
this.setRowHeight(16);
this.setMetaColumnCounts(headings.length>1?[1,-1]:[1]);
this.setOverflow($[26]);
var stdcr=new qx.ui.treevirtual.SimpleTreeDataCellRenderer();
var ddcr=new qx.ui.treevirtual.DefaultDataCellRenderer();
var tcm=this.getTableColumnModel();
var treeCol=this.getTableModel().getTreeColumn();
for(var i=0;i<headings.length;i++){tcm.setDataCellRenderer(i,i==treeCol?stdcr:ddcr);
}this.setDataRowRenderer(new qx.ui.treevirtual.SimpleTreeDataRowRenderer());
this.setAlwaysUpdateCells(true);
this.setFocusCellOnMouseMove(true);
this.setRowColors({bgcolFocused:$[787],bgcolFocusedBlur:$[787]});
this.setCellFocusAttributes({backgroundColor:$[1475]});
var scrollers=this._getPaneScrollerArr();
for(var i=0;i<scrollers.length;i++){scrollers[i]._focusIndicator.setAppearance($[1097]);
scrollers[i].setSelectBeforeFocus(true);
}});
qx.OO.addProperty({name:$[515],type:$[3],defaultValue:false,getAlias:$[515]});
qx.Proto.getDataModel=function(){return this.getTableModel();
};
qx.Proto.setUseTreeLines=function(b){var stdcm=this.getTableModel();
var treeCol=stdcm.getTreeColumn();
var dcr=this.getTableColumnModel().getDataCellRenderer(treeCol);
dcr.setUseTreeLines(b);
if(stdcm.hasEventListeners(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED)){var data={firstRow:0,lastRow:stdcm._rowArr.length-1,firstColumn:0,lastColumn:stdcm.getColumnCount()-1};
stdcm.dispatchEvent(new qx.event.type.DataEvent(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,data),true);
}};
qx.Proto.getUseTreeLines=function(){var treeCol=this.getTableModel().getTreeColumn();
var dcr=this.getTableColumnModel().getDataCellRenderer(treeCol);
return dcr.getUseTreeLines();
};
qx.Proto.setAlwaysShowOpenCloseSymbol=function(b){var stdcm=this.getTableModel();
var treeCol=stdcm.getTreeColumn();
var dcr=this.getTableColumnModel().getDataCellRenderer(treeCol);
dcr.setAlwaysShowOpenCloseSymbol(b);
if(stdcm.hasEventListeners(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED)){var data={firstRow:0,lastRow:stdcm._rowArr.length-1,firstColumn:0,lastColumn:stdcm.getColumnCount()-1};
stdcm.dispatchEvent(new qx.event.type.DataEvent(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,data),true);
}};
qx.Proto.setExcludeFirstLevelTreeLines=function(b){var stdcm=this.getTableModel();
var treeCol=stdcm.getTreeColumn();
var dcr=this.getTableColumnModel().getDataCellRenderer(treeCol);
dcr.setExcludeFirstLevelTreeLines(b);
if(stdcm.hasEventListeners(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED)){var data={firstRow:0,lastRow:stdcm._rowArr.length-1,firstColumn:0,lastColumn:stdcm.getColumnCount()-1};
stdcm.dispatchEvent(new qx.event.type.DataEvent(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,data),true);
}};
qx.Proto.getExcludeFirstLevelTreeLines=function(){var treeCol=this.getTableModel().getTreeColumn();
var dcr=this.getTableColumnModel().getDataCellRenderer(treeCol);
return dcr.getExcludeFirstLevelTreeLines();
};
qx.Proto.getAlwaysShowOpenCloseSymbol=function(){var treeCol=this.getTableModel().getTreeColumn();
var dcr=this.getTableColumnModel().getDataCellRenderer(treeCol);
return dcr.getAlwaysShowOpenCloseSymbol();
};
qx.Proto.setSelectionMode=function(mode){this.getSelectionModel().setSelectionMode(mode);
};
qx.Proto.getSelectionMode=function(mode){return this.getSelectionModel().getSelectionMode();
};
qx.Proto.setOverflow=function(s){if(s!=$[26]){throw new Error("Tree overflow must be hidden.  "+"The internal elements of it will scroll.");
}};
qx.Proto.toggleOpened=function(node){if(node.bOpened){this.createDispatchDataEvent($[331],node);
}else{if(node.children.length>0){this.createDispatchDataEvent($[382],node);
}else{this.createDispatchDataEvent($[332],node);
}}if(!node.bHideOpenClose){node.bOpened=!node.bOpened;
var sm=this.getSelectionModel();
var dm=this.getTableModel();
var rowIndex=dm.getNodeRowMap()[node.nodeId];
var bSelected=sm.isSelectedIndex(rowIndex);
this.getSelectionModel()._clearSelection();
dm._clearSelections();
if(bSelected){this.setState(node.nodeId,{bSelected:true});
}}this.getTableModel().setData();
};
qx.Proto.setState=function(nodeId,attributes){this.getTableModel().setState(nodeId,attributes);
};
qx.Proto.setRowColors=function(colors){this.getDataRowRenderer().setRowColors(colors);
};
qx.Proto.setCellFocusAttributes=function(attributes){if(!attributes.opacity){attributes.opacity=0.2;
}var scrollers=this._getPaneScrollerArr();
for(var i=0;i<scrollers.length;i++){scrollers[i]._focusIndicator.set(attributes);
}};
qx.Proto._onkeydown=function(evt){if(!this.getEnabled()){return;
}var identifier=evt.getKeyIdentifier();
var consumed=false;
var modifiers=evt.getModifiers();
if(modifiers==0){switch(identifier){case $[45]:var dm=this.getTableModel();
var focusedRow=this.getFocusedRow();
var treeCol=dm.getTreeColumn();
var node=dm.getValue(treeCol,focusedRow);
if(!node.bHideOpenClose){this.toggleOpened(node);
}consumed=true;
break;
case $[55]:this.moveFocusedCell(-1,0);
break;
case $[56]:this.moveFocusedCell(1,0);
break;
}}else if(modifiers==qx.event.type.DomEvent.CTRL_MASK){switch(identifier){case $[55]:var dm=this.getTableModel();
var focusedRow=this.getFocusedRow();
var treeCol=dm.getTreeColumn();
var node=dm.getValue(treeCol,focusedRow);
if(node.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.BRANCH&&!node.bHideOpenClose&&node.bOpened){this.toggleOpened(node);
}this.setFocusedCell(treeCol,focusedRow,true);
consumed=true;
break;
case $[56]:var dm=this.getTableModel();
var focusedRow=this.getFocusedRow();
var treeCol=dm.getTreeColumn();
var node=dm.getValue(treeCol,focusedRow);
if(node.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.BRANCH&&!node.bHideOpenClose&&!node.bOpened){this.toggleOpened(node);
}this.setFocusedCell(treeCol,focusedRow,true);
consumed=true;
break;
}}else if(modifiers==qx.event.type.DomEvent.SHIFT_MASK){switch(identifier){case $[55]:var dm=this.getTableModel();
var focusedRow=this.getFocusedRow();
var treeCol=dm.getTreeColumn();
var node=dm.getValue(treeCol,focusedRow);
if(node.parentNodeId){var rowIndex=dm.getNodeRowMap()[node.parentNodeId];
this.setFocusedCell(this._focusedCol,rowIndex,true);
}consumed=true;
break;
case $[56]:var dm=this.getTableModel();
var focusedRow=this.getFocusedRow();
var treeCol=dm.getTreeColumn();
var node=dm.getValue(treeCol,focusedRow);
if(node.type==qx.ui.treevirtual.SimpleTreeDataModel.Type.BRANCH&&!node.bHideOpenClose){if(!node.bOpened){this.toggleOpened(node);
}if(node.children.length>0){this.moveFocusedCell(0,1);
}}consumed=true;
break;
}}if(consumed){evt.preventDefault();
evt.stopPropagation();
}else{qx.ui.table.Table.prototype._onkeydown.call(this,evt);
}};
qx.Proto._onkeypress=function(evt){if(!this.getEnabled()){return;
}var consumed=false;
var identifier=evt.getKeyIdentifier();
switch(identifier){case $[55]:case $[56]:consumed=true;
break;
}
if(consumed){evt.preventDefault();
evt.stopPropagation();
}else{qx.ui.table.Table.prototype._onkeypress.call(this,evt);
}};
qx.Proto._onSelectionChanged=function(evt){this.getTableModel()._clearSelections();
if(this.getSelectionMode()!=qx.ui.treevirtual.TreeVirtual.SelectionMode.NONE){var selectedNodes=this._calculateSelectedNodes();
this.createDispatchDataEvent($[145],selectedNodes);
}qx.ui.table.Table.prototype._onSelectionChanged.call(this,evt);
};
qx.Proto.getHierarchy=function(nodeId){var _this=this;
var components=[];
function addHierarchy(nodeId){if(!nodeId){return ;
}var node=_this.getTableModel().getData()[nodeId];
components.unshift(node.label);
addHierarchy(node.parentNodeId);
}addHierarchy(nodeId);
return components;
};
qx.Proto.getFirstChild=function(nodeId){var node=this.getTableModel().getData()[nodeId];
if(node.children.length>0){return node.children[0];
}return null;
};
qx.Proto.getLastChild=function(nodeId){var node=this.getTableModel().getData()[nodeId];
if(node.children.length>0){return node.children[children.length-1];
}return null;
};
qx.Proto.getNextSibling=function(nodeId){var nodes=this.getTableModel().getData();
var node=nodes[nodeId];
var myNodeId=node.nodeId;
var parentChildren=nodes[node.parentNodeId].children;
for(var i=0;i<parentChildren.length;i++){if(parentChildren[i]==myNodeId){if(i<parentChildren.length-1){return parentChildren[i+1];
}return null;
}}};
qx.Proto.getPrevSibling=function(nodeId){var nodes=this.getTableModel().getData();
var node=nodes[nodeId];
var myNodeId=node.nodeId;
var parentChildren=nodes[node.parentNodeId].children;
for(var i=0;i<parentChildren.length;i++){if(parentChildren[i]==myNodeId){if(i>0){return parentChildren[i-1];
}return null;
}}};
qx.Proto._calculateSelectedNodes=function(){var stdcm=this.getTableModel();
var selectedRanges=this.getSelectionModel().getSelectedRanges();
var selectedNodes=[];
var node;
for(var i=0;i<selectedRanges.length;i++){for(var j=selectedRanges[i].minIndex;j<=selectedRanges[i].maxIndex;j++){node=stdcm.getValue(stdcm.getTreeColumn(),j);
stdcm.setState(node.nodeId,{bSelected:true});
selectedNodes.push(node);
}}return selectedNodes;
};
qx.Proto.getSelectedNodes=function(){return this.getTableModel().getSelectedNodes();
};
qx.Clazz.SelectionMode={NONE:qx.ui.table.SelectionModel.NO_SELECTION,SINGLE:qx.ui.table.SelectionModel.SINGLE_SELECTION,SINGLE_INTERVAL:qx.ui.table.SelectionModel.SINGLE_INTERVAL_SELECTION,MULTIPLE_INTERVAL:qx.ui.table.SelectionModel.MULTIPLE_INTERVAL_SELECTION};




/* ID: qx.ui.table.DefaultResizeBehavior */
qx.OO.defineClass($[1955],qx.ui.table.AbstractResizeBehavior,function(){qx.ui.table.AbstractResizeBehavior.call(this);
});
qx.OO.addProperty({name:$[2023],type:$[31],setOnlyOnce:true,defaultValue:function(obj){return new qx.ui.table.ResizeBehaviorColumnData();
}});
qx.Proto.setWidth=function(col,width){if(col>=this._resizeColumnData.length){throw new Error("Column number out of range");
}this._resizeColumnData[col].setWidth(width);
};
qx.Proto.setMinWidth=function(col,width){if(col>=this._resizeColumnData.length){throw new Error("Column number out of range");
}this._resizeColumnData[col].setMinWidth(width);
};
qx.Proto.setMaxWidth=function(col,width){if(col>=this._resizeColumnData.length){throw new Error("Column number out of range");
}this._resizeColumnData[col].setMaxWidth(width);
};
qx.Proto.set=function(col,map){for(var prop in map){switch(prop){case $[42]:this.setWidth(col,map[prop]);
break;
case $[86]:this.setMinWidth(col,map[prop]);
break;
case $[108]:this.setMaxWidth(col,map[prop]);
break;
default:throw new Error("Unknown property: "+prop);
}}};
qx.Proto.onAppear=function(tableColumnModel,event){this._width=this._getAvailableWidth(tableColumnModel);
this._computeColumnsFlexWidth(tableColumnModel,event);
};
qx.Proto.onTableWidthChanged=function(tableColumnModel,event){this._computeColumnsFlexWidth(tableColumnModel,event);
};
qx.Proto.onVerticalScrollBarChanged=function(tableColumnModel,event){this._computeColumnsFlexWidth(tableColumnModel,event);
};
qx.Proto.onColumnWidthChanged=function(tableColumnModel,event){this._extendNextColumn(tableColumnModel,event);
};
qx.Proto.onVisibilityChanged=function(tableColumnModel,event){this._extendLastColumn(tableColumnModel,event);
};
qx.Proto._setNumColumns=function(numColumns){if(numColumns<=this._resizeColumnData.length){this._resizeColumnData.splice(numColumns);
return;
}for(var i=this._resizeColumnData.length;i<numColumns;i++){this._resizeColumnData[i]=this.getNewResizeBehaviorColumnData()();
this._resizeColumnData[i]._columnNumber=i;
}};
qx.Proto._computeColumnsFlexWidth=function(tableColumnModel,event){var debug=true;
if(debug){this.debug("computeColumnsFlexWidth");
}var visibleColumns=tableColumnModel._visibleColumnArr;
var visibleColumnsLength=visibleColumns.length;
var columnData;
var flexibleColumns=[];
var widthUsed=0;
var i;
var availableWidth=this._getAvailableWidth(tableColumnModel);
var width=availableWidth.width;
var extraWidth=availableWidth.extraWidth;
for(i=0;i<visibleColumnsLength;i++){columnData=this._resizeColumnData[visibleColumns[i]];
if(columnData._computedWidthTypeAuto){columnData._computedWidthTypeAuto=false;
columnData._computedWidthTypeFlex=true;
columnData._computedWidthParsed=1;
}if(columnData._computedWidthTypeFlex){flexibleColumns.push(columnData);
}else if(columnData._computedWidthTypePercent){columnData._computedWidthPercentValue=Math.round(width*(columnData._computedWidthParsed/100));
widthUsed+=columnData._computedWidthPercentValue;
}else{widthUsed+=columnData.getWidth();
}}
if(debug){this.debug("Width: "+widthUsed+"/"+width);
this.debug("Flexible Count: "+flexibleColumns.length);
}var widthRemaining=width-widthUsed;
var flexibleColumnsLength=flexibleColumns.length;
var prioritySum=0;
for(i=0;i<flexibleColumnsLength;i++){prioritySum+=flexibleColumns[i]._computedWidthParsed;
}var partWidth=widthRemaining/prioritySum;
bSomethingChanged=true;
for(flexibleColumnsLength=flexibleColumns.length;bSomethingChanged&&flexibleColumnsLength>0;flexibleColumnsLength=flexibleColumns.length){bSomethingChanged=false;
for(i=flexibleColumnsLength-1;i>=0;i--){columnData=flexibleColumns[i];
computedFlexibleWidth=columnData._computedWidthFlexValue=columnData._computedWidthParsed*partWidth;
var min=columnData.getMinWidthValue();
var max=columnData.getMaxWidthValue();
if(min&&computedFlexibleWidth<min){columnData._computedWidthFlexValue=Math.round(min);
widthUsed+=columnData._computedWidthFlexValue;
qx.lang.Array.removeAt(flexibleColumns,i);
bSomethingChanged=true;
columnData=null;
}else if(max&&computedFlexibleWidth>max){columnData._computedWidthFlexValue=Math.round(max);
widthUsed+=columnData._computedWidthFlexValue;
qx.lang.Array.removeAt(flexibleColumns,i);
bSomethingChanged=true;
columnData=null;
}}}if(flexibleColumns.length>0){prioritySum=0;
for(i=0;i<flexibleColumnsLength;i++){prioritySum+=flexibleColumns[i]._computedWidthParsed;
}widthRemaining=width-widthUsed;
partWidth=widthRemaining/prioritySum;
if(widthRemaining<=0){for(i=0;i<flexibleColumnsLength;i++){columnData=flexibleColumns[i];
computedFlexibleWidth=columnData._computedWidthFlexValue=(qx.ui.table.DefaultResizeBehavior.MIN_WIDTH*flexibleColumns[i]._computedWidthParsed);
columnData._computedWidthFlexValue=Math.round(computedFlexibleWidth);
widthUsed+=columnData._computedWidthFlexValue;
}}else{for(i=0;i<flexibleColumnsLength;i++){columnData=flexibleColumns[i];
computedFlexibleWidth=columnData._computedWidthFlexValue=columnData._computedWidthParsed*partWidth;
if(computedFlexibleWidth<qx.ui.table.DefaultResizeBehavior.MIN_WIDTH){computedFlexibleWidth=qx.ui.table.DefaultResizeBehavior.MIN_WIDTH;
}columnData._computedWidthFlexValue=Math.round(computedFlexibleWidth);
widthUsed+=columnData._computedWidthFlexValue;
}}}if(columnData!=null&&widthRemaining>0){columnData._computedWidthFlexValue+=width-widthUsed;
}for(i=0;i<visibleColumnsLength;i++){var colWidth;
columnData=this._resizeColumnData[visibleColumns[i]];
if(columnData._computedWidthTypeFlex){colWidth=columnData._computedWidthFlexValue;
}else if(columnData._computedWidthTypePercent){colWidth=columnData._computedWidthPercentValue;
}else{colWidth=columnData.getWidth();
}if(i==visibleColumnsLength-1){colWidth+=extraWidth;
}tableColumnModel.setColumnWidth(visibleColumns[i],colWidth);
if(debug){this.debug("col "+columnData._columnNumber+": width="+colWidth);
}}};
qx.Proto._extendNextColumn=function(tableColumnModel,event){var data=event.getData();
var visibleColumns=tableColumnModel._visibleColumnArr;
var availableWidth=this._getAvailableWidth(tableColumnModel);
var width=availableWidth.width;
var extraWidth=availableWidth.extraWidth;
var numColumns=visibleColumns.length;
if(data.newWidth>data.oldWidth){return ;
}var i;
var nextCol;
var widthUsed=0;
for(i=0;i<numColumns;i++){widthUsed+=tableColumnModel.getColumnWidth(visibleColumns[i]);
}if(widthUsed<width){for(i=0;i<visibleColumns.length;i++){if(visibleColumns[i]==data.col){nextCol=visibleColumns[i+1];
break;
}}
if(nextCol){var oldWidth=tableColumnModel.getColumnWidth(nextCol);
var newWidth=(width-(widthUsed-tableColumnModel.getColumnWidth(nextCol)));
tableColumnModel.setColumnWidth(nextCol,newWidth);
}}};
qx.Proto._extendLastColumn=function(tableColumnModel,event){var data=event.getData();
if(data.visible){return;
}var visibleColumns=tableColumnModel._visibleColumnArr;
var availableWidth=this._getAvailableWidth(tableColumnModel);
var width=availableWidth.width;
var extraWidth=availableWidth.extraWidth;
var numColumns=visibleColumns.length;
var i;
var lastCol;
var widthUsed=0;
for(i=0;i<numColumns;i++){widthUsed+=tableColumnModel.getColumnWidth(visibleColumns[i]);
}if(widthUsed<width){lastCol=visibleColumns[visibleColumns.length-1];
var oldWidth=tableColumnModel.getColumnWidth(lastCol);
var newWidth=(width-(widthUsed-tableColumnModel.getColumnWidth(lastCol)));
tableColumnModel.setColumnWidth(lastCol,newWidth);
}};
qx.Clazz.MIN_WIDTH=10;




/* ID: qx.ui.table.ResizeBehaviorColumnData */
qx.OO.defineClass($[2039],qx.ui.core.Widget,function(){qx.ui.core.Widget.call(this);
this.setWidth($[37]);
});




/* ID: qx.ui.table.ResizeTableColumnModel */
qx.OO.defineClass($[1600],qx.ui.table.TableColumnModel,function(){qx.ui.table.TableColumnModel.call(this);
this._bInProgress=false;
this._bAppeared=false;
});
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._columnDataArr=this._overallColumnArr=this._visibleColumnArr=this._colToXPosMap=this._table=null;
qx.ui.table.TableColumnModel.prototype.dispose.call(this);
};
qx.OO.addProperty({name:$[1406],type:$[4],defaultValue:new qx.ui.table.DefaultResizeBehavior()});
qx.Proto._modifyBehavior=function(propValue,propOldValue,propData){this.getBehavior()._setNumColumns(this._columnDataArr.length);
return true;
};
qx.Proto.init=function(numColumns,table){qx.ui.table.TableColumnModel.prototype.init.call(this,numColumns);
this._table=table;
table.addEventListener($[80],this._onappear,this);
table.addEventListener($[658],this._ontablewidthchanged,this);
table.addEventListener($[663],this._onverticalscrollbarchanged,this);
this.addEventListener($[179],this._oncolumnwidthchanged,this);
this.addEventListener($[178],this._onvisibilitychanged,this);
this._table.addEventListener($[342],this._addResetColumnWidthButton,this);
this.getBehavior()._setNumColumns(numColumns);
};
qx.Proto._addResetColumnWidthButton=function(event){var data=event.getData();
var menu=data.menu;
var o;
var Am=qx.manager.object.AliasManager;
var icon=Am.getInstance().resolvePath($[1730]);
o=new qx.ui.menu.Separator();
menu.add(o);
o=new qx.ui.menu.Button($[2250],icon);
menu.add(o);
o.addEventListener($[38],this._onappear,this);
};
qx.Proto._onappear=function(event){if(this._bInProgress){return ;
}this._bInProgress=true;
this.debug("onappear");
this.getBehavior().onAppear(this,event);
var _this=this;
window.setTimeout(function(){if(!_this._table.getDisposed()){_this._table._updateScrollerWidths();
_this._table._updateScrollBarVisibility();
}},0);
this._bInProgress=false;
this._bAppeared=true;
};
qx.Proto._ontablewidthchanged=function(event){if(this._bInProgress||!this._bAppeared){return ;
}this._bInProgress=true;
this.debug("ontablewidthchanged");
this.getBehavior().onTableWidthChanged(this,event);
this._bInProgress=false;
};
qx.Proto._onverticalscrollbarchanged=function(event){if(this._bInProgress||!this._bAppeared){return ;
}this._bInProgress=true;
this.debug("onverticalscrollbarchanged");
this.getBehavior().onVerticalScrollBarChanged(this,event);
var _this=this;
window.setTimeout(function(){if(!_this._table.getDisposed()){_this._table._updateScrollerWidths();
_this._table._updateScrollBarVisibility();
}},0);
this._bInProgress=false;
};
qx.Proto._oncolumnwidthchanged=function(event){if(this._bInProgress||!this._bAppeared){return ;
}this._bInProgress=true;
this.debug("oncolumnwidthchanged");
this.getBehavior().onColumnWidthChanged(this,event);
this._bInProgress=false;
};
qx.Proto._onvisibilitychanged=function(event){if(this._bInProgress||!this._bAppeared){return ;
}this._bInProgress=true;
this.debug("onvisibilitychanged");
this.getBehavior().onVisibilityChanged(this,event);
this._bInProgress=false;
};




/* ID: qx.ui.treevirtual.DefaultDataCellRenderer */
qx.OO.defineClass($[948],qx.ui.table.DefaultDataCellRenderer,function(){qx.ui.table.DefaultDataCellRenderer.call(this);
});
qx.Proto._getCellStyle=function(cellInfo){var html=cellInfo.style+qx.ui.treevirtual.SimpleTreeDataCellRenderer.MAIN_DIV_STYLE;
return html;
};




/* ID: qx.Locale */
qx.OO.defineClass($[1104],{_registry:{},define:function(fullname,definition){var vSplitName=fullname.split($[53]);
var vLength=vSplitName.length;
var vParentPackage=window;
var vPartName=vSplitName[0];
for(var i=0,l=vSplitName.length-1;i<l;i++){if(!vParentPackage[vPartName]){vParentPackage[vPartName]={};
}vParentPackage=vParentPackage[vPartName];
vPartName=vSplitName[i+1];
}vParentPackage[vPartName]=definition;
qx.locale.Manager.getInstance().addTranslation(vPartName,definition);
qx.Locale._registry[fullname]=definition;
},byName:function(fullname){return qx.Locale._registry[fullname];
},isDefined:function(fullname){return qx.Locale.byName(fullname)!==undefined;
}});




/* ID: qx.locale.data.C */
qx.Locale.define($[952],{cldr_alternateQuotationEnd:$[1155],cldr_alternateQuotationStart:$[1034],cldr_date_format_full:$[1366],cldr_date_format_long:$[1574],cldr_date_format_medium:$[1621],cldr_date_format_short:$[918],cldr_date_time_format_HHmm:$[794],cldr_date_time_format_HHmmss:$[275],cldr_date_time_format_MMMMd:$[2218],cldr_date_time_format_Md:$[1588],cldr_date_time_format_mmss:$[1325],cldr_date_time_format_yyMM:$[936],cldr_date_time_format_yyQQQQ:$[2166],cldr_date_time_format_yyyyMMM:$[2349],cldr_day_abbreviated_fri:$[1477],cldr_day_abbreviated_mon:$[1494],cldr_day_abbreviated_sat:$[2257],cldr_day_abbreviated_sun:$[1200],cldr_day_abbreviated_thu:$[1059],cldr_day_abbreviated_tue:$[1173],cldr_day_abbreviated_wed:$[1923],cldr_day_narrow_fri:$[458],cldr_day_narrow_mon:$[291],cldr_day_narrow_sat:$[264],cldr_day_narrow_sun:$[264],cldr_day_narrow_thu:$[518],cldr_day_narrow_tue:$[518],cldr_day_narrow_wed:$[2438],cldr_day_wide_fri:$[938],cldr_day_wide_mon:$[2192],cldr_day_wide_sat:$[2275],cldr_day_wide_sun:$[1699],cldr_day_wide_thu:$[1542],cldr_day_wide_tue:$[2259],cldr_day_wide_wed:$[908],cldr_month_abbreviated_1:$[941],cldr_month_abbreviated_10:$[934],cldr_month_abbreviated_11:$[2398],cldr_month_abbreviated_12:$[2004],cldr_month_abbreviated_2:$[1843],cldr_month_abbreviated_3:$[2361],cldr_month_abbreviated_4:$[2187],cldr_month_abbreviated_5:$[621],cldr_month_abbreviated_6:$[1480],cldr_month_abbreviated_7:$[1708],cldr_month_abbreviated_8:$[1938],cldr_month_abbreviated_9:$[1105],cldr_month_narrow_1:$[437],cldr_month_narrow_10:$[625],cldr_month_narrow_11:$[1676],cldr_month_narrow_12:$[2304],cldr_month_narrow_2:$[458],cldr_month_narrow_3:$[291],cldr_month_narrow_4:$[121],cldr_month_narrow_5:$[291],cldr_month_narrow_6:$[437],cldr_month_narrow_7:$[437],cldr_month_narrow_8:$[121],cldr_month_narrow_9:$[264],cldr_month_wide_1:$[2052],cldr_month_wide_10:$[1361],cldr_month_wide_11:$[2176],cldr_month_wide_12:$[1644],cldr_month_wide_2:$[1503],cldr_month_wide_3:$[1773],cldr_month_wide_4:$[2202],cldr_month_wide_5:$[621],cldr_month_wide_6:$[816],cldr_month_wide_7:$[1554],cldr_month_wide_8:$[833],cldr_month_wide_9:$[1691],cldr_number_decimal_separator:$[53],cldr_number_group_separator:$[23],cldr_quotationEnd:$[1609],cldr_quotationStart:$[1497],cldr_time_format_full:$[1869],cldr_time_format_long:$[1642],cldr_time_format_medium:$[2217],cldr_time_format_short:$[1543]});




/* ID: qx.io.remote.Rpc */
qx.OO.defineClass($[1252],qx.core.Target,function(url,serviceName){qx.core.Target.call(this);
this.setUrl(url);
if(serviceName!=null){this.setServiceName(serviceName);
}this._previousServerSuffix=null;
this._currentServerSuffix=null;
if(qx.core.ServerSettings){this._currentServerSuffix=qx.core.ServerSettings.serverPathSuffix;
}});
qx.OO.addProperty({name:$[22],type:$[2]});
qx.OO.addProperty({name:$[776],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[317],type:$[0],defaultValue:null});
qx.OO.addProperty({name:$[1611],type:$[0],defaultValue:null});
qx.OO.addProperty({name:$[1948],type:$[4],defaultValue:undefined});
qx.OO.addProperty({name:$[409],type:$[0]});
qx.OO.addProperty({name:$[295],type:$[0]});
qx.OO.addProperty({name:$[363],type:$[3]});
qx.io.remote.Rpc.origin={server:1,application:2,transport:3,local:4};
qx.io.remote.Rpc.localError={timeout:1,abort:2};
qx.Proto._callInternal=function(args,callType,refreshSession){var self=this;
var offset=(callType==0?0:1);
var whichMethod=(refreshSession?$[2160]:args[offset]);
var handler=args[0];
var argsArray=[];
var eventTarget=this;
for(var i=offset+1;i<args.length;++i){argsArray.push(args[i]);
}var req=new qx.io.remote.Request(this.getUrl(),qx.net.Http.METHOD_POST,qx.util.Mime.JSON);
var requestObject={"service":(refreshSession?null:this.getServiceName()),"method":whichMethod,"id":req.getSequenceNumber(),"params":argsArray};
var serverData=this.getServerData();
if(serverData!==undefined){requestObject.server_data=serverData;
}req.setCrossDomain(this.getCrossDomain());
if(this.getUsername()){req.setUseBasicHttpAuth(this.getUseBasicHttpAuth());
req.setUsername(this.getUsername());
req.setPassword(this.getPassword());
}req.setTimeout(this.getTimeout());
var ex=null;
var id=null;
var result=null;
var response=null;
var handleRequestFinished=function(eventType,eventTarget){switch(callType){case 0:break;
case 1:handler(result,ex,id);
break;
case 2:if(!ex){eventTarget.createDispatchDataEvent(eventType,response);
}else{ex.id=id;
if(args[0]){eventTarget.createDispatchDataEvent($[28],ex);
}else{eventTarget.createDispatchDataEvent(eventType,ex);
}}}};
var addToStringToObject=function(obj){obj.toString=function(){switch(obj.origin){case qx.io.remote.Rpc.origin.server:return $[1658]+obj.code+$[79]+obj.message;
case qx.io.remote.Rpc.origin.application:return $[1158]+obj.code+$[79]+obj.message;
case qx.io.remote.Rpc.origin.transport:return $[2255]+obj.code+$[79]+obj.message;
case qx.io.remote.Rpc.origin.local:return $[1643]+obj.code+$[79]+obj.message;
default:return $[1242]+obj.origin+$[1310]+obj.code+$[79]+obj.message;
}};
};
var makeException=function(origin,code,message){var ex=new Object();
ex.origin=origin;
ex.code=code;
ex.message=message;
addToStringToObject(ex);
return ex;
};
req.addEventListener($[28],function(evt){var code=evt.getData().getStatusCode();
ex=makeException(qx.io.remote.Rpc.origin.transport,code,qx.io.remote.Exchange.statusCodeToString(code));
id=this.getSequenceNumber();
handleRequestFinished($[28],eventTarget);
});
req.addEventListener($[22],function(evt){ex=makeException(qx.io.remote.Rpc.origin.local,qx.io.remote.Rpc.localError.timeout,$[2096]);
id=this.getSequenceNumber();
handleRequestFinished($[22],eventTarget);
});
req.addEventListener($[35],function(evt){ex=makeException(qx.io.remote.Rpc.origin.local,qx.io.remote.Rpc.localError.abort,$[2251]);
id=this.getSequenceNumber();
handleRequestFinished($[35],eventTarget);
});
req.addEventListener($[17],function(evt){response=evt.getData().getContent();
id=response[$[268]];
if(id!=this.getSequenceNumber()){this.warn($[2112]+id+$[2327]+$[149]+this.getSequenceNumber()+$[251]);
}var exTest=response[$[106]];
if(exTest!=null){result=null;
addToStringToObject(exTest);
ex=exTest;
}else{result=response[$[1649]];
if(refreshSession){result=eval($[149]+result+$[82]);
var newSuffix=qx.core.ServerSettings.serverPathSuffix;
if(self._currentServerSuffix!=newSuffix){self._previousServerSuffix=self._currentServerSuffix;
self._currentServerSuffix=newSuffix;
}self.setUrl(self.fixUrl(self.getUrl()));
}}handleRequestFinished($[17],eventTarget);
});
req.setData(qx.io.Json.stringify(requestObject));
req.setAsynchronous(callType>0);
if(req.getCrossDomain()){req.setRequestHeader($[246],$[637]);
}else{req.setRequestHeader($[246],qx.util.Mime.JSON);
}req.send();
if(callType==0){if(ex!=null){var error=new Error(ex.toString());
error.rpcdetails=ex;
throw error;
}return result;
}else{return req;
}};
qx.Proto.fixUrl=function(url){if(this._previousServerSuffix==null||this._currentServerSuffix==null||this._previousServerSuffix==$[1]||this._previousServerSuffix==this._currentServerSuffix){return url;
}var index=url.indexOf(this._previousServerSuffix);
if(index==-1){return url;
}return url.substring(0,index)+this._currentServerSuffix+url.substring(index+this._previousServerSuffix.length);
};
qx.Proto.callSync=function(methodName){return this._callInternal(arguments,0);
};
qx.Proto.callAsync=function(handler,methodName){return this._callInternal(arguments,1);
};
qx.Proto.callAsyncListeners=function(coalesce,methodName){return this._callInternal(arguments,2);
};
qx.Proto.refreshSession=function(handler){if(this.getCrossDomain()){if(qx.core.ServerSettings&&qx.core.ServerSettings.serverPathSuffix){var timeDiff=(new Date()).getTime()-qx.core.ServerSettings.lastSessionRefresh;
if(timeDiff/1000>(qx.core.ServerSettings.sessionTimeoutInSeconds-30)){this._callInternal([handler],1,true);
}else{handler(true);
}}else{handler(false);
}}else{handler(true);
}};
qx.Proto.abort=function(opaqueCallRef){opaqueCallRef.abort();
};
qx.Clazz.makeServerURL=function(instanceId){var retVal=null;
if(qx.core.ServerSettings){retVal=qx.core.ServerSettings.serverPathPrefix+$[1367]+qx.core.ServerSettings.serverPathSuffix;
if(instanceId!=null){retVal+=$[838]+instanceId;
}}return retVal;
};




/* ID: qx.dev.Pollution */
qx.OO.defineClass($[1133]);
qx.Clazz.names={"window":window,"document":document,"body":document.body};
qx.Clazz.ignore={"window":[$[1651],$[1978],$[474],$[1011],$[1371],$[1679],$[1050],$[976],$[1975],$[1593],$[696],$[1884],$[1114],$[1578],$[2459],$[1833],$[764],$[1279],$[1339],$[2387],$[131],$[512],$[77],$[2395],$[1051],$[202],$[942],$[12],$[514],$[97],$[139],$[112],$[1160],$[1146],$[826],$[489],$[531],$[421],$[2047],$[1314],$[1710],$[892],$[1935],$[1775],$[2270],$[356],$[299],$[1706],$[667],$[713],$[616],$[753],$[1443],$[1969],$[1519],$[894],$[1601],$[1493],$[920],$[856],$[1289]],"document":[$[1967],$[77],$[2062],$[749],$[1390],$[170],$[111],$[2445],$[1753],$[768],$[533],$[734],$[702],$[2043],$[2087],$[2153],$[1139],$[1476],$[1599],$[1037],$[1276],$[982],$[1844],$[508]],"body":[$[2021],$[1008],$[1172],$[1999],$[2372],$[1897],$[1343],$[783],$[2247],$[2155],$[512],$[1515],$[2083],$[1435],$[1348],$[702],$[734],$[1381],$[2092],$[2465],$[1793],$[256],$[207],$[843],$[1748],$[832],$[1260],$[2417],$[508],$[1865],$[533],$[768],$[143],$[1126],$[1484],$[1223],$[2123]]};
qx.Clazz.consoleInfo=function(object){var msg=qx.dev.Pollution.getTextList(object||$[131]);
if(msg){alert("Global namespace is polluted by the following unknown objects:\n\n"+msg);
}else{alert("Global namespace is not polluted by any unknown objects.");
}};
qx.Clazz.extract=function(object){var ext=[];
var ign=qx.dev.Pollution.ignore[object];
var clientInfos=qx.core.Client.getInstance();
if(clientInfos.isMshtml()&&(object==$[131])){ign=ign.slice();
for(var frameIndex=0;frameIndex<window.length;frameIndex++){ign.push($[1]+frameIndex);
}}var obj=qx.dev.Pollution.names[object];
for(var key in obj){try{if(clientInfos.isMshtml()&&(clientInfos.getMajor()>=7)&&(object==$[131])&&(key==$[764])){continue;
}if(typeof obj[key]==$[41]||obj[key]===null){continue;
}if(typeof obj[key]==$[31]&&obj[key].toString().indexOf($[782])!=-1){continue;
}if(typeof obj[key].constructor==$[31]){if((obj[key].constructor.toString().indexOf($[782])!=-1)||(obj[key].constructor.toString().indexOf($[2461])!=-1)){continue;
}}if(qx.lang.Array.contains(ign,key)){continue;
}}catch(ex){continue;
}ext.push({"key":key,"value":obj[key]});
}return ext;
};
qx.Clazz.getHtmlTable=function(object){var all=[];
var rowStart=$[2072];
var cellSplit=$[859];
var rowEnd=$[1814];
all.push($[2402]);
var ext=this.extract(object);
for(var i=0;i<ext.length;i++){all.push(rowStart+ext[i].key+cellSplit+ext[i].value+rowEnd);
}all.push($[994]);
return all.join($[1]);
};
qx.Clazz.getTextList=function(object){var all=[];
var cellSplit=$[79];
var rowEnd=$[69];
var ext=this.extract(object);
for(var i=0;i<ext.length;i++){all.push(ext[i].key+cellSplit+ext[i].value+rowEnd);
}return all.join($[1]);
};




/* ID: qx.ui.form.RepeatButton */
qx.OO.defineClass($[882],qx.ui.form.Button,function(vText,vIcon,vIconWidth,vIconHeight,vFlash){qx.ui.form.Button.call(this,vText,vIcon,vIconWidth,vIconHeight,vFlash);
this._timer=new qx.client.Timer;
this._timer.setInterval(this.getInterval());
this._timer.addEventListener($[54],this._oninterval,this);
});
qx.OO.addProperty({name:$[54],type:$[2],defaultValue:100});
qx.OO.addProperty({name:$[583],type:$[2],defaultValue:500});
qx.Proto._onmousedown=function(e){if(e.getTarget()!=this||!e.isLeftButtonPressed()){return;
}this._executed=false;
this._timer.setInterval(this.getFirstInterval());
this._timer.start();
this.removeState($[51]);
this.addState($[19]);
};
qx.Proto._onmouseup=function(e){this.setCapture(false);
if(!this.hasState($[51])){this.addState($[58]);
if(this.hasState($[19])&&!this._executed){this.execute();
}}this._timer.stop();
this.removeState($[51]);
this.removeState($[19]);
};
qx.Proto._oninterval=function(e){this._timer.stop();
this._timer.setInterval(this.getInterval());
this._timer.start();
this._executed=true;
this.createDispatchEvent($[38]);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._timer){this._timer.stop();
this._timer.dispose();
this._timer=null;
}return qx.ui.form.Button.prototype.dispose.call(this);
};




/* ID: qx.ui.listview.ContentCellLink */
qx.OO.defineClass($[902],qx.ui.embed.LinkEmbed,function(vHtml){qx.ui.embed.LinkEmbed.call(this,vHtml);
this.setSelectable(true);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[2429]});
qx.ui.listview.ContentCellLink.empty={html:$[1],uri:$[277]};




/* ID: qx.ui.component.ColorSelector */
qx.OO.defineClass($[1591],qx.ui.layout.VerticalBoxLayout,function(vPreviousRed,vPreviousGreen,vPreviousBlue){qx.ui.layout.VerticalBoxLayout.call(this);
this._createControlBar();
this._createButtonBar();
this._createControlPane();
this._createHueSaturationPane();
this._createBrightnessPane();
this._createPresetFieldSet();
this._createInputFieldSet();
this._createPreviewFieldSet();
this._createHexField();
this._createRgbSpinner();
this._createHsbSpinner();
this._createPreviewContent();
if(arguments.length==3){this.setPreviousColor(vPreviousRed,vPreviousGreen,vPreviousBlue);
}});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[873]});
qx.OO.addProperty({name:$[463],type:$[2],defaultValue:255});
qx.OO.addProperty({name:$[345],type:$[2],defaultValue:255});
qx.OO.addProperty({name:$[480],type:$[2],defaultValue:255});
qx.OO.addProperty({name:$[1735],type:$[2],defaultValue:0});
qx.OO.addProperty({name:$[1253],type:$[2],defaultValue:0});
qx.OO.addProperty({name:$[2443],type:$[2],defaultValue:100});
qx.Settings.setDefault($[1614],$[530]);
qx.Settings.setDefault($[2389],$[499]);
qx.Settings.setDefault($[1639],$[569]);
qx.Settings.setDefault($[1386],$[746]);
qx.Settings.setDefault($[1009],$[442]);
qx.Settings.setDefault($[1352],$[725]);
qx.Settings.setDefault($[867],$[565]);
qx.Settings.setDefault($[811],$[705]);
qx.Proto._updateContext=null;
qx.Proto._createControlBar=function(){this._controlBar=new qx.ui.layout.HorizontalBoxLayout;
this._controlBar.setHeight($[5]);
this._controlBar.setParent(this);
};
qx.Proto._createButtonBar=function(){this._btnbar=new qx.ui.layout.HorizontalBoxLayout;
this._btnbar.setHeight($[5]);
this._btnbar.setSpacing(4);
this._btnbar.setHorizontalChildrenAlign($[10]);
this._btnbar.setPadding(2,4);
this.add(this._btnbar);
this._btncancel=new qx.ui.form.Button(this.tr($[499]),$[624]);
this._btnok=new qx.ui.form.Button(this.tr($[530]),$[230]);
this._btncancel.addEventListener($[38],this._onButtonCancelExecute,this);
this._btnok.addEventListener($[38],this._onButtonOkExecute,this);
this._btnbar.add(this._btncancel,this._btnok);
};
qx.Proto._createControlPane=function(){this._controlPane=new qx.ui.layout.VerticalBoxLayout;
this._controlPane.setWidth($[5]);
this._controlPane.setPadding(4);
this._controlPane.setPaddingBottom(7);
this._controlPane.setParent(this._controlBar);
};
qx.Proto._createHueSaturationPane=function(){this._hueSaturationPane=new qx.ui.layout.CanvasLayout;
this._hueSaturationPane.setWidth($[5]);
this._hueSaturationPane.setPadding(6,4);
this._hueSaturationPane.setParent(this._controlBar);
this._hueSaturationPane.addEventListener($[62],this._onHueSaturationPaneMouseWheel,this);
this._hueSaturationField=new qx.ui.basic.Image($[1944]);
this._hueSaturationField.setBorder(qx.renderer.border.BorderPresets.getInstance().thinInset);
this._hueSaturationField.setMargin(5);
this._hueSaturationField.setParent(this._hueSaturationPane);
this._hueSaturationField.addEventListener($[6],this._onHueSaturationFieldMouseDown,this);
this._hueSaturationHandle=new qx.ui.basic.Image($[858]);
this._hueSaturationHandle.setLocation(0,256);
this._hueSaturationHandle.setParent(this._hueSaturationPane);
this._hueSaturationHandle.addEventListener($[6],this._onHueSaturationHandleMouseDown,this);
this._hueSaturationHandle.addEventListener($[7],this._onHueSaturationHandleMouseUp,this);
this._hueSaturationHandle.addEventListener($[18],this._onHueSaturationHandleMouseMove,this);
};
qx.Proto._createBrightnessPane=function(){this._brightnessPane=new qx.ui.layout.CanvasLayout;
this._brightnessPane.setWidth($[5]);
this._brightnessPane.setPadding(6,4);
this._brightnessPane.setParent(this._controlBar);
this._brightnessPane.addEventListener($[62],this._onBrightnessPaneMouseWheel,this);
this._brightnessField=new qx.ui.basic.Image($[1965]);
this._brightnessField.setBorder(qx.renderer.border.BorderPresets.getInstance().thinInset);
this._brightnessField.setMargin(5,7);
this._brightnessField.setParent(this._brightnessPane);
this._brightnessField.addEventListener($[6],this._onBrightnessFieldMouseDown,this);
this._brightnessHandle=new qx.ui.basic.Image($[1120]);
this._brightnessHandle.setLocation(0,0);
this._brightnessHandle.setParent(this._brightnessPane);
this._brightnessHandle.addEventListener($[6],this._onBrightnessHandleMouseDown,this);
this._brightnessHandle.addEventListener($[7],this._onBrightnessHandleMouseUp,this);
this._brightnessHandle.addEventListener($[18],this._onBrightnessHandleMouseMove,this);
};
qx.Proto._createPresetFieldSet=function(){this._presetFieldSet=new qx.ui.groupbox.GroupBox(this.tr($[569]));
this._presetFieldSet.setHeight($[5]);
this._presetFieldSet.setParent(this._controlPane);
this._presetGrid=new qx.ui.layout.GridLayout;
this._presetGrid.setHorizontalSpacing(2);
this._presetGrid.setVerticalSpacing(2);
this._presetGrid.setColumnCount(11);
this._presetGrid.setRowCount(4);
this._presetGrid.setColumnWidth(0,18);
this._presetGrid.setColumnWidth(1,18);
this._presetGrid.setColumnWidth(2,18);
this._presetGrid.setColumnWidth(3,18);
this._presetGrid.setColumnWidth(4,18);
this._presetGrid.setColumnWidth(5,18);
this._presetGrid.setColumnWidth(6,18);
this._presetGrid.setColumnWidth(7,18);
this._presetGrid.setColumnWidth(8,18);
this._presetGrid.setColumnWidth(9,18);
this._presetGrid.setRowHeight(0,16);
this._presetGrid.setRowHeight(1,16);
this._presetFieldSet.add(this._presetGrid);
this._presetTable=[$[1660],$[463],$[962],$[1711],$[2036],$[1573],$[2228],$[984],$[345],$[2423],$[480],$[1462],$[1855],$[680],$[1328],$[1190],$[1488],$[878],$[1084],$[101]];
var colorField;
for(var i=0;i<2;i++){for(var j=0;j<10;j++){colorField=new qx.ui.basic.Terminator;
colorField.setBorder(qx.renderer.border.BorderPresets.getInstance().thinInset);
colorField.setBackgroundColor(this._presetTable[i*10+j]);
colorField.addEventListener($[6],this._onColorFieldClick,this);
this._presetGrid.add(colorField,j,i);
}}};
qx.Proto._createInputFieldSet=function(){this._inputFieldSet=new qx.ui.groupbox.GroupBox(this.tr($[746]));
this._inputFieldSet.setHeight($[5]);
this._inputFieldSet.setParent(this._controlPane);
this._inputLayout=new qx.ui.layout.VerticalBoxLayout;
this._inputLayout.setHeight($[5]);
this._inputLayout.setSpacing(10);
this._inputLayout.setParent(this._inputFieldSet.getFrameObject());
};
qx.Proto._createPreviewFieldSet=function(){this._previewFieldSet=new qx.ui.groupbox.GroupBox(this.tr($[442]));
this._previewFieldSet.setHeight($[37]);
this._previewFieldSet.setParent(this._controlPane);
this._previewLayout=new qx.ui.layout.HorizontalBoxLayout;
this._previewLayout.setHeight($[39]);
this._previewLayout.setLocation(0,0);
this._previewLayout.setRight(0);
this._previewLayout.setSpacing(10);
this._previewLayout.setParent(this._previewFieldSet.getFrameObject());
};
qx.Proto._createHexField=function(){this._hexLayout=new qx.ui.layout.HorizontalBoxLayout;
this._hexLayout.setHeight($[5]);
this._hexLayout.setSpacing(4);
this._hexLayout.setVerticalChildrenAlign($[34]);
this._hexLayout.setParent(this._inputLayout);
this._hexLabel=new qx.ui.basic.Label(this.tr($[705]));
this._hexLabel.setWidth(25);
this._hexLabel.setParent(this._hexLayout);
this._hexHelper=new qx.ui.basic.Label($[277]);
this._hexHelper.setParent(this._hexLayout);
this._hexField=new qx.ui.form.TextField($[1143]);
this._hexField.setWidth(50);
this._hexField.setFont($[970]);
this._hexField.setParent(this._hexLayout);
this._hexField.addEventListener($[258],this._onHexFieldChange,this);
};
qx.Proto._createRgbSpinner=function(){this._rgbSpinLayout=new qx.ui.layout.HorizontalBoxLayout;
this._rgbSpinLayout.setHeight($[5]);
this._rgbSpinLayout.setSpacing(4);
this._rgbSpinLayout.setVerticalChildrenAlign($[34]);
this._rgbSpinLayout.setParent(this._inputLayout);
this._rgbSpinLabel=new qx.ui.basic.Label(this.tr($[725]));
this._rgbSpinLabel.setWidth(25);
this._rgbSpinLabel.setParent(this._rgbSpinLayout);
this._rgbSpinRed=new qx.ui.form.Spinner(0,255,255);
this._rgbSpinRed.setWidth(50);
this._rgbSpinGreen=new qx.ui.form.Spinner(0,255,255);
this._rgbSpinGreen.setWidth(50);
this._rgbSpinBlue=new qx.ui.form.Spinner(0,255,255);
this._rgbSpinBlue.setWidth(50);
this._rgbSpinLayout.add(this._rgbSpinRed,this._rgbSpinGreen,this._rgbSpinBlue);
this._rgbSpinRed.addEventListener($[32],this._setRedFromSpinner,this);
this._rgbSpinGreen.addEventListener($[32],this._setGreenFromSpinner,this);
this._rgbSpinBlue.addEventListener($[32],this._setBlueFromSpinner,this);
};
qx.Proto._createHsbSpinner=function(){this._hsbSpinLayout=new qx.ui.layout.HorizontalBoxLayout;
this._hsbSpinLayout.setHeight($[5]);
this._hsbSpinLayout.setSpacing(4);
this._hsbSpinLayout.setVerticalChildrenAlign($[34]);
this._hsbSpinLayout.setParent(this._inputLayout);
this._hsbSpinLabel=new qx.ui.basic.Label(this.tr($[565]));
this._hsbSpinLabel.setWidth(25);
this._hsbSpinLayout.add(this._hsbSpinLabel);
this._hsbSpinHue=new qx.ui.form.Spinner(0,0,360);
this._hsbSpinHue.setWidth(50);
this._hsbSpinSaturation=new qx.ui.form.Spinner(0,0,100);
this._hsbSpinSaturation.setWidth(50);
this._hsbSpinBrightness=new qx.ui.form.Spinner(0,100,100);
this._hsbSpinBrightness.setWidth(50);
this._hsbSpinLayout.add(this._hsbSpinHue,this._hsbSpinSaturation,this._hsbSpinBrightness);
this._hsbSpinHue.addEventListener($[32],this._setHueFromSpinner,this);
this._hsbSpinSaturation.addEventListener($[32],this._setSaturationFromSpinner,this);
this._hsbSpinBrightness.addEventListener($[32],this._setBrightnessFromSpinner,this);
};
qx.Proto._createPreviewContent=function(){this._oldColorPreview=new qx.ui.basic.Terminator;
this._oldColorPreview.setBorder(qx.renderer.border.BorderPresets.getInstance().thinInset);
this._oldColorPreview.setWidth($[37]);
this._oldColorPreview.setBackgroundImage($[413]);
this._oldColorPreview.setParent(this._previewLayout);
this._newColorPreview=new qx.ui.basic.Terminator;
this._newColorPreview.setBorder(qx.renderer.border.BorderPresets.getInstance().thinInset);
this._newColorPreview.setWidth($[37]);
this._newColorPreview.setBackgroundColor($[101]);
this._newColorPreview.setParent(this._previewLayout);
};
qx.Proto._modifyRed=function(propValue,propOldValue,propData){if(this._updateContext===null){this._updateContext=$[446];
}
if(this._updateContext!==$[114]){this._rgbSpinRed.setValue(propValue);
}
if(this._updateContext!==$[132]){this._setHexFromRgb();
}
switch(this._updateContext){case $[114]:case $[132]:case $[446]:this._setHueFromRgb();
}this._setPreviewFromRgb();
if(this._updateContext===$[446]){this._updateContext=null;
}return true;
};
qx.Proto._modifyGreen=function(propValue,propOldValue,propData){if(this._updateContext===null){this._updateContext=$[344];
}
if(this._updateContext!==$[114]){this._rgbSpinGreen.setValue(propValue);
}
if(this._updateContext!==$[132]){this._setHexFromRgb();
}
switch(this._updateContext){case $[114]:case $[132]:case $[344]:this._setHueFromRgb();
}this._setPreviewFromRgb();
if(this._updateContext===$[344]){this._updateContext=null;
}return true;
};
qx.Proto._modifyBlue=function(propValue,propOldValue,propData){if(this._updateContext===null){this._updateContext=$[351];
}
if(this._updateContext!==$[114]){this._rgbSpinBlue.setValue(propValue);
}
if(this._updateContext!==$[132]){this._setHexFromRgb();
}
switch(this._updateContext){case $[114]:case $[132]:case $[351]:this._setHueFromRgb();
}this._setPreviewFromRgb();
if(this._updateContext===$[351]){this._updateContext=null;
}return true;
};
qx.Proto._modifyHue=function(propValue,propOldValue,propData){if(this._updateContext===null){this._updateContext=$[364];
}
if(this._updateContext!==$[110]){this._hsbSpinHue.setValue(propValue);
}
if(this._updateContext!==$[181]){if(this._hueSaturationHandle.isCreated()){this._hueSaturationHandle._applyRuntimeLeft(Math.round(propValue/1.40625)+this._hueSaturationPane.getPaddingLeft());
}else{this._hueSaturationHandle.setLeft(Math.round(propValue/1.40625));
}}
switch(this._updateContext){case $[110]:case $[181]:case $[364]:this._setRgbFromHue();
}
if(this._updateContext===$[364]){this._updateContext=null;
}return true;
};
qx.Proto._modifySaturation=function(propValue,propOldValue,propData){if(this._updateContext===null){this._updateContext=$[401];
}
if(this._updateContext!==$[110]){this._hsbSpinSaturation.setValue(propValue);
}
if(this._updateContext!==$[181]){if(this._hueSaturationHandle.isCreated()){this._hueSaturationHandle._applyRuntimeTop(256-Math.round(propValue*2.56)+this._hueSaturationPane.getPaddingTop());
}else{this._hueSaturationHandle.setTop(256-Math.round(propValue*2.56));
}}
switch(this._updateContext){case $[110]:case $[181]:case $[401]:this._setRgbFromHue();
}
if(this._updateContext===$[401]){this._updateContext=null;
}return true;
};
qx.Proto._modifyBrightness=function(propValue,propOldValue,propData){if(this._updateContext===null){this._updateContext=$[375];
}
if(this._updateContext!==$[110]){this._hsbSpinBrightness.setValue(propValue);
}
if(this._updateContext!==$[324]){var topValue=256-Math.round(propValue*2.56);
if(this._brightnessHandle.isCreated()){this._brightnessHandle._applyRuntimeTop(topValue+this._brightnessPane.getPaddingTop());
}else{this._brightnessHandle.setTop(topValue);
}}
switch(this._updateContext){case $[110]:case $[324]:case $[375]:this._setRgbFromHue();
}
if(this._updateContext===$[375]){this._updateContext=null;
}return true;
};
qx.Proto._onBrightnessHandleMouseDown=function(e){this._brightnessHandle.setCapture(true);
this._brightnessSubtract=qx.html.Location.getPageOuterTop(this._brightnessField.getElement())+(e.getPageY()-qx.html.Location.getPageBoxTop(this._brightnessHandle.getElement()));
e.setPropagationStopped(true);
};
qx.Proto._onBrightnessHandleMouseUp=function(e){this._brightnessHandle.setCapture(false);
};
qx.Proto._onBrightnessHandleMouseMove=function(e){if(this._brightnessHandle.getCapture()){this._setBrightnessOnFieldEvent(e);
}};
qx.Proto._onBrightnessFieldMouseDown=function(e){this._brightnessSubtract=qx.html.Location.getPageOuterTop(this._brightnessField.getElement())+Math.round(qx.html.Dimension.getBoxHeight(this._brightnessHandle.getElement())/2);
this._setBrightnessOnFieldEvent(e);
this._brightnessHandle.setCapture(true);
};
qx.Proto._onBrightnessPaneMouseWheel=function(e){this.setBrightness(qx.lang.Number.limit(this.getBrightness()+e.getWheelDelta(),0,100));
};
qx.Proto._setBrightnessOnFieldEvent=function(e){var vValue=qx.lang.Number.limit(e.getPageY()-this._brightnessSubtract,0,256);
this._updateContext=$[324];
if(this._brightnessHandle.isCreated()){this._brightnessHandle._applyRuntimeTop(vValue+this._brightnessPane.getPaddingTop());
}else{this._brightnessHandle.setTop(vValue);
}this.setBrightness(100-Math.round(vValue/2.56));
this._updateContext=null;
};
qx.Proto._onButtonOkExecute=function(e){this.createDispatchEvent($[661]);
};
qx.Proto._onButtonCancelExecute=function(e){this.createDispatchEvent($[552]);
};
qx.Proto._onHueSaturationHandleMouseDown=function(e){this._hueSaturationHandle.setCapture(true);
this._hueSaturationSubtractTop=qx.html.Location.getPageOuterTop(this._hueSaturationField.getElement())+(e.getPageY()-qx.html.Location.getPageBoxTop(this._hueSaturationHandle.getElement()));
this._hueSaturationSubtractLeft=qx.html.Location.getPageOuterLeft(this._hueSaturationField.getElement())+(e.getPageX()-qx.html.Location.getPageBoxLeft(this._hueSaturationHandle.getElement()));
e.setPropagationStopped(true);
};
qx.Proto._onHueSaturationHandleMouseUp=function(e){this._hueSaturationHandle.setCapture(false);
};
qx.Proto._onHueSaturationHandleMouseMove=function(e){if(this._hueSaturationHandle.getCapture()){this._setHueSaturationOnFieldEvent(e);
}};
qx.Proto._onHueSaturationFieldMouseDown=function(e){this._hueSaturationSubtractTop=qx.html.Location.getPageOuterTop(this._hueSaturationField.getElement())+Math.round(qx.html.Dimension.getBoxHeight(this._hueSaturationHandle.getElement())/2);
this._hueSaturationSubtractLeft=qx.html.Location.getPageOuterLeft(this._hueSaturationField.getElement())+Math.round(qx.html.Dimension.getBoxWidth(this._hueSaturationHandle.getElement())/2);
this._setHueSaturationOnFieldEvent(e);
this._hueSaturationHandle.setCapture(true);
};
qx.Proto._onHueSaturationPaneMouseWheel=function(e){this.setSaturation(qx.lang.Number.limit(this.getSaturation()+e.getWheelDelta(),0,100));
};
qx.Proto._setHueSaturationOnFieldEvent=function(e){var vTop=qx.lang.Number.limit(e.getPageY()-this._hueSaturationSubtractTop,0,256);
var vLeft=qx.lang.Number.limit(e.getPageX()-this._hueSaturationSubtractLeft,0,256);
if(this._hueSaturationHandle.isCreated()){this._hueSaturationHandle._applyRuntimeTop(vTop+this._hueSaturationPane.getPaddingTop());
this._hueSaturationHandle._applyRuntimeLeft(vLeft+this._hueSaturationPane.getPaddingLeft());
}else{this._hueSaturationHandle.setTop(vTop);
this._hueSaturationHandle.setLeft(vLeft);
}this._updateContext=$[181];
this.setSaturation(100-Math.round(vTop/2.56));
this.setHue(Math.round(vLeft*1.40625));
this._updateContext=null;
};
qx.Proto._setRedFromSpinner=function(){if(this._updateContext!==null){return;
}this._updateContext=$[114];
this.setRed(this._rgbSpinRed.getValue());
this._updateContext=null;
};
qx.Proto._setGreenFromSpinner=function(){if(this._updateContext!==null){return;
}this._updateContext=$[114];
this.setGreen(this._rgbSpinGreen.getValue());
this._updateContext=null;
};
qx.Proto._setBlueFromSpinner=function(){if(this._updateContext!==null){return;
}this._updateContext=$[114];
this.setBlue(this._rgbSpinBlue.getValue());
this._updateContext=null;
};
qx.Proto._setHueFromSpinner=function(){if(this._updateContext!==null){return;
}this._updateContext=$[110];
this.setHue(this._hsbSpinHue.getValue());
this._updateContext=null;
};
qx.Proto._setSaturationFromSpinner=function(){if(this._updateContext!==null){return;
}this._updateContext=$[110];
this.setSaturation(this._hsbSpinSaturation.getValue());
this._updateContext=null;
};
qx.Proto._setBrightnessFromSpinner=function(){if(this._updateContext!==null){return;
}this._updateContext=$[110];
this.setBrightness(this._hsbSpinBrightness.getValue());
this._updateContext=null;
};
qx.Proto._onHexFieldChange=function(e){if(this._updateContext!==null){return;
}var vValue=this._hexField.getValue().toLowerCase();
var vRed=0;
var vGreen=0;
var vBlue=0;
switch(vValue.length){case 3:vRed=qx.renderer.color.Color.m_rgb[vValue.charAt(0)];
vGreen=qx.renderer.color.Color.m_rgb[vValue.charAt(1)];
vBlue=qx.renderer.color.Color.m_rgb[vValue.charAt(2)];
vRed=(vRed*16)+vRed;
vGreen=(vGreen*16)+vGreen;
vBlue=(vBlue*16)+vBlue;
break;
case 6:vRed=(qx.renderer.color.Color.m_rgb[vValue.charAt(0)]*16)+qx.renderer.color.Color.m_rgb[vValue.charAt(1)];
vGreen=(qx.renderer.color.Color.m_rgb[vValue.charAt(2)]*16)+qx.renderer.color.Color.m_rgb[vValue.charAt(3)];
vBlue=(qx.renderer.color.Color.m_rgb[vValue.charAt(4)]*16)+qx.renderer.color.Color.m_rgb[vValue.charAt(5)];
break;
default:return false;
}this._updateContext=$[132];
this.setRed(vRed);
this.setGreen(vGreen);
this.setBlue(vBlue);
this._updateContext=null;
};
qx.Proto._setHexFromRgb=function(){this._hexField.setValue(qx.lang.String.pad(this.getRed().toString(16).toUpperCase(),2)+qx.lang.String.pad(this.getGreen().toString(16).toUpperCase(),2)+qx.lang.String.pad(this.getBlue().toString(16).toUpperCase(),2));
};
qx.Proto._onColorFieldClick=function(e){var vColor=e.getTarget().getBackgroundColor();
if(!vColor){return this.error("Missing backgroundColor value for field: "+e.getTarget());
}this.setRed(vColor.getRed());
this.setGreen(vColor.getGreen());
this.setBlue(vColor.getBlue());
};
qx.Proto._setHueFromRgb=function(){switch(this._updateContext){case $[110]:case $[181]:case $[324]:break;
default:var vHsb=qx.util.ColorUtil.rgb2hsb(this.getRed(),this.getGreen(),this.getBlue());
this.setHue(vHsb.hue);
this.setSaturation(vHsb.saturation);
this.setBrightness(vHsb.brightness);
}};
qx.Proto._setRgbFromHue=function(){switch(this._updateContext){case $[114]:case $[132]:break;
default:var vRgb=qx.util.ColorUtil.hsb2rgb(this.getHue(),this.getSaturation(),this.getBrightness());
this.setRed(vRgb.red);
this.setGreen(vRgb.green);
this.setBlue(vRgb.blue);
}};
qx.Proto._setPreviewFromRgb=function(){if(this._newColorPreview.isCreated()){this._newColorPreview._style.backgroundColor=qx.renderer.color.Color.rgb2style(this.getRed(),this.getGreen(),this.getBlue());
}else{this._newColorPreview.setBackgroundColor([this.getRed(),this.getGreen(),this.getBlue()]);
}};
qx.Proto.setPreviousColor=function(vRed,vGreen,vBlue){this._oldColorPreview.setBackgroundImage(null);
this._oldColorPreview.setBackgroundColor([vRed,vGreen,vBlue]);
this.setRed(vRed);
this.setGreen(vGreen);
this.setBlue(vBlue);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this._controlBar){this._controlBar.dispose();
this._controlBar=null;
}
if(this._btnbar){this._btnbar.dispose();
this._btnbar=null;
}
if(this._btncancel){this._btncancel.dispose();
this._btncancel=null;
}
if(this._btnok){this._btnok.dispose();
this._btnok=null;
}
if(this._controlPane){this._controlPane.dispose();
this._controlPane=null;
}
if(this._hueSaturationPane){this._hueSaturationPane.removeEventListener($[62],this._onHueSaturationPaneMouseWheel,this);
this._hueSaturationPane.dispose();
this._hueSaturationPane=null;
}
if(this._hueSaturationField){this._hueSaturationField.removeEventListener($[6],this._onHueSaturationFieldMouseDown,this);
this._hueSaturationField.dispose();
this._hueSaturationField=null;
}
if(this._hueSaturationHandle){this._hueSaturationHandle.removeEventListener($[6],this._onHueSaturationHandleMouseDown,this);
this._hueSaturationHandle.removeEventListener($[7],this._onHueSaturationHandleMouseUp,this);
this._hueSaturationHandle.removeEventListener($[18],this._onHueSaturationHandleMouseMove,this);
this._hueSaturationHandle.dispose();
this._hueSaturationHandle=null;
}
if(this._brightnessPane){this._brightnessPane.removeEventListener($[62],this._onBrightnessPaneMouseWheel,this);
this._brightnessPane.dispose();
this._brightnessPane=null;
}
if(this._brightnessField){this._brightnessField.removeEventListener($[6],this._onBrightnessFieldMouseDown,this);
this._brightnessField.dispose();
this._brightnessField=null;
}
if(this._brightnessHandle){this._brightnessHandle.removeEventListener($[6],this._onBrightnessHandleMouseDown,this);
this._brightnessHandle.removeEventListener($[7],this._onBrightnessHandleMouseUp,this);
this._brightnessHandle.removeEventListener($[18],this._onBrightnessHandleMouseMove,this);
this._brightnessHandle.dispose();
this._brightnessHandle=null;
}
if(this._presetFieldSet){this._presetFieldSet.dispose();
this._presetFieldSet=null;
}
if(this._presetGrid){this._presetGrid.dispose();
this._presetGrid=null;
}this._presetTable=null;
if(this._inputFieldSet){this._inputFieldSet.dispose();
this._inputFieldSet=null;
}
if(this._inputLayout){this._inputLayout.dispose();
this._inputLayout=null;
}
if(this._previewFieldSet){this._previewFieldSet.dispose();
this._previewFieldSet=null;
}
if(this._previewLayout){this._previewLayout.dispose();
this._previewLayout=null;
}
if(this._hexLayout){this._hexLayout.dispose();
this._hexLayout=null;
}
if(this._hexLabel){this._hexLabel.dispose();
this._hexLabel=null;
}
if(this._hexHelper){this._hexHelper.dispose();
this._hexHelper=null;
}
if(this._hexField){this._hexField.addEventListener($[258],this._onHexFieldChange,this);
this._hexField.dispose();
this._hexField=null;
}
if(this._rgbSpinLayout){this._rgbSpinLayout.dispose();
this._rgbSpinLayout=null;
}
if(this._rgbSpinLabel){this._rgbSpinLabel.dispose();
this._rgbSpinLabel=null;
}
if(this._rgbSpinRed){this._rgbSpinRed.removeEventListener($[32],this._setRedFromSpinner,this);
this._rgbSpinRed.dispose();
this._rgbSpinRed=null;
}
if(this._rgbSpinGreen){this._rgbSpinGreen.removeEventListener($[32],this._setGreenFromSpinner,this);
this._rgbSpinGreen.dispose();
this._rgbSpinGreen=null;
}
if(this._rgbSpinBlue){this._rgbSpinBlue.removeEventListener($[32],this._setBlueFromSpinner,this);
this._rgbSpinBlue.dispose();
this._rgbSpinBlue=null;
}
if(this._hsbSpinLayout){this._hsbSpinLayout.dispose();
this._hsbSpinLayout=null;
}
if(this._hsbSpinLabel){this._hsbSpinLabel.dispose();
this._hsbSpinLabel=null;
}
if(this._hsbSpinHue){this._hsbSpinHue.removeEventListener($[32],this._setHueFromSpinner,this);
this._hsbSpinHue.dispose();
this._hsbSpinHue=null;
}
if(this._hsbSpinSaturation){this._hsbSpinSaturation.removeEventListener($[32],this._setSaturationFromSpinner,this);
this._hsbSpinSaturation.dispose();
this._hsbSpinSaturation=null;
}
if(this._hsbSpinBrightness){this._hsbSpinBrightness.removeEventListener($[32],this._setBrightnessFromSpinner,this);
this._hsbSpinBrightness.dispose();
this._hsbSpinBrightness=null;
}
if(this._oldColorPreview){this._oldColorPreview.dispose();
this._oldColorPreview=null;
}
if(this._newColorPreview){this._newColorPreview.dispose();
this._newColorPreview=null;
}return qx.ui.layout.VerticalBoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.groupbox.GroupBox */
qx.OO.defineClass($[1530],qx.ui.layout.CanvasLayout,function(vLegend,vIcon){qx.ui.layout.CanvasLayout.call(this);
this._createFrameObject();
this._createLegendObject();
this.setLegend(vLegend);
if(vIcon!=null){this.setIcon(vIcon);
}this.remapChildrenHandlingTo(this._frameObject);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[805]});
qx.Proto._createLegendObject=function(){this._legendObject=new qx.ui.basic.Atom;
this._legendObject.setAppearance($[799]);
this.add(this._legendObject);
};
qx.Proto._createFrameObject=function(){this._frameObject=new qx.ui.layout.CanvasLayout;
this._frameObject.setAppearance($[1789]);
this.add(this._frameObject);
};
qx.Proto.getFrameObject=function(){return this._frameObject;
};
qx.Proto.getLegendObject=function(){return this._legendObject;
};
qx.Proto.setLegend=function(vLegend){this._legendObject.setLabel(vLegend);
};
qx.Proto.getLegend=function(){return this._legendObject.getLabel();
};
qx.Proto.setIcon=function(vIcon){this._legendObject.setIcon(vIcon);
};
qx.Proto.getIcon=function(){this._legendObject.getIcon();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._legendObject){this._legendObject.dispose();
this._legendObject=null;
}
if(this._frameObject){this._frameObject.dispose();
this._frameObject=null;
}return qx.ui.layout.CanvasLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.form.Spinner */
qx.OO.defineClass($[1630],qx.ui.layout.HorizontalBoxLayout,function(vMin,vValue,vMax){qx.ui.layout.HorizontalBoxLayout.call(this);
this.setTabIndex(-1);
if(qx.core.Client.getInstance().isMshtml()){this.setStyleProperty($[90],$[165]);
}this._manager=new qx.type.Range();
this._textfield=new qx.ui.form.TextField;
this._textfield.setAppearance($[1558]);
this._textfield.setValue(String(this._manager.getValue()));
this.add(this._textfield);
this._buttonlayout=new qx.ui.layout.VerticalBoxLayout;
this._buttonlayout.setWidth($[5]);
this.add(this._buttonlayout);
this._upbutton=new qx.ui.basic.Image($[2332]);
this._upbutton.setAppearance($[1623]);
this._buttonlayout.add(this._upbutton);
this._downbutton=new qx.ui.basic.Image($[2204]);
this._downbutton.setAppearance($[963]);
this._buttonlayout.add(this._downbutton);
this._timer=new qx.client.Timer(this.getInterval());
this.addEventListener($[14],this._onkeypress,this);
this.addEventListener($[13],this._onkeydown,this);
this.addEventListener($[76],this._onkeyup,this);
this.addEventListener($[62],this._onmousewheel,this);
this._textfield.addEventListener($[87],this._oninput,this);
this._textfield.addEventListener($[172],this._onblur,this);
this._upbutton.addEventListener($[6],this._onmousedown,this);
this._downbutton.addEventListener($[6],this._onmousedown,this);
this._manager.addEventListener($[32],this._onchange,this);
this._timer.addEventListener($[54],this._oninterval,this);
if(vMin!=null){this.setMin(vMin);
}
if(vMax!=null){this.setMax(vMax);
}
if(vValue!=null){this.setValue(vValue);
}});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1829]});
qx.OO.addProperty({name:$[2231],type:$[2],defaultValue:1});
qx.OO.addProperty({name:$[1532],type:$[2],defaultValue:1});
qx.OO.addProperty({name:$[2329],type:$[2],defaultValue:10});
qx.OO.addProperty({name:$[54],type:$[2],defaultValue:100});
qx.OO.addProperty({name:$[583],type:$[2],defaultValue:500});
qx.OO.addProperty({name:$[1809],type:$[2],defaultValue:20});
qx.OO.addProperty({name:$[1064],type:$[2],defaultValue:2});
qx.OO.addProperty({name:$[1478],type:$[2],defaultValue:1.01});
qx.Proto._modifyIncrementAmount=function(propValue,propOldValue,propData){this._computedIncrementAmount=propValue;
return true;
};
qx.Proto._computePreferredInnerWidth=function(){return 50;
};
qx.Proto._computePreferredInnerHeight=function(){return 14;
};
qx.Proto._onkeypress=function(e){var vIdentifier=e.getKeyIdentifier();
if(vIdentifier==$[45]&&!e.isAltPressed()){this._checkValue(true,false,false);
this._textfield.selectAll();
}else{switch(vIdentifier){case $[73]:case $[71]:case $[55]:case $[56]:case $[171]:case $[153]:case $[164]:case $[96]:case $[234]:case $[315]:case $[245]:case $[130]:case $[144]:case $[75]:case $[88]:case $[155]:case $[223]:break;
default:if(vIdentifier>=$[36]&&vIdentifier<=$[157]){return;
}e.preventDefault();
}}};
qx.Proto._onkeydown=function(e){var vIdentifier=e.getKeyIdentifier();
if(this._intervalIncrease==null){switch(vIdentifier){case $[73]:case $[71]:this._intervalIncrease=vIdentifier==$[73];
this._intervalMode=$[1318];
this._resetIncrements();
this._checkValue(true,false,false);
this._increment();
this._timer.startWith(this.getFirstInterval());
break;
case $[75]:case $[88]:this._intervalIncrease=vIdentifier==$[75];
this._intervalMode=$[407];
this._resetIncrements();
this._checkValue(true,false,false);
this._pageIncrement();
this._timer.startWith(this.getFirstInterval());
break;
}}};
qx.Proto._onkeyup=function(e){if(this._intervalIncrease!=null){switch(e.getKeyIdentifier()){case $[73]:case $[71]:case $[75]:case $[88]:this._timer.stop();
this._intervalIncrease=null;
this._intervalMode=null;
}}};
qx.Proto._onmousedown=function(e){if(!e.isLeftButtonPressed()){return;
}this._checkValue(true);
var vButton=e.getCurrentTarget();
vButton.addState($[19]);
vButton.addEventListener($[7],this._onmouseup,this);
vButton.addEventListener($[47],this._onmouseup,this);
this._intervalIncrease=vButton==this._upbutton;
this._resetIncrements();
this._increment();
this._textfield.selectAll();
this._timer.setInterval(this.getFirstInterval());
this._timer.start();
};
qx.Proto._onmouseup=function(e){var vButton=e.getCurrentTarget();
vButton.removeState($[19]);
vButton.removeEventListener($[7],this._onmouseup,this);
vButton.removeEventListener($[47],this._onmouseup,this);
this._textfield.selectAll();
this._textfield.setFocused(true);
this._timer.stop();
this._intervalIncrease=null;
};
qx.Proto._onmousewheel=function(e){this._manager.setValue(this._manager.getValue()+this.getWheelIncrementAmount()*e.getWheelDelta());
this._textfield.selectAll();
};
qx.Proto._oninput=function(e){this._checkValue(true,true);
};
qx.Proto._onchange=function(e){var vValue=this._manager.getValue();
this._textfield.setValue(String(vValue));
if(vValue==this.getMin()){this._downbutton.removeState($[19]);
this._downbutton.setEnabled(false);
this._timer.stop();
}else{this._downbutton.setEnabled(true);
}
if(vValue==this.getMax()){this._upbutton.removeState($[19]);
this._upbutton.setEnabled(false);
this._timer.stop();
}else{this._upbutton.setEnabled(true);
}
if(this.hasEventListeners($[32])){this.dispatchEvent(new qx.event.type.Event($[32]),true);
}};
qx.Proto._onblur=function(e){this._checkValue(false);
};
qx.Proto.setValue=function(nValue){this._manager.setValue(nValue);
};
qx.Proto.getValue=function(){this._checkValue(true);
return this._manager.getValue();
};
qx.Proto.resetValue=function(){return this._manager.resetValue();
};
qx.Proto.setMax=function(vMax){return this._manager.setMax(vMax);
};
qx.Proto.getMax=function(){return this._manager.getMax();
};
qx.Proto.setMin=function(vMin){return this._manager.setMin(vMin);
};
qx.Proto.getMin=function(){return this._manager.getMin();
};
qx.Proto._intervalIncrease=null;
qx.Proto._oninterval=function(e){this._timer.stop();
this.setInterval(Math.max(this.getMinTimer(),this.getInterval()-this.getTimerDecrease()));
if(this._intervalMode==$[407]){this._pageIncrement();
}else{if(this.getInterval()==this.getMinTimer()){this._computedIncrementAmount=this.getAmountGrowth()*this._computedIncrementAmount;
}this._increment();
}
switch(this._intervalIncrease){case true:if(this.getValue()==this.getMax()){return;
}case false:if(this.getValue()==this.getMin()){return;
}}this._timer.restartWith(this.getInterval());
};
qx.Proto._checkValue=function(acceptEmpty,acceptEdit){var el=this._textfield.getElement();
if(!el){return;
}
if(el.value==$[1]){if(!acceptEmpty){el.value=this.resetValue();
this._textfield.selectAll();
return;
}}else{var val=el.value;
if(val.length>1){while(val.charAt(0)==$[36]){val=val.substr(1,val.length);
}var f1=parseInt(val)||0;
if(f1!=el.value){el.value=f1;
return;
}}if(val==$[57]&&acceptEmpty&&this.getMin()<0){if(el.value!=val){el.value=val;
}return;
}val=parseInt(val);
var doFix=true;
var fixedVal=this._manager._checkValue(val);
if(isNaN(fixedVal)){fixedVal=this._manager.getValue();
}if(acceptEmpty&&val==$[1]){doFix=false;
}else if(!isNaN(val)){if(acceptEdit){if(val>fixedVal&&!(val>0&&fixedVal<=0)&&String(val).length<String(fixedVal).length){doFix=false;
}else if(val<fixedVal&&!(val<0&&fixedVal>=0)&&String(val).length<String(fixedVal).length){doFix=false;
}}}if(doFix&&el.value!=fixedVal){el.value=fixedVal;
}if(!acceptEdit){this._manager.setValue(fixedVal);
}}};
qx.Proto._increment=function(){this._manager.setValue(this._manager.getValue()+((this._intervalIncrease?1:-1)*this._computedIncrementAmount));
};
qx.Proto._pageIncrement=function(){this._manager.setValue(this._manager.getValue()+((this._intervalIncrease?1:-1)*this.getPageIncrementAmount()));
};
qx.Proto._resetIncrements=function(){this._computedIncrementAmount=this.getIncrementAmount();
this.resetInterval();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[14],this._onkeypress,this);
this.removeEventListener($[13],this._onkeydown,this);
this.removeEventListener($[76],this._onkeyup,this);
this.removeEventListener($[62],this._onmousewheel,this);
if(this._textfield){this._textfield.removeEventListener($[172],this._onblur,this);
this._textfield.removeEventListener($[87],this._oninput,this);
this._textfield.dispose();
this._textfield=null;
}
if(this._buttonlayout){this._buttonlayout.dispose();
this._buttonlayout=null;
}
if(this._upbutton){this._upbutton.removeEventListener($[6],this._onmousedown,this);
this._upbutton.dispose();
this._upbutton=null;
}
if(this._downbutton){this._downbutton.removeEventListener($[6],this._onmousedown,this);
this._downbutton.dispose();
this._downbutton=null;
}
if(this._timer){this._timer.removeEventListener($[54],this._oninterval,this);
this._timer.stop();
this._timer.dispose();
this._timer=null;
}
if(this._manager){this._manager.removeEventListener($[32],this._onchange,this);
this._manager.dispose();
this._manager=null;
}return qx.ui.layout.HorizontalBoxLayout.prototype.dispose.call(this);
};




/* ID: qx.type.Range */
qx.OO.defineClass($[1058],qx.core.Target,function(){qx.core.Target.call(this);
});
qx.OO.addProperty({name:$[104],type:$[2],defaultValue:0});
qx.OO.addProperty({name:$[428],type:$[2],defaultValue:0});
qx.OO.addProperty({name:$[814],type:$[2],defaultValue:100});
qx.OO.addProperty({name:$[932],type:$[2],defaultValue:1});
qx.Proto._checkValue=function(propValue){return Math.max(this.getMin(),Math.min(this.getMax(),Math.floor(propValue)));
};
qx.Proto._modifyValue=function(propValue,propOldValue,propData){if(this.hasEventListeners($[32])){this.dispatchEvent(new qx.event.type.Event($[32]),true);
}return true;
};
qx.Proto._checkMax=function(propValue){return Math.floor(propValue);
};
qx.Proto._modifyMax=function(propValue,propOldValue,propData){this.setValue(Math.min(this.getValue(),propValue));
if(this.hasEventListeners($[32])){this.dispatchEvent(new qx.event.type.Event($[32]),true);
}return true;
};
qx.Proto._checkMin=function(propValue){return Math.floor(propValue);
};
qx.Proto._modifyMin=function(propValue,propOldValue,propData){this.setValue(Math.max(this.getValue(),propValue));
if(this.hasEventListeners($[32])){this.dispatchEvent(new qx.event.type.Event($[32]),true);
}return true;
};




/* ID: qx.util.ColorUtil */
qx.OO.defineClass($[2067]);
qx.Clazz.rgb2hsb=function(vRed,vGreen,vBlue){var vHue,vSaturation,vBrightness;
vRed=parseFloat(vRed);
vGreen=parseFloat(vGreen);
vBlue=parseFloat(vBlue);
var cmax=(vRed>vGreen)?vRed:vGreen;
if(vBlue>cmax){cmax=vBlue;
}var cmin=(vRed<vGreen)?vRed:vGreen;
if(vBlue<cmin){cmin=vBlue;
}vBrightness=cmax/255.0;
if(cmax!=0){vSaturation=(cmax-cmin)/cmax;
}else{vSaturation=0;
}
if(vSaturation==0){vHue=0;
}else{var redc=(cmax-vRed)/(cmax-cmin);
var greenc=(cmax-vGreen)/(cmax-cmin);
var bluec=(cmax-vBlue)/(cmax-cmin);
if(vRed==cmax){vHue=bluec-greenc;
}else if(vGreen==cmax){vHue=2.0+redc-bluec;
}else{vHue=4.0+greenc-redc;
}vHue=vHue/6.0;
if(vHue<0)vHue=vHue+1.0;
}return {hue:Math.round(vHue*360),saturation:Math.round(vSaturation*100),brightness:Math.round(vBrightness*100)};
};
qx.Clazz.hsb2rgb=function(vHue,vSaturation,vBrightness){var i,f,p,q,t,vReturn;
vHue=parseFloat(vHue/360);
vSaturation=parseFloat(vSaturation/100);
vBrightness=parseFloat(vBrightness/100);
if(vHue>=1.0)vHue%=1.0;
if(vSaturation>1.0)vSaturation=1.0;
if(vBrightness>1.0)vBrightness=1.0;
var tov=Math.floor(255*vBrightness);
var vReturn={};
if(vSaturation==0.0){vReturn.red=vReturn.green=vReturn.blue=tov;
}else{vHue*=6.0;
i=Math.floor(vHue);
f=vHue-i;
p=Math.floor(tov*(1.0-vSaturation));
q=Math.floor(tov*(1.0-(vSaturation*f)));
t=Math.floor(tov*(1.0-(vSaturation*(1.0-f))));
switch(i){case 0:vReturn.red=tov;
vReturn.green=t;
vReturn.blue=p;
break;
case 1:vReturn.red=q;
vReturn.green=tov;
vReturn.blue=p;
break;
case 2:vReturn.red=p;
vReturn.green=tov;
vReturn.blue=t;
break;
case 3:vReturn.red=p;
vReturn.green=q;
vReturn.blue=tov;
break;
case 4:vReturn.red=t;
vReturn.green=p;
vReturn.blue=tov;
break;
case 5:vReturn.red=tov;
vReturn.green=p;
vReturn.blue=q;
break;
}}return vReturn;
};




/* ID: qx.ui.menubar.Button */
qx.OO.defineClass($[1323],qx.ui.toolbar.MenuButton,function(vText,vMenu,vIcon,vIconWidth,vIconHeight,vFlash){qx.ui.toolbar.MenuButton.call(this,vText,vMenu,vIcon,vIconWidth,vIconHeight,vFlash);
});




/* ID: qx.lang.Generics */
qx.OO.defineClass($[1080],{map:{"Array":[$[1507],$[2046],$[1161],$[1086],$[2399],$[1905],$[1354],$[1577],$[717],$[503],$[740],$[791],$[1409],$[1557],$[129],$[1745],$[1871]],"String":[$[2120],$[1701],$[1959],$[2093],$[1998],$[2343],$[740],$[791],$[1854],$[1445],$[841],$[1238],$[1672],$[1039],$[1029],$[2209],$[717],$[503]]},_wrap:function(obj,func){return function(s){return obj.prototype[func].apply(s,Array.prototype.slice.call(arguments,1));
};
},init:function(){var map=qx.lang.Generics.map;
for(var key in map){var obj=window[key];
var arr=map[key];
for(var i=0,l=arr.length;i<l;i++){var func=arr[i];
if(!obj[func]){obj[func]=qx.lang.Generics._wrap(obj,func);
}}}}});
qx.lang.Generics.init();




/* ID: qx.theme.color.WindowsLunaSilver */
qx.OO.defineClass($[1792],qx.renderer.theme.ColorTheme,function(){qx.renderer.theme.ColorTheme.call(this,$[955]);
});
qx.Proto._colors=qx.lang.Object.carefullyMergeWith({activeborder:[212,208,200],activecaption:[192,192,192],appworkspace:[128,128,128],background:[88,87,104],buttonface:[224,223,227],buttonhighlight:[255,255,255],buttonshadow:[157,157,161],buttontext:[0,0,0],captiontext:[14,16,16],graytext:[172,168,153],highlight:[178,180,191],highlighttext:[0,0,0],inactiveborder:[212,208,200],inactivecaption:[255,255,255],inactivecaptiontext:[162,161,161],infobackground:[255,255,225],infotext:[0,0,0],menu:[255,255,255],menutext:[0,0,0],scrollbar:[212,208,200],threeddarkshadow:[113,111,100],threedface:[224,223,227],threedhighlight:[255,255,255],threedlightshadow:[241,239,226],threedshadow:[157,157,161],window:[255,255,255],windowframe:[0,0,0],windowtext:[0,0,0]},qx.Super.prototype._colors);
qx.Clazz.getInstance=qx.lang.Function.returnInstance;
qx.manager.object.ColorManager.getInstance().registerColorTheme(qx.Clazz);




/* ID: qx.util.GuiBuilder */
qx.OO.defineClass($[1176],qx.core.Target,function(flags){qx.core.Target.call(this);
this._propertyEditors={};
this._registerDefaultPropertyEditors();
this._flags=flags||{};
if(this._flags.strict==null){this._flags.strict=true;
}});
qx.Proto.buildFromUrl=function(parent,url){var req=new qx.io.remote.Request(url,$[1559],qx.util.Mime.XML);
var self=this;
req.addEventListener($[17],function(e){self.build(parent,e.getData().getContent());
qx.ui.core.Widget.flushGlobalQueues();
});
req.send();
};
qx.Proto.build=function(parent,node){if(typeof node==$[4]&&node.nodeName==$[1191]){node=node.value;
}if(typeof node==$[0]){node=qx.xml.Document.fromString(node);
}this._buildNodes(parent,node.childNodes);
};
qx.Proto._buildNodes=function(parent,nodes){var x=0;
for(var i=0;i<nodes.length;i++){var n=nodes[i];
if(n.nodeType==1){this._buildWidgetFromNode(parent,n);
}}};
qx.Proto._buildEventListener=function(widget,args,text){if(typeof args.type!==$[0]){throw this._newError($[1572]);
}var self=this;
if(typeof args.delegate===$[0]){if(args.delegate.indexOf($[679])>-1){var p=args.delegate.split($[679]);
var o=p[0];
var m=p[1];
widget.addEventListener(args.type,function(e){if(!window[o]){throw self._newError($[455],{delegate:args.delegate});
}
if(!window[o][m]){throw self._newError($[455],{delegate:args.delegate});
}window[o][m].apply(window[o],[e]);
});
}else{widget.addEventListener(args.type,function(e){if(!window[args.delegate]){throw self._newError($[455],{delegate:args.delegate});
}window[args.delegate].apply(null,[e]);
});
}}else{if(!args.args){args.args=$[696];
}var f=new Function(args.args,text);
widget.addEventListener(args.type,f);
}};
qx.Proto._buildWidgetFromNode=function(parent,node){var className=this._extractClassName(node);
if(!className){throw this._newError($[958],{nodeName:node.nodeName});
}
if(className==$[1142]){this._buildNodes(parent,node.childNodes);
return;
}
if(className==$[1896]){var e=document.createElement($[525]);
var attribs=this._mapXmlAttribToObject(node);
if(attribs.type){e.type=attribs.type;
}else{e.type=$[2059];
}if(qx.core.Client.getInstance().isMshtml()){e.innerHTML=eval(node.firstChild.nodeValue);
}else{e.innerHTML=node.firstChild.nodeValue;
}document.body.appendChild(e);
return;
}
if(className==$[1760]){var attribs=this._mapXmlAttribToObject(node);
var text;
if(node.firstChild){text=node.firstChild.nodeValue;
}this._buildEventListener(parent,attribs,text);
return;
}var classConstructor=qx.OO.classes[className];
if(!classConstructor){throw this._newError($[1881],{className:className});
}var widget=new classConstructor();
var attribs=this._mapXmlAttribToObject(node,widget);
delete attribs[$[440]];
var dummyWidget=attribs.id&&attribs.id.indexOf($[95])==0;
if(attribs.id){window[attribs.id]=widget;
delete attribs.id;
}for(var a in attribs){if(a.toLowerCase().indexOf($[2413])==0&&a.length>2){var type=a.substring(2);
type=type.charAt(0)+type.substring(1);
this._buildEventListener(widget,{type:type,args:$[2084]},attribs[a]);
delete attribs[a];
}}
for(var n in attribs){this._setWidgetProperty(widget,n,attribs[n]);
}
if(!dummyWidget){parent.add(widget);
}this._buildNodes(widget,node.childNodes);
};
qx.Proto._setWidgetProperty=function(widget,name,value){var editor=this._findPropertyEditor(widget.classname,name);
if(!editor){editor=this._coercePropertyEditor;
}editor.set(widget,name,value);
};
qx.Proto._findPropertyEditor=function(className,propertyName){var m=this._propertyEditors[className];
if(m&&m[propertyName]){return m[propertyName];
}var w=qx.OO.classes[className];
if(w&&w.superclass&&w.superclass.prototype.classname){return this._findPropertyEditor(w.superclass.prototype.classname,propertyName);
}return null;
};
qx.Proto.registerPropertyEditor=function(className,propertyName,editor){if(!this._propertyEditors[className])this._propertyEditors[className]={};
this._propertyEditors[className][propertyName]=editor;
};
qx.Proto._registerDefaultPropertyEditors=function(){var self=this;
var commaDelimitedPropertyEditor={};
commaDelimitedPropertyEditor.set=function(widget,name,value){if(value==null||value==$[1]){self._setProperty(widget,name,null);
return;
}var s=value.split($[23]);
var v=[];
for(var i=0;i<s.length;i++){v[i]=self._coerce(s[i]);
}self._setProperties(widget,name,v);
};
var evalPropertyEditor={};
evalPropertyEditor.set=function(widget,name,value){if(value==null||value==$[1]){self._setProperty(widget,name,null);
return;
}self._setProperty(widget,name,eval(value));
};
var referencePropertyEditor={};
referencePropertyEditor.set=function(widget,name,value){self._setProperty(widget,name,window[value]);
};
this.registerPropertyEditor($[70],$[2266],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[1305],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[1232],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[1297],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[2032],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[1822],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[2243],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[1261],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[956],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[1351],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[1583],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[1496],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[2130],commaDelimitedPropertyEditor);
this.registerPropertyEditor($[70],$[1964],evalPropertyEditor);
this.registerPropertyEditor($[70],$[999],evalPropertyEditor);
this.registerPropertyEditor($[70],$[911],evalPropertyEditor);
this.registerPropertyEditor($[1483],$[562],referencePropertyEditor);
this.registerPropertyEditor($[2260],$[562],referencePropertyEditor);
this.registerPropertyEditor($[1906],$[2407],referencePropertyEditor);
this.registerPropertyEditor($[980],$[2126],referencePropertyEditor);
this._coercePropertyEditor={};
this._coercePropertyEditor.set=function(widget,name,value){self._setProperty(widget,name,self._coerce(value));
};
};
qx.Proto._coerce=function(value){if(value==null)return value;
if(typeof value==$[2439])return value;
if(typeof value==$[1535])return value;
if(typeof value==$[1007])return value;
if(typeof value==$[2104])return value;
if(typeof value==$[2173])return value;
if(typeof value==$[1685])return value;
var n=new Number(value);
if(!isNaN(n))return n.valueOf();
if(value==$[578])return true;
if(value==$[1581])return false;
var d=Date.parse(value);
if(d!=null&&!isNaN(d))return d;
if(typeof value==$[2208]){if(value==$[1])return null;
}return value;
};
qx.Proto._setProperty=function(widget,name,value){this._setProperties(widget,name,[value]);
};
qx.Proto._setProperties=function(widget,name,value){var n=$[83]+name;
for(var a in widget){if(n==a.toLowerCase()){var setter=widget[a];
break;
}}
if(!setter&&this._flags.strict)throw this._newError($[922],{widget:widget,property:name});
setter.apply(widget,value);
};
qx.Proto._extractClassName=function(node){if(node.nodeName.toLowerCase()==$[50]){if(!node.attributes[$[440]])return null;
return node.attributes[$[440]].value;
}else{return node.nodeName;
}};
qx.Proto._mapXmlAttribToObject=function(node){var r={};
var c=node.attributes;
for(var i=0;i<c.length;i++){r[c[i].name.toLowerCase()]=c[i].value;
}return r;
};
qx.Proto._newError=function(message,data,exception){var m=message;
var joiner=$[1];
var d=$[1];
if(data){for(var p in data){d+=joiner+p+$[15]+data[p]+$[233];
joiner=$[44];
}m+=$[44]+d+$[44];
}
if(exception){m+=$[2435]+exception+$[44];
}return new Error(m);
};




/* ID: qx.ui.form.RadioButton */
qx.OO.defineClass($[809],qx.ui.form.CheckBox,function(vText,vValue,vName,vChecked){qx.ui.form.CheckBox.call(this,vText,vValue,vName,vChecked);
this.addEventListener($[14],this._onkeypress);
});
qx.OO.addProperty({name:$[261],type:$[4],instance:$[214],allowNull:true});
qx.Proto.INPUT_TYPE="radio";
qx.Proto._modifyChecked=function(propValue,propOldValue,propData){if(this._iconObject){this._iconObject.setChecked(propValue);
}var vManager=this.getManager();
if(vManager){vManager.handleItemChecked(this,propValue);
}return true;
};
qx.Proto._modifyManager=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.remove(this);
}
if(propValue){propValue.add(this);
}return true;
};
qx.Proto._modifyName=function(propValue,propOldValue,propData){if(this._iconObject){this._iconObject.setName(propValue);
}
if(this.getManager()){this.getManager().setName(propValue);
}return true;
};
qx.Proto._modifyValue=function(propValue,propOldValue,propData){if(this.isCreated()&&this._iconObject){this._iconObject.setValue(propValue);
}return true;
};
qx.Proto._onkeydown=function(e){if(e.getKeyIdentifier()==$[45]&&!e.isAltPressed()){this.setChecked(true);
}};
qx.Proto._onkeypress=function(e){switch(e.getKeyIdentifier()){case $[55]:case $[73]:qx.event.handler.FocusHandler.mouseFocus=false;
qx.event.handler.FocusHandler.mouseFocus=false;
return this.getManager()?this.getManager().selectPrevious(this):true;
case $[56]:case $[71]:qx.event.handler.FocusHandler.mouseFocus=false;
return this.getManager()?this.getManager().selectNext(this):true;
}};
qx.Proto._onclick=function(e){this.setChecked(true);
};
qx.Proto._onkeyup=function(e){if(e.getKeyIdentifier()==$[85]){this.setChecked(true);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[14],this._onkeypress);
return qx.ui.form.CheckBox.prototype.dispose.call(this);
};




/* ID: qx.ui.menu.RadioButton */
qx.OO.defineClass($[2219],qx.ui.menu.CheckBox,function(vLabel,vCommand,vChecked){qx.ui.menu.CheckBox.call(this,vLabel,vCommand,vChecked);
qx.manager.object.ImageManager.getInstance().preload($[635]);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1537]});
qx.OO.addProperty({name:$[261],type:$[4],instance:$[214],allowNull:true});
qx.Proto._modifyChecked=function(propValue,propOldValue,propData){var vManager=this.getManager();
if(vManager){if(propValue){vManager.setSelected(this);
}else if(vManager.getSelected()==this){vManager.setSelected(null);
}}propValue?this.addState($[81]):this.removeState($[81]);
this.getIconObject().setSource(propValue?$[635]:$[59]);
return true;
};
qx.Proto._modifyManager=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.remove(this);
}
if(propValue){propValue.add(this);
}return true;
};
qx.Proto._modifyName=function(propValue,propOldValue,propData){if(this.getManager()){this.getManager().setName(propValue);
}return true;
};
qx.Proto.execute=function(){this.setChecked(true);
qx.ui.menu.Button.prototype.execute.call(this);
};




/* ID: qx.util.fsm.FiniteStateMachine */
qx.OO.defineClass($[1971],qx.core.Target,function(machineName){qx.core.Target.call(this);
this.setName(machineName);
this._states={};
this._savedStates=[];
this._eventQueue=[];
this._blockedEvents=[];
this._friendlyToObject={};
this._friendlyToHash={};
this._hashToFriendly={};
this._groupToFriendly={};
this._friendlyToGroups={};
});
qx.Clazz.StateChange={CURRENT_STATE:1,POP_STATE_STACK:2,TERMINATE:3};
qx.Clazz.EventHandling={PREDICATE:1,BLOCKED:2};
qx.Clazz.DebugFlags={EVENTS:1,TRANSITIONS:2,FUNCTION_DETAIL:4,OBJECT_NOT_FOUND:8};
qx.OO.addProperty({name:$[97],type:$[0]});
qx.OO.addProperty({name:$[239],type:$[0]});
qx.OO.addProperty({name:$[2031],type:$[0]});
qx.OO.addProperty({name:$[361],type:$[0]});
qx.OO.addProperty({name:$[1686],type:$[2],defaultValue:2});
qx.OO.addProperty({name:$[597],type:$[2],defaultValue:(qx.util.fsm.FiniteStateMachine.DebugFlags.EVENTS|qx.util.fsm.FiniteStateMachine.DebugFlags.TRANSITIONS|qx.util.fsm.FiniteStateMachine.DebugFlags.OBJECT_NOT_FOUND)});
qx.Proto.addState=function(state){if(!state instanceof qx.util.fsm.State){throw new Error("Invalid state: not an instance of "+"qx.util.fsm.State");
}var stateName=state.getName();
if(stateName in this._states){throw new Error("State "+stateName+" already exists");
}this._states[stateName]=state;
};
qx.Proto.replaceState=function(state,bDispose){if(!state instanceof qx.util.fsm.State){throw new Error("Invalid state: not an instance of "+"qx.util.fsm.State");
}var stateName=state.getName();
var oldState=this._states[stateName];
this._states[stateName]=state;
if(bDispose){oldState._needDispose;
}return oldState;
};
qx.Proto.addObject=function(friendlyName,obj,groupNames){var hash=obj.toHashCode();
this._friendlyToHash[friendlyName]=hash;
this._hashToFriendly[hash]=friendlyName;
this._friendlyToObject[friendlyName]=obj;
if(!groupNames){return;
}if(typeof (groupNames)==$[0]){groupNames=[groupNames];
}for(var i=0;i<groupNames.length;i++){var groupName=groupNames[i];
if(!this._groupToFriendly[groupName]){this._groupToFriendly[groupName]={};
}this._groupToFriendly[groupName][friendlyName]=true;
if(!this._friendlyToGroups[friendlyName]){this._friendlyToGroups[friendlyName]=[];
}this._friendlyToGroups[friendlyName]=this._friendlyToGroups[friendlyName].concat(groupNames);
}};
qx.Proto.removeObject=function(friendlyName){var hash=this._friendlyToHash[friendlyName];
if(this._friendlyToGroups[friendlyName]){for(groupName in this._friendlyToGroups[friendlyName]){delete this._groupToFriendly[groupName];
}delete this._friendlyToGroups[friendlyName];
}delete this._hashToFriendly[hash];
delete this._friendlyToHash[friendlyName];
delete this._friendlyToObject[friendlyName];
};
qx.Proto.getObject=function(friendlyName){return this._friendlyToObject[friendlyName];
};
qx.Proto.getFriendlyName=function(obj){var hash=obj.toHashCode();
return hash?this._hashToFriendly[hash]:null;
};
qx.Proto.getGroupObjects=function(groupName){var a=[];
for(var name in this._groupToFriendly[groupName]){a.push(name);
}return a;
};
qx.Proto.displayAllObjects=function(){for(var friendlyName in this._friendlyToHash){var hash=this._friendlyToHash[friendlyName];
var obj=this.getObject(friendlyName);
this.debug(friendlyName+" => "+hash);
this.debug("  "+hash+" => "+this._hashToFriendly[hash]);
this.debug("  "+friendlyName+" => "+this.getObject(friendlyName));
this.debug("  "+this.getObject(friendlyName)+" => "+this.getFriendlyName(obj));
}};
qx.Proto.start=function(){var stateName;
for(stateName in this._states){this.setState(stateName);
this.setPreviousState(null);
this.setNextState(null);
break;
}
if(!stateName){throw new Error("Machine started with no available states");
}var debugFunctions=(this.getDebugFlags()&qx.util.fsm.FiniteStateMachine.DebugFlags.FUNCTION_DETAIL);
if(debugFunctions){this.debug(this.getName()+"#"+stateName+"#actionsBeforeOnentry");
}this._states[stateName].getAutoActionsBeforeOnentry()(this);
if(debugFunctions){this.debug(this.getName()+"#"+stateName+"#entry");
}this._states[stateName].getOnentry()(this,null);
if(debugFunctions){this.debug(this.getName()+"#"+stateName+"#actionsAfterOnentry");
}this._states[stateName].getAutoActionsAfterOnentry()(this);
};
qx.Proto.pushState=function(bCurrent){if(this._savedStates.length>=this.getMaxSavedStates()){throw new Error("Saved-state stack is full");
}
if(bCurrent){this._savedStates.push(this.getState());
}else{this._savedStates.push(this.getPreviousState());
}};
qx.Proto.postponeEvent=function(event){this._blockedEvents.unshift(event);
};
qx.Proto.copyEvent=function(event){var e={};
for(var prop in event){e[prop]=event[prop];
}return e;
};
qx.Proto.enqueueEvent=function(event,bAddAtHead){if(bAddAtHead){this._eventQueue.push(event);
}else{this._eventQueue.unshift(event);
}
if(this.getDebugFlags()&qx.util.fsm.FiniteStateMachine.DebugFlags.EVENTS){if(bAddAtHead){this.debug(this.getName()+": Pushed event: "+event.getType());
}else{this.debug(this.getName()+": Queued event: "+event.getType());
}}};
qx.Proto.eventListener=function(event){var e=this.copyEvent(event);
this.enqueueEvent(e,false);
this._processEvents();
};
qx.Proto._processEvents=function(){if(this._eventProcessingInProgress){return ;
}this._eventProcessingInProgress=true;
while(this._eventQueue.length>0){var event=this._eventQueue.pop();
var bDispose=this._run(event);
if(bDispose){event.dispose();
}}this._eventProcessingInProgress=false;
};
qx.Proto._run=function(event){var fsm=this;
var thisState;
var nextState;
var prevState;
var currentState;
var transitions;
var e;
var action;
var debugFlags=this.getDebugFlags();
var debugEvents=debugFlags&qx.util.fsm.FiniteStateMachine.DebugFlags.EVENTS;
var debugTransitions=debugFlags&qx.util.fsm.FiniteStateMachine.DebugFlags.TRANSITIONS;
var debugFunctions=debugFlags&qx.util.fsm.FiniteStateMachine.DebugFlags.FUNCTION_DETAIL;
var debugObjectNotFound=debugFlags&qx.util.fsm.FiniteStateMachine.DebugFlags.OBJECT_NOT_FOUND;
if(debugEvents){this.debug(this.getName()+": Process event: "+event.getType());
}thisState=this.getState();
currentState=this._states[thisState];
transitions=currentState.transitions;
e=currentState.getEvents()[event.getType()];
if(!e){if(debugEvents){this.debug(this.getName()+": Event '"+event.getType()+"'"+" not handled.  Ignoring.");
}return true;
}if(typeof (e)==$[4]){var friendly=this.getFriendlyName(event.getTarget());
if(!friendly){if(debugObjectNotFound){this.debug(this.getName()+": Could not find friendly name for '"+event.getType()+"' on '"+event.getTarget()+"'");
}return true;
}action=e[friendly];
}else{action=e;
}
switch(action){case qx.util.fsm.FiniteStateMachine.EventHandling.PREDICATE:break;
case qx.util.fsm.FiniteStateMachine.EventHandling.BLOCKED:if(debugEvents){this.debug(this.getName()+": Event '"+event.getType()+"'"+" blocked.  Re-queuing.");
}this._blockedEvents.unshift(event);
return false;
default:if(typeof (action)==$[0]){if(transitions[action]){var trans=transitions[action];
transitions={};
transitions[action]=trans;
}else{throw new Error("Explicit transition "+action+" does not exist");
}break;
}}for(var t in transitions){var trans=transitions[t];
switch(trans.getPredicate()(this,event)){case true:break;
case false:continue;
case null:return true;
default:throw new Error("Transition "+thisState+":"+t+" returned a value other than true, false, or null.");
}nextState=trans.getNextState();
if(typeof (nextState)==$[0]){if(!nextState in this._states){throw new Error("Attempt to transition to nonexistent state "+nextState);
}this.setNextState(nextState);
}else{switch(nextState){case qx.util.fsm.FiniteStateMachine.StateChange.CURRENT_STATE:nextState=thisState;
this.setNextState(nextState);
break;
case qx.util.fsm.FiniteStateMachine.StateChange.POP_STATE_STACK:if(this._savedStates.length==0){throw new Error("Attempt to transition to POP_STATE_STACK "+"while state stack is empty.");
}nextState=this._savedStates.pop();
this.setNextState(nextState);
break;
default:throw new Error("Internal error: invalid nextState");
break;
}}if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#"+t+"#autoActionsBeforeOntransition");
}trans.getAutoActionsBeforeOntransition()(this);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#"+t+"#ontransition");
}trans.getOntransition()(this,event);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#"+t+"#autoActionsAfterOntransition");
}trans.getAutoActionsAfterOntransition()(this);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#autoActionsBeforeOnexit");
}currentState.getAutoActionsBeforeOnexit()(this);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#exit");
}currentState.getOnexit()(this,event);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#autoActionsAfterOnexit");
}currentState.getAutoActionsAfterOnexit()(this);
if(currentState._needDispose){currentState.dispose();
}currentState=this._states[this.getNextState()];
this.setPreviousState(thisState);
this.setState(this.getNextState());
this.setNextState(null);
prevState=thisState;
thisState=nextState;
nextState=undefined;
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#autoActionsBeforeOnentry");
}currentState.getAutoActionsBeforeOnentry()(this);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#entry");
}currentState.getOnentry()(this,event);
if(debugFunctions){this.debug(this.getName()+"#"+thisState+"#autoActionsAfterOnentry");
}currentState.getAutoActionsAfterOnentry()(this);
var e;
for(var i=0;i<this._blockedEvents.length;i++){e=this._blockedEvents.pop();
this._eventQueue.unshift(e);
}qx.ui.core.Widget.flushGlobalQueues();
if(debugTransitions){this.debug(this.getName()+"#"+prevState+" => "+this.getName()+"#"+thisState);
}return true;
}
if(debugTransitions){this.debug(this.getName()+"#"+thisState+": event '"+event.getType()+"'"+": no transition found.  No state change.");
}return true;
};
qx.Settings.setDefault($[597],(qx.util.fsm.FiniteStateMachine.DebugFlags.EVENTS|qx.util.fsm.FiniteStateMachine.DebugFlags.TRANSITIONS|qx.util.fsm.FiniteStateMachine.DebugFlags.OBJECT_NOT_FOUND));
qx.Clazz._commonCheckAutoActions=function(actionType,propValue,propData){if(typeof (propValue)!=$[4]){throw new Error("Invalid "+actionType+" value: "+typeof (propValue));
}var funcFragment;
var func=$[1092]+$[292];
var param;
var objectAndGroupList;
for(var f in propValue){var functionRequest=propValue[f];
if(!functionRequest instanceof Array){throw new Error("Invalid function request type: "+"expected array, found "+typeof (functionRequest));
}for(var i=0;i<functionRequest.length;i++){objectAndGroupList=functionRequest[i];
if(typeof (objectAndGroupList)!=$[4]){throw new Error("Invalid function request parameter type: "+"expected object, found "+typeof (functionRequest[param]));
}params=objectAndGroupList[$[767]];
if(!params){params=[];
}else{if(!params instanceof Array){throw new Error("Invalid function parameters: "+"expected array, found "+typeof (params));
}}funcFragment=f+$[149];
for(var j=0;j<params.length;j++){if(j!=0){funcFragment+=$[23];
}
if(typeof (params[j])==$[31]){funcFragment+=$[149]+params[j]+$[2307];
}else if(typeof (params[j])==$[0]){funcFragment+=$[269]+params[j]+$[269];
}else{funcFragment+=params[j];
}}funcFragment+=$[82];
var a=objectAndGroupList[$[1108]];
if(!a){a=[];
}else if(!a instanceof Array){throw new Error("Invalid 'objects' list: expected array, got "+typeof (a));
}
for(var j=0;j<a.length;j++){if(typeof (a[j])!=$[0]){throw new Error("Invalid friendly name in 'objects' list: "+a[j]);
}func+=$[2374]+a[j]+$[2415]+funcFragment+$[67];
}var g=objectAndGroupList[$[1989]];
if(g){if(!g instanceof Array){throw new Error("Invalid 'groups' list: expected array, got "+typeof (g));
}
for(var groupName in g){func+=$[1883]+$[2179]+g[groupName]+$[1992]+$[961]+$[1474]+$[2097]+$[2400]+funcFragment+$[67]+$[1592];
}}}}func+=$[281]+$[1767]+$[292]+$[1068]+$[281];
return new Function($[1322],func);
};
qx.Proto.dispose=function(){var e;
var s;
if(this.getDisposed()){return true;
}
while(this._savedStates.length>0){s=this._savedStates.pop();
s=null;
}this._savedStates=null;
while(this._eventQueue.length>0){e=this._eventQueue.pop();
e.dispose();
e=null;
}this._eventQueue=null;
while(this._blockedEvents.length>0){e=this._blockedEvents.pop();
e.dispose();
e=null;
}
for(var s in this._states){this._states[s].dispose();
this._states[s]=null;
delete this._states[s];
}this._states=null;
return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.util.fsm.State */
qx.OO.defineClass($[1244],qx.core.Object,function(stateName,stateInfo){qx.core.Object.call(this,true);
this.setName(stateName);
if(typeof (stateInfo)!=$[4]){throw new Error("State info must be an object");
}for(var field in stateInfo){switch(field){case $[620]:this.setOnentry(stateInfo[field]);
break;
case $[759]:this.setOnexit(stateInfo[field]);
break;
case $[485]:this.setAutoActionsBeforeOnentry(stateInfo[field]);
break;
case $[470]:this.setAutoActionsAfterOnentry(stateInfo[field]);
break;
case $[457]:this.setAutoActionsBeforeOnexit(stateInfo[field]);
break;
case $[398]:this.setAutoActionsAfterOnexit(stateInfo[field]);
break;
case $[745]:this.setEvents(stateInfo[field]);
break;
default:this.setUserData(field,stateInfo[field]);
this.debug("State "+stateName+": "+"Adding user-provided field to state: "+field);
break;
}}if(!this.getEvents()){throw new Error("The events object must be provided in new state info");
}this.transitions={};
});
qx.OO.addProperty({name:$[97],type:$[0]});
qx.OO.addProperty({name:$[620],defaultValue:function(fsm,event){}});
qx.OO.addProperty({name:$[759],defaultValue:function(fsm,event){}});
qx.OO.addProperty({name:$[485],defaultValue:function(fsm,event){}});
qx.OO.addProperty({name:$[470],defaultValue:function(fsm,event){}});
qx.OO.addProperty({name:$[457],defaultValue:function(fsm,event){}});
qx.OO.addProperty({name:$[398],defaultValue:function(fsm,event){}});
qx.OO.addProperty({name:$[745]});
qx.Proto._checkName=function(propValue,propData){if(typeof (propValue)!=$[0]||propValue.length<1){throw new Error("Invalid state name");
}return propValue;
};
qx.Proto._checkOnentry=function(propValue,propData){switch(typeof (propValue)){case $[41]:return function(fsm,event){};
case $[31]:return propValue;
default:throw new Error("Invalid onentry type: "+typeof (propValue));
return null;
}};
qx.Proto._checkOnexit=function(propValue,propData){switch(typeof (propValue)){case $[41]:return function(fsm,event){};
case $[31]:return propValue;
default:throw new Error("Invalid onexit type: "+typeof (propValue));
return null;
}};
qx.Proto._checkEvents=function(propValue,propData){if(typeof (propValue)!=$[4]){throw new Error("events must be an object");
}for(var e in propValue){var action=propValue[e];
if(typeof (action)==$[2]&&action!=qx.util.fsm.FiniteStateMachine.EventHandling.PREDICATE&&action!=qx.util.fsm.FiniteStateMachine.EventHandling.BLOCKED){throw new Error("Invalid numeric value in events object: "+e+": "+action);
}else if(typeof (action)==$[4]){for(action_e in action){if(typeof (action[action_e])==$[2]&&action[action_e]!=qx.util.fsm.FiniteStateMachine.EventHandling.PREDICATE&&action[action_e]!=qx.util.fsm.FiniteStateMachine.EventHandling.BLOCKED){throw new Error("Invalid numeric value in events object "+"("+e+"): "+action_e+": "+action[action_e]);
}else if(typeof (action[action_e])!=$[0]&&typeof (action[action_e])!=$[2]){throw new Error("Invalid value in events object "+"("+e+"): "+action_e+": "+action[action_e]);
}}}else if(typeof (action)!=$[0]&&typeof (action)!=$[2]){throw new Error("Invalid value in events object: "+e+": "+propValue[e]);
}}return propValue;
};
qx.Proto._checkAutoActionsBeforeOnentry=function(propValue,propData){return qx.util.fsm.FiniteStateMachine._commonCheckAutoActions($[485],propValue,propData);
};
qx.Proto._checkAutoActionsAfterOnentry=function(propValue,propData){return qx.util.fsm.FiniteStateMachine._commonCheckAutoActions($[470],propValue,propData);
};
qx.Proto._checkAutoActionsBeforeOnexit=function(propValue,propData){return qx.util.fsm.FiniteStateMachine._commonCheckAutoActions($[457],propValue,propData);
};
qx.Proto._checkAutoActionsAfterOnexit=function(propValue,propData){return qx.util.fsm.FiniteStateMachine._commonCheckAutoActions($[398],propValue,propData);
};
qx.Proto.addTransition=function(trans){if(!trans instanceof qx.util.fsm.Transition){throw new Error("Invalid transition: not an instance of "+"qx.util.fsm.Transition");
}this.transitions[trans.getName()]=trans;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}return qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.util.fsm.Transition */
qx.OO.defineClass($[1268],qx.core.Object,function(transitionName,transitionInfo){qx.core.Object.call(this,true);
this.setName(transitionName);
for(var field in transitionInfo){switch(field){case $[651]:this.setPredicate(transitionInfo[field]);
break;
case $[361]:this.setNextState(transitionInfo[field]);
break;
case $[662]:this.setAutoActionsBeforeOntransition(transitionInfo[field]);
break;
case $[627]:this.setAutoActionsAfterOntransition(transitionInfo[field]);
break;
case $[675]:this.setOntransition(transitionInfo[field]);
break;
default:this.setUserData(field,transitionInfo[field]);
this.debug("Transition "+transitionName+": "+"Adding user-provided field to transition: "+field);
break;
}}});
qx.OO.addProperty({name:$[97],type:$[0]});
qx.OO.addProperty({name:$[651],defaultValue:function(fsm,event){return true;
}});
qx.OO.addProperty({name:$[361],defaultValue:qx.util.fsm.FiniteStateMachine.StateChange.CURRENT_STATE});
qx.OO.addProperty({name:$[662],defaultValue:function(fsm,event){}});
qx.OO.addProperty({name:$[627],defaultValue:function(fsm,event){}});
qx.OO.addProperty({name:$[675],defaultValue:function(fsm,event){}});
qx.Proto._checkName=function(propValue,propData){if(typeof (propValue)!=$[0]||propValue.length<1){throw new Error("Invalid transition name");
}return propValue;
};
qx.Proto._checkPredicate=function(propValue,propData){switch(typeof (propValue)){case $[41]:return function(fsm,event){return true;
};
case $[3]:return function(fsm,event){return propValue;
};
case $[31]:return propValue;
default:throw new Error("Invalid transition predicate type: "+typeof (propValue));
break;
}};
qx.Proto._checkNextState=function(propValue,propData){switch(typeof (propValue)){case $[0]:return propValue;
case $[2]:switch(propValue){case qx.util.fsm.FiniteStateMachine.StateChange.CURRENT_STATE:case qx.util.fsm.FiniteStateMachine.StateChange.POP_STATE_STACK:case qx.util.fsm.FiniteStateMachine.StateChange.TERMINATE:return propValue;
default:throw new Error("Invalid transition nextState value: "+propValue+": nextState must be an explicit state name, "+"or one of the Fsm.StateChange constants");
}break;
default:throw new Error("Invalid transition nextState type: "+typeof (propValue));
break;
}};
qx.Proto._checkOntransition=function(propValue,propData){switch(typeof (propValue)){case $[41]:return function(fsm,event){};
case $[31]:return propValue;
default:throw new Error("Invalid ontransition type: "+typeof (propValue));
break;
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}return qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.ui.component.ColorPopup */
qx.OO.defineClass($[2418],qx.ui.popup.Popup,function(tables){qx.ui.popup.Popup.call(this);
this.setPadding(4);
this.auto();
this.setBorder(qx.renderer.border.BorderPresets.getInstance().outset);
this.setBackgroundColor($[102]);
this._tables=tables;
this._createLayout();
this._createAutoBtn();
this._createBoxes();
this._createPreview();
this._createSelectorBtn();
this.addEventListener($[534],this._onBeforeAppear);
});
qx.OO.addProperty({name:$[104],type:$[4],instance:$[137]});
qx.OO.addProperty({name:$[463],type:$[2],defaultValue:0});
qx.OO.addProperty({name:$[345],type:$[2],defaultValue:0});
qx.OO.addProperty({name:$[480],type:$[2],defaultValue:0});
qx.Proto._minZIndex=1e5;
qx.Proto._createLayout=function(){this._layout=new qx.ui.layout.VerticalBoxLayout;
this._layout.setLocation(0,0);
this._layout.auto();
this._layout.setSpacing(2);
this.add(this._layout);
};
qx.Proto._createAutoBtn=function(){this._automaticBtn=new qx.ui.form.Button(this.tr($[1803]));
this._automaticBtn.setWidth(null);
this._automaticBtn.setAllowStretchX(true);
this._automaticBtn.addEventListener($[38],this._onAutomaticBtnExecute,this);
this._layout.add(this._automaticBtn);
};
qx.Proto._recentTableId=$[1656];
qx.Proto._fieldWidth=14;
qx.Proto._fieldHeight=14;
qx.Proto._fieldNumber=12;
qx.Proto._createBoxes=function(){this._boxes={};
var tables=this._tables;
var table,box,boxLayout,field;
for(var tableId in tables){table=tables[tableId];
box=new qx.ui.groupbox.GroupBox(table.label);
box.setHeight($[5]);
this._boxes[tableId]=box;
this._layout.add(box);
boxLayout=new qx.ui.layout.HorizontalBoxLayout;
boxLayout.setLocation(0,0);
boxLayout.setSpacing(1);
boxLayout.auto();
box.add(boxLayout);
for(var i=0;i<this._fieldNumber;i++){field=new qx.ui.basic.Terminator;
field.setBorder(qx.renderer.border.BorderPresets.getInstance().thinInset);
field.setBackgroundColor(table.values[i]||null);
field.setDimension(this._fieldWidth,this._fieldHeight);
field.addEventListener($[6],this._onFieldMouseDown,this);
field.addEventListener($[40],this._onFieldMouseOver,this);
boxLayout.add(field);
}}};
qx.Proto._createPreview=function(){this._previewBox=new qx.ui.groupbox.GroupBox(this.tr($[442]));
this._previewLayout=new qx.ui.layout.HorizontalBoxLayout;
this._selectedPreview=new qx.ui.basic.Terminator;
this._currentPreview=new qx.ui.basic.Terminator;
this._previewLayout.setHeight($[5]);
this._previewLayout.setWidth($[39]);
this._previewLayout.setSpacing(4);
this._previewLayout.add(this._selectedPreview,this._currentPreview);
this._previewBox.setHeight($[5]);
this._previewBox.add(this._previewLayout);
this._layout.add(this._previewBox);
this._selectedPreview.setBorder(qx.renderer.border.BorderPresets.getInstance().inset);
this._selectedPreview.setWidth($[37]);
this._selectedPreview.setHeight(24);
this._currentPreview.setBorder(qx.renderer.border.BorderPresets.getInstance().inset);
this._currentPreview.setWidth($[37]);
this._currentPreview.setHeight(24);
};
qx.Proto._createSelectorBtn=function(){this._selectorButton=new qx.ui.form.Button(this.tr($[2431]));
this._selectorButton.setWidth(null);
this._selectorButton.setAllowStretchX(true);
this._selectorButton.addEventListener($[38],this._onSelectorButtonExecute,this);
this._layout.add(this._selectorButton);
};
qx.Proto._createColorSelector=function(){if(this._colorSelector){return;
}this._colorSelectorWindow=new qx.ui.window.Window(this.tr($[2227]));
this._colorSelectorWindow.setMinWidth(null);
this._colorSelectorWindow.setMinHeight(null);
this._colorSelectorWindow.setResizeable(false);
this._colorSelectorWindow.auto();
this._colorSelector=new qx.ui.component.ColorSelector;
this._colorSelector.setBorder(null);
this._colorSelector.setLocation(0,0);
this._colorSelector.addEventListener($[661],this._onColorSelectorOk,this);
this._colorSelector.addEventListener($[552],this._onColorSelectorCancel,this);
this._colorSelectorWindow.add(this._colorSelector);
this._colorSelectorWindow.addToDocument();
};
qx.Proto._modifyValue=function(propValue,propOldValue,propData){if(propValue===null){this.setRed(null);
this.setGreen(null);
this.setBlue(null);
}else{this.setRed(propValue.getRed());
this.setGreen(propValue.getGreen());
this.setBlue(propValue.getBlue());
}this._selectedPreview.setBackgroundColor(propValue);
this._rotatePreviousColors();
return true;
};
qx.Proto._rotatePreviousColors=function(){var vRecentTable=this._tables[this._recentTableId].values;
var vRecentBox=this._boxes[this._recentTableId];
if(!vRecentTable){return;
}var newValue=this.getValue();
if(!newValue){return;
}newValue=newValue.getStyle();
var vIndex=vRecentTable.indexOf(newValue);
if(vIndex!=-1){qx.lang.Array.removeAt(vRecentTable,vIndex);
}else if(vRecentTable.length==this._fieldNumber){vRecentTable.shift();
}vRecentTable.push(newValue);
var vFields=vRecentBox.getFrameObject().getFirstChild().getChildren();
for(var i=0;i<vFields.length;i++){vFields[i].setBackgroundColor(vRecentTable[i]||null);
}};
qx.Proto._onFieldMouseDown=function(e){var vValue=this._currentPreview.getBackgroundColor();
this.setValue(vValue);
if(vValue){this.hide();
}};
qx.Proto._onFieldMouseOver=function(e){this._currentPreview.setBackgroundColor(e.getTarget().getBackgroundColor());
};
qx.Proto._onAutomaticBtnExecute=function(e){this.setValue(null);
this.hide();
};
qx.Proto._onSelectorButtonExecute=function(e){this._createColorSelector();
this._colorSelectorWindow.setTop(qx.html.Location.getPageBoxTop(this._selectorButton.getElement())+10);
this._colorSelectorWindow.setLeft(qx.html.Location.getPageBoxLeft(this._selectorButton.getElement())+100);
this.hide();
this._colorSelectorWindow.open();
};
qx.Proto._onColorSelectorOk=function(e){var sel=this._colorSelector;
this.setValue(qx.renderer.color.ColorCache([sel.getRed(),sel.getGreen(),sel.getBlue()]));
this._colorSelectorWindow.close();
};
qx.Proto._onColorSelectorCancel=function(e){this._colorSelectorWindow.close();
};
qx.Proto._onBeforeAppear=function(e){this._currentPreview.setBackgroundColor(null);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._tables=null;
this._boxes=null;
if(this._layout){this._layout.dispose();
this._layout=null;
}
if(this._automaticBtn){this._automaticBtn.dispose();
this._automaticBtn=null;
}
if(this._previewBox){this._previewBox.dispose();
this._previewBox=null;
}
if(this._previewLayout){this._previewLayout.dispose();
this._previewLayout=null;
}
if(this._selectedPreview){this._selectedPreview.dispose();
this._selectedPreview=null;
}
if(this._currentPreview){this._currentPreview.dispose();
this._currentPreview=null;
}
if(this._selectorButton){this._selectorButton.dispose();
this._selectorButton=null;
}
if(this._colorSelectorWindow){this._colorSelectorWindow.dispose();
this._colorSelectorWindow=null;
}
if(this._colorSelector){this._colorSelector.dispose();
this._colorSelector=null;
}return qx.ui.popup.Popup.prototype.dispose.call(this);
};




/* ID: qx.ui.table.RemoteTableModel */
qx.OO.defineClass($[1424],qx.ui.table.AbstractTableModel,function(){qx.ui.table.AbstractTableModel.call(this);
this._sortColumnIndex=-1;
this._sortAscending=true;
this._rowCount=-1;
this._lruCounter=0;
this._firstLoadingBlock=-1;
this._firstRowToLoad=-1;
this._lastRowToLoad=-1;
this._ignoreCurrentRequest=false;
this._rowBlockCache={};
this._rowBlockCount=0;
});
qx.OO.addProperty({name:$[2440],type:$[2],defaultValue:50,allowNull:false});
qx.OO.addProperty({name:$[1678],type:$[2],defaultValue:15,allowNull:false});
qx.OO.addProperty({name:$[1810],type:$[3],defaultValue:false,allowNull:false});
qx.Proto.getRowCount=function(){if(this._rowCount==-1){this._loadRowCount();
return (this._rowCount==-1)?0:this._rowCount;
}else{return this._rowCount;
}};
qx.Proto._loadRowCount=function(){throw new Error("_loadRowCount is abstract");
};
qx.Proto._onRowCountLoaded=function(rowCount){if(rowCount==null){rowCount=0;
}this._rowCount=rowCount;
var data={firstRow:0,lastRow:rowCount-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.dispatchEvent(new qx.event.type.DataEvent(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,data),true);
};
qx.Proto.reloadData=function(){this.clearCache();
if(this._firstLoadingBlock!=-1){this._ignoreCurrentRequest=true;
}this._firstRowToLoad=-1;
this._lastRowToLoad=-1;
this._loadRowCount();
};
qx.Proto.clearCache=function(){this._rowBlockCache={};
this._rowBlockCount=0;
};
qx.Proto.iterateCachedRows=function(iterator,object){var blockSize=this.getBlockSize();
var blockCount=Math.ceil(this.getRowCount()/blockSize);
for(var block=0;block<=blockCount;block++){var blockData=this._rowBlockCache[block];
if(blockData!=null){var rowOffset=block*blockSize;
var rowDataArr=blockData.rowDataArr;
for(var relRow=0;relRow<rowDataArr.length;relRow++){var rowData=rowDataArr[relRow];
var newRowData=iterator.call(object,rowOffset+relRow,rowData);
if(newRowData!=null){rowDataArr[relRow]=newRowData;
}}}}};
qx.Proto.prefetchRows=function(firstRowIndex,lastRowIndex){if(this._firstLoadingBlock==-1){var blockSize=this.getBlockSize();
var totalBlockCount=Math.ceil(this._rowCount/blockSize);
var firstBlock=parseInt(firstRowIndex/blockSize)-1;
if(firstBlock<0){firstBlock=0;
}var lastBlock=parseInt(lastRowIndex/blockSize)+1;
if(lastBlock>=totalBlockCount){lastBlock=totalBlockCount-1;
}var firstBlockToLoad=-1;
var lastBlockToLoad=-1;
for(var block=firstBlock;block<=lastBlock;block++){if(this._rowBlockCache[block]==null||this._rowBlockCache[block].isDirty){if(firstBlockToLoad==-1){firstBlockToLoad=block;
}lastBlockToLoad=block;
}}if(firstBlockToLoad!=-1){this._firstRowToLoad=-1;
this._lastRowToLoad=-1;
this._firstLoadingBlock=firstBlockToLoad;
this._loadRowData(firstBlockToLoad*blockSize,(lastBlockToLoad+1)*blockSize-1);
}}else{this._firstRowToLoad=firstRowIndex;
this._lastRowToLoad=lastRowIndex;
}};
qx.Proto._loadRowData=function(firstRow,lastRow){throw new Error("_loadRowCount is abstract");
};
qx.Proto._onRowDataLoaded=function(rowDataArr){if(rowDataArr!=null&&!this._ignoreCurrentRequest){var blockSize=this.getBlockSize();
var blockCount=Math.ceil(rowDataArr.length/blockSize);
if(blockCount==1){this._setRowBlockData(this._firstLoadingBlock,rowDataArr);
}else{for(var i=0;i<blockCount;i++){var rowOffset=i*blockSize;
var blockRowData=[];
var mailCount=Math.min(blockSize,rowDataArr.length-rowOffset);
for(var row=0;row<mailCount;row++){blockRowData.push(rowDataArr[rowOffset+row]);
}this._setRowBlockData(this._firstLoadingBlock+i,blockRowData);
}}var data={firstRow:this._firstLoadingBlock*blockSize,lastRow:(this._firstLoadingBlock+blockCount+1)*blockSize-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.dispatchEvent(new qx.event.type.DataEvent(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,data),true);
}this._firstLoadingBlock=-1;
this._ignoreCurrentRequest=false;
if(this._firstRowToLoad!=-1){this.prefetchRows(this._firstRowToLoad,this._lastRowToLoad);
}};
qx.Proto._setRowBlockData=function(block,rowDataArr){if(this._rowBlockCache[block]==null){this._rowBlockCount++;
while(this._rowBlockCount>this.getMaxCachedBlockCount()){var lruBlock;
var minLru=this._lruCounter;
for(var currBlock in this._rowBlockCache){var currLru=this._rowBlockCache[currBlock].lru;
if(currLru<minLru&&currBlock>1){minLru=currLru;
lruBlock=currBlock;
}}delete this._rowBlockCache[lruBlock];
this._rowBlockCount--;
}}this._rowBlockCache[block]={lru:++this._lruCounter,rowDataArr:rowDataArr};
};
qx.Proto.removeRow=function(rowIndex){if(this.getClearCacheOnRemove()){this.clearCache();
var data={firstRow:0,lastRow:rowCount-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.dispatchEvent(new qx.event.type.DataEvent(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,data),true);
}else{var blockSize=this.getBlockSize();
var blockCount=Math.ceil(this.getRowCount()/blockSize);
var startBlock=parseInt(rowIndex/blockSize);
for(var block=startBlock;block<=blockCount;block++){var blockData=this._rowBlockCache[block];
if(blockData!=null){var removeIndex=0;
if(block==startBlock){removeIndex=rowIndex-block*blockSize;
}blockData.rowDataArr.splice(removeIndex,1);
if(block==blockCount-1){if(blockData.rowDataArr.length==0){delete this._rowBlockCache[block];
}}else{var nextBlockData=this._rowBlockCache[block+1];
if(nextBlockData!=null){blockData.rowDataArr.push(nextBlockData.rowDataArr[0]);
}else{blockData.isDirty=true;
}}}}
if(this._rowCount!=-1){this._rowCount--;
}if(this.hasEventListeners(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED)){var data={firstRow:rowIndex,lastRow:this.getRowCount()-1,firstColumn:0,lastColumn:this.getColumnCount()-1};
this.dispatchEvent(new qx.event.type.DataEvent(qx.ui.table.TableModel.EVENT_TYPE_DATA_CHANGED,data),true);
}}};
qx.Proto.getRowData=function(rowIndex){var blockSize=this.getBlockSize();
var block=parseInt(rowIndex/blockSize);
var blockData=this._rowBlockCache[block];
if(blockData==null){return null;
}else{var rowData=blockData.rowDataArr[rowIndex-(block*blockSize)];
if(blockData.lru!=this._lruCounter){blockData.lru=++this._lruCounter;
}return rowData;
}};
qx.Proto.getValue=function(columnIndex,rowIndex){var rowData=this.getRowData(rowIndex);
if(rowData==null){return null;
}else{var columnId=this.getColumnId(columnIndex);
return rowData[columnId];
}};
qx.Proto.setColumnSortable=function(columnIndex,sortable){if(sortable!=this.isColumnSortable(columnIndex)){if(this._sortableColArr==null){this._sortableColArr=[];
}this._sortableColArr[columnIndex]=sortable;
this.createDispatchEvent(qx.ui.table.TableModel.EVENT_TYPE_META_DATA_CHANGED);
}};
qx.Proto.isColumnSortable=function(columnIndex){return this._sortableColArr?(this._sortableColArr[columnIndex]==true):false;
};
qx.Proto.sortByColumn=function(columnIndex,ascending){if(this._sortColumnIndex!=columnIndex||this._sortAscending!=ascending){this._sortColumnIndex=columnIndex;
this._sortAscending=ascending;
this.clearCache();
this.createDispatchEvent(qx.ui.table.TableModel.EVENT_TYPE_META_DATA_CHANGED);
}};
qx.Proto.getSortColumnIndex=function(){return this._sortColumnIndex;
};
qx.Proto.isSortAscending=function(){return this._sortAscending;
};




/* ID: qx.log.DivAppender */
qx.OO.defineClass($[1425],qx.log.Appender,function(divId){qx.log.Appender.call(this);
this._divId=divId?divId:$[784];
});
qx.OO.addProperty({name:$[450],type:$[2],defaultValue:500});
qx.OO.changeProperty({name:$[432],type:$[3],defaultValue:false,allowNull:false});
qx.OO.addProperty({name:$[2224],type:$[0],defaultValue:$[1538]});
qx.OO.addProperty({name:$[2025],type:$[0],defaultValue:$[1103]});
qx.OO.addProperty({name:$[2182],type:$[0],defaultValue:$[2221]});
qx.OO.addProperty({name:$[1517],type:$[0],defaultValue:$[1453]});
qx.OO.addProperty({name:$[2214],type:$[0],defaultValue:$[2381]});
qx.OO.addProperty({name:$[1300],type:$[0],defaultValue:$[1887]});
qx.OO.addProperty({name:$[1419],type:$[0],defaultValue:$[1841]});
qx.Proto._createClearButtonHandler=function(logElem){return function(evt){logElem.innerHTML=$[1];
};
};
qx.Proto.appendLogEvent=function(evt){var Logger=qx.log.Logger;
if(this._logElem==null){var divElem=document.getElementById(this._divId);
if(divElem==null){throw new Error("Logging div with ID "+this._divId+" not found");
}divElem.innerHTML=$[606]+this.getHeadClassName()+$[1516]+$[606]+this.getBodyClassName()+$[1093];
this._clearBt=divElem.firstChild.firstChild;
this._logElem=divElem.lastChild;
this._clearBt.onclick=this._createClearButtonHandler(this._logElem);
}var group=evt.logger.getName();
if(evt.instanceId!=null){group+=$[320]+evt.instanceId+$[190];
}
if(group!=this._lastGroup){var elem=document.createElement($[50]);
elem.className=this.getGroupClassName();
elem.innerHTML=group;
this._logElem.appendChild(elem);
this._lastGroup=group;
}var elem=document.createElement($[50]);
switch(evt.level){case Logger.LEVEL_DEBUG:elem.className=this.getDebugClassName();
break;
case Logger.LEVEL_INFO:elem.className=this.getInfoClassName();
break;
case Logger.LEVEL_WARN:elem.className=this.getWarnClassName();
break;
case Logger.LEVEL_ERROR:elem.className=this.getErrorClassName();
break;
}elem.innerHTML=this.formatLogEvent(evt).replace(/&/g,$[1864]).replace(/</g,$[1003]).replace(/  /g,$[1937]).replace(/[\n]/g,$[700]);
this._logElem.appendChild(elem);
while(this._logElem.childNodes.length>this.getMaxMessages()){this._logElem.removeChild(this._logElem.firstChild);
if(this._removedMessageCount==null){this._removedMessageCount=1;
}else{this._removedMessageCount++;
}}
if(this._removedMessageCount!=null){this._logElem.firstChild.className=$[1];
this._logElem.firstChild.innerHTML=$[149]+this._removedMessageCount+$[670];
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}
if(this._clearBt){this._clearBt.onclick=null;
this._clearBt=null;
}this._logElem=null;
return qx.log.Appender.prototype.dispose.call(this);
};




/* ID: qx.html.Window */
qx.OO.defineClass($[1727]);
qx.html.Window.getInnerWidth=function(window){};
qx.html.Window.getInnerHeight=function(window){};
qx.html.Window.getScrollLeft=function(window){};
qx.html.Window.getScrollTop=function(window){};
if(qx.core.Client.getInstance().isMshtml()){qx.html.Window.getInnerWidth=function(w){if(w.document.documentElement&&w.document.documentElement.clientWidth){return w.document.documentElement.clientWidth;
}else if(w.document.body){return w.document.body.clientWidth;
}return 0;
};
qx.html.Window.getInnerHeight=function(w){if(w.document.documentElement&&w.document.documentElement.clientHeight){return w.document.documentElement.clientHeight;
}else if(w.document.body){return w.document.body.clientHeight;
}return 0;
};
qx.html.Window.getScrollLeft=function(w){if(w.document.documentElement&&w.document.documentElement.scrollLeft){return w.document.documentElement.scrollLeft;
}else if(w.document.body){return w.document.body.scrollTop;
}return 0;
};
qx.html.Window.getScrollTop=function(w){if(w.document.documentElement&&w.document.documentElement.scrollTop){return w.document.documentElement.scrollTop;
}else if(w.document.body){return w.document.body.scrollTop;
}return 0;
};
}else{qx.html.Window.getInnerWidth=function(w){return w.innerWidth;
};
qx.html.Window.getInnerHeight=function(w){return w.innerHeight;
};
qx.html.Window.getScrollLeft=function(w){return w.document.body.scrollLeft;
};
qx.html.Window.getScrollTop=function(w){return w.document.body.scrollTop;
};
}



/* ID: qx.theme.color.System */
qx.OO.defineClass($[2194],qx.renderer.theme.ColorTheme,function(){qx.renderer.theme.ColorTheme.call(this,$[1065]);
});
qx.Clazz.getInstance=qx.lang.Function.returnInstance;
qx.manager.object.ColorManager.getInstance().registerColorTheme(qx.Clazz);




/* ID: qx.lang.Prototypes */
qx.OO.defineClass($[497]);
qx.Settings.setDefault($[720],false);
qx.lang.Prototypes.init=function(){var key,obj;
var objs=[$[586],$[944],$[619]];
for(var i=0,len=objs.length;i<len;i++){obj=objs[i];
for(key in qx.lang[obj]){window[obj].prototype[key]=(function(key,obj){return function(){return qx.lang[obj][key].apply(null,Array.prototype.concat.call([this],Array.prototype.slice.call(arguments,0)));
};
})(key,obj);
}}};
if(qx.Settings.getValueOfClass($[497],$[720])){qx.lang.Prototypes.init();
}



/* ID: qx.ui.toolbar.CheckBox */
qx.OO.defineClass($[1459],qx.ui.toolbar.Button,function(vText,vIcon,vChecked){qx.ui.toolbar.Button.call(this,vText,vIcon);
if(vChecked!=null){this.setChecked(vChecked);
}});
qx.OO.addProperty({name:$[81],type:$[3],defaultValue:false,getAlias:$[240]});
qx.Proto._modifyChecked=function(propValue,propOldValue,propData){propValue?this.addState($[81]):this.removeState($[81]);
return true;
};
qx.Proto._onmouseup=function(e){this.setCapture(false);
if(!this.hasState($[51])){this.addState($[58]);
this.setChecked(!this.getChecked());
this.execute();
}this.removeState($[51]);
this.removeState($[19]);
e.stopPropagation();
};




/* ID: qx.ui.toolbar.RadioButton */
qx.OO.defineClass($[1612],qx.ui.toolbar.CheckBox,function(vText,vIcon,vChecked){qx.ui.toolbar.CheckBox.call(this,vText,vIcon,vChecked);
});
qx.OO.addProperty({name:$[261],type:$[4],instance:$[214],allowNull:true});
qx.OO.addProperty({name:$[97],type:$[0]});
qx.OO.addProperty({name:$[914],type:$[3],defaultValue:false});
qx.Proto._modifyChecked=function(propValue,propOldValue,propData){qx.ui.toolbar.CheckBox.prototype._modifyChecked.call(this,propValue,propOldValue,propData);
var vManager=this.getManager();
if(vManager){vManager.handleItemChecked(this,propValue);
}return true;
};
qx.Proto._modifyManager=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.remove(this);
}
if(propValue){propValue.add(this);
}return true;
};
qx.Proto._onmouseup=function(e){this.setCapture(false);
if(!this.hasState($[51])){this.addState($[58]);
this.setChecked(this.getDisableUncheck()||!this.getChecked());
this.execute();
}this.removeState($[51]);
this.removeState($[19]);
e.stopPropagation();
};




/* ID: qx.ui.listview.ContentCellHtml */
qx.OO.defineClass($[1055],qx.ui.embed.HtmlEmbed,function(vHtml){qx.ui.embed.HtmlEmbed.call(this,vHtml);
this.setSelectable(false);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1942]});
qx.ui.listview.ContentCellHtml.empty={html:$[1]};




/* ID: qx.ui.pageview.buttonview.ButtonView */
qx.OO.defineClass($[1275],qx.ui.pageview.AbstractPageView,function(){qx.ui.pageview.AbstractPageView.call(this,qx.ui.pageview.buttonview.Bar,qx.ui.pageview.buttonview.Pane);
this.setOrientation($[20]);
});
qx.OO.addProperty({name:$[1663],type:$[0],defaultValue:$[12],possibleValues:[$[12],$[10],$[16],$[11]]});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[901]});
qx.Proto._modifyBarPosition=function(propValue,propOldValue,propData){var vBar=this._bar;
switch(propValue){case $[12]:vBar.moveSelfToBegin();
this.setOrientation($[20]);
break;
case $[16]:vBar.moveSelfToEnd();
this.setOrientation($[20]);
break;
case $[11]:vBar.moveSelfToBegin();
this.setOrientation($[29]);
break;
case $[10]:vBar.moveSelfToEnd();
this.setOrientation($[29]);
break;
}this._addChildrenToStateQueue();
vBar._addChildrenToStateQueue();
return true;
};




/* ID: qx.ui.pageview.buttonview.Bar */
qx.OO.defineClass($[2276],qx.ui.pageview.AbstractBar,function(){qx.ui.pageview.AbstractBar.call(this);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1561]});
qx.Proto.getWheelDelta=function(e){var vWheelDelta=e.getWheelDelta();
switch(this.getParent().getBarPosition()){case $[11]:case $[10]:vWheelDelta*=-1;
}return vWheelDelta;
};
qx.Proto._applyStateAppearance=function(){var vPos=this.getParent().getBarPosition();
this._states.barLeft=vPos===$[11];
this._states.barRight=vPos===$[10];
this._states.barTop=vPos===$[12];
this._states.barBottom=vPos===$[16];
qx.ui.pageview.AbstractButton.prototype._applyStateAppearance.call(this);
};




/* ID: qx.ui.embed.Flash */
qx.OO.defineClass($[360],qx.ui.basic.Terminator,function(vSource,vVersion){qx.ui.basic.Terminator.call(this);
this._params={};
this._variables={};
if(vSource!=null){this.setSource(vSource);
}this.setVersion(vVersion!=null?vVersion:qx.ui.embed.Flash.MINREQUIRED);
});
qx.OO.addProperty({name:$[484],type:$[0]});
qx.OO.addProperty({name:$[1765]});
qx.OO.addProperty({name:$[861],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[819],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[885],type:$[0]});
qx.OO.addProperty({name:$[1579],type:$[0],impl:$[185],defaultValue:$[739],possibleValues:[$[2305],$[1270],$[2070],$[252],$[739],$[2426]]});
qx.OO.addProperty({name:$[1662],type:$[0],impl:$[185],defaultValue:$[588],possibleValues:[$[588],$[1388],$[1940],$[2354]]});
qx.OO.addProperty({name:$[1460],type:$[0],impl:$[185],defaultValue:$[1],possibleValues:[$[131],$[142],$[389]]});
qx.OO.addProperty({name:$[1823],type:$[3],impl:$[185],defaultValue:true});
qx.OO.addProperty({name:$[1987],type:$[3],impl:$[185],defaultValue:true});
qx.OO.addProperty({name:$[229],type:$[3],impl:$[185],defaultValue:true});
qx.ui.embed.Flash.EXPRESSINSTALL=[6,0,65];
qx.ui.embed.Flash.MINREQUIRED="1";
qx.ui.embed.Flash.PLAYERVERSION=null;
qx.ui.embed.Flash.PLUGINKEY="Shockwave Flash";
qx.ui.embed.Flash.ACTIVEXKEY="ShockwaveFlash.ShockwaveFlash";
qx.ui.embed.Flash.getPlayerVersion=function(){if(qx.ui.embed.Flash.PLAYERVERSION!=null){return qx.ui.embed.Flash.PLAYERVERSION;
}var vPlayerVersion=new qx.type.Version(0,0,0);
if(navigator.plugins&&navigator.mimeTypes.length){var x=navigator.plugins[qx.ui.embed.Flash.PLUGINKEY];
if(x&&x.description){vPlayerVersion=new qx.type.Version(x.description.replace(/([a-zA-Z]|\s)+/,$[1]).replace(/(\s+r|\s+b[0-9]+)/,$[53]).split($[53]));
}}else if(window.ActiveXObject){try{var axo=new ActiveXObject(qx.ui.embed.Flash.ACTIVEXKEY+$[1840]);
}catch(e){try{var axo=new ActiveXObject(qx.ui.embed.Flash.ACTIVEXKEY+$[1725]);
vPlayerVersion=new qx.type.Version([6,0,21]);
axo.AllowScriptAccess=$[1012];
}catch(e){if(vPlayerVersion.major==6){return vPlayerVersion;
}}
try{axo=new ActiveXObject(qx.ui.embed.Flash.ACTIVEXKEY);
}catch(e){}}
if(axo!=null){vPlayerVersion=new qx.type.Version(axo.GetVariable($[2280]).split($[44])[1].split($[23]));
}}return qx.ui.embed.Flash.PLAYERVERSION=vPlayerVersion;
};
qx.Proto._version=null;
qx.Proto._source=$[1];
qx.Proto._applyElementData=function(el){qx.ui.basic.Terminator.prototype._applyElementData.call(this,el);
this._expressInstall=false;
if(this.getEnableExpressInstall()){var expressInstallReqVer=new qx.type.Version(qx.ui.embed.Flash.EXPRESSINSTALL);
var installedVer=qx.ui.embed.Flash.getPlayerVersion();
if(installedVer.versionIsValid(expressInstallReqVer)&&!installedVer.versionIsValid(this._version)){this._expressInstall=true;
}}if(!this.getEnableDetection()||this._expressInstall||qx.ui.embed.Flash.getPlayerVersion().versionIsValid(this._version)){el.innerHTML=this.generateHTML();
}else{var redir=this.getRedirectUrl();
if(redir!=$[1]){document.location.replace(redir);
}}};
qx.Proto._modifySource=function(propValue,propOldValue,propName){this._source=qx.util.Validation.isValidString(propValue)?qx.manager.object.AliasManager.getInstance().resolvePath(propValue):$[1];
return true;
};
qx.Proto._modifyVersion=function(propValue,propOldValue,propData){if(this._version){this._version.dispose();
this._version=null;
}
if(qx.util.Validation.isValidString(propValue)){this._version=new qx.type.Version(propValue);
}return true;
};
qx.Proto._modifyParam=function(propValue,propOldValue,propData){this.setParam(propData.name,propValue.toString());
return true;
};
qx.Proto._modifyBackgroundColor=function(propValue,propOldValue,propData){if(propOldValue){propOldValue.remove(this);
}
if(propValue){this._applyBackgroundColor(propValue.getHex());
propValue.add(this);
}else{this._resetBackgroundColor();
}return true;
};
qx.Proto._applyBackgroundColor=function(vNewValue){this.setParam($[2330],vNewValue);
};
qx.Proto.setParam=function(name,value){this._params[name]=value;
};
qx.Proto.getParam=function(name){return this._params[name];
};
qx.Proto.getParams=function(){return this._params;
};
qx.Proto.setVariable=function(name,value){this._variables[name]=value;
};
qx.Proto.getVariable=function(name){return this._variables[name];
};
qx.Proto.getVariables=function(){return this._variables;
};
qx.Proto.generateParamTags=function(){var vParams=this.getParams();
var vParamTags=[];
for(var vKey in vParams){vParamTags.push($[2041]);
vParamTags.push(vKey);
vParamTags.push($[1997]);
vParamTags.push(vParams[vKey]);
vParamTags.push($[392]);
}return vParamTags.join($[1]);
};
qx.Proto.getVariablePairs=function(){var variables=this.getVariables();
var variablePairs=[];
for(var key in variables){variablePairs.push(key+$[15]+variables[key]);
}return variablePairs.join($[89]);
};
if(navigator.plugins&&navigator.mimeTypes&&navigator.mimeTypes.length){qx.Proto.generateHTML=function(){var html=[];
if(this._expressInstall){document.title=document.title.slice(0,47)+$[647];
this.addVariable($[1665],escape(window.location));
this.addVariable($[2180],document.title);
this.addVariable($[1214],$[2189]);
}html.push($[993]);
html.push(this._source);
html.push($[103]);
var params=this.getParams();
for(var key in params){html.push($[44]);
html.push(key);
html.push($[15]);
html.push($[103]);
html.push(params[key]);
html.push($[103]);
}var pairs=this.getVariablePairs();
if(pairs.length>0){html.push($[44]);
html.push($[1950]);
html.push($[15]);
html.push($[103]);
html.push(pairs);
html.push($[103]);
}html.push($[2433]);
return html.join($[1]);
};
}else{qx.Proto.generateHTML=function(){var html=[];
if(this._expressInstall){document.title=document.title.slice(0,47)+$[647];
this.addVariable($[1185],escape(window.location));
this.addVariable($[2390],document.title);
this.addVariable($[1946],$[2320]);
}html.push($[1036]);
html.push($[1391]);
html.push(this._source);
html.push($[392]);
var tags=this.generateParamTags();
if(tags.length>0){html.push(tags);
}var pairs=this.getVariablePairs();
if(pairs.length>0){html.push($[966]);
html.push(pairs);
html.push($[392]);
}html.push($[1536]);
return html.join($[1]);
};
}qx.Proto._isWidthEssential=qx.lang.Function.returnTrue;
qx.Proto._isHeightEssential=qx.lang.Function.returnTrue;
qx.Proto._computePreferredInnerWidth=qx.lang.Function.returnZero;
qx.Proto._computePreferredInnerHeight=qx.lang.Function.returnZero;
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}delete this._source;
delete this._params;
delete this._variables;
if(this._version){this._version.dispose();
this._version=null;
}qx.ui.basic.Terminator.prototype.dispose.call(this);
};




/* ID: qx.type.Version */
qx.OO.defineClass($[1101],qx.core.Object,function(arrVersion){qx.core.Object.call(this);
if(typeof arrVersion===$[0]){arrVersion=arrVersion.split($[53]);
}this._major=parseInt(arrVersion[0])||0;
this._minor=parseInt(arrVersion[1])||0;
this._rev=parseInt(arrVersion[2])||0;
});
qx.Proto._major=0;
qx.Proto._minor=0;
qx.Proto._rev=0;
qx.Proto.versionIsValid=function(fv){if(this.getMajor()<fv.getMajor())return false;
if(this.getMajor()>fv.getMajor())return true;
if(this.getMinor()<fv.getMinor())return false;
if(this.getMinor()>fv.getMinor())return true;
if(this.getRev()<fv.getRev())return false;
return true;
};
qx.Proto.getMajor=function(){return this._major;
};
qx.Proto.getMinor=function(){return this._minor;
};
qx.Proto.getRev=function(){return this._rev;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._major=this._minor=this._rev=null;
qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.ui.form.ComboBox */
qx.OO.defineClass($[1983],qx.ui.layout.HorizontalBoxLayout,function(){qx.ui.layout.HorizontalBoxLayout.call(this);
var l=this._list=new qx.ui.form.List;
l.setAppearance($[2245]);
var m=this._manager=this._list.getManager();
m.setMultiSelection(false);
m.setDragSelection(false);
var p=this._popup=new qx.ui.popup.Popup;
p.setAppearance($[1320]);
p.setAutoHide(false);
p.add(l);
var f=this._field=new qx.ui.form.TextField;
f.setAppearance($[2124]);
f.setTabIndex(-1);
this.add(f);
var b=this._button=new qx.ui.basic.Atom(null,$[481]);
b.setAppearance($[553]);
b.setTabIndex(-1);
this.add(b);
this.setTabIndex(1);
this.setEditable(false);
this.addEventListener($[6],this._onmousedown);
this.addEventListener($[7],this._onmouseup);
this.addEventListener($[40],this._onmouseover);
this.addEventListener($[62],this._onmousewheel);
this.addEventListener($[13],this._onkeydown);
this.addEventListener($[14],this._onkeypress);
this.addEventListener($[224],this._onkeyinput);
this.addEventListener($[387],this._onbeforedisappear);
this._popup.addEventListener($[80],this._onpopupappear,this);
this._field.addEventListener($[87],this._oninput,this);
var vDoc=qx.ui.core.ClientDocument.getInstance();
vDoc.addEventListener($[414],this._onwindowblur,this);
this.remapChildrenHandlingTo(l);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[2114]});
qx.OO.addProperty({name:$[516],type:$[3],getAlias:$[733]});
qx.OO.addProperty({name:$[24],type:$[4],instance:$[781]});
qx.OO.addProperty({name:$[104],type:$[0]});
qx.OO.addProperty({name:$[751],type:$[2],defaultValue:10});
qx.Proto.getManager=function(){return this._manager;
};
qx.Proto.getPopup=function(){return this._popup;
};
qx.Proto.getList=function(){return this._list;
};
qx.Proto.getField=function(){return this._field;
};
qx.Proto.getButton=function(){return this._button;
};
qx.Proto._modifySelected=function(propValue,propOldValue,propData){this._fromSelected=true;
if(!this._fromValue){this.setValue(propValue?propValue.getLabel():$[1]);
}this._manager.setLeadItem(propValue);
this._manager.setAnchorItem(propValue);
if(propValue){this._manager.setSelectedItem(propValue);
}else{this._manager.deselectAll();
}delete this._fromSelected;
return true;
};
qx.Proto._modifyValue=function(propValue,propOldValue,propData){this._fromValue=true;
if(!this._fromInput){if(this._field.getValue()==propValue){this._field.forceValue(null);
}this._field.setValue(propValue);
}if(!this._fromSelected){var vSelItem=this._list.findStringExact(propValue);
if(vSelItem!=null&&!vSelItem.getEnabled()){vSelItem=null;
}this.setSelected(vSelItem);
}delete this._fromValue;
return true;
};
qx.Proto._modifyEditable=function(propValue,propOldValue,propData){var f=this._field;
f.setReadOnly(!propValue);
f.setCursor(propValue?null:$[48]);
f.setSelectable(propValue);
return true;
};
qx.Proto._modifyEnabled=function(propValue,propOldValue,propData){if(this._button){this._button.setEnabled(propValue);
}
if(this._field){this._field.setEnabled(propValue);
}return qx.ui.layout.HorizontalBoxLayout.prototype._modifyEnabled.call(this,propValue,propOldValue,propData);
};
qx.Proto._oldSelected=null;
qx.Proto._openPopup=function(){var p=this._popup;
var el=this.getElement();
if(!p.isCreated()){this.createDispatchEvent($[778]);
}
if(this._list.getChildrenLength()==0){return;
}p.positionRelativeTo(el,1,qx.html.Dimension.getBoxHeight(el));
p.setWidth(this.getBoxWidth()-2);
p.setParent(this.getTopLevelWidget());
p.show();
this._oldSelected=this.getSelected();
this.setCapture(true);
};
qx.Proto._closePopup=function(){this._popup.hide();
this.setCapture(false);
};
qx.Proto._testClosePopup=function(){if(this._popup.isSeeable()){this._closePopup();
}};
qx.Proto._togglePopup=function(){this._popup.isSeeable()?this._closePopup():this._openPopup();
};
qx.Proto._onpopupappear=function(e){var vSelItem=this.getSelected();
if(vSelItem){vSelItem.scrollIntoView();
}};
qx.Proto._oninput=function(e){this._fromInput=true;
this.setValue(this._field.getComputedValue());
if(this.getPopup().isSeeable()&&this.getSelected()){this.getSelected().scrollIntoView();
}delete this._fromInput;
};
qx.Proto._onbeforedisappear=function(e){this._testClosePopup();
};
qx.Proto._onmousedown=function(e){var vTarget=e.getTarget();
switch(vTarget){case this._field:if(this.getEditable()){break;
}case this._button:this._button.addState($[19]);
this._togglePopup();
break;
case this:case this._list:break;
default:if(vTarget instanceof qx.ui.form.ListItem&&vTarget.getParent()==this._list){this._list._onmousedown(e);
this.setSelected(this._list.getSelectedItem());
this._closePopup();
this.setFocused(true);
}else if(this._popup.isSeeable()){this._popup.hide();
this.setCapture(false);
}}};
qx.Proto._onmouseup=function(e){switch(e.getTarget()){case this._field:if(this.getEditable()){break;
}default:this._button.removeState($[19]);
break;
}};
qx.Proto._onmouseover=function(e){var vTarget=e.getTarget();
if(vTarget instanceof qx.ui.form.ListItem){var vManager=this._manager;
vManager.deselectAll();
vManager.setLeadItem(vTarget);
vManager.setAnchorItem(vTarget);
vManager.setSelectedItem(vTarget);
}};
qx.Proto._onmousewheel=function(e){if(!this._popup.isSeeable()){var toSelect;
var isSelected=this.getSelected();
if(e.getWheelDelta()<0){toSelect=isSelected?this._manager.getNext(isSelected):this._manager.getFirst();
}else{toSelect=isSelected?this._manager.getPrevious(isSelected):this._manager.getLast();
}
if(toSelect){this.setSelected(toSelect);
}}else{var vTarget=e.getTarget();
if(vTarget!=this&&vTarget.getParent()!=this._list){this._popup.hide();
this.setCapture(false);
}}};
qx.Proto._onkeydown=function(e){var vManager=this._manager;
var vVisible=this._popup.isSeeable();
switch(e.getKeyIdentifier()){case $[45]:if(vVisible){this.setSelected(this._manager.getSelectedItem());
this._closePopup();
this.setFocused(true);
}else{this._openPopup();
}return;
case $[96]:if(vVisible){vManager.setLeadItem(this._oldSelected);
vManager.setAnchorItem(this._oldSelected);
vManager.setSelectedItem(this._oldSelected);
this._field.setValue(this._oldSelected?this._oldSelected.getLabel():$[1]);
this._closePopup();
this.setFocused(true);
}return;
case $[71]:if(e.isAltPressed()){this._togglePopup();
return;
}break;
}};
qx.Proto._onkeypress=function(e){var vVisible=this._popup.isSeeable();
var vManager=this._manager;
switch(e.getKeyIdentifier()){case $[75]:if(!vVisible){var vPrevious;
var vTemp=this.getSelected();
if(vTemp){var vInterval=this.getPagingInterval();
do{vPrevious=vTemp;
}while(--vInterval&&(vTemp=vManager.getPrevious(vPrevious)));
}else{vPrevious=vManager.getLast();
}this.setSelected(vPrevious);
return;
}break;
case $[88]:if(!vVisible){var vNext;
var vTemp=this.getSelected();
if(vTemp){var vInterval=this.getPagingInterval();
do{vNext=vTemp;
}while(--vInterval&&(vTemp=vManager.getNext(vNext)));
}else{vNext=vManager.getFirst();
}this.setSelected(vNext);
return;
}break;
}if(!this.isEditable()||vVisible){this._list._onkeypress(e);
var vSelected=this._manager.getSelectedItem();
if(!vVisible){this.setSelected(vSelected);
}else if(vSelected){this._field.setValue(vSelected.getLabel());
}}};
qx.Proto._onkeyinput=function(e){var vVisible=this._popup.isSeeable();
if(!this.isEditable()||vVisible){this._list._onkeyinput(e);
var vSelected=this._manager.getSelectedItem();
if(!vVisible){this.setSelected(vSelected);
}else if(vSelected){this._field.setValue(vSelected.getLabel());
}}};
qx.Proto._onwindowblur=qx.Proto._testClosePopup;
qx.Proto._visualizeBlur=function(){if(qx.core.Client.getInstance().isMshtml()){if(this.getEnableElementFocus()&&!this.getFocusRoot().getFocusedChild()){try{if(this.getEditable()){this.getField().getElement().blur();
}else{this.getElement().blur();
}}catch(ex){}}}else{if(this.getEnableElementFocus()){try{if(this.getEditable()){this.getField().getElement().blur();
}else if(!this.getFocusRoot().getFocusedChild()){this.getElement().blur();
}}catch(ex){}}}this.removeState($[159]);
return true;
};
qx.Proto._visualizeFocus=function(){if(!qx.event.handler.FocusHandler.mouseFocus&&this.getEnableElementFocus()){try{if(this.getEditable()){this.getField().getElement().focus();
this.getField()._ontabfocus();
}else{this.getElement().focus();
}}catch(ex){}}this.addState($[159]);
return true;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[6],this._onmousedown);
this.removeEventListener($[7],this._onmouseup);
this.removeEventListener($[40],this._onmouseover);
this.removeEventListener($[62],this._onmousewheel);
this.removeEventListener($[13],this._onkeydown);
this.removeEventListener($[14],this._onkeypress);
this.removeEventListener($[224],this._onkeyinput);
var vDoc=qx.ui.core.ClientDocument.getInstance();
vDoc.removeEventListener($[414],this._onwindowblur,this);
if(this._popup){this._popup.removeEventListener($[80],this._onpopupappear,this);
if(!qx.core.Object.inGlobalDispose()){this._popup.setParent(null);
}this._popup.dispose();
this._popup=null;
}
if(this._list){this._list.dispose();
this._list=null;
}
if(this._manager){this._manager.dispose();
this._manager=null;
}
if(this._field){this._field.removeEventListener($[87],this._oninput,this);
this._field.dispose();
this._field=null;
}
if(this._button){this._button.dispose();
this._button=null;
}return qx.ui.layout.HorizontalBoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.form.List */
qx.OO.defineClass($[2241],qx.ui.layout.VerticalBoxLayout,function(){qx.ui.layout.VerticalBoxLayout.call(this);
this._manager=new qx.manager.selection.SelectionManager(this);
this.setSelectable(false);
this.setTabIndex(1);
this.addEventListener($[40],this._onmouseover);
this.addEventListener($[6],this._onmousedown);
this.addEventListener($[7],this._onmouseup);
this.addEventListener($[27],this._onclick);
this.addEventListener($[46],this._ondblclick);
this.addEventListener($[13],this._onkeydown);
this.addEventListener($[14],this._onkeypress);
this.addEventListener($[224],this._onkeyinput);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[201]});
qx.OO.addProperty({name:$[1595],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[2339],type:$[3],defaultValue:false});
qx.Proto._pressedString=$[1];
qx.Proto.getManager=function(){return this._manager;
};
qx.Proto.getListItemTarget=function(vItem){while(vItem!=null&&vItem.getParent()!=this){vItem=vItem.getParent();
}return vItem;
};
qx.Proto.getSelectedItem=function(){return this.getSelectedItems()[0];
};
qx.Proto.getSelectedItems=function(){return this._manager.getSelectedItems();
};
qx.Proto._onmouseover=function(e){var vItem=this.getListItemTarget(e.getTarget());
if(vItem){this._manager.handleMouseOver(vItem,e);
}};
qx.Proto._onmousedown=function(e){var vItem=this.getListItemTarget(e.getTarget());
if(vItem){this._manager.handleMouseDown(vItem,e);
}};
qx.Proto._onmouseup=function(e){var vItem=this.getListItemTarget(e.getTarget());
if(vItem){this._manager.handleMouseUp(vItem,e);
}};
qx.Proto._onclick=function(e){var vItem=this.getListItemTarget(e.getTarget());
if(vItem){this._manager.handleClick(vItem,e);
}};
qx.Proto._ondblclick=function(e){var vItem=this.getListItemTarget(e.getTarget());
if(vItem){this._manager.handleDblClick(vItem,e);
}};
qx.Proto._onkeydown=function(e){if(e.getKeyIdentifier()==$[45]&&!e.isAltPressed()){var items=this.getSelectedItems();
var currentItem;
for(var i=0;i<items.length;i++){items[i].createDispatchEvent($[2150]);
}}};
qx.Proto._onkeypress=function(e){this._manager.handleKeyPress(e);
};
qx.Proto._lastKeyPress=0;
qx.Proto._onkeyinput=function(e){if(!this.getEnableInlineFind()){return;
}if(((new Date).valueOf()-this._lastKeyPress)>1000){this._pressedString=$[1];
}this._pressedString+=String.fromCharCode(e.getCharCode());
var matchedItem=this.findString(this._pressedString,null);
if(matchedItem){var oldVal=this._manager._getChangeValue();
var oldFireChange=this._manager.getFireChange();
this._manager.setFireChange(false);
this._manager._deselectAll();
this._manager.setItemSelected(matchedItem,true);
this._manager.setAnchorItem(matchedItem);
this._manager.setLeadItem(matchedItem);
matchedItem.scrollIntoView();
this._manager.setFireChange(oldFireChange);
if(oldFireChange&&this._manager._hasChanged(oldVal)){this._manager._dispatchChange();
}}this._lastKeyPress=(new Date).valueOf();
e.preventDefault();
};
qx.Proto._findItem=function(vUserValue,vStartIndex,vType){var vAllItems=this.getChildren();
if(vStartIndex==null){vStartIndex=vAllItems.indexOf(this.getSelectedItem());
if(vStartIndex==-1){vStartIndex=0;
}}var methodName=$[877]+vType;
for(var i=vStartIndex;i<vAllItems.length;i++){if(vAllItems[i][methodName](vUserValue)){return vAllItems[i];
}}for(var i=0;i<vStartIndex;i++){if(vAllItems[i][methodName](vUserValue)){return vAllItems[i];
}}return null;
};
qx.Proto.findString=function(vText,vStartIndex){return this._findItem(vText,vStartIndex||0,$[586]);
};
qx.Proto.findStringExact=function(vText,vStartIndex){return this._findItem(vText,vStartIndex||0,$[2333]);
};
qx.Proto.findValue=function(vText,vStartIndex){return this._findItem(vText,vStartIndex||0,$[366]);
};
qx.Proto.findValueExact=function(vText,vStartIndex){return this._findItem(vText,vStartIndex||0,$[1248]);
};
qx.Proto._sortItemsCompare=function(a,b){return a.key<b.key?-1:a.key==b.key?0:1;
};
qx.Proto.sortItemsByString=function(vReverse){var sortitems=[];
var items=this.getChildren();
for(var i=0,l=items.length;i<l;i++){sortitems[i]={key:items[i].getLabel(),item:items[i]};
}sortitems.sort(this._sortItemsCompare);
if(vReverse){sortitems.reverse();
}
for(var i=0;i<l;i++){this.addAt(sortitems[i].item,i);
}};
qx.Proto.sortItemsByValue=function(vReverse){var sortitems=[];
var items=this.getChildren();
for(var i=0,l=items.length;i<l;i++){sortitems[i]={key:items[i].getValue(),item:items[i]};
}sortitems.sort(this._sortItemsCompare);
if(vReverse){sortitems.reverse();
}
for(var i=0;i<l;i++){this.addAt(sortitems[i].item,i);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this._manager){this._manager.dispose();
this._manager=null;
}this.removeEventListener($[40],this._onmouseover);
this.removeEventListener($[6],this._onmousedown);
this.removeEventListener($[7],this._onmouseup);
this.removeEventListener($[27],this._onclick);
this.removeEventListener($[46],this._ondblclick);
this.removeEventListener($[13],this._onkeydown);
this.removeEventListener($[14],this._onkeypress);
this.removeEventListener($[224],this._onkeyinput);
return qx.ui.layout.VerticalBoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.toolbar.Separator */
qx.OO.defineClass($[2386],qx.ui.layout.CanvasLayout,function(){qx.ui.layout.CanvasLayout.call(this);
var l=new qx.ui.basic.Terminator;
l.setAppearance($[1787]);
this.add(l);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[1919]});




/* ID: qx.client.NativeWindow */
qx.OO.defineClass($[478],qx.core.Target,function(vUrl,vName){qx.core.Target.call(this);
this._timer=new qx.client.Timer(100);
this._timer.addEventListener($[54],this._oninterval,this);
if(vUrl!=null){this.setUrl(vUrl);
}
if(vName!=null){this.setName(vName);
}});
qx.OO.addProperty({name:$[464],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[42],type:$[2],defaultValue:400,impl:$[248]});
qx.OO.addProperty({name:$[43],type:$[2],defaultValue:250,impl:$[248]});
qx.OO.addProperty({name:$[11],type:$[2],defaultValue:100,impl:$[93]});
qx.OO.addProperty({name:$[12],type:$[2],defaultValue:200,impl:$[93]});
qx.OO.addProperty({name:$[337],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[685],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[317],type:$[0]});
qx.OO.addProperty({name:$[97],type:$[0]});
qx.OO.addProperty({name:$[299],type:$[0],defaultValue:$[380]});
qx.OO.addProperty({name:$[528],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1899],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[829],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[1303],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[465],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[2253],type:$[3],defaultValue:true});
qx.Proto._loaded=false;
qx.OO.addPropertyGroup({name:$[77],members:[$[11],$[12]]});
qx.OO.addPropertyGroup({name:$[248],members:[$[42],$[43]]});
qx.Proto._modifyPosition=function(propValue,propOldValue,propName){if(!this.isClosed()){try{this._window.moveTo(this.getLeft(),this.getTop());
}catch(ex){this.error("Cross-Domain Scripting problem: Could not move window!",ex);
}}return true;
};
qx.Proto._modifyDimension=function(propValue,propOldValue,propName){if(!this.isClosed()){try{this._window.resizeTo(this.getWidth(),this.getHeight());
}catch(ex){this.error("Cross-Domain Scripting problem: Could not resize window!",ex);
}}return true;
};
qx.Proto._modifyName=function(propValue,propOldValue,propName){if(!this.isClosed()){this._window.name=propValue;
}return true;
};
qx.Proto._modifyUrl=function(propValue,propOldValue,propName){if(!this.isClosed()){this._window.location.replace(propValue!=null?propValue:($[1421]+$[127]));
}return true;
};
qx.Proto._modifyOpen=function(propValue,propOldValue,propData){propValue?this._open():this._close();
return true;
};
qx.Proto.getName=function(){if(!this.isClosed()){try{var vName=this._window.name;
}catch(ex){return this._valueName;
}
if(vName==this._valueName){return vName;
}else{throw new Error("window name and name property are not identical");
}}else{return this._valueName;
}};
qx.Proto.isClosed=function(){var vClosed=true;
if(this._window){try{vClosed=this._window.closed;
}catch(ex){}}return vClosed;
};
qx.Proto.open=function(){this.setOpen(true);
};
qx.Proto.close=function(){this.setOpen(false);
};
qx.Proto.isLoaded=function(){return this._loaded;
};
qx.Proto._open=function(){var vConf=[];
if(this.getWidth()!=null){vConf.push($[42]);
vConf.push($[15]);
vConf.push(this.getWidth());
vConf.push($[23]);
}
if(this.getHeight()!=null){vConf.push($[43]);
vConf.push($[15]);
vConf.push(this.getHeight());
vConf.push($[23]);
}
if(this.getLeft()!=null){vConf.push($[11]);
vConf.push($[15]);
vConf.push(this.getLeft());
vConf.push($[23]);
}
if(this.getTop()!=null){vConf.push($[12]);
vConf.push($[15]);
vConf.push(this.getTop());
vConf.push($[23]);
}vConf.push($[685]);
vConf.push($[15]);
vConf.push(this.getDependent()?$[140]:$[133]);
vConf.push($[23]);
vConf.push($[580]);
vConf.push($[15]);
vConf.push(this.getResizeable()?$[140]:$[133]);
vConf.push($[23]);
vConf.push($[299]);
vConf.push($[15]);
vConf.push(this.getShowStatusbar()?$[140]:$[133]);
vConf.push($[23]);
vConf.push($[77]);
vConf.push($[15]);
vConf.push(this.getShowLocation()?$[140]:$[133]);
vConf.push($[23]);
vConf.push($[531]);
vConf.push($[15]);
vConf.push(this.getShowMenubar()?$[140]:$[133]);
vConf.push($[23]);
vConf.push($[421]);
vConf.push($[15]);
vConf.push(this.getShowToolbar()?$[140]:$[133]);
vConf.push($[23]);
vConf.push($[514]);
vConf.push($[15]);
vConf.push(this.getAllowScrollbars()?$[140]:$[133]);
vConf.push($[23]);
vConf.push($[337]);
vConf.push($[15]);
vConf.push(this.getModal()?$[140]:$[133]);
vConf.push($[23]);
if(this.getName()!=null){this.setName($[1046]+this.toHashCode());
}this._window=window.open(this.getUrl(),this.getName(),vConf.join($[1]));
if(this.isClosed()){this.error("Window could not be opened. It seems, there is a popup blocker active!");
}else{try{this._window._native=this;
this._window.onload=this._onload;
}catch(ex){}this._timer.start();
if(this.getModal()){qx.ui.core.ClientDocument.getInstance().block(this);
}}};
qx.Proto._close=function(){if(!this._window){return;
}this._timer.stop();
if(this.getModal()){qx.ui.core.ClientDocument.getInstance().release(this);
}if(!this.isClosed()){this._window.close();
}
try{this._window._native=null;
this._window.onload=null;
}catch(ex){}this._window=null;
this._loaded=false;
this.createDispatchEvent($[1850]);
};
qx.Proto.centerToScreen=function(){return this._centerHelper((screen.width-this.getWidth())/2,(screen.height-this.getHeight())/2);
};
qx.Proto.centerToScreenArea=function(){return this._centerHelper((screen.availWidth-this.getWidth())/2,(screen.availHeight-this.getHeight())/2);
};
qx.Proto.centerToOpener=function(){return this._centerHelper(((qx.html.Window.getInnerWidth(window)-this.getWidth())/2)+qx.html.Location.getScreenBoxLeft(window.document.body),((qx.html.Window.getInnerHeight(window)-this.getHeight())/2)+qx.html.Location.getScreenBoxTop(window.document.body));
};
qx.Proto._centerHelper=function(l,t){this.setLeft(l);
this.setTop(t);
if(!this.isClosed()){this.focus();
}};
qx.Proto.focus=function(){if(!this.isClosed()){this._window.focus();
}};
qx.Proto.blur=function(){if(!this.isClosed()){this._window.blur();
}};
qx.Proto._oninterval=function(e){if(this.isClosed()){this.setOpen(false);
}else if(!this._loaded){try{if(this._window.document&&this._window.document.readyState==$[343]){this._loaded=true;
this.createDispatchEvent($[84]);
}}catch(ex){}}};
qx.Proto._onload=function(e){var obj=this._native;
if(!obj._loaded){obj._loaded=true;
obj.createDispatchEvent($[84]);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this.getDependent()){this.close();
}
if(this._timer){this._timer.stop();
this._timer=null;
}
if(this._window){try{this._window._native=null;
this._window.onload=null;
}catch(ex){}this._window=null;
}return qx.core.Target.prototype.dispose.call(this);
};




/* ID: qx.ui.splitpane.VerticalSplitPane */
qx.OO.defineClass($[2342],qx.ui.splitpane.SplitPane,function(firstSize,secondSize){qx.ui.splitpane.SplitPane.call(this,$[20],firstSize,secondSize);
});
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}return qx.ui.splitpane.SplitPane.prototype.dispose.call(this);
};




/* ID: qx.log.ForwardAppender */
qx.OO.defineClass($[925],qx.log.Appender,function(targetProcessor){qx.log.Appender.call(this);
this._targetProcessor=targetProcessor;
});
qx.Proto.appendLogEvent=function(evt){this._targetProcessor.handleLogEvent(evt);
};




/* ID: qx.ui.groupbox.RadioGroupBox */
qx.OO.defineClass($[2136],qx.ui.groupbox.GroupBox,function(vLegend){qx.ui.groupbox.GroupBox.call(this,vLegend);
});
qx.Proto._createLegendObject=function(){this._legendObject=new qx.ui.form.RadioButton;
this._legendObject.setAppearance($[2345]);
this._legendObject.setChecked(true);
this.add(this._legendObject);
};
qx.Proto.setIcon=qx.Proto.getIcon=null;




/* ID: qx.ui.pageview.tabview.Page */
qx.OO.defineClass($[1868],qx.ui.pageview.AbstractPage,function(vButton){qx.ui.pageview.AbstractPage.call(this,vButton);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[2412]});




/* ID: qx.html.Form */
qx.OO.defineClass($[2352]);
qx.Clazz.ignoreInputTypes=[$[1196],$[762],$[278],$[243],$[118]];
qx.Clazz.ignoreElementTypes=[$[2246]];
qx.Clazz.checkElementTypes=[$[1382],$[2436]];
qx.Clazz.multiSelectType=$[2131];
qx.Clazz.inputFilter=function(vNode){if(vNode.disabled){return false;
}var vTag=(vNode.tagName||$[1]).toLowerCase();
if(qx.lang.Array.contains(qx.html.Form.ignoreElementTypes,vTag)){return false;
}var vType=vNode.type.toLowerCase();
if(qx.lang.Array.contains(qx.html.Form.ignoreInputTypes,vType)){return false;
}
if(!vNode.checked&&qx.lang.Array.contains(qx.html.Form.checkElementTypes,vType)){return false;
}return true;
};
qx.Clazz.getFields=function(vForm){return Array.filter(vForm.elements,qx.html.Form.inputFilter);
};
qx.Clazz.encodeField=function(vNode){var vName=vNode.name||$[1];
var vType=(vNode.type||$[1]).toLowerCase();
if(vType===qx.html.Form.multiSelectType){var vValues=[];
for(var i=0;i<vNode.options.length;i++){if(vNode.options[i].selected){vValues.push(vName+$[15]+vNode.options[i].value);
}}return vValues.join($[89]);
}else{return vName+$[15]+vNode.value;
}};
qx.Clazz.encodeForm=function(vForm){var vFields=qx.html.Form.getFields(vForm);
var vAll=[];
for(var i=0,l=vFields.length;i<l;i++){vAll.push(qx.html.Form.encodeField(vFields[i]));
}return vAll.join($[89]);
};
qx.Clazz.bind=function(vForm,vMethod){qx.html.EventRegistration.addEventListener(vForm,$[762],function(e){e.returnValue=false;
if(typeof e.preventDefault===$[31]){e.preventDefault();
}return vMethod(e);
});
};




/* ID: qx.ui.pageview.tabview.Button */
qx.OO.defineClass($[2448],qx.ui.pageview.AbstractButton,function(vText,vIcon,vIconWidth,vIconHeight,vFlash){qx.ui.pageview.AbstractButton.call(this,vText,vIcon,vIconWidth,vIconHeight,vFlash);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[991]});
qx.OO.addProperty({name:$[1766],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[2356],type:$[0],defaultValue:$[624]});
qx.Proto._onkeydown=function(e){var identifier=e.getKeyIdentifier();
if(identifier==$[45]||identifier==$[85]){this.setChecked(true);
}};
qx.Proto._onkeypress=function(e){switch(e.getKeyIdentifier()){case $[55]:var vPrev=this.getPreviousActiveSibling();
if(vPrev&&vPrev!=this){delete qx.event.handler.FocusHandler.mouseFocus;
vPrev.setFocused(true);
vPrev.setChecked(true);
}break;
case $[56]:var vNext=this.getNextActiveSibling();
if(vNext&&vNext!=this){delete qx.event.handler.FocusHandler.mouseFocus;
vNext.setFocused(true);
vNext.setChecked(true);
}break;
}};
qx.Proto._ontabclose=function(e){this.createDispatchDataEvent($[2148],this);
};
qx.Proto._modifyShowCloseButton=function(propValue,propOldValue,propData){if(!this._closeButtonImage){this._closeButtonImage=new qx.ui.basic.Image(this.getCloseButtonImage());
}
if(propValue){this._closeButtonImage.addEventListener($[27],this._ontabclose,this);
this.add(this._closeButtonImage);
}else{this.remove(this._closeButtonImage);
this._closeButtonImage.removeEventListener($[27],this._ontabclose);
}return true;
};
qx.Proto._modifyCloseButtonImage=function(propValue,propOldValue,propData){if(this._closeButtonImage){this._closeButtonImage.setSource(propValue);
}return true;
};
qx.Proto._applyStateAppearance=function(){this._states.firstChild=this.isFirstVisibleChild();
this._states.lastChild=this.isLastVisibleChild();
this._states.alignLeft=this.getView().getAlignTabsToLeft();
this._states.barTop=this.getView().getPlaceBarOnTop();
qx.ui.pageview.AbstractButton.prototype._applyStateAppearance.call(this);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this._closeButtonImage){this._closeButtonImage.dispose();
this._closeButtonImage=null;
}return qx.ui.pageview.AbstractButton.prototype.dispose.call(this);
};




/* ID: qx.ui.groupbox.CheckGroupBox */
qx.OO.defineClass($[1250],qx.ui.groupbox.GroupBox,function(vLegend){qx.ui.groupbox.GroupBox.call(this,vLegend);
});
qx.Proto._createLegendObject=function(){this._legendObject=new qx.ui.form.CheckBox;
this._legendObject.setAppearance($[672]);
this._legendObject.setChecked(true);
this.add(this._legendObject);
};
qx.Proto.setIcon=qx.Proto.getIcon=null;




/* ID: qx.ui.embed.Gallery */
qx.OO.defineClass($[1005],qx.ui.basic.Terminator,function(vGalleryList){qx.ui.basic.Terminator.call(this);
this._blank=qx.manager.object.AliasManager.getInstance().resolvePath($[59]);
this._list=vGalleryList;
this._listSize=vGalleryList.length;
this._processedImages=0;
this.setOverflow($[5]);
this.setHtmlProperty($[207],$[2140]);
this._manager=new qx.manager.selection.DomSelectionManager(this);
this._manager.setMultiColumnSupport(true);
this.addEventListener($[6],this._onmousedown);
this.addEventListener($[7],this._onmouseup);
this.addEventListener($[18],this._onmousemove);
this.addEventListener($[27],this._onclick);
this.addEventListener($[46],this._ondblclick);
this.addEventListener($[14],this._onkeypress);
});
qx.OO.addProperty({name:$[691],type:$[2],defaultValue:100});
qx.OO.addProperty({name:$[743],type:$[2],defaultValue:100});
qx.OO.addProperty({name:$[585],type:$[2],defaultValue:40});
qx.OO.addProperty({name:$[1860],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[1302],type:$[3],defaultValue:true});
qx.Proto._applyElementData=function(){this.getElement().appendChild(this.createView());
};
qx.Proto.getManager=function(){return this._manager;
};
qx.Proto.getList=function(){return this._list;
};
qx.Proto.update=function(vGalleryList){this._manager.deselectAll();
this._list=vGalleryList;
var el=this.getElement();
el.replaceChild(this.createView(),el.firstChild);
};
qx.Proto.removeAll=function(){this._manager.deselectAll();
this.getElement().innerHTML=$[1];
};
qx.Proto.updateImageById=function(vId,vSrc,vWidth,vHeight){this.updateImageSrcById(vId,vSrc);
this.updateImageDimensionsById(vId,vWidth,vHeight);
};
qx.Proto.updateImageDimensionsById=function(vId,vWidth,vHeight){this.updateImageDimensionsByPosition(this.getPositionById(vId),vWidth,vHeight);
};
qx.Proto.updateImageDimensionsByPosition=function(vPos,vWidth,vHeight){if(vPos==-1){throw new Error("No valid Position: "+vPos);
}var cnode=this.getNodeByPosition(vPos).getElementsByTagName($[378])[0];
cnode.width=vWidth;
cnode.height=vHeight;
cnode.style.marginLeft=cnode.style.marginRight=Math.floor((this.getThumbMaxWidth()-vWidth)/2)+$[21];
cnode.style.marginTop=cnode.style.marginBottom=Math.floor((this.getThumbMaxHeight()-vHeight)/2)+$[21];
this._list[vPos].thumbWidth=vWidth;
this._list[vPos].thumbHeight=vHeight;
};
qx.Proto.updateImageSrcById=function(vId,vSrc){this.updateImageSrcByPosition(this.getPositionById(vId),vSrc);
};
qx.Proto.updateImageSrcByPosition=function(vPos,vSrc){if(vPos==-1){throw new Error("No valid Position: "+vPos);
}var vNode=this.getNodeByPosition(vPos);
vNode.getElementsByTagName($[378])[0].src=vSrc;
this._list[vPos].src=vSrc;
};
qx.Proto.deleteById=function(vId){this.deleteByPosition(this.getPositionById(vId));
};
qx.Proto.deleteByPosition=function(vPos){this._manager.deselectAll();
if(vPos==-1){throw new Error("No valid Position: "+vPos);
}var vNode=this.getNodeByPosition(vPos);
if(vNode){vNode.parentNode.removeChild(vNode);
}this._list.splice(vPos,1);
};
qx.Proto.getPositionById=function(vId){for(var i=0,a=this._list,l=a.length;i<l;i++){if(a[i].id==vId){return i;
}}return -1;
};
qx.Proto.getEntryById=function(vId){return this.getEntryByPosition(this.getPositionById(vId));
};
qx.Proto.getNodeById=function(vId){return this.getNodeByPosition(this.getPositionById(vId));
};
qx.Proto.getEntryByPosition=function(vPosition){return vPosition==-1?null:this._list[vPosition];
};
qx.Proto.getNodeByPosition=function(vPosition){return vPosition==-1?null:this._frame.childNodes[vPosition];
};
qx.Proto.getEntryByNode=function(vNode){return this.getEntryById(vNode.id);
};
qx.Proto.addFromPartialList=function(vPartialList){this.concat(vPartialList);
for(var i=0,a=vPartialList,l=a.length;i<l;i++){this._frame.appendChild(this.createCell(a[i],i));
}};
qx.Proto.addFromUpdatedList=function(vNewList){for(var a=vNewList,l=a.length,i=this._list.length;i<l;i++){this._frame.appendChild(this.createCell(a[i],i));
}this._list=vNewList;
};
qx.Proto._onmousedown=function(e){var vItem=this.getListItemTarget(e.getDomTarget());
if(vItem){this._manager.handleMouseDown(vItem,e);
}};
qx.Proto._onmouseup=function(e){var vItem=this.getListItemTarget(e.getDomTarget());
if(vItem){this._manager.handleMouseUp(vItem,e);
}};
qx.Proto._onmousemove=function(e){if(!qx.OO.isAvailable($[135])){return;
}var vItem=this.getListItemTarget(e.getDomTarget());
if(vItem==this._lastItem){return;
}
if(this._lastItem){var vEventObject=new qx.event.type.MouseEvent($[47],e,false,this._lastItem);
qx.manager.object.ToolTipManager.getInstance().handleMouseOut(vEventObject);
vEventObject.dispose();
}
if(vItem){if(this.hasEventListeners($[310])){this.dispatchEvent(new qx.event.type.DataEvent($[310],vItem),true);
}
if(!this.getToolTip()){return;
}var vEventObject=new qx.event.type.MouseEvent($[47],e,false,vItem);
qx.manager.object.ToolTipManager.getInstance().handleMouseOver(vEventObject);
vEventObject.dispose();
this.setToolTip(null);
}this._lastItem=vItem;
};
qx.Proto._onclick=function(e){var vItem=this.getListItemTarget(e.getDomTarget());
if(vItem){this._manager.handleClick(vItem,e);
}};
qx.Proto._ondblclick=function(e){var vItem=this.getListItemTarget(e.getDomTarget());
if(vItem){this._manager.handleDblClick(vItem,e);
}};
qx.Proto._onkeypress=function(e){this._manager.handleKeyPress(e);
};
qx.Proto.getListItemTarget=function(dt){while(dt.className.indexOf($[253])==-1&&dt.tagName.toLowerCase()!=$[111]){dt=dt.parentNode;
}
if(dt.tagName.toLowerCase()==$[111]){return null;
}return dt;
};
qx.Proto.scrollItemIntoView=function(vItem){this.scrollItemIntoViewX(vItem);
this.scrollItemIntoViewY(vItem);
};
qx.Proto.scrollItemIntoViewX=function(vItem){qx.html.ScrollIntoView.scrollX(vItem);
};
qx.Proto.scrollItemIntoViewY=function(vItem){qx.html.ScrollIntoView.scrollY(vItem);
};
qx.Proto.getItems=function(){return this._frame.childNodes;
};
qx.Proto.getFirstChild=function(){return this._frame.childNodes[0];
};
qx.Proto.getLastChild=function(){return this._frame.childNodes[this._frame.childNodes.length-1];
};
qx.Proto.createView=function(){var s=(new Date).valueOf();
if(!this._protoCell){this.createProtoCell();
}this._frame=document.createElement($[50]);
this._frame.className=$[599];
for(var i=0,a=this._list,l=a.length;i<l;i++){this._frame.appendChild(this.createCell(a[i],i));
}return this._frame;
};
qx.Proto.createCell=function(d,i){var cframe=this._protoCell.cloneNode(true);
cframe.id=d.id;
cframe.pos=i;
if(this.getShowTitle()){cnode=cframe.childNodes[0];
cnode.firstChild.nodeValue=d.title;
}var cnode=cframe.childNodes[this.getShowTitle()?1:0];
this.createImageCell(cnode,d);
if(this.getShowComment()){cnode=cframe.childNodes[this.getShowTitle()?2:1];
cnode.firstChild.nodeValue=d.comment;
}return cframe;
};
qx.Proto._mshtml=qx.core.Client.getInstance().isMshtml();
qx.Proto.createImageCell=function(inode,d){if(this.hasEventListeners($[284])){inode.onload=qx.ui.embed.Gallery.imageOnLoad;
inode.onerror=qx.ui.embed.Gallery.imageOnError;
inode.gallery=this;
}
if(this._mshtml){inode.style.filter=$[174]+d.src+$[169];
}else{inode.src=d.src;
}inode.width=d.thumbWidth+2;
inode.height=d.thumbHeight+2;
inode.style.marginLeft=inode.style.marginRight=Math.floor((this.getThumbMaxWidth()-d.thumbWidth)/2)+$[21];
inode.style.marginTop=inode.style.marginBottom=Math.floor((this.getThumbMaxHeight()-d.thumbHeight)/2)+$[21];
};
qx.Proto.imageOnComplete=function(){this._processedImages++;
if(this._processedImages==this._listSize){this.dispatchEvent(new qx.event.type.Event($[284]),true);
}};
qx.ui.embed.Gallery.imageOnLoad=function(){this.gallery.imageOnComplete();
this.gallery=null;
this.onload=null;
this.onerror=null;
};
qx.ui.embed.Gallery.imageOnError=function(){this.gallery.imageOnComplete();
this.gallery=null;
this.onload=null;
this.onerror=null;
};
qx.Proto.createProtoCell=function(){var frame=this._protoCell=document.createElement($[50]);
frame.className=$[253];
frame.unselectable=$[72];
frame.style.width=(this.getThumbMaxWidth()+2)+$[21];
frame.style.height=(this.getThumbMaxHeight()+this.getDecorHeight()+2)+$[21];
if(this.getShowTitle()){var title=document.createElement($[50]);
title.className=$[933];
title.unselectable=$[72];
var ttext=document.createTextNode($[57]);
title.appendChild(ttext);
frame.appendChild(title);
}var image=new Image();
image.src=this._blank;
frame.appendChild(image);
if(this.getShowComment()){var comment=document.createElement($[50]);
comment.className=$[1138];
comment.unselectable=$[72];
var ctext=document.createTextNode($[57]);
comment.appendChild(ctext);
frame.appendChild(comment);
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}this._list=null;
this._protoCell=null;
this._frame=null;
if(this._manager){this._manager.dispose();
this._manager=null;
}this.removeEventListener($[6],this._onmousedown);
this.removeEventListener($[7],this._onmouseup);
this.removeEventListener($[18],this._onmousemove);
this.removeEventListener($[27],this._onclick);
this.removeEventListener($[46],this._ondblclick);
this.removeEventListener($[14],this._onkeypress);
return qx.ui.basic.Terminator.prototype.dispose.call(this);
};




/* ID: qx.client.History */
qx.OO.defineClass($[1924],qx.core.Target,function(){qx.core.Target.call(this);
this._pageFlag=true;
});
qx.Proto.init=function(){if(this._iframe==null){this._iframe=document.createElement($[232]);
this._iframe.style.visibility=$[26];
document.body.appendChild(this._iframe);
}};
qx.Proto.addToHistory=function(command,newTitle){if(command==this._currentCommand){document.title=newTitle;
}else{if(this._iframe==null){throw new Error("You have to call init first!");
}this._pageFlag=!this._pageFlag;
this._currentCommand=command;
this._newTitle=newTitle;
this._iframe.src=this.getSetting($[718])+$[2351]+command;
}};
qx.Proto._onHistoryLoad=function(location){try{var equalsPos=location.search.indexOf($[15]);
var command=location.search.substring(equalsPos+1);
if(this._newTitle){document.title=this._newTitle;
this._newTitle=null;
}
if(command!=this._currentCommand){this._currentCommand=command;
this.createDispatchDataEvent($[644],command);
}}catch(exc){this.error("Handling history load failed",exc);
}qx.ui.core.Widget.flushGlobalQueues();
};
qx.Settings.setDefault($[718],qx.Settings.getValueOfClass($[322],$[372])+$[945]);
qx.Clazz.getInstance=qx.lang.Function.returnInstance;




/* ID: qx.locale.String */
qx.OO.defineClass($[879]);
qx.Clazz.getQuotationStart=function(locale){return new qx.locale.LocalizedString($[1171],[],locale);
};
qx.Clazz.getQuotationEnd=function(locale){return new qx.locale.LocalizedString($[1078],[],locale);
};
qx.Clazz.getQuotationStart=function(locale){return new qx.locale.LocalizedString($[1281],[],locale);
};
qx.Clazz.getQuotationEnd=function(locale){return new qx.locale.LocalizedString($[2011],[],locale);
};




/* ID: qx.io.local.CookieTransport */
qx.OO.defineClass($[1429],{BASENAME:"qx",ITEMSEPARATOR:"&",KEYVALUESEPARATOR:"=",MAXCOOKIES:20,MAXSIZE:4096});
qx.Clazz.set=function(vName,vValue){if(vValue===undefined){return qx.io.local.CookieTransport.del(vName);
}var vAll=qx.io.local.CookieTransport._getAll();
vAll[vName]=vValue;
this._setAll(vAll);
};
qx.Clazz.get=function(vName){var vAll=qx.io.local.CookieTransport._getAll();
return vAll[vName]||$[1];
};
qx.Clazz.del=function(vName){var vAll=qx.io.local.CookieTransport._getAll();
delete vAll[vName];
this._setAll(vAll);
};
qx.Clazz.setAll=function(vHash){var vAll=qx.io.local.CookieTransport._getAll();
vAll=qx.lang.Object.mergeWith(vAll,vHash);
qx.io.local.CookieTransport._setAll(vAll);
};
qx.Clazz.getAll=function(){return qx.io.local.CookieTransport._getAll();
};
qx.Clazz.replaceAll=function(vHash){qx.io.local.CookieTransport._setAll(vHash);
};
qx.Clazz.delAll=function(){qx.io.local.CookieTransport.replaceAll({});
};
qx.Clazz._getAll=function(){var vHash={};
var vCookie,vItems,vItem;
for(var i=0;i<qx.io.local.CookieTransport.MAXCOOKIES;i++){vCookie=qx.io.local.CookieApi.get(qx.io.local.CookieTransport.BASENAME+i);
if(vCookie){vItems=vCookie.split(qx.io.local.CookieTransport.ITEMSEPARATOR);
for(var j=0,l=vItems.length;j<l;j++){vItem=vItems[j].split(qx.io.local.CookieTransport.KEYVALUESEPARATOR);
vHash[vItem[0]]=vItem[1];
}}}return vHash;
};
qx.Clazz._setAll=function(vHash){var vString=$[1];
var vTemp;
var vIndex=0;
for(var vName in vHash){vTemp=vName+qx.io.local.CookieTransport.KEYVALUESEPARATOR+vHash[vName];
if(vTemp.length>qx.io.local.CookieTransport.MAXSIZE){qx.log.Logger.getClassLogger(qx.io.local.CookieTransport).debug("Could not store value of name '"+vName+"': Maximum size of "+qx.io.local.CookieTransport.MAXSIZE+"reached!");
continue;
}
if((qx.io.local.CookieTransport.ITEMSEPARATOR.length+vString.length+vTemp.length)>qx.io.local.CookieTransport.MAXSIZE){qx.io.local.CookieTransport._setCookie(vIndex++,vString);
if(vIndex==qx.io.local.CookieTransport.MAXCOOKIES){qx.log.Logger.getClassLogger(qx.io.local.CookieTransport).debug("Failed to store cookie. Max cookie amount reached!","error");
return false;
}vString=vTemp;
}else{if(vString!=$[1]){vString+=qx.io.local.CookieTransport.ITEMSEPARATOR;
}vString+=vTemp;
}}
if(vString!=$[1]){qx.io.local.CookieTransport._setCookie(vIndex++,vString);
}
while(vIndex<qx.io.local.CookieTransport.MAXCOOKIES){qx.io.local.CookieTransport._delCookie(vIndex++);
}};
qx.Clazz._setCookie=function(vIndex,vString){qx.io.local.CookieApi.set(qx.io.local.CookieTransport.BASENAME+vIndex,vString);
};
qx.Clazz._delCookie=function(vIndex){qx.io.local.CookieApi.del(qx.io.local.CookieTransport.BASENAME+vIndex);
};




/* ID: qx.ui.splitpane.HorizontalSplitPane */
qx.OO.defineClass($[1990],qx.ui.splitpane.SplitPane,function(firstSize,secondSize){qx.ui.splitpane.SplitPane.call(this,$[29],firstSize,secondSize);
});
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}return qx.ui.splitpane.SplitPane.prototype.dispose.call(this);
};




/* ID: qx.ui.listview.ListView */
qx.OO.defineClass($[2127],qx.ui.layout.VerticalBoxLayout,function(vData,vColumns){this._data=vData;
this._columns=vColumns;
this._header=new qx.ui.listview.Header(vColumns);
this._frame=new qx.ui.layout.HorizontalBoxLayout;
this._pane=new qx.ui.listview.ListViewPane(vData,vColumns);
this._scroll=new qx.ui.layout.CanvasLayout;
this._scrollContent=new qx.ui.basic.Terminator;
this._resizeLine=new qx.ui.basic.Terminator;
qx.ui.layout.VerticalBoxLayout.call(this);
this._header.setParent(this);
this._frame.setParent(this);
this._frame.setHeight($[37]);
this._frame.setWidth(null);
this._pane.setParent(this._frame);
this._scroll.setWidth($[5]);
this._scroll.setOverflow($[112]);
this._scroll.setParent(this._frame);
this._scroll.enableInlineEvent($[66]);
this._scroll.addEventListener($[66],this._onscroll,this);
this._scrollContent.setWidth(1);
this._scrollContent.setParent(this._scroll);
this._resizeLine.setBackgroundColor($[368]);
this._resizeLine.setWidth(1);
this._resizeLine.setParent(this);
this.addEventListener($[6],this._onmousedown);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[2138]});
qx.OO.addProperty({name:$[580],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[436],type:$[3],defaultValue:false});
qx.OO.addProperty({name:$[2376],type:$[0]});
qx.Proto.getData=function(){return this._data;
};
qx.Proto.getColumns=function(){return this._columns;
};
qx.Proto.getHeader=function(){return this._header;
};
qx.Proto.getFrame=function(){return this._frame;
};
qx.Proto.getPane=function(){return this._pane;
};
qx.Proto.getScroll=function(){return this._scroll;
};
qx.Proto.getScrollContent=function(){return this._scrollContent;
};
qx.Proto.getResizeLine=function(){return this._resizeLine;
};
qx.Proto.update=function(){this.updateScrollBar();
this.updateContent();
};
qx.Proto.updateScrollBar=function(){this._scrollContent.setHeight((this._data.length*this._pane._rowHeight)+this._pane._rowHeight);
};
if(qx.core.Client.getInstance().isGecko()&&qx.core.Client.getInstance().getVersion()>=1.8){qx.Proto._updateScrollBar=qx.Proto.updateScrollBar;
qx.Proto.updateScrollBar=function(){this._updateScrollBar();
this._scroll.setStyleProperty($[43],$[165]);
this._scroll.forceHeight(0);
this._scroll.setHeight(null);
};
}qx.Proto.updateContent=function(){this.getPane()._updateRendering(true);
};
qx.Proto.updateLayout=function(){this.getPane()._updateLayout();
};
qx.Proto.updateSort=function(){var vSortBy=this.getSortBy();
if(!vSortBy){return;
}var vCell=this._getHeaderCell(vSortBy);
if(vCell){vCell.updateSort();
}};
qx.Proto._getHeaderCell=function(vCellId){var vNewEntry=this._columns[vCellId];
return vNewEntry?vNewEntry.headerCell:null;
};
qx.Proto._modifySortBy=function(propValue,propOldValue,propData){if(propOldValue){var vOldCell=this._getHeaderCell(propOldValue);
if(vOldCell){vOldCell.setSortOrder(null);
}}
if(propValue){var vNewCell=this._getHeaderCell(propValue);
if(vNewCell&&vNewCell.getSortOrder()==null){vNewCell.setSortOrder(qx.ui.listview.HeaderCell.C_SORT_ASCENDING);
}}return true;
};
qx.Proto._onscroll=function(e){this._pane._onscroll(e);
};
qx.Proto._onmousedown=function(e){this.getFocusRoot().setActiveChild(this.getPane());
};
qx.Proto._handleDisplayableCustom=function(vDisplayable,vParent,vHint){qx.ui.layout.VerticalBoxLayout.prototype._handleDisplayableCustom.call(this,vDisplayable,vParent,vHint);
if(vDisplayable){this.updateLayout();
this.updateScrollBar();
this.updateContent();
}};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}
if(this._header){this._header.dispose();
this._header=null;
}
if(this._frame){this._frame.dispose();
this._frame=null;
}
if(this._pane){this._pane.dispose();
this._pane=null;
}
if(this._scroll){this._scroll.dispose();
this._scroll=null;
}
if(this._scrollContent){this._scrollContent.dispose();
this._scrollContent=null;
}
if(this._resizeLine){this._resizeLine.dispose();
this._resizeLine=null;
}delete this._columns;
delete this._data;
this.removeEventListener($[6],this._onmousedown);
return qx.ui.layout.VerticalBoxLayout.prototype.dispose.call(this);
};




/* ID: qx.ui.listview.ListViewPane */
qx.OO.defineClass($[2078],qx.ui.layout.GridLayout,function(vData,vColumns){qx.ui.layout.GridLayout.call(this);
this._data=vData;
this._columns=vColumns;
this._manager=new qx.manager.selection.VirtualSelectionManager(this);
this.addEventListener($[62],this._onmousewheel);
this.addEventListener($[40],this._onmouseover);
this.addEventListener($[6],this._onmousedown);
this.addEventListener($[7],this._onmouseup);
this.addEventListener($[27],this._onclick);
this.addEventListener($[46],this._ondblclick);
this.addEventListener($[14],this._onkeypress);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[2199]});
qx.Proto._rowHeight=16;
qx.Proto.getView=function(){return this.getParent().getParent();
};
qx.Proto._lastRowCount=0;
qx.Proto._updateLayout=function(vUpdate){var vColumns=this._columns;
var vRowCount=Math.ceil(this.getInnerHeight()/this._rowHeight);
var vData=this._data;
var vCell;
if(vRowCount>this._lastRowCount){for(var i=this._lastRowCount,j=0;i<vRowCount;i++,j=0){for(var vCol in vColumns){vCell=new vColumns[vCol].contentClass;
this.add(vCell,j++,i);
if(vColumns[vCol].align){vCell.setStyleProperty($[213],vColumns[vCol].align);
}}}}else if(this._lastRowCount>vRowCount){var vChildren=this.getChildren();
var vChildrenLength=vChildren.length-1;
for(var i=this._lastRowCount;i>vRowCount;i--){for(var vCol in vColumns){vCell=vChildren[vChildrenLength--];
this.remove(vCell);
vCell.dispose();
}}}this.setRowCount(vRowCount);
if(!vUpdate){this.setColumnCount(qx.lang.Object.getLength(vColumns));
}for(var i=0;i<vRowCount;i++){this.setRowHeight(i,this._rowHeight);
}
if(!vUpdate){var vCount=0;
for(var vCol in vColumns){this.setColumnHorizontalAlignment(vCount,vColumns[vCol].align);
this.setColumnWidth(vCount,vColumns[vCol].width);
vCount++;
}}this._lastRowCount=vRowCount;
};
qx.Proto._currentScrollTop=-1;
qx.Proto._updateRendering=function(vForce){if(this._updatingRendering){return;
}var vScrollTop=(this._initialLayoutDone?this.getView().getScroll().getScrollTop():0);
this._updatingRendering=true;
this._currentScrollTop=vScrollTop;
for(var i=0;i<this._rowCount;i++){this._updateRow(i);
}delete this._updatingRendering;
};
qx.Proto._updateRow=function(vRelativeRow){var vData=this._data;
var vRowOffset=Math.floor(this._currentScrollTop/this._rowHeight);
var vColumnCount=this.getColumnCount();
var vColumns=this._columns;
var vChildren=this.getVisibleChildren();
var vChild,vEntry,vCol;
var j=0;
for(vCol in vColumns){vEntry=vData[vRowOffset+vRelativeRow];
vChild=vChildren[vColumnCount*vRelativeRow+(j++)];
if(vChild){if(vEntry&&vEntry._selected){vChild.addState($[24]);
}else{vChild.removeState($[24]);
}vChild.set(vEntry?vEntry[vCol]:vColumns[vCol].empty||vColumns[vCol].contentClass.empty);
}}};
qx.Proto._onscroll=function(e){this._updateRendering();
};
qx.Proto._changeInnerHeight=function(vNew,vOld){this._updateLayout(true);
this._updateRendering(true);
return qx.ui.layout.GridLayout.prototype._changeInnerHeight.call(this,vNew,vOld);
};
qx.Proto.getManager=function(){return this._manager;
};
qx.Proto.getListViewTarget=function(e){var vEventTop=e.getPageY();
var vPaneTop=qx.html.Location.getPageInnerTop(this.getElement());
var vItemNo=Math.floor(this._currentScrollTop/this._rowHeight)+Math.floor((vEventTop-vPaneTop)/this._rowHeight);
return this._data[vItemNo];
};
qx.Proto.getSelectedItem=function(){return this.getSelectedItems()[0];
};
qx.Proto.getSelectedItems=function(){return this._manager.getSelectedItems();
};
qx.Proto.getData=function(){return this._data;
};
qx.Proto.getItemHeight=function(vItem){return this._rowHeight;
};
qx.Proto.getItemWidth=function(vItem){return qx.html.Dimension.getInnerWidth(this.getElement());
};
qx.Proto.getItemLeft=function(vItem){return 0;
};
qx.Proto.getItemTop=function(vItem){return this._data.indexOf(vItem)*this._rowHeight;
};
qx.Proto._onmousewheel=function(e){var vScroll=this.getView().getScroll();
vScroll.setScrollTop(vScroll.getScrollTop()-(e.getWheelDelta()*20));
};
qx.Proto._onmouseover=function(e){var vTarget=this.getListViewTarget(e);
if(vTarget){this._manager.handleMouseOver(vTarget,e);
}};
qx.Proto._onmousedown=function(e){var vTarget=this.getListViewTarget(e);
if(vTarget){this._manager.handleMouseDown(vTarget,e);
}};
qx.Proto._onmouseup=function(e){var vTarget=this.getListViewTarget(e);
if(vTarget){this._manager.handleMouseUp(vTarget,e);
}};
qx.Proto._onclick=function(e){var vTarget=this.getListViewTarget(e);
if(vTarget){this._manager.handleClick(vTarget,e);
}};
qx.Proto._ondblclick=function(e){var vTarget=this.getListViewTarget(e);
if(vTarget){this._manager.handleDblClick(vTarget,e);
}};
qx.Proto._onkeypress=function(e){this._manager.handleKeyPress(e);
e.preventDefault();
};
qx.Proto._updateSelectionState=function(vItem,vIsSelected){vItem._selected=vIsSelected;
this._updateItem(vItem);
};
qx.Proto._updateAnchorState=function(vItem,vIsAnchor){vItem._anchor=vIsAnchor;
this._updateItem(vItem);
};
qx.Proto._updateLeadState=function(vItem,vIsLead){vItem._lead=vIsLead;
this._updateItem(vItem);
};
qx.Proto.scrollItemIntoView=function(vItem,vAlignLeftTop){this.scrollItemIntoViewX(vItem,vAlignLeftTop);
this.scrollItemIntoViewY(vItem,vAlignLeftTop);
};
qx.Proto.scrollItemIntoViewX=function(vItem,vAlignLeft){};
qx.Proto.scrollItemIntoViewY=function(vItem,vAlignTop){var vItems=this._data;
var vOffset=vItems.indexOf(vItem)*this._rowHeight;
var vHeight=this._rowHeight;
var vParentHeight=(Math.floor(this.getClientHeight()/this._rowHeight)*this._rowHeight);
var vParentScrollTop=this._currentScrollTop;
var vNewScrollTop=null;
if(vAlignTop){vNewScrollTop=vOffset;
}else if(vAlignTop==false){vNewScrollTop=vOffset+vHeight-vParentHeight;
}else if(vHeight>vParentHeight||vOffset<vParentScrollTop){vNewScrollTop=vOffset;
}else if((vOffset+vHeight)>(vParentScrollTop+vParentHeight)){vNewScrollTop=vOffset+vHeight-vParentHeight;
}
if(vNewScrollTop!=null){this.getView().getScroll().setScrollTop(vNewScrollTop);
}};
qx.Proto.setScrollTop=function(vScrollTop){this.getView().getScroll().setScrollTop(vScrollTop);
this._updateRendering();
};
qx.Proto.getScrollTop=function(){return this._currentScrollTop;
};
qx.Proto.setScrollLeft=function(){this.error("Not implemented in qx.ui.listview.ListViewPane!");
};
qx.Proto.getScrollLeft=function(){return 0;
};
qx.Proto.isItemVisible=function(vItem){var vIndex=this._data.indexOf(vItem);
var vRowStart=Math.floor(this._currentScrollTop/this._rowHeight);
var vRowLength=Math.ceil(this.getClientHeight()/this._rowHeight);
return vIndex>=vRowStart&&vIndex<=(vRowStart+vRowLength);
};
qx.Proto.getRelativeItemPosition=function(vItem){var vIndex=this._data.indexOf(vItem);
var vRowStart=Math.floor(this._currentScrollTop/this._rowHeight);
return vIndex-vRowStart;
};
qx.Proto._updateItem=function(vItem){var vIndex=this._data.indexOf(vItem);
var vRowStart=Math.floor(this._currentScrollTop/this._rowHeight);
var vRowLength=Math.ceil(this.getClientHeight()/this._rowHeight);
if(vIndex<vRowStart||vIndex>(vRowStart+vRowLength)){return;
}this._updateRow(vIndex-vRowStart);
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this.removeEventListener($[62],this._onmousewheel);
this.removeEventListener($[40],this._onmouseover);
this.removeEventListener($[6],this._onmousedown);
this.removeEventListener($[7],this._onmouseup);
this.removeEventListener($[27],this._onclick);
this.removeEventListener($[46],this._ondblclick);
this.removeEventListener($[14],this._onkeypress);
delete this._data;
delete this._columns;
if(this._manager){this._manager.dispose();
this._manager=null;
}return qx.ui.layout.GridLayout.prototype.dispose.call(this);
};




/* ID: qx.manager.selection.VirtualSelectionManager */
qx.OO.defineClass($[2183],qx.manager.selection.SelectionManager,function(vBoundedWidget){qx.manager.selection.SelectionManager.call(this,vBoundedWidget);
});
qx.Proto.getFirst=function(){return qx.lang.Array.getFirst(this.getItems());
};
qx.Proto.getLast=function(){return qx.lang.Array.getLast(this.getItems());
};
qx.Proto.getItems=function(){return this.getBoundedWidget().getData();
};
qx.Proto.getNextSibling=function(vItem){var vData=this.getItems();
return vData[vData.indexOf(vItem)+1];
};
qx.Proto.getPreviousSibling=function(vItem){var vData=this.getItems();
return vData[vData.indexOf(vItem)-1];
};
qx.Proto.getItemHashCode=function(oItem){if(oItem._hash){return oItem._hash;
}return oItem._hash=qx.core.Object.toHashCode(oItem);
};
qx.Proto.scrollItemIntoView=function(vItem,vTopLeft){this.getBoundedWidget().scrollItemIntoView(vItem,vTopLeft);
};
qx.Proto.getItemLeft=function(vItem){return this.getBoundedWidget().getItemLeft(vItem);
};
qx.Proto.getItemTop=function(vItem){return this.getBoundedWidget().getItemTop(vItem);
};
qx.Proto.getItemWidth=function(vItem){return this.getBoundedWidget().getItemWidth(vItem);
};
qx.Proto.getItemHeight=function(vItem){return this.getBoundedWidget().getItemHeight(vItem);
};
qx.Proto.getItemEnabled=function(vItem){return true;
};
qx.Proto.renderItemSelectionState=function(vItem,vIsSelected){this.getBoundedWidget()._updateSelectionState(vItem,vIsSelected);
};
qx.Proto.renderItemAnchorState=function(vItem,vIsAnchor){this.getBoundedWidget()._updateAnchorState(vItem,vIsAnchor);
};
qx.Proto.renderItemLeadState=function(vItem,vIsLead){this.getBoundedWidget()._updateLeadState(vItem,vIsLead);
};




/* ID: qx.ui.embed.IconHtmlEmbed */
qx.OO.defineClass($[1027],qx.ui.embed.HtmlEmbed,function(vHtml,vIcon,vIconWidth,vIconHeight){qx.ui.embed.HtmlEmbed.call(this,vHtml);
if(vIcon!=null){this.setIcon(vIcon);
if(vIconWidth!=null){this.setIconWidth(vIconWidth);
}
if(vIconHeight!=null){this.setIconHeight(vIconWidth);
}}});
qx.OO.addProperty({name:$[94],type:$[0],impl:$[141]});
qx.OO.addProperty({name:$[793],type:$[2],impl:$[141]});
qx.OO.addProperty({name:$[575],type:$[2],impl:$[141]});
qx.OO.addProperty({name:$[772],type:$[2],defaultValue:4,impl:$[141]});
qx.Proto._mshtml=qx.core.Client.getInstance().isMshtml();
qx.Proto._syncHtml=function(){var vHtml=[];
if(qx.util.Validation.isValidString(this.getIcon())){vHtml.push($[1945]);
vHtml.push(qx.manager.object.AliasManager.getInstance().resolvePath(this._mshtml?$[59]:this.getIcon()));
vHtml.push($[1315]);
if(this.getSpacing()!=null){vHtml.push($[2232]);
vHtml.push(this.getSpacing());
vHtml.push($[376]);
}
if(this.getIconWidth()!=null){vHtml.push($[1213]);
vHtml.push(this.getIconWidth());
vHtml.push($[376]);
}
if(this.getIconHeight()!=null){vHtml.push($[1681]);
vHtml.push(this.getIconHeight());
vHtml.push($[376]);
}
if(this._mshtml){vHtml.push($[977]);
vHtml.push($[174]);
vHtml.push(qx.manager.object.AliasManager.getInstance().resolvePath(this.getIcon()));
vHtml.push($[169]);
vHtml.push($[67]);
}vHtml.push($[912]);
}
if(qx.util.Validation.isValidString(this.getHtml())){vHtml.push(this.getHtml());
}this.getElement().innerHTML=vHtml.join($[1]);
};




/* ID: qx.ui.listview.ContentCellIconHtml */
qx.OO.defineClass($[1650],qx.ui.embed.IconHtmlEmbed,function(vHtml,vIcon,vIconWidth,vIconHeight){qx.ui.embed.IconHtmlEmbed.call(this,vHtml,vIcon,vIconWidth,vIconHeight);
this.setSelectable(false);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[2391]});
qx.ui.listview.ContentCellIconHtml.empty={icon:$[1],html:$[1]};




/* ID: qx.ui.listview.ContentCellImage */
qx.OO.defineClass($[1353],qx.ui.basic.Image,function(vSource,vWidth,vHeight){qx.ui.basic.Image.call(this,vSource,vWidth,vHeight);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[989]});
qx.ui.listview.ContentCellImage.empty={source:$[59]};
qx.Proto.setSource=function(vSource){if(this._initialLayoutDone){return this._updateContent(qx.manager.object.AliasManager.getInstance().resolvePath(vSource==$[1]?$[59]:vSource));
}else{return qx.ui.basic.Image.prototype.setSource.call(this,vSource);
}};
qx.Proto._postApplyDimensions=qx.lang.Function.returnTrue;




/* ID: qx.ui.embed.TextEmbed */
qx.OO.defineClass($[1455],qx.ui.basic.Terminator,function(vText){qx.ui.basic.Terminator.call(this);
if(vText!=null){this.setText(vText);
}});
qx.OO.addProperty({name:$[249],type:$[0]});
qx.OO.addProperty({name:$[290],type:$[4],instance:$[216],convert:qx.renderer.font.FontCache,allowMultipleArguments:true});
qx.OO.addProperty({name:$[206],type:$[3],defaultValue:true});
qx.OO.addProperty({name:$[213],type:$[0],defaultValue:$[11],possibleValues:[$[11],$[74],$[10],$[601]],allowNull:false});
qx.Proto._modifyText=function(){if(this._isCreated){this._syncText();
}return true;
};
qx.Proto._modifyFont=function(propValue,propOldValue,propData){if(propValue){propValue._applyWidget(this);
}else if(propOldValue){propOldValue._resetWidget(this);
}return true;
};
qx.Proto._modifyWrap=function(propValue,propOldValue,propData){this.setStyleProperty($[147],propValue?$[122]:$[197]);
return true;
};
qx.Proto._modifyTextAlign=function(propValue,propOldValue,propData){this.setStyleProperty($[213],propValue);
return true;
};
qx.Proto._applyElementData=function(){this.getElement().appendChild(document.createTextNode(this.getText()));
};
qx.Proto._syncText=function(){this.getElement().firstChild.nodeValue=this.getText();
};




/* ID: qx.ui.listview.ContentCellText */
qx.OO.defineClass($[1451],qx.ui.embed.TextEmbed,function(vText){qx.ui.embed.TextEmbed.call(this,vText);
this.setStyleProperty($[147],$[197]);
this.setStyleProperty($[671],$[340]);
this.setSelectable(false);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[152]});
qx.ui.listview.ContentCellText.empty={text:$[1]};




/* ID: qx.log.AlertAppender */
qx.OO.defineClass($[1689],qx.log.Appender,function(){qx.log.Appender.call(this);
});
qx.OO.changeProperty({name:$[432],type:$[3],defaultValue:false,allowNull:false});
qx.Proto.appendLogEvent=function(evt){var text=evt.logger.getName();
if(evt.instanceId!=null){text+=$[792]+evt.instanceId+$[82];
}alert("\n"+text+"\n"+this.formatLogEvent(evt));
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}return qx.log.Appender.prototype.dispose.call(this);
};




/* ID: qx.ui.basic.VerticalSpacer */
qx.OO.defineClass($[1805],qx.ui.basic.Terminator,function(){qx.ui.basic.Terminator.call(this);
this.setHeight($[37]);
});




/* ID: qx.ui.table.IconHeaderCellRenderer */
qx.OO.defineClass($[2175],qx.ui.table.DefaultHeaderCellRenderer,function(iconUrl,tooltip){qx.ui.table.DefaultHeaderCellRenderer.call(this);
if(iconUrl==null){iconUrl=$[1];
}this.setIconUrl(iconUrl);
this.setToolTip(tooltip);
});
qx.OO.addProperty({name:$[1044],type:$[0],defaultValue:$[1],allowNull:false});
qx.OO.addProperty({name:$[697],type:$[0],defaultValue:null,allowNull:true});
qx.Proto.updateHeaderCell=function(cellInfo,cellWidget){qx.ui.table.DefaultHeaderCellRenderer.prototype.updateHeaderCell.call(this,cellInfo,cellWidget);
var img=cellWidget.getUserData($[572]);
if(img==null){img=new qx.ui.basic.Image();
cellWidget.setUserData($[572],img);
cellWidget.addAtBegin(img);
}img.setSource(this.getIconUrl());
var widgetToolTip=cellWidget.getToolTip();
if(this.getToolTip()!=null){if(true||widgetToolTip==null){widgetToolTip=new qx.ui.popup.ToolTip(this.getToolTip());
cellWidget.setToolTip(widgetToolTip);
}widgetToolTip.getAtom().setLabel(this.getToolTip());
}};




/* ID: qx.theme.color.WindowsLunaBlue */
qx.OO.defineClass($[1201],qx.renderer.theme.ColorTheme,function(){qx.renderer.theme.ColorTheme.call(this,$[2050]);
});
qx.Proto._colors=qx.lang.Object.carefullyMergeWith({activeborder:[212,208,200],activecaption:[0,84,227],appworkspace:[128,128,128],background:[0,78,152],buttonface:[236,233,216],buttonhighlight:[255,255,255],buttonshadow:[172,168,153],buttontext:[0,0,0],captiontext:[255,255,255],graytext:[172,168,153],highlight:[49,106,197],highlighttext:[255,255,255],inactiveborder:[212,208,200],inactivecaption:[122,150,223],inactivecaptiontext:[216,228,248],infobackground:[255,255,225],infotext:[0,0,0],menu:[255,255,255],menutext:[0,0,0],scrollbar:[212,208,200],threeddarkshadow:[113,111,100],threedface:[236,233,216],threedhighlight:[255,255,255],threedlightshadow:[241,239,226],threedshadow:[172,168,153],window:[255,255,255],windowframe:[0,0,0],windowtext:[0,0,0]},qx.Super.prototype._colors);
qx.Clazz.getInstance=qx.lang.Function.returnInstance;
qx.manager.object.ColorManager.getInstance().registerColorTheme(qx.Clazz);




/* ID: qx.ui.table.IconDataCellRenderer */
qx.OO.defineClass($[2292],qx.ui.table.AbstractDataCellRenderer,function(){qx.ui.table.AbstractDataCellRenderer.call(this);
this.IMG_BLANK_URL=qx.manager.object.AliasManager.getInstance().resolvePath("static/image/blank.gif");
});
qx.Proto._identifyImage=function(cellInfo){throw new Error("_identifyImage is abstract");
};
qx.Proto._getImageInfos=function(cellInfo){var urlAndTooltipMap=this._identifyImage(cellInfo);
if(urlAndTooltipMap==null||typeof urlAndTooltipMap==$[0]){urlAndTooltipMap={url:urlAndTooltipMap,tooltip:null};
}if(urlAndTooltipMap.url==null){urlAndTooltipMap.url=this.IMG_BLANK_URL;
}return urlAndTooltipMap;
};
qx.Proto._getCellStyle=function(cellInfo){var style=qx.ui.table.AbstractDataCellRenderer.prototype._getCellStyle(cellInfo);
style+=qx.ui.table.IconDataCellRenderer.MAIN_DIV_STYLE;
return style;
};
qx.Proto._getContentHtml=function(cellInfo){var IconDataCellRenderer=qx.ui.table.IconDataCellRenderer;
var urlAndToolTip=this._getImageInfos(cellInfo);
var html=IconDataCellRenderer.IMG_START;
if(qx.core.Client.getInstance().isMshtml()&&/\.png$/i.test(urlAndToolTip.url)){html+=qx.manager.object.AliasManager.getInstance().resolvePath($[59])+$[735]+$[174]+urlAndToolTip.url+$[169];
}else{html+=urlAndToolTip.url+$[593];
}
if(urlAndToolTip.imageWidth&&urlAndToolTip.imageHeight){html+=$[346]+urlAndToolTip.imageWidth+$[203]+$[541]+urlAndToolTip.imageHeight+$[203];
}var tooltip=urlAndToolTip.tooltip;
if(tooltip!=null){html+=IconDataCellRenderer.IMG_TITLE_START+tooltip;
}html+=IconDataCellRenderer.IMG_END;
return html;
};
qx.Proto.updateDataCellElement=function(cellInfo,cellElement){var urlAndToolTip=this._getImageInfos(cellInfo);
var img=cellElement.firstChild;
if(qx.core.Client.getInstance().isMshtml()){if(/\.png$/i.test(urlAndToolTip.url)){img.src=qx.manager.object.AliasManager.getInstance().resolvePath($[59]);
img.style.filter=$[174]+urlAndToolTip.url+$[169];
}else{img.src=urlAndToolTip.url;
img.style.filter=$[1];
}}else{img.src=urlAndToolTip.url;
}
if(urlAndToolTip.imageWidth&&urlAndToolTip.imageHeight){img.style.width=urlAndToolTip.imageWidth+$[21];
img.style.height=urlAndToolTip.imageHeight+$[21];
}
if(urlAndToolTip.tooltip!=null){img.setAttribute($[170],urlAndToolTip.tooltip);
}};
qx.Proto._createCellStyle_array_join=function(cellInfo,htmlArr){qx.ui.table.AbstractDataCellRenderer.prototype._createCellStyle_array_join(cellInfo,htmlArr);
htmlArr.push(qx.ui.table.IconDataCellRenderer.MAIN_DIV_STYLE);
};
qx.Proto._createContentHtml_array_join=function(cellInfo,htmlArr){var IconDataCellRenderer=qx.ui.table.IconDataCellRenderer;
if(qx.ui.table.TablePane.USE_TABLE){htmlArr.push(IconDataCellRenderer.TABLE_DIV);
htmlArr.push(cellInfo.styleHeight-2);
htmlArr.push(IconDataCellRenderer.TABLE_DIV_CLOSE);
}htmlArr.push(IconDataCellRenderer.IMG_START);
var urlAndToolTip=this._getImageInfos(cellInfo);
htmlArr.push(urlAndToolTip.url);
var tooltip=urlAndToolTip.tooltip;
if(tooltip!=null){IconDataCellRenderer.IMG_TITLE_START;
htmlArr.push(tooltip);
}htmlArr.push(IconDataCellRenderer.IMG_END);
if(qx.ui.table.TablePane.USE_TABLE){htmlArr.push(IconDataCellRenderer.TABLE_DIV_END);
}};
qx.Clazz.MAIN_DIV_STYLE=';text-align:center;padding-top:1px;';
qx.Clazz.IMG_START='<img src="';
qx.Clazz.IMG_END='"/>';
qx.Clazz.IMG_TITLE_START='" title="';
qx.Clazz.TABLE_DIV='<div style="overflow:hidden;height:';
qx.Clazz.TABLE_DIV_CLOSE='px">';
qx.Clazz.TABLE_DIV_END='</div>';




/* ID: qx.locale.translation.C */
qx.Locale.define($[1763],{});




/* ID: qx.ui.menubar.MenuBar */
qx.OO.defineClass($[1043],qx.ui.toolbar.ToolBar,function(){qx.ui.toolbar.ToolBar.call(this);
});




/* ID: qx.ui.component.DateChooserButton */
qx.OO.defineClass($[1301],qx.ui.form.Button,function(vTargetWidget,vChooserTitle,vButtonLabel,vIcon,vIconWidth,vIconHeight,vFlash){if(!vIcon){vIcon=$[1687];
}qx.ui.form.Button.call(this,vButtonLabel,vIcon,vIconWidth,vIconHeight,vFlash);
this.set({height:20});
this._createChooser();
this._createChooserWindow();
this._dateFormat=new qx.util.format.DateFormat(qx.locale.Date.getDateFormat($[120]));
qx.locale.Manager.getInstance().addEventListener($[212],this._changeLocale,this);
if(vTargetWidget){this.setTargetWidget(vTargetWidget);
}
if(vChooserTitle){this.setChooserTitle(vChooserTitle);
}this.addEventListener($[38],this._executeHandler,this);
});
qx.OO.addProperty({name:$[1277],type:$[4],instance:$[167],defaultValue:null});
qx.OO.addProperty({name:$[926],defaultValue:qx.locale.Manager.tr($[1758])});
qx.Proto._modifyTargetWidget=function(propValue,propOldValue,propData){if(propValue instanceof qx.ui.core.Widget&&qx.util.Validation.isValidFunction(propValue.setValue)&&qx.util.Validation.isValidFunction(propValue.getValue)){return true;
}else{throw new error("TargetWidget must be an instance of qx.ui.core.Widget and has setValue and getValue methods");
}};
qx.Proto._modifyChooserTitle=function(propValue,propOldValue,propData){this._chooserWindow.setCaption(propValue);
return true;
};
qx.Proto._createChooserWindow=function(){var win=this._chooserWindow=new qx.ui.window.Window(this.getChooserTitle());
win.addEventListener($[13],this._chooserWindowKeydownHandler,this);
win.addEventListener($[80],this._chooserWindowAppearHandler,this);
win.set({top:50,left:50,modal:true,minWidth:null,minHeight:null,resizeable:false,allowMinimize:false,allowMaximize:false,showMaximize:false,showMinimize:false});
win.auto();
win.add(this._chooser);
win.addToDocument();
};
qx.Proto._createChooser=function(){var cp=this._chooser=new qx.ui.component.DateChooser;
cp.auto();
cp.setBorder(null);
cp.addEventListener($[271],this._chooserSelectHandler,this);
};
qx.Proto._executeHandler=function(e){if(qx.util.Validation.isInvalidObject(this.getTargetWidget())){throw new error("TargetWidget must be set which must be an instance of qx.ui.core.Widget and has setValue and getValue method.");
}var date=null;
try{date=this._dateFormat.parse(this.getTargetWidget().getValue());
}catch(ex){}this._chooser.setDate(date);
this._chooserWindow.open();
};
qx.Proto._changeLocale=function(e){if(qx.util.Validation.isInvalidObject(this.getTargetWidget())){throw new error("TargetWidget must be set which must be an instance of qx.ui.core.Widget and has setValue and getValue method.");
}var date=null;
try{date=this._dateFormat.parse(this.getTargetWidget().getValue());
}catch(ex){}this._dateFormat=new qx.util.format.DateFormat(qx.locale.Date.getDateFormat($[120]));
if(!date){return;
}this._chooser.setDate(date);
this.getTargetWidget().setValue(this._dateFormat.format(date));
};
qx.Proto._chooserWindowKeydownHandler=function(e){switch(e.getKeyIdentifier()){case $[96]:this._chooserWindow.close();
this.getTargetWidget().focus();
break;
}};
qx.Proto._chooserWindowAppearHandler=function(e){this._chooserWindow.positionRelativeTo(this.getTargetWidget());
this._chooser.focus();
};
qx.Proto._chooserSelectHandler=function(e){target=this.getTargetWidget();
target.setValue(this._dateFormat.format(this._chooser.getDate()));
this._chooserWindow.close();
target.focus();
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._dateFormat.dispose();
this._dateFormat=null;
this._chooser.removeEventListener($[271],this._chooserSelectHandler);
this._chooser.dispose();
this._chooser=null;
this._chooserWindow.removeEventListener($[80],this._chooserWindowAppearHandler);
this._chooserWindow.removeEventListener($[13],this._chooserWindowKeydownHandler);
this._chooserWindow.dispose();
this._chooserWindow=null;
this.removeEventListener($[38],this._executeHandler);
return qx.ui.form.Button.prototype.dispose.call(this);
};




/* ID: custom.translation.C */
qx.Locale.define($[2283],{});




/* ID: qx.ui.pageview.buttonview.Button */
qx.OO.defineClass($[1290],qx.ui.pageview.AbstractButton,function(vText,vIcon,vIconWidth,vIconHeight,vFlash){qx.ui.pageview.AbstractButton.call(this,vText,vIcon,vIconWidth,vIconHeight,vFlash);
});
qx.OO.changeProperty({name:$[8],type:$[0],defaultValue:$[937]});
qx.Proto._onkeypress=function(e){switch(this.getView().getBarPosition()){case $[12]:case $[16]:switch(e.getKeyIdentifier()){case $[55]:var vPrevious=true;
break;
case $[56]:var vPrevious=false;
break;
default:return;
}break;
case $[11]:case $[10]:switch(e.getKeyIdentifier()){case $[73]:var vPrevious=true;
break;
case $[71]:var vPrevious=false;
break;
default:return;
}break;
default:return;
}var vChild=vPrevious?this.isFirstChild()?this.getParent().getLastChild():this.getPreviousSibling():this.isLastChild()?this.getParent().getFirstChild():this.getNextSibling();
vChild.setFocused(true);
vChild.setChecked(true);
};
qx.Proto._applyStateAppearance=function(){var vPos=this.getView().getBarPosition();
this._states.barLeft=vPos===$[11];
this._states.barRight=vPos===$[10];
this._states.barTop=vPos===$[12];
this._states.barBottom=vPos===$[16];
qx.ui.pageview.AbstractButton.prototype._applyStateAppearance.call(this);
};




/* ID: qx.dev.TimeTracker */
qx.OO.defineClass($[1995],qx.core.Object,function(){qx.core.Object.call(this);
this._functions=qx.lang.Array.fromArguments(arguments);
this.buttonSets();
});
qx.dev.TimeTracker.compare=function(a,b){return a-b;
};
qx.Proto.buttonSets=function(){var btnLayout=new qx.ui.layout.HorizontalBoxLayout;
btnLayout.setLocation(20,48);
btnLayout.setSpacing(5);
var loopLabel=new qx.ui.basic.Atom($[1203]);
loopLabel.setAllowStretchY(false);
loopLabel.setVerticalAlign($[34]);
var loopInput=new qx.ui.form.TextField($[852]);
loopInput.setAllowStretchY(false);
loopInput.setWidth(50);
loopInput.setVerticalAlign($[34]);
var repeatLabel=new qx.ui.basic.Atom($[1041]);
repeatLabel.setAllowStretchY(false);
repeatLabel.setVerticalAlign($[34]);
repeatLabel.setMarginLeft(30);
var btnStart1=new qx.ui.form.Button($[1122],$[230]);
var btnStart2=new qx.ui.form.Button($[1237],$[230]);
var btnStart3=new qx.ui.form.Button($[2385],$[230]);
var btnStart4=new qx.ui.form.Button($[2326],$[230]);
btnStart1.addEventListener($[38],function(){this.start(3,parseInt(loopInput.getValue()));
},this);
btnStart2.addEventListener($[38],function(){this.start(7,parseInt(loopInput.getValue()));
},this);
btnStart3.addEventListener($[38],function(){this.start(15,parseInt(loopInput.getValue()));
},this);
btnStart4.addEventListener($[38],function(){this.start(25,parseInt(loopInput.getValue()));
},this);
var htmlOutput=this._output=new qx.ui.embed.HtmlEmbed();
htmlOutput.setHtml($[1]);
htmlOutput.setLocation(20,78);
htmlOutput.setRight(335);
htmlOutput.setBottom(48);
htmlOutput.setBorder($[1040]);
htmlOutput.setBackgroundColor($[101]);
htmlOutput.setPadding(10);
htmlOutput.setOverflow($[5]);
htmlOutput.addToDocument();
btnLayout.add(loopLabel,loopInput,repeatLabel,btnStart1,btnStart2,btnStart3,btnStart4);
btnLayout.addToDocument();
};
qx.Proto.start=function(vRounds,vLoops){var vFuncs=this._functions;
var vLength=vFuncs.length;
var vStart;
var vLocalTimes;
var vAllTimes=[];
var vHtmlMeasured=[];
var vHtmlResults=[];
var vCellWidth=Math.round(100/(vLength+1))+$[205];
vHtmlMeasured.push($[1461]);
vHtmlMeasured.push($[1304]+vCellWidth+$[1194]);
vHtmlMeasured.push($[500]);
vHtmlMeasured.push($[693]);
vHtmlMeasured.push($[684]);
for(var j=0;j<vLength;j++){vHtmlMeasured.push($[754]+(j+1)+$[173]);
}vHtmlMeasured.push($[769]);
for(var i=0;i<vRounds;i++){vLocalTimes=[];
for(var j=0;j<vLength;j++){vStart=(new Date).valueOf();
vFuncs[j](vLoops);
vLocalTimes.push((new Date).valueOf()-vStart);
}vHtmlMeasured.push($[1042]+i+$[917]);
for(var j=0;j<vLocalTimes.length;j++){vHtmlMeasured.push($[194]+vLocalTimes[j]+$[173]);
}vHtmlMeasured.push($[196]);
vAllTimes.push(vLocalTimes);
}vHtmlMeasured.push($[676]);
var vSum,vMeanValue,vMeanAll=[],vMeanMin=1e7,vMeanMax=0;
for(var j=0;j<vLength;j++){vSum=0;
for(var i=0;i<vRounds;i++){vSum+=vAllTimes[i][j];
}vMeanValue=Math.round(vSum/vRounds);
vMeanAll.push(vMeanValue);
vMeanMin=Math.min(vMeanMin,vMeanValue);
vMeanMax=Math.max(vMeanMax,vMeanValue);
}var vMedian,vMedianValue,vMedianAll=[],vMedianMin=1e7,vMedianMax=0;
for(var j=0;j<vLength;j++){vMedian=[];
for(var i=0;i<vRounds;i++){vMedian.push(vAllTimes[i][j]);
}vMedian.sort(qx.dev.TimeTracker.compare);
vMedianValue=vMedian[Math.floor(vRounds/2)].toString();
vMedianAll.push(vMedianValue);
vMedianMin=Math.min(vMedianValue,vMedianMin);
vMedianMax=Math.max(vMedianValue,vMedianMax);
}vHtmlResults.push($[1436]);
vHtmlResults.push($[500]);
vHtmlResults.push($[693]);
vHtmlResults.push($[684]);
for(var j=0;j<vLength;j++){vHtmlResults.push($[754]+(j+1)+$[173]);
}vHtmlResults.push($[769]);
vHtmlResults.push($[215]);
vHtmlResults.push($[1798]);
for(var j=0;j<vLength;j++){vHtmlResults.push($[194]+vMedianAll[j]+$[173]);
}vHtmlResults.push($[196]);
vHtmlResults.push($[215]);
vHtmlResults.push($[1193]);
for(var j=0;j<vLength;j++){vHtmlResults.push($[194]);
vHtmlResults.push(vMedianMin>0?Math.round(vMedianAll[j]/vMedianMin):$[298]);
vHtmlResults.push($[632]);
}vHtmlResults.push($[196]);
vHtmlResults.push($[215]);
vHtmlResults.push($[2299]);
for(var j=0;j<vLength;j++){vHtmlResults.push($[194]+vMeanAll[j]+$[173]);
}vHtmlResults.push($[196]);
vHtmlResults.push($[215]);
vHtmlResults.push($[2392]);
for(var j=0;j<vLength;j++){vHtmlResults.push($[194]);
vHtmlResults.push(vMeanMin>0?Math.round(vMeanAll[j]/vMeanMin):1);
vHtmlResults.push($[632]);
}vHtmlResults.push($[196]);
vHtmlResults.push($[215]);
vHtmlResults.push($[1061]);
for(var j=0;j<vLength;j++){vHtmlResults.push($[194]);
if(vMedianMin==vMedianAll[j]&&vMeanMin==vMeanAll[j]){vHtmlResults.push($[2363]);
}else if(vMedianMin==vMedianAll[j]){vHtmlResults.push($[1282]);
}else if(vMeanMin==vMeanAll[j]){vHtmlResults.push($[1589]);
}vHtmlResults.push($[173]);
}vHtmlResults.push($[196]);
vHtmlResults.push($[676]);
this._output.setHtml(vHtmlResults.join($[1])+vHtmlMeasured.join($[1]));
};
qx.Proto.dispose=function(){if(this.getDisposed()){return;
}this._functions=null;
return qx.core.Object.prototype.dispose.call(this);
};




/* ID: qx.ui.table.BooleanDataCellRenderer */
qx.OO.defineClass($[886],qx.ui.table.IconDataCellRenderer,function(){qx.ui.table.IconDataCellRenderer.call(this);
this._iconUrlTrue=qx.manager.object.AliasManager.getInstance().resolvePath($[1505]);
this._iconUrlFalse=qx.manager.object.AliasManager.getInstance().resolvePath($[1808]);
this._iconUrlNull=qx.manager.object.AliasManager.getInstance().resolvePath($[59]);
});
qx.Proto._identifyImage=function(cellInfo){var IconDataCellRenderer=qx.ui.table.IconDataCellRenderer;
var imageHints={imageWidth:11,imageHeight:11};
switch(cellInfo.value){case true:imageHints.url=this._iconUrlTrue;
break;
case false:imageHints.url=this._iconUrlFalse;
break;
default:imageHints.url=this._iconUrlNull;
break;
}return imageHints;
};




/* ID: qx.ui.layout.DockLayout */
qx.OO.defineClass($[2355],qx.ui.core.Parent,function(){qx.ui.core.Parent.call(this);
});
qx.OO.addProperty({name:$[504],type:$[0],defaultValue:$[20],possibleValues:[$[20],$[29],$[1916]],addToQueueRuntime:true});
qx.OO.changeProperty({name:$[42],addToQueue:true,unitDetection:$[117]});
qx.OO.changeProperty({name:$[86],defaultValue:-Infinity,addToQueue:true,unitDetection:$[117]});
qx.OO.changeProperty({name:$[86],defaultValue:-Infinity,addToQueue:true,unitDetection:$[117]});
qx.OO.changeProperty({name:$[43],addToQueue:true,unitDetection:$[117]});
qx.OO.changeProperty({name:$[100],defaultValue:-Infinity,addToQueue:true,unitDetection:$[117]});
qx.OO.changeProperty({name:$[100],defaultValue:-Infinity,addToQueue:true,unitDetection:$[117]});
qx.Proto._createLayoutImpl=function(){return new qx.renderer.layout.DockLayoutImpl(this);
};
qx.Proto.addLeft=function(){this._addAlignedHorizontal($[11],arguments);
};
qx.Proto.addRight=function(){this._addAlignedHorizontal($[10],arguments);
};
qx.Proto.addTop=function(){this._addAlignedVertical($[12],arguments);
};
qx.Proto.addBottom=function(){this._addAlignedVertical($[16],arguments);
};
qx.Proto._addAlignedVertical=function(vAlign,vArgs){for(var i=0,l=vArgs.length;i<l;i++){vArgs[i].setVerticalAlign(vAlign);
}this.add.apply(this,vArgs);
};
qx.Proto._addAlignedHorizontal=function(vAlign,vArgs){for(var i=0,l=vArgs.length;i<l;i++){vArgs[i].setHorizontalAlign(vAlign);
}this.add.apply(this,vArgs);
};




/* ID: qx.log.RingBufferAppender */
qx.OO.defineClass($[1411],qx.log.Appender,function(){qx.log.Appender.call(this);
this._history=[];
this._nextIndexToStoreTo=0;
this._appenderToFormatStrings=null;
});
qx.OO.addProperty({name:$[450],type:$[2],defaultValue:50});
qx.Proto._modifyMaxMessages=function(propValue,propOldValue,propData){this._history=[];
this._nextIndexToStoreTo=0;
};
qx.Proto.appendLogEvent=function(evt){var maxMessages=this.getMaxMessages();
if(this._history.length<maxMessages){this._history.push(evt);
}else{this._history[this._nextIndexToStoreTo++]=evt;
if(this._nextIndexToStoreTo>=maxMessages){this._nextIndexToStoreTo=0;
}}};
qx.Proto.retrieveLogEvents=function(count){if(count>this._history.length){count=this._history.length;
}var indexOfYoungestElementInHistory=this._history.length==this.getMaxMessages()?this._nextIndexToStoreTo-1:this._history.length-1;
var startIndex=indexOfYoungestElementInHistory-count+1;
if(startIndex<0){startIndex+=this._history.length;
}var result;
if(startIndex<=indexOfYoungestElementInHistory){result=this._history.slice(startIndex,indexOfYoungestElementInHistory+1);
}else{result=this._history.slice(startIndex,this._history.length).concat(this._history.slice(0,indexOfYoungestElementInHistory+1));
}return result;
};
qx.Proto.formatLogEvents=function(count){if(this._appenderToFormatStrings==null){this._appenderToFormatStrings=new qx.log.Appender();
}var events=this.retrieveLogEvents(count);
var string=$[1];
for(var idx=0;idx<events.length;idx++){string+=this._appenderToFormatStrings.formatLogEvent(events[idx])+$[69];
}return string;
};
qx.Proto.dispose=function(){if(this.getDisposed()){return true;
}return qx.log.Appender.prototype.dispose.call(this);
};

